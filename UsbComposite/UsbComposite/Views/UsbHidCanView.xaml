<UserControl x:Class="UsbComposite.Views.UsbHidCanView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UsbComposite.Views"
        mc:Ignorable="d">
    <UserControl.Resources>
        <SolidColorBrush x:Key="DefaultForeground" Color="black"/>
        <SolidColorBrush x:Key="DefaultBackground" Color="White"/>
        <SolidColorBrush x:Key="DefaultBorder" Color="#808080"/>
        <SolidColorBrush x:Key="AccentBlueBackground" Color="#FF4C61EC"/>
        <SolidColorBrush x:Key="AccentWhiteForeground" Color="White"/>
        <SolidColorBrush x:Key="HoverBackground" Color="White"/>
        <SolidColorBrush x:Key="HoverBorder" Color="black"/>
        <SolidColorBrush x:Key="ComboBoxActiveBorder" Color="Black"/>

        <SolidColorBrush x:Key="DisabledBackground" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="DisabledForeground" Color="#A0A0A0"/>
        <SolidColorBrush x:Key="DisabledBorder" Color="#C0C0C0"/>

        <SolidColorBrush x:Key="ComboBoxHoverBackground" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ComboBoxSelectedBackground" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="ComboBoxDropDownBackground" Color="White"/>
        <SolidColorBrush x:Key="ComboBoxDropDownBorder" Color="#CCCCCC"/>

        <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource DefaultBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DefaultBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                            <ContentPresenter x:Name="ButtonContent"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource HoverBackground}"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource HoverBorder}"/>
                                <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource AccentBlueBackground}"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource AccentBlueBackground}"/>
                                <Setter Property="Foreground" Value="{StaticResource AccentWhiteForeground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource DisabledBackground}"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource DisabledBorder}"/>
                                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="{StaticResource DefaultBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DefaultBackground}"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="0"
                        SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxHoverBackground}"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBackground}"/>
                                <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxSelectedBackground}"/>
                                <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter
                                    Margin="2,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    IsHitTestVisible="False" />

                                    <ToggleButton Grid.Column="1"
                                    x:Name="PART_ToggleButton"
                                    Focusable="False"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press"
                                    Background="Transparent"
                                    BorderThickness="0">
                                        <Path x:Name="Arrow"
                                        Data="M 0 0 L 4 4 L 8 0 Z"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="Black"/>
                                    </ToggleButton>
                                </Grid>
                            </Border>

                            <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  MinWidth="{TemplateBinding ActualWidth}">
                                    <Border Background="White"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    CornerRadius="4"/>
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#FFE5E5E5"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FFAAAAAA"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="DarkGray"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="DodgerBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Viewbox Stretch="Uniform">
        <Grid Width="1300" Height="800" >


            <Grid   DataContext="{Binding CanVM}" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="20*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="20*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

               
                    <Border Grid.Row="3" Grid.Column="1"
                            BorderBrush="#738A9C"
                            BorderThickness="0"
                            CornerRadius="5"
                            Background="White">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="9*"/>
                        </Grid.RowDefinitions>


                        <TextBlock Grid.Row="0"
                   Text="Transmit"
                   FontSize="20"
                   FontFamily="Segoe UI Semibold"/>

                        <DataGrid Grid.Row="1" x:Name="dgCanSend" Margin="15"
                                  ItemsSource="{Binding CanFrames}" AutoGenerateColumns="False" 
                                  CanUserAddRows="True" CanUserDeleteRows="True"
                                  Background="White"
                                  BorderThickness="0"
                                  GridLinesVisibility="None"
                                  FontSize="12"
                                  FontFamily="Segoe UI Semibold" >

                            <DataGrid.Resources>
                                <!-- Header style -->
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>

                                <!-- Cell style -->
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <!-- Comment 2 dòng dưới nếu muốn tắt viền dưới -->
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="BorderBrush" Value="#FF979393"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="WhiteSmoke"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>



                            <DataGrid.Columns>
                           <!--     <DataGridTextColumn Header="CAN ID" Binding="{Binding CanId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="2*"/> -->

                                <DataGridTextColumn Header="CAN ID" Width="2*"  Binding="{Binding CanId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="4,0,0,0"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="4,0,0,0"/>
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>


                                <DataGridTemplateColumn Header="Type" Width="1.5*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox Margin="2"
                ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.CanVM.FrameTypeOptions}"
                SelectedItem="{Binding FrameType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Style="{StaticResource CustomComboBoxStyle}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="DLC" Width="*" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox  Margin="2" ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.CanVM.DlcOptions}"
                                                    SelectedItem="{Binding Dlc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                                                      Style="{StaticResource CustomComboBoxStyle}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                                <DataGridTemplateColumn Header="Data" Width="9*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ItemsControl ItemsSource="{Binding VisibleDataBytes}"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Margin="10,2">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <UniformGrid Rows="1"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
         TextChanged="TextBox_TextChanged"
                                                                 HorizontalAlignment="Stretch"
         VerticalAlignment="Stretch"
         VerticalContentAlignment="Center"
         HorizontalContentAlignment="Center"
         Margin="4,2"
         MaxLength="2"
         KeyDown="TextBox_KeyDown"
         GotFocus="TextBox_GotFocus"
         PreviewMouseLeftButtonDown="TextBox_PreviewMouseLeftButtonDown"/>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>



                                <DataGridTextColumn Header="Time (ms)" Binding="{Binding CycleTimeMs}" Width="*">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="4,0,0,0"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="4,0,0,0"/>
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>


                                <DataGridTemplateColumn Header="Cycle" Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox 
                                                        IsEnabled="{Binding DataContext.IsConnected, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                        IsChecked="{Binding IsCyclic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Width="Auto"
                                                        Height="Auto">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="1.6" ScaleY="1.6"/>
                                                </CheckBox.LayoutTransform>
                                            </CheckBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                                <!-- Gửi -->
                                <DataGridTemplateColumn Header="Gửi" Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="Gửi" Margin="2"
        IsEnabled="{Binding DataContext.IsConnected, RelativeSource={RelativeSource AncestorType=DataGrid}}"
        Command="{Binding DataContext.SendCanFrameCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
        CommandParameter="{Binding}"
        Style="{StaticResource CustomButtonStyle}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                    </Grid>
                    </Border>

                <Border Grid.Row="1" Grid.Column="1"
                            BorderBrush="#738A9C"
                            BorderThickness="0"
                            CornerRadius="5"
                            Background="White">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="8*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0"
                   Text="Receive"
                   FontSize="20"
                   FontFamily="Segoe UI Semibold"/>
                        <DataGrid x:Name="dgCanReceive" Grid.Row="1"
                                              ItemsSource="{Binding ReceivedFrames}"
                                              AutoGenerateColumns="False"
                                              IsReadOnly="True"
                                  Background="White"
              BorderThickness="0"
              GridLinesVisibility="None"
              FontSize="14"
              FontFamily="Segoe UI Semibold" >
                            <DataGrid.Resources>
                                <!-- Header style -->
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>

                                <!-- Cell style -->
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <!-- Comment 2 dòng dưới nếu muốn tắt viền dưới -->
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="BorderBrush" Value="#FF979393"/>
                                    <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="WhiteSmoke"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                            
                            <DataGrid.Columns >
                                <!-- CAN ID -->
                                <DataGridTextColumn Header="CAN ID" Binding="{Binding CanId}" Width="2*">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="4,0,0,0"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <!-- Frame Type -->
                                <DataGridTextColumn Header="Type" Binding="{Binding FrameType}" Width="2*">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="4,0,0,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <!-- DLC -->
                                <DataGridTextColumn Header="DLC" Binding="{Binding Dlc}" Width="*">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="4,0,0,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <!-- Data (hex) -->
                                <DataGridTextColumn Header="Data" Binding="{Binding DataHex}" Width="7*">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="4,0,0,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <!-- Cycle 
                                <DataGridTextColumn Header="Cycle" Binding="{Binding CycleTimeMsReceived}" Width="2*"/> -->
                                <DataGridTextColumn Header="Cycle (ms)" Binding="{Binding CycleTimeMsDisplay, Mode=OneWay}" Width="3*">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="4,0,0,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Count" Binding="{Binding Count}" Width="*">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>


                            </DataGrid.Columns>
                        </DataGrid>
                        
                        
                        <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Right" Width="100">

                            <Button Content="Xóa"  Width="100" Style="{StaticResource CustomButtonStyle}"
                                    
        Command="{Binding ClearReceiveCommand}"/>
                            
                        </StackPanel>
                    </Grid>
                </Border>

            </Grid>

        </Grid>
    </Viewbox>
</UserControl>
