
start_usb_composite.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c878  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b0  0800ca08  0800ca08  0000da08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800cab8  0800cab8  0000e304  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800cab8  0800cab8  0000dab8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800cac0  0800cac0  0000e304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800cac0  0800cac0  0000dac0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800cac4  0800cac4  0000dac4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000304  20000000  0800cac8  0000e000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000e304  2**0
                  CONTENTS
 10 .bss          00002704  20000304  20000304  0000e304  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20002a08  20002a08  0000e304  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000e304  2**0
                  CONTENTS, READONLY
 13 .debug_info   000207bf  00000000  00000000  0000e334  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000511e  00000000  00000000  0002eaf3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001a78  00000000  00000000  00033c18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00001464  00000000  00000000  00035690  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00026c5d  00000000  00000000  00036af4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00024d99  00000000  00000000  0005d751  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d5bff  00000000  00000000  000824ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  001580e9  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00007384  00000000  00000000  0015812c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  0015f4b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000304 	.word	0x20000304
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800c9f0 	.word	0x0800c9f0

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000308 	.word	0x20000308
 80001cc:	0800c9f0 	.word	0x0800c9f0

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <__aeabi_uldivmod>:
 8000270:	b953      	cbnz	r3, 8000288 <__aeabi_uldivmod+0x18>
 8000272:	b94a      	cbnz	r2, 8000288 <__aeabi_uldivmod+0x18>
 8000274:	2900      	cmp	r1, #0
 8000276:	bf08      	it	eq
 8000278:	2800      	cmpeq	r0, #0
 800027a:	bf1c      	itt	ne
 800027c:	f04f 31ff 	movne.w	r1, #4294967295
 8000280:	f04f 30ff 	movne.w	r0, #4294967295
 8000284:	f000 b988 	b.w	8000598 <__aeabi_idiv0>
 8000288:	f1ad 0c08 	sub.w	ip, sp, #8
 800028c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000290:	f000 f806 	bl	80002a0 <__udivmoddi4>
 8000294:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000298:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800029c:	b004      	add	sp, #16
 800029e:	4770      	bx	lr

080002a0 <__udivmoddi4>:
 80002a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002a4:	9d08      	ldr	r5, [sp, #32]
 80002a6:	468e      	mov	lr, r1
 80002a8:	4604      	mov	r4, r0
 80002aa:	4688      	mov	r8, r1
 80002ac:	2b00      	cmp	r3, #0
 80002ae:	d14a      	bne.n	8000346 <__udivmoddi4+0xa6>
 80002b0:	428a      	cmp	r2, r1
 80002b2:	4617      	mov	r7, r2
 80002b4:	d962      	bls.n	800037c <__udivmoddi4+0xdc>
 80002b6:	fab2 f682 	clz	r6, r2
 80002ba:	b14e      	cbz	r6, 80002d0 <__udivmoddi4+0x30>
 80002bc:	f1c6 0320 	rsb	r3, r6, #32
 80002c0:	fa01 f806 	lsl.w	r8, r1, r6
 80002c4:	fa20 f303 	lsr.w	r3, r0, r3
 80002c8:	40b7      	lsls	r7, r6
 80002ca:	ea43 0808 	orr.w	r8, r3, r8
 80002ce:	40b4      	lsls	r4, r6
 80002d0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002d4:	fa1f fc87 	uxth.w	ip, r7
 80002d8:	fbb8 f1fe 	udiv	r1, r8, lr
 80002dc:	0c23      	lsrs	r3, r4, #16
 80002de:	fb0e 8811 	mls	r8, lr, r1, r8
 80002e2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80002e6:	fb01 f20c 	mul.w	r2, r1, ip
 80002ea:	429a      	cmp	r2, r3
 80002ec:	d909      	bls.n	8000302 <__udivmoddi4+0x62>
 80002ee:	18fb      	adds	r3, r7, r3
 80002f0:	f101 30ff 	add.w	r0, r1, #4294967295
 80002f4:	f080 80ea 	bcs.w	80004cc <__udivmoddi4+0x22c>
 80002f8:	429a      	cmp	r2, r3
 80002fa:	f240 80e7 	bls.w	80004cc <__udivmoddi4+0x22c>
 80002fe:	3902      	subs	r1, #2
 8000300:	443b      	add	r3, r7
 8000302:	1a9a      	subs	r2, r3, r2
 8000304:	b2a3      	uxth	r3, r4
 8000306:	fbb2 f0fe 	udiv	r0, r2, lr
 800030a:	fb0e 2210 	mls	r2, lr, r0, r2
 800030e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000312:	fb00 fc0c 	mul.w	ip, r0, ip
 8000316:	459c      	cmp	ip, r3
 8000318:	d909      	bls.n	800032e <__udivmoddi4+0x8e>
 800031a:	18fb      	adds	r3, r7, r3
 800031c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000320:	f080 80d6 	bcs.w	80004d0 <__udivmoddi4+0x230>
 8000324:	459c      	cmp	ip, r3
 8000326:	f240 80d3 	bls.w	80004d0 <__udivmoddi4+0x230>
 800032a:	443b      	add	r3, r7
 800032c:	3802      	subs	r0, #2
 800032e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000332:	eba3 030c 	sub.w	r3, r3, ip
 8000336:	2100      	movs	r1, #0
 8000338:	b11d      	cbz	r5, 8000342 <__udivmoddi4+0xa2>
 800033a:	40f3      	lsrs	r3, r6
 800033c:	2200      	movs	r2, #0
 800033e:	e9c5 3200 	strd	r3, r2, [r5]
 8000342:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000346:	428b      	cmp	r3, r1
 8000348:	d905      	bls.n	8000356 <__udivmoddi4+0xb6>
 800034a:	b10d      	cbz	r5, 8000350 <__udivmoddi4+0xb0>
 800034c:	e9c5 0100 	strd	r0, r1, [r5]
 8000350:	2100      	movs	r1, #0
 8000352:	4608      	mov	r0, r1
 8000354:	e7f5      	b.n	8000342 <__udivmoddi4+0xa2>
 8000356:	fab3 f183 	clz	r1, r3
 800035a:	2900      	cmp	r1, #0
 800035c:	d146      	bne.n	80003ec <__udivmoddi4+0x14c>
 800035e:	4573      	cmp	r3, lr
 8000360:	d302      	bcc.n	8000368 <__udivmoddi4+0xc8>
 8000362:	4282      	cmp	r2, r0
 8000364:	f200 8105 	bhi.w	8000572 <__udivmoddi4+0x2d2>
 8000368:	1a84      	subs	r4, r0, r2
 800036a:	eb6e 0203 	sbc.w	r2, lr, r3
 800036e:	2001      	movs	r0, #1
 8000370:	4690      	mov	r8, r2
 8000372:	2d00      	cmp	r5, #0
 8000374:	d0e5      	beq.n	8000342 <__udivmoddi4+0xa2>
 8000376:	e9c5 4800 	strd	r4, r8, [r5]
 800037a:	e7e2      	b.n	8000342 <__udivmoddi4+0xa2>
 800037c:	2a00      	cmp	r2, #0
 800037e:	f000 8090 	beq.w	80004a2 <__udivmoddi4+0x202>
 8000382:	fab2 f682 	clz	r6, r2
 8000386:	2e00      	cmp	r6, #0
 8000388:	f040 80a4 	bne.w	80004d4 <__udivmoddi4+0x234>
 800038c:	1a8a      	subs	r2, r1, r2
 800038e:	0c03      	lsrs	r3, r0, #16
 8000390:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000394:	b280      	uxth	r0, r0
 8000396:	b2bc      	uxth	r4, r7
 8000398:	2101      	movs	r1, #1
 800039a:	fbb2 fcfe 	udiv	ip, r2, lr
 800039e:	fb0e 221c 	mls	r2, lr, ip, r2
 80003a2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003a6:	fb04 f20c 	mul.w	r2, r4, ip
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d907      	bls.n	80003be <__udivmoddi4+0x11e>
 80003ae:	18fb      	adds	r3, r7, r3
 80003b0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003b4:	d202      	bcs.n	80003bc <__udivmoddi4+0x11c>
 80003b6:	429a      	cmp	r2, r3
 80003b8:	f200 80e0 	bhi.w	800057c <__udivmoddi4+0x2dc>
 80003bc:	46c4      	mov	ip, r8
 80003be:	1a9b      	subs	r3, r3, r2
 80003c0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003c4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003c8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003cc:	fb02 f404 	mul.w	r4, r2, r4
 80003d0:	429c      	cmp	r4, r3
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x144>
 80003d4:	18fb      	adds	r3, r7, r3
 80003d6:	f102 30ff 	add.w	r0, r2, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x142>
 80003dc:	429c      	cmp	r4, r3
 80003de:	f200 80ca 	bhi.w	8000576 <__udivmoddi4+0x2d6>
 80003e2:	4602      	mov	r2, r0
 80003e4:	1b1b      	subs	r3, r3, r4
 80003e6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80003ea:	e7a5      	b.n	8000338 <__udivmoddi4+0x98>
 80003ec:	f1c1 0620 	rsb	r6, r1, #32
 80003f0:	408b      	lsls	r3, r1
 80003f2:	fa22 f706 	lsr.w	r7, r2, r6
 80003f6:	431f      	orrs	r7, r3
 80003f8:	fa0e f401 	lsl.w	r4, lr, r1
 80003fc:	fa20 f306 	lsr.w	r3, r0, r6
 8000400:	fa2e fe06 	lsr.w	lr, lr, r6
 8000404:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000408:	4323      	orrs	r3, r4
 800040a:	fa00 f801 	lsl.w	r8, r0, r1
 800040e:	fa1f fc87 	uxth.w	ip, r7
 8000412:	fbbe f0f9 	udiv	r0, lr, r9
 8000416:	0c1c      	lsrs	r4, r3, #16
 8000418:	fb09 ee10 	mls	lr, r9, r0, lr
 800041c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000420:	fb00 fe0c 	mul.w	lr, r0, ip
 8000424:	45a6      	cmp	lr, r4
 8000426:	fa02 f201 	lsl.w	r2, r2, r1
 800042a:	d909      	bls.n	8000440 <__udivmoddi4+0x1a0>
 800042c:	193c      	adds	r4, r7, r4
 800042e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000432:	f080 809c 	bcs.w	800056e <__udivmoddi4+0x2ce>
 8000436:	45a6      	cmp	lr, r4
 8000438:	f240 8099 	bls.w	800056e <__udivmoddi4+0x2ce>
 800043c:	3802      	subs	r0, #2
 800043e:	443c      	add	r4, r7
 8000440:	eba4 040e 	sub.w	r4, r4, lr
 8000444:	fa1f fe83 	uxth.w	lr, r3
 8000448:	fbb4 f3f9 	udiv	r3, r4, r9
 800044c:	fb09 4413 	mls	r4, r9, r3, r4
 8000450:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000454:	fb03 fc0c 	mul.w	ip, r3, ip
 8000458:	45a4      	cmp	ip, r4
 800045a:	d908      	bls.n	800046e <__udivmoddi4+0x1ce>
 800045c:	193c      	adds	r4, r7, r4
 800045e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000462:	f080 8082 	bcs.w	800056a <__udivmoddi4+0x2ca>
 8000466:	45a4      	cmp	ip, r4
 8000468:	d97f      	bls.n	800056a <__udivmoddi4+0x2ca>
 800046a:	3b02      	subs	r3, #2
 800046c:	443c      	add	r4, r7
 800046e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000472:	eba4 040c 	sub.w	r4, r4, ip
 8000476:	fba0 ec02 	umull	lr, ip, r0, r2
 800047a:	4564      	cmp	r4, ip
 800047c:	4673      	mov	r3, lr
 800047e:	46e1      	mov	r9, ip
 8000480:	d362      	bcc.n	8000548 <__udivmoddi4+0x2a8>
 8000482:	d05f      	beq.n	8000544 <__udivmoddi4+0x2a4>
 8000484:	b15d      	cbz	r5, 800049e <__udivmoddi4+0x1fe>
 8000486:	ebb8 0203 	subs.w	r2, r8, r3
 800048a:	eb64 0409 	sbc.w	r4, r4, r9
 800048e:	fa04 f606 	lsl.w	r6, r4, r6
 8000492:	fa22 f301 	lsr.w	r3, r2, r1
 8000496:	431e      	orrs	r6, r3
 8000498:	40cc      	lsrs	r4, r1
 800049a:	e9c5 6400 	strd	r6, r4, [r5]
 800049e:	2100      	movs	r1, #0
 80004a0:	e74f      	b.n	8000342 <__udivmoddi4+0xa2>
 80004a2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004a6:	0c01      	lsrs	r1, r0, #16
 80004a8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004ac:	b280      	uxth	r0, r0
 80004ae:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004b2:	463b      	mov	r3, r7
 80004b4:	4638      	mov	r0, r7
 80004b6:	463c      	mov	r4, r7
 80004b8:	46b8      	mov	r8, r7
 80004ba:	46be      	mov	lr, r7
 80004bc:	2620      	movs	r6, #32
 80004be:	fbb1 f1f7 	udiv	r1, r1, r7
 80004c2:	eba2 0208 	sub.w	r2, r2, r8
 80004c6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004ca:	e766      	b.n	800039a <__udivmoddi4+0xfa>
 80004cc:	4601      	mov	r1, r0
 80004ce:	e718      	b.n	8000302 <__udivmoddi4+0x62>
 80004d0:	4610      	mov	r0, r2
 80004d2:	e72c      	b.n	800032e <__udivmoddi4+0x8e>
 80004d4:	f1c6 0220 	rsb	r2, r6, #32
 80004d8:	fa2e f302 	lsr.w	r3, lr, r2
 80004dc:	40b7      	lsls	r7, r6
 80004de:	40b1      	lsls	r1, r6
 80004e0:	fa20 f202 	lsr.w	r2, r0, r2
 80004e4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80004e8:	430a      	orrs	r2, r1
 80004ea:	fbb3 f8fe 	udiv	r8, r3, lr
 80004ee:	b2bc      	uxth	r4, r7
 80004f0:	fb0e 3318 	mls	r3, lr, r8, r3
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004fa:	fb08 f904 	mul.w	r9, r8, r4
 80004fe:	40b0      	lsls	r0, r6
 8000500:	4589      	cmp	r9, r1
 8000502:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000506:	b280      	uxth	r0, r0
 8000508:	d93e      	bls.n	8000588 <__udivmoddi4+0x2e8>
 800050a:	1879      	adds	r1, r7, r1
 800050c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000510:	d201      	bcs.n	8000516 <__udivmoddi4+0x276>
 8000512:	4589      	cmp	r9, r1
 8000514:	d81f      	bhi.n	8000556 <__udivmoddi4+0x2b6>
 8000516:	eba1 0109 	sub.w	r1, r1, r9
 800051a:	fbb1 f9fe 	udiv	r9, r1, lr
 800051e:	fb09 f804 	mul.w	r8, r9, r4
 8000522:	fb0e 1119 	mls	r1, lr, r9, r1
 8000526:	b292      	uxth	r2, r2
 8000528:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800052c:	4542      	cmp	r2, r8
 800052e:	d229      	bcs.n	8000584 <__udivmoddi4+0x2e4>
 8000530:	18ba      	adds	r2, r7, r2
 8000532:	f109 31ff 	add.w	r1, r9, #4294967295
 8000536:	d2c4      	bcs.n	80004c2 <__udivmoddi4+0x222>
 8000538:	4542      	cmp	r2, r8
 800053a:	d2c2      	bcs.n	80004c2 <__udivmoddi4+0x222>
 800053c:	f1a9 0102 	sub.w	r1, r9, #2
 8000540:	443a      	add	r2, r7
 8000542:	e7be      	b.n	80004c2 <__udivmoddi4+0x222>
 8000544:	45f0      	cmp	r8, lr
 8000546:	d29d      	bcs.n	8000484 <__udivmoddi4+0x1e4>
 8000548:	ebbe 0302 	subs.w	r3, lr, r2
 800054c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000550:	3801      	subs	r0, #1
 8000552:	46e1      	mov	r9, ip
 8000554:	e796      	b.n	8000484 <__udivmoddi4+0x1e4>
 8000556:	eba7 0909 	sub.w	r9, r7, r9
 800055a:	4449      	add	r1, r9
 800055c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000560:	fbb1 f9fe 	udiv	r9, r1, lr
 8000564:	fb09 f804 	mul.w	r8, r9, r4
 8000568:	e7db      	b.n	8000522 <__udivmoddi4+0x282>
 800056a:	4673      	mov	r3, lr
 800056c:	e77f      	b.n	800046e <__udivmoddi4+0x1ce>
 800056e:	4650      	mov	r0, sl
 8000570:	e766      	b.n	8000440 <__udivmoddi4+0x1a0>
 8000572:	4608      	mov	r0, r1
 8000574:	e6fd      	b.n	8000372 <__udivmoddi4+0xd2>
 8000576:	443b      	add	r3, r7
 8000578:	3a02      	subs	r2, #2
 800057a:	e733      	b.n	80003e4 <__udivmoddi4+0x144>
 800057c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000580:	443b      	add	r3, r7
 8000582:	e71c      	b.n	80003be <__udivmoddi4+0x11e>
 8000584:	4649      	mov	r1, r9
 8000586:	e79c      	b.n	80004c2 <__udivmoddi4+0x222>
 8000588:	eba1 0109 	sub.w	r1, r1, r9
 800058c:	46c4      	mov	ip, r8
 800058e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000592:	fb09 f804 	mul.w	r8, r9, r4
 8000596:	e7c4      	b.n	8000522 <__udivmoddi4+0x282>

08000598 <__aeabi_idiv0>:
 8000598:	4770      	bx	lr
 800059a:	bf00      	nop

0800059c <MX_CAN1_Init>:

CAN_HandleTypeDef hcan1;

/* CAN1 init function */
void MX_CAN1_Init(void)
{
 800059c:	b580      	push	{r7, lr}
 800059e:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 80005a0:	4b17      	ldr	r3, [pc, #92]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005a2:	4a18      	ldr	r2, [pc, #96]	@ (8000604 <MX_CAN1_Init+0x68>)
 80005a4:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 6;
 80005a6:	4b16      	ldr	r3, [pc, #88]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005a8:	2206      	movs	r2, #6
 80005aa:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 80005ac:	4b14      	ldr	r3, [pc, #80]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005ae:	2200      	movs	r2, #0
 80005b0:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 80005b2:	4b13      	ldr	r3, [pc, #76]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005b4:	2200      	movs	r2, #0
 80005b6:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 80005b8:	4b11      	ldr	r3, [pc, #68]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005ba:	f44f 2220 	mov.w	r2, #655360	@ 0xa0000
 80005be:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 80005c0:	4b0f      	ldr	r3, [pc, #60]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005c2:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80005c6:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 80005c8:	4b0d      	ldr	r3, [pc, #52]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005ca:	2200      	movs	r2, #0
 80005cc:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 80005ce:	4b0c      	ldr	r3, [pc, #48]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005d0:	2200      	movs	r2, #0
 80005d2:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 80005d4:	4b0a      	ldr	r3, [pc, #40]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005d6:	2200      	movs	r2, #0
 80005d8:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 80005da:	4b09      	ldr	r3, [pc, #36]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005dc:	2200      	movs	r2, #0
 80005de:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 80005e0:	4b07      	ldr	r3, [pc, #28]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005e2:	2200      	movs	r2, #0
 80005e4:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 80005e6:	4b06      	ldr	r3, [pc, #24]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005e8:	2200      	movs	r2, #0
 80005ea:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 80005ec:	4804      	ldr	r0, [pc, #16]	@ (8000600 <MX_CAN1_Init+0x64>)
 80005ee:	f001 f869 	bl	80016c4 <HAL_CAN_Init>
 80005f2:	4603      	mov	r3, r0
 80005f4:	2b00      	cmp	r3, #0
 80005f6:	d001      	beq.n	80005fc <MX_CAN1_Init+0x60>
  {
    Error_Handler();
 80005f8:	f000 fb3e 	bl	8000c78 <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */

  /* USER CODE END CAN1_Init 2 */

}
 80005fc:	bf00      	nop
 80005fe:	bd80      	pop	{r7, pc}
 8000600:	20000320 	.word	0x20000320
 8000604:	40006400 	.word	0x40006400

08000608 <HAL_CAN_MspInit>:

void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
{
 8000608:	b580      	push	{r7, lr}
 800060a:	b08a      	sub	sp, #40	@ 0x28
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000610:	f107 0314 	add.w	r3, r7, #20
 8000614:	2200      	movs	r2, #0
 8000616:	601a      	str	r2, [r3, #0]
 8000618:	605a      	str	r2, [r3, #4]
 800061a:	609a      	str	r2, [r3, #8]
 800061c:	60da      	str	r2, [r3, #12]
 800061e:	611a      	str	r2, [r3, #16]
  if(canHandle->Instance==CAN1)
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	4a21      	ldr	r2, [pc, #132]	@ (80006ac <HAL_CAN_MspInit+0xa4>)
 8000626:	4293      	cmp	r3, r2
 8000628:	d13b      	bne.n	80006a2 <HAL_CAN_MspInit+0x9a>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* CAN1 clock enable */
    __HAL_RCC_CAN1_CLK_ENABLE();
 800062a:	2300      	movs	r3, #0
 800062c:	613b      	str	r3, [r7, #16]
 800062e:	4b20      	ldr	r3, [pc, #128]	@ (80006b0 <HAL_CAN_MspInit+0xa8>)
 8000630:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000632:	4a1f      	ldr	r2, [pc, #124]	@ (80006b0 <HAL_CAN_MspInit+0xa8>)
 8000634:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000638:	6413      	str	r3, [r2, #64]	@ 0x40
 800063a:	4b1d      	ldr	r3, [pc, #116]	@ (80006b0 <HAL_CAN_MspInit+0xa8>)
 800063c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800063e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000642:	613b      	str	r3, [r7, #16]
 8000644:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000646:	2300      	movs	r3, #0
 8000648:	60fb      	str	r3, [r7, #12]
 800064a:	4b19      	ldr	r3, [pc, #100]	@ (80006b0 <HAL_CAN_MspInit+0xa8>)
 800064c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800064e:	4a18      	ldr	r2, [pc, #96]	@ (80006b0 <HAL_CAN_MspInit+0xa8>)
 8000650:	f043 0308 	orr.w	r3, r3, #8
 8000654:	6313      	str	r3, [r2, #48]	@ 0x30
 8000656:	4b16      	ldr	r3, [pc, #88]	@ (80006b0 <HAL_CAN_MspInit+0xa8>)
 8000658:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800065a:	f003 0308 	and.w	r3, r3, #8
 800065e:	60fb      	str	r3, [r7, #12]
 8000660:	68fb      	ldr	r3, [r7, #12]
    /**CAN1 GPIO Configuration
    PD0     ------> CAN1_RX
    PD1     ------> CAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8000662:	2303      	movs	r3, #3
 8000664:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000666:	2302      	movs	r3, #2
 8000668:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800066a:	2300      	movs	r3, #0
 800066c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800066e:	2303      	movs	r3, #3
 8000670:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 8000672:	2309      	movs	r3, #9
 8000674:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000676:	f107 0314 	add.w	r3, r7, #20
 800067a:	4619      	mov	r1, r3
 800067c:	480d      	ldr	r0, [pc, #52]	@ (80006b4 <HAL_CAN_MspInit+0xac>)
 800067e:	f002 fbed 	bl	8002e5c <HAL_GPIO_Init>

    /* CAN1 interrupt Init */
    HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 8000682:	2200      	movs	r2, #0
 8000684:	2100      	movs	r1, #0
 8000686:	2014      	movs	r0, #20
 8000688:	f001 ffc9 	bl	800261e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 800068c:	2014      	movs	r0, #20
 800068e:	f001 ffe2 	bl	8002656 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 8000692:	2200      	movs	r2, #0
 8000694:	2100      	movs	r1, #0
 8000696:	2015      	movs	r0, #21
 8000698:	f001 ffc1 	bl	800261e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 800069c:	2015      	movs	r0, #21
 800069e:	f001 ffda 	bl	8002656 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN CAN1_MspInit 1 */

  /* USER CODE END CAN1_MspInit 1 */
  }
}
 80006a2:	bf00      	nop
 80006a4:	3728      	adds	r7, #40	@ 0x28
 80006a6:	46bd      	mov	sp, r7
 80006a8:	bd80      	pop	{r7, pc}
 80006aa:	bf00      	nop
 80006ac:	40006400 	.word	0x40006400
 80006b0:	40023800 	.word	0x40023800
 80006b4:	40020c00 	.word	0x40020c00

080006b8 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b082      	sub	sp, #8
 80006bc:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80006be:	2300      	movs	r3, #0
 80006c0:	607b      	str	r3, [r7, #4]
 80006c2:	4b10      	ldr	r3, [pc, #64]	@ (8000704 <MX_DMA_Init+0x4c>)
 80006c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006c6:	4a0f      	ldr	r2, [pc, #60]	@ (8000704 <MX_DMA_Init+0x4c>)
 80006c8:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80006cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80006ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000704 <MX_DMA_Init+0x4c>)
 80006d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006d2:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80006d6:	607b      	str	r3, [r7, #4]
 80006d8:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 80006da:	2200      	movs	r2, #0
 80006dc:	2100      	movs	r1, #0
 80006de:	200b      	movs	r0, #11
 80006e0:	f001 ff9d 	bl	800261e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 80006e4:	200b      	movs	r0, #11
 80006e6:	f001 ffb6 	bl	8002656 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 80006ea:	2200      	movs	r2, #0
 80006ec:	2100      	movs	r1, #0
 80006ee:	202f      	movs	r0, #47	@ 0x2f
 80006f0:	f001 ff95 	bl	800261e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 80006f4:	202f      	movs	r0, #47	@ 0x2f
 80006f6:	f001 ffae 	bl	8002656 <HAL_NVIC_EnableIRQ>

}
 80006fa:	bf00      	nop
 80006fc:	3708      	adds	r7, #8
 80006fe:	46bd      	mov	sp, r7
 8000700:	bd80      	pop	{r7, pc}
 8000702:	bf00      	nop
 8000704:	40023800 	.word	0x40023800

08000708 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000708:	b580      	push	{r7, lr}
 800070a:	b08a      	sub	sp, #40	@ 0x28
 800070c:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800070e:	f107 0314 	add.w	r3, r7, #20
 8000712:	2200      	movs	r2, #0
 8000714:	601a      	str	r2, [r3, #0]
 8000716:	605a      	str	r2, [r3, #4]
 8000718:	609a      	str	r2, [r3, #8]
 800071a:	60da      	str	r2, [r3, #12]
 800071c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800071e:	2300      	movs	r3, #0
 8000720:	613b      	str	r3, [r7, #16]
 8000722:	4b2d      	ldr	r3, [pc, #180]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000724:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000726:	4a2c      	ldr	r2, [pc, #176]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000728:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800072c:	6313      	str	r3, [r2, #48]	@ 0x30
 800072e:	4b2a      	ldr	r3, [pc, #168]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000730:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000732:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000736:	613b      	str	r3, [r7, #16]
 8000738:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800073a:	2300      	movs	r3, #0
 800073c:	60fb      	str	r3, [r7, #12]
 800073e:	4b26      	ldr	r3, [pc, #152]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000740:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000742:	4a25      	ldr	r2, [pc, #148]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000744:	f043 0301 	orr.w	r3, r3, #1
 8000748:	6313      	str	r3, [r2, #48]	@ 0x30
 800074a:	4b23      	ldr	r3, [pc, #140]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 800074c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800074e:	f003 0301 	and.w	r3, r3, #1
 8000752:	60fb      	str	r3, [r7, #12]
 8000754:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000756:	2300      	movs	r3, #0
 8000758:	60bb      	str	r3, [r7, #8]
 800075a:	4b1f      	ldr	r3, [pc, #124]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 800075c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800075e:	4a1e      	ldr	r2, [pc, #120]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000760:	f043 0304 	orr.w	r3, r3, #4
 8000764:	6313      	str	r3, [r2, #48]	@ 0x30
 8000766:	4b1c      	ldr	r3, [pc, #112]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000768:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800076a:	f003 0304 	and.w	r3, r3, #4
 800076e:	60bb      	str	r3, [r7, #8]
 8000770:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000772:	2300      	movs	r3, #0
 8000774:	607b      	str	r3, [r7, #4]
 8000776:	4b18      	ldr	r3, [pc, #96]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000778:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800077a:	4a17      	ldr	r2, [pc, #92]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 800077c:	f043 0308 	orr.w	r3, r3, #8
 8000780:	6313      	str	r3, [r2, #48]	@ 0x30
 8000782:	4b15      	ldr	r3, [pc, #84]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000784:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000786:	f003 0308 	and.w	r3, r3, #8
 800078a:	607b      	str	r3, [r7, #4]
 800078c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800078e:	2300      	movs	r3, #0
 8000790:	603b      	str	r3, [r7, #0]
 8000792:	4b11      	ldr	r3, [pc, #68]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000794:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000796:	4a10      	ldr	r2, [pc, #64]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 8000798:	f043 0302 	orr.w	r3, r3, #2
 800079c:	6313      	str	r3, [r2, #48]	@ 0x30
 800079e:	4b0e      	ldr	r3, [pc, #56]	@ (80007d8 <MX_GPIO_Init+0xd0>)
 80007a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80007a2:	f003 0302 	and.w	r3, r3, #2
 80007a6:	603b      	str	r3, [r7, #0]
 80007a8:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 80007aa:	2200      	movs	r2, #0
 80007ac:	21c0      	movs	r1, #192	@ 0xc0
 80007ae:	480b      	ldr	r0, [pc, #44]	@ (80007dc <MX_GPIO_Init+0xd4>)
 80007b0:	f002 fdec 	bl	800338c <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PA6 PA7 */
  GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80007b4:	23c0      	movs	r3, #192	@ 0xc0
 80007b6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80007b8:	2301      	movs	r3, #1
 80007ba:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80007bc:	2300      	movs	r3, #0
 80007be:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80007c0:	2300      	movs	r3, #0
 80007c2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80007c4:	f107 0314 	add.w	r3, r7, #20
 80007c8:	4619      	mov	r1, r3
 80007ca:	4804      	ldr	r0, [pc, #16]	@ (80007dc <MX_GPIO_Init+0xd4>)
 80007cc:	f002 fb46 	bl	8002e5c <HAL_GPIO_Init>

}
 80007d0:	bf00      	nop
 80007d2:	3728      	adds	r7, #40	@ 0x28
 80007d4:	46bd      	mov	sp, r7
 80007d6:	bd80      	pop	{r7, pc}
 80007d8:	40023800 	.word	0x40023800
 80007dc:	40020000 	.word	0x40020000

080007e0 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 80007e0:	b580      	push	{r7, lr}
 80007e2:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80007e4:	4b12      	ldr	r3, [pc, #72]	@ (8000830 <MX_I2C1_Init+0x50>)
 80007e6:	4a13      	ldr	r2, [pc, #76]	@ (8000834 <MX_I2C1_Init+0x54>)
 80007e8:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 80007ea:	4b11      	ldr	r3, [pc, #68]	@ (8000830 <MX_I2C1_Init+0x50>)
 80007ec:	4a12      	ldr	r2, [pc, #72]	@ (8000838 <MX_I2C1_Init+0x58>)
 80007ee:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80007f0:	4b0f      	ldr	r3, [pc, #60]	@ (8000830 <MX_I2C1_Init+0x50>)
 80007f2:	2200      	movs	r2, #0
 80007f4:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80007f6:	4b0e      	ldr	r3, [pc, #56]	@ (8000830 <MX_I2C1_Init+0x50>)
 80007f8:	2200      	movs	r2, #0
 80007fa:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80007fc:	4b0c      	ldr	r3, [pc, #48]	@ (8000830 <MX_I2C1_Init+0x50>)
 80007fe:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000802:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000804:	4b0a      	ldr	r3, [pc, #40]	@ (8000830 <MX_I2C1_Init+0x50>)
 8000806:	2200      	movs	r2, #0
 8000808:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800080a:	4b09      	ldr	r3, [pc, #36]	@ (8000830 <MX_I2C1_Init+0x50>)
 800080c:	2200      	movs	r2, #0
 800080e:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000810:	4b07      	ldr	r3, [pc, #28]	@ (8000830 <MX_I2C1_Init+0x50>)
 8000812:	2200      	movs	r2, #0
 8000814:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000816:	4b06      	ldr	r3, [pc, #24]	@ (8000830 <MX_I2C1_Init+0x50>)
 8000818:	2200      	movs	r2, #0
 800081a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800081c:	4804      	ldr	r0, [pc, #16]	@ (8000830 <MX_I2C1_Init+0x50>)
 800081e:	f002 fde9 	bl	80033f4 <HAL_I2C_Init>
 8000822:	4603      	mov	r3, r0
 8000824:	2b00      	cmp	r3, #0
 8000826:	d001      	beq.n	800082c <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000828:	f000 fa26 	bl	8000c78 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800082c:	bf00      	nop
 800082e:	bd80      	pop	{r7, pc}
 8000830:	20000348 	.word	0x20000348
 8000834:	40005400 	.word	0x40005400
 8000838:	00061a80 	.word	0x00061a80

0800083c <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 800083c:	b580      	push	{r7, lr}
 800083e:	b08a      	sub	sp, #40	@ 0x28
 8000840:	af00      	add	r7, sp, #0
 8000842:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000844:	f107 0314 	add.w	r3, r7, #20
 8000848:	2200      	movs	r2, #0
 800084a:	601a      	str	r2, [r3, #0]
 800084c:	605a      	str	r2, [r3, #4]
 800084e:	609a      	str	r2, [r3, #8]
 8000850:	60da      	str	r2, [r3, #12]
 8000852:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8000854:	687b      	ldr	r3, [r7, #4]
 8000856:	681b      	ldr	r3, [r3, #0]
 8000858:	4a19      	ldr	r2, [pc, #100]	@ (80008c0 <HAL_I2C_MspInit+0x84>)
 800085a:	4293      	cmp	r3, r2
 800085c:	d12b      	bne.n	80008b6 <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800085e:	2300      	movs	r3, #0
 8000860:	613b      	str	r3, [r7, #16]
 8000862:	4b18      	ldr	r3, [pc, #96]	@ (80008c4 <HAL_I2C_MspInit+0x88>)
 8000864:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000866:	4a17      	ldr	r2, [pc, #92]	@ (80008c4 <HAL_I2C_MspInit+0x88>)
 8000868:	f043 0302 	orr.w	r3, r3, #2
 800086c:	6313      	str	r3, [r2, #48]	@ 0x30
 800086e:	4b15      	ldr	r3, [pc, #84]	@ (80008c4 <HAL_I2C_MspInit+0x88>)
 8000870:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000872:	f003 0302 	and.w	r3, r3, #2
 8000876:	613b      	str	r3, [r7, #16]
 8000878:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800087a:	23c0      	movs	r3, #192	@ 0xc0
 800087c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800087e:	2312      	movs	r3, #18
 8000880:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000882:	2300      	movs	r3, #0
 8000884:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000886:	2303      	movs	r3, #3
 8000888:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 800088a:	2304      	movs	r3, #4
 800088c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800088e:	f107 0314 	add.w	r3, r7, #20
 8000892:	4619      	mov	r1, r3
 8000894:	480c      	ldr	r0, [pc, #48]	@ (80008c8 <HAL_I2C_MspInit+0x8c>)
 8000896:	f002 fae1 	bl	8002e5c <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800089a:	2300      	movs	r3, #0
 800089c:	60fb      	str	r3, [r7, #12]
 800089e:	4b09      	ldr	r3, [pc, #36]	@ (80008c4 <HAL_I2C_MspInit+0x88>)
 80008a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80008a2:	4a08      	ldr	r2, [pc, #32]	@ (80008c4 <HAL_I2C_MspInit+0x88>)
 80008a4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80008a8:	6413      	str	r3, [r2, #64]	@ 0x40
 80008aa:	4b06      	ldr	r3, [pc, #24]	@ (80008c4 <HAL_I2C_MspInit+0x88>)
 80008ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80008ae:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80008b2:	60fb      	str	r3, [r7, #12]
 80008b4:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 80008b6:	bf00      	nop
 80008b8:	3728      	adds	r7, #40	@ 0x28
 80008ba:	46bd      	mov	sp, r7
 80008bc:	bd80      	pop	{r7, pc}
 80008be:	bf00      	nop
 80008c0:	40005400 	.word	0x40005400
 80008c4:	40023800 	.word	0x40023800
 80008c8:	40020400 	.word	0x40020400

080008cc <Process_HID_Frames>:
 80008cc:	b580      	push	{r7, lr}
 80008ce:	b090      	sub	sp, #64	@ 0x40
 80008d0:	af00      	add	r7, sp, #0
 80008d2:	e007      	b.n	80008e4 <Process_HID_Frames+0x18>
 80008d4:	783b      	ldrb	r3, [r7, #0]
 80008d6:	461a      	mov	r2, r3
 80008d8:	4b09      	ldr	r3, [pc, #36]	@ (8000900 <Process_HID_Frames+0x34>)
 80008da:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80008de:	463a      	mov	r2, r7
 80008e0:	4610      	mov	r0, r2
 80008e2:	4798      	blx	r3
 80008e4:	463b      	mov	r3, r7
 80008e6:	4619      	mov	r1, r3
 80008e8:	4806      	ldr	r0, [pc, #24]	@ (8000904 <Process_HID_Frames+0x38>)
 80008ea:	f008 fc57 	bl	800919c <HID_Frame_Read>
 80008ee:	4603      	mov	r3, r0
 80008f0:	2b00      	cmp	r3, #0
 80008f2:	d1ef      	bne.n	80008d4 <Process_HID_Frames+0x8>
 80008f4:	bf00      	nop
 80008f6:	bf00      	nop
 80008f8:	3740      	adds	r7, #64	@ 0x40
 80008fa:	46bd      	mov	sp, r7
 80008fc:	bd80      	pop	{r7, pc}
 80008fe:	bf00      	nop
 8000900:	20000000 	.word	0x20000000
 8000904:	20002310 	.word	0x20002310

08000908 <SendCanConfig>:
 8000908:	b580      	push	{r7, lr}
 800090a:	b082      	sub	sp, #8
 800090c:	af00      	add	r7, sp, #0
 800090e:	6078      	str	r0, [r7, #4]
 8000910:	687b      	ldr	r3, [r7, #4]
 8000912:	3301      	adds	r3, #1
 8000914:	781b      	ldrb	r3, [r3, #0]
 8000916:	2b00      	cmp	r3, #0
 8000918:	d109      	bne.n	800092e <SendCanConfig+0x26>
 800091a:	480d      	ldr	r0, [pc, #52]	@ (8000950 <SendCanConfig+0x48>)
 800091c:	f004 fe50 	bl	80055c0 <HAL_TIM_Base_Stop>
 8000920:	480c      	ldr	r0, [pc, #48]	@ (8000954 <SendCanConfig+0x4c>)
 8000922:	f004 fee5 	bl	80056f0 <HAL_TIM_Base_Stop_IT>
 8000926:	480c      	ldr	r0, [pc, #48]	@ (8000958 <SendCanConfig+0x50>)
 8000928:	f001 f8ea 	bl	8001b00 <HAL_CAN_Stop>
 800092c:	e00a      	b.n	8000944 <SendCanConfig+0x3c>
 800092e:	4808      	ldr	r0, [pc, #32]	@ (8000950 <SendCanConfig+0x48>)
 8000930:	f004 fdde 	bl	80054f0 <HAL_TIM_Base_Start>
 8000934:	4807      	ldr	r0, [pc, #28]	@ (8000954 <SendCanConfig+0x4c>)
 8000936:	f004 fe6b 	bl	8005610 <HAL_TIM_Base_Start_IT>
 800093a:	4807      	ldr	r0, [pc, #28]	@ (8000958 <SendCanConfig+0x50>)
 800093c:	f001 f89c 	bl	8001a78 <HAL_CAN_Start>
 8000940:	f000 f86a 	bl	8000a18 <CanRx_init>
 8000944:	bf00      	nop
 8000946:	4618      	mov	r0, r3
 8000948:	3708      	adds	r7, #8
 800094a:	46bd      	mov	sp, r7
 800094c:	bd80      	pop	{r7, pc}
 800094e:	bf00      	nop
 8000950:	20000718 	.word	0x20000718
 8000954:	200006d0 	.word	0x200006d0
 8000958:	20000320 	.word	0x20000320

0800095c <SendCanMessage>:
 800095c:	b580      	push	{r7, lr}
 800095e:	b084      	sub	sp, #16
 8000960:	af00      	add	r7, sp, #0
 8000962:	6078      	str	r0, [r7, #4]
 8000964:	687b      	ldr	r3, [r7, #4]
 8000966:	3301      	adds	r3, #1
 8000968:	781b      	ldrb	r3, [r3, #0]
 800096a:	061a      	lsls	r2, r3, #24
 800096c:	687b      	ldr	r3, [r7, #4]
 800096e:	3302      	adds	r3, #2
 8000970:	781b      	ldrb	r3, [r3, #0]
 8000972:	041b      	lsls	r3, r3, #16
 8000974:	431a      	orrs	r2, r3
 8000976:	687b      	ldr	r3, [r7, #4]
 8000978:	3303      	adds	r3, #3
 800097a:	781b      	ldrb	r3, [r3, #0]
 800097c:	021b      	lsls	r3, r3, #8
 800097e:	4313      	orrs	r3, r2
 8000980:	687a      	ldr	r2, [r7, #4]
 8000982:	3204      	adds	r2, #4
 8000984:	7812      	ldrb	r2, [r2, #0]
 8000986:	4313      	orrs	r3, r2
 8000988:	60fb      	str	r3, [r7, #12]
 800098a:	687b      	ldr	r3, [r7, #4]
 800098c:	3305      	adds	r3, #5
 800098e:	7819      	ldrb	r1, [r3, #0]
 8000990:	687b      	ldr	r3, [r7, #4]
 8000992:	3306      	adds	r3, #6
 8000994:	461a      	mov	r2, r3
 8000996:	68f8      	ldr	r0, [r7, #12]
 8000998:	f000 f806 	bl	80009a8 <CanTx_init>
 800099c:	bf00      	nop
 800099e:	4618      	mov	r0, r3
 80009a0:	3710      	adds	r7, #16
 80009a2:	46bd      	mov	sp, r7
 80009a4:	bd80      	pop	{r7, pc}
	...

080009a8 <CanTx_init>:
 80009a8:	b580      	push	{r7, lr}
 80009aa:	b086      	sub	sp, #24
 80009ac:	af00      	add	r7, sp, #0
 80009ae:	60f8      	str	r0, [r7, #12]
 80009b0:	460b      	mov	r3, r1
 80009b2:	607a      	str	r2, [r7, #4]
 80009b4:	72fb      	strb	r3, [r7, #11]
 80009b6:	7afb      	ldrb	r3, [r7, #11]
 80009b8:	f003 030f 	and.w	r3, r3, #15
 80009bc:	2b00      	cmp	r3, #0
 80009be:	d008      	beq.n	80009d2 <CanTx_init+0x2a>
 80009c0:	2b04      	cmp	r3, #4
 80009c2:	d10d      	bne.n	80009e0 <CanTx_init+0x38>
 80009c4:	4b12      	ldr	r3, [pc, #72]	@ (8000a10 <CanTx_init+0x68>)
 80009c6:	2204      	movs	r2, #4
 80009c8:	609a      	str	r2, [r3, #8]
 80009ca:	4a11      	ldr	r2, [pc, #68]	@ (8000a10 <CanTx_init+0x68>)
 80009cc:	68fb      	ldr	r3, [r7, #12]
 80009ce:	6053      	str	r3, [r2, #4]
 80009d0:	e006      	b.n	80009e0 <CanTx_init+0x38>
 80009d2:	4b0f      	ldr	r3, [pc, #60]	@ (8000a10 <CanTx_init+0x68>)
 80009d4:	2200      	movs	r2, #0
 80009d6:	609a      	str	r2, [r3, #8]
 80009d8:	4a0d      	ldr	r2, [pc, #52]	@ (8000a10 <CanTx_init+0x68>)
 80009da:	68fb      	ldr	r3, [r7, #12]
 80009dc:	6013      	str	r3, [r2, #0]
 80009de:	bf00      	nop
 80009e0:	4b0b      	ldr	r3, [pc, #44]	@ (8000a10 <CanTx_init+0x68>)
 80009e2:	2200      	movs	r2, #0
 80009e4:	60da      	str	r2, [r3, #12]
 80009e6:	7afb      	ldrb	r3, [r7, #11]
 80009e8:	091b      	lsrs	r3, r3, #4
 80009ea:	b2db      	uxtb	r3, r3
 80009ec:	461a      	mov	r2, r3
 80009ee:	4b08      	ldr	r3, [pc, #32]	@ (8000a10 <CanTx_init+0x68>)
 80009f0:	611a      	str	r2, [r3, #16]
 80009f2:	4b07      	ldr	r3, [pc, #28]	@ (8000a10 <CanTx_init+0x68>)
 80009f4:	2200      	movs	r2, #0
 80009f6:	751a      	strb	r2, [r3, #20]
 80009f8:	f107 0314 	add.w	r3, r7, #20
 80009fc:	687a      	ldr	r2, [r7, #4]
 80009fe:	4904      	ldr	r1, [pc, #16]	@ (8000a10 <CanTx_init+0x68>)
 8000a00:	4804      	ldr	r0, [pc, #16]	@ (8000a14 <CanTx_init+0x6c>)
 8000a02:	f001 f8c6 	bl	8001b92 <HAL_CAN_AddTxMessage>
 8000a06:	bf00      	nop
 8000a08:	3718      	adds	r7, #24
 8000a0a:	46bd      	mov	sp, r7
 8000a0c:	bd80      	pop	{r7, pc}
 8000a0e:	bf00      	nop
 8000a10:	2000039c 	.word	0x2000039c
 8000a14:	20000320 	.word	0x20000320

08000a18 <CanRx_init>:
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	af00      	add	r7, sp, #0
 8000a1c:	4b12      	ldr	r3, [pc, #72]	@ (8000a68 <CanRx_init+0x50>)
 8000a1e:	2200      	movs	r2, #0
 8000a20:	615a      	str	r2, [r3, #20]
 8000a22:	4b11      	ldr	r3, [pc, #68]	@ (8000a68 <CanRx_init+0x50>)
 8000a24:	2200      	movs	r2, #0
 8000a26:	619a      	str	r2, [r3, #24]
 8000a28:	4b0f      	ldr	r3, [pc, #60]	@ (8000a68 <CanRx_init+0x50>)
 8000a2a:	2201      	movs	r2, #1
 8000a2c:	61da      	str	r2, [r3, #28]
 8000a2e:	4b0e      	ldr	r3, [pc, #56]	@ (8000a68 <CanRx_init+0x50>)
 8000a30:	2200      	movs	r2, #0
 8000a32:	601a      	str	r2, [r3, #0]
 8000a34:	4b0c      	ldr	r3, [pc, #48]	@ (8000a68 <CanRx_init+0x50>)
 8000a36:	2200      	movs	r2, #0
 8000a38:	605a      	str	r2, [r3, #4]
 8000a3a:	4b0b      	ldr	r3, [pc, #44]	@ (8000a68 <CanRx_init+0x50>)
 8000a3c:	2200      	movs	r2, #0
 8000a3e:	609a      	str	r2, [r3, #8]
 8000a40:	4b09      	ldr	r3, [pc, #36]	@ (8000a68 <CanRx_init+0x50>)
 8000a42:	2200      	movs	r2, #0
 8000a44:	60da      	str	r2, [r3, #12]
 8000a46:	4b08      	ldr	r3, [pc, #32]	@ (8000a68 <CanRx_init+0x50>)
 8000a48:	2200      	movs	r2, #0
 8000a4a:	611a      	str	r2, [r3, #16]
 8000a4c:	4b06      	ldr	r3, [pc, #24]	@ (8000a68 <CanRx_init+0x50>)
 8000a4e:	2201      	movs	r2, #1
 8000a50:	621a      	str	r2, [r3, #32]
 8000a52:	4905      	ldr	r1, [pc, #20]	@ (8000a68 <CanRx_init+0x50>)
 8000a54:	4805      	ldr	r0, [pc, #20]	@ (8000a6c <CanRx_init+0x54>)
 8000a56:	f000 ff31 	bl	80018bc <HAL_CAN_ConfigFilter>
 8000a5a:	2102      	movs	r1, #2
 8000a5c:	4803      	ldr	r0, [pc, #12]	@ (8000a6c <CanRx_init+0x54>)
 8000a5e:	f001 fa8a 	bl	8001f76 <HAL_CAN_ActivateNotification>
 8000a62:	bf00      	nop
 8000a64:	bd80      	pop	{r7, pc}
 8000a66:	bf00      	nop
 8000a68:	200003d0 	.word	0x200003d0
 8000a6c:	20000320 	.word	0x20000320

08000a70 <main>:
 8000a70:	b580      	push	{r7, lr}
 8000a72:	af00      	add	r7, sp, #0
 8000a74:	f000 fd90 	bl	8001598 <HAL_Init>
 8000a78:	f000 f81a 	bl	8000ab0 <SystemClock_Config>
 8000a7c:	f7ff fe44 	bl	8000708 <MX_GPIO_Init>
 8000a80:	f7ff fe1a 	bl	80006b8 <MX_DMA_Init>
 8000a84:	f7ff fd8a 	bl	800059c <MX_CAN1_Init>
 8000a88:	f000 fcda 	bl	8001440 <MX_USB_OTG_FS_PCD_Init>
 8000a8c:	f000 fba4 	bl	80011d8 <MX_UART5_Init>
 8000a90:	f7ff fea6 	bl	80007e0 <MX_I2C1_Init>
 8000a94:	f000 f9f0 	bl	8000e78 <MX_TIM1_Init>
 8000a98:	f000 fa3e 	bl	8000f18 <MX_TIM2_Init>
 8000a9c:	f000 fa88 	bl	8000fb0 <MX_TIM4_Init>
 8000aa0:	f000 fad4 	bl	800104c <MX_TIM5_Init>
 8000aa4:	f007 fde4 	bl	8008670 <MX_USB_DEVICE_Init>
 8000aa8:	f7ff ff10 	bl	80008cc <Process_HID_Frames>
 8000aac:	e7fc      	b.n	8000aa8 <main+0x38>
	...

08000ab0 <SystemClock_Config>:
 8000ab0:	b580      	push	{r7, lr}
 8000ab2:	b094      	sub	sp, #80	@ 0x50
 8000ab4:	af00      	add	r7, sp, #0
 8000ab6:	f107 0320 	add.w	r3, r7, #32
 8000aba:	2230      	movs	r2, #48	@ 0x30
 8000abc:	2100      	movs	r1, #0
 8000abe:	4618      	mov	r0, r3
 8000ac0:	f00b fb18 	bl	800c0f4 <memset>
 8000ac4:	f107 030c 	add.w	r3, r7, #12
 8000ac8:	2200      	movs	r2, #0
 8000aca:	601a      	str	r2, [r3, #0]
 8000acc:	605a      	str	r2, [r3, #4]
 8000ace:	609a      	str	r2, [r3, #8]
 8000ad0:	60da      	str	r2, [r3, #12]
 8000ad2:	611a      	str	r2, [r3, #16]
 8000ad4:	2300      	movs	r3, #0
 8000ad6:	60bb      	str	r3, [r7, #8]
 8000ad8:	4b28      	ldr	r3, [pc, #160]	@ (8000b7c <SystemClock_Config+0xcc>)
 8000ada:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000adc:	4a27      	ldr	r2, [pc, #156]	@ (8000b7c <SystemClock_Config+0xcc>)
 8000ade:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000ae2:	6413      	str	r3, [r2, #64]	@ 0x40
 8000ae4:	4b25      	ldr	r3, [pc, #148]	@ (8000b7c <SystemClock_Config+0xcc>)
 8000ae6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ae8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000aec:	60bb      	str	r3, [r7, #8]
 8000aee:	68bb      	ldr	r3, [r7, #8]
 8000af0:	2300      	movs	r3, #0
 8000af2:	607b      	str	r3, [r7, #4]
 8000af4:	4b22      	ldr	r3, [pc, #136]	@ (8000b80 <SystemClock_Config+0xd0>)
 8000af6:	681b      	ldr	r3, [r3, #0]
 8000af8:	4a21      	ldr	r2, [pc, #132]	@ (8000b80 <SystemClock_Config+0xd0>)
 8000afa:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000afe:	6013      	str	r3, [r2, #0]
 8000b00:	4b1f      	ldr	r3, [pc, #124]	@ (8000b80 <SystemClock_Config+0xd0>)
 8000b02:	681b      	ldr	r3, [r3, #0]
 8000b04:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000b08:	607b      	str	r3, [r7, #4]
 8000b0a:	687b      	ldr	r3, [r7, #4]
 8000b0c:	2301      	movs	r3, #1
 8000b0e:	623b      	str	r3, [r7, #32]
 8000b10:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000b14:	627b      	str	r3, [r7, #36]	@ 0x24
 8000b16:	2302      	movs	r3, #2
 8000b18:	63bb      	str	r3, [r7, #56]	@ 0x38
 8000b1a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000b1e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8000b20:	2304      	movs	r3, #4
 8000b22:	643b      	str	r3, [r7, #64]	@ 0x40
 8000b24:	23a8      	movs	r3, #168	@ 0xa8
 8000b26:	647b      	str	r3, [r7, #68]	@ 0x44
 8000b28:	2302      	movs	r3, #2
 8000b2a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8000b2c:	2307      	movs	r3, #7
 8000b2e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8000b30:	f107 0320 	add.w	r3, r7, #32
 8000b34:	4618      	mov	r0, r3
 8000b36:	f003 fff3 	bl	8004b20 <HAL_RCC_OscConfig>
 8000b3a:	4603      	mov	r3, r0
 8000b3c:	2b00      	cmp	r3, #0
 8000b3e:	d001      	beq.n	8000b44 <SystemClock_Config+0x94>
 8000b40:	f000 f89a 	bl	8000c78 <Error_Handler>
 8000b44:	230f      	movs	r3, #15
 8000b46:	60fb      	str	r3, [r7, #12]
 8000b48:	2302      	movs	r3, #2
 8000b4a:	613b      	str	r3, [r7, #16]
 8000b4c:	2300      	movs	r3, #0
 8000b4e:	617b      	str	r3, [r7, #20]
 8000b50:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8000b54:	61bb      	str	r3, [r7, #24]
 8000b56:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000b5a:	61fb      	str	r3, [r7, #28]
 8000b5c:	f107 030c 	add.w	r3, r7, #12
 8000b60:	2105      	movs	r1, #5
 8000b62:	4618      	mov	r0, r3
 8000b64:	f004 fa54 	bl	8005010 <HAL_RCC_ClockConfig>
 8000b68:	4603      	mov	r3, r0
 8000b6a:	2b00      	cmp	r3, #0
 8000b6c:	d001      	beq.n	8000b72 <SystemClock_Config+0xc2>
 8000b6e:	f000 f883 	bl	8000c78 <Error_Handler>
 8000b72:	bf00      	nop
 8000b74:	3750      	adds	r7, #80	@ 0x50
 8000b76:	46bd      	mov	sp, r7
 8000b78:	bd80      	pop	{r7, pc}
 8000b7a:	bf00      	nop
 8000b7c:	40023800 	.word	0x40023800
 8000b80:	40007000 	.word	0x40007000

08000b84 <HAL_CAN_RxFifo0MsgPendingCallback>:
 8000b84:	b580      	push	{r7, lr}
 8000b86:	b086      	sub	sp, #24
 8000b88:	af00      	add	r7, sp, #0
 8000b8a:	6078      	str	r0, [r7, #4]
 8000b8c:	2240      	movs	r2, #64	@ 0x40
 8000b8e:	2100      	movs	r1, #0
 8000b90:	4833      	ldr	r0, [pc, #204]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000b92:	f00b faaf 	bl	800c0f4 <memset>
 8000b96:	4b33      	ldr	r3, [pc, #204]	@ (8000c64 <HAL_CAN_RxFifo0MsgPendingCallback+0xe0>)
 8000b98:	681b      	ldr	r3, [r3, #0]
 8000b9a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000b9c:	613b      	str	r3, [r7, #16]
 8000b9e:	4b32      	ldr	r3, [pc, #200]	@ (8000c68 <HAL_CAN_RxFifo0MsgPendingCallback+0xe4>)
 8000ba0:	4a32      	ldr	r2, [pc, #200]	@ (8000c6c <HAL_CAN_RxFifo0MsgPendingCallback+0xe8>)
 8000ba2:	2100      	movs	r1, #0
 8000ba4:	4832      	ldr	r0, [pc, #200]	@ (8000c70 <HAL_CAN_RxFifo0MsgPendingCallback+0xec>)
 8000ba6:	f001 f8c4 	bl	8001d32 <HAL_CAN_GetRxMessage>
 8000baa:	4603      	mov	r3, r0
 8000bac:	2b00      	cmp	r3, #0
 8000bae:	d152      	bne.n	8000c56 <HAL_CAN_RxFifo0MsgPendingCallback+0xd2>
 8000bb0:	4b2b      	ldr	r3, [pc, #172]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000bb2:	2203      	movs	r2, #3
 8000bb4:	701a      	strb	r2, [r3, #0]
 8000bb6:	4b2d      	ldr	r3, [pc, #180]	@ (8000c6c <HAL_CAN_RxFifo0MsgPendingCallback+0xe8>)
 8000bb8:	691b      	ldr	r3, [r3, #16]
 8000bba:	b2db      	uxtb	r3, r3
 8000bbc:	f003 030f 	and.w	r3, r3, #15
 8000bc0:	73fb      	strb	r3, [r7, #15]
 8000bc2:	2300      	movs	r3, #0
 8000bc4:	75fb      	strb	r3, [r7, #23]
 8000bc6:	4b29      	ldr	r3, [pc, #164]	@ (8000c6c <HAL_CAN_RxFifo0MsgPendingCallback+0xe8>)
 8000bc8:	689b      	ldr	r3, [r3, #8]
 8000bca:	2b04      	cmp	r3, #4
 8000bcc:	d101      	bne.n	8000bd2 <HAL_CAN_RxFifo0MsgPendingCallback+0x4e>
 8000bce:	2308      	movs	r3, #8
 8000bd0:	75fb      	strb	r3, [r7, #23]
 8000bd2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000bd6:	011b      	lsls	r3, r3, #4
 8000bd8:	b25a      	sxtb	r2, r3
 8000bda:	f997 3017 	ldrsb.w	r3, [r7, #23]
 8000bde:	f003 030f 	and.w	r3, r3, #15
 8000be2:	b25b      	sxtb	r3, r3
 8000be4:	4313      	orrs	r3, r2
 8000be6:	b25b      	sxtb	r3, r3
 8000be8:	b2da      	uxtb	r2, r3
 8000bea:	4b1d      	ldr	r3, [pc, #116]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000bec:	705a      	strb	r2, [r3, #1]
 8000bee:	4b1f      	ldr	r3, [pc, #124]	@ (8000c6c <HAL_CAN_RxFifo0MsgPendingCallback+0xe8>)
 8000bf0:	689b      	ldr	r3, [r3, #8]
 8000bf2:	2b04      	cmp	r3, #4
 8000bf4:	d102      	bne.n	8000bfc <HAL_CAN_RxFifo0MsgPendingCallback+0x78>
 8000bf6:	4b1d      	ldr	r3, [pc, #116]	@ (8000c6c <HAL_CAN_RxFifo0MsgPendingCallback+0xe8>)
 8000bf8:	685b      	ldr	r3, [r3, #4]
 8000bfa:	e001      	b.n	8000c00 <HAL_CAN_RxFifo0MsgPendingCallback+0x7c>
 8000bfc:	4b1b      	ldr	r3, [pc, #108]	@ (8000c6c <HAL_CAN_RxFifo0MsgPendingCallback+0xe8>)
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	60bb      	str	r3, [r7, #8]
 8000c02:	68bb      	ldr	r3, [r7, #8]
 8000c04:	0e1b      	lsrs	r3, r3, #24
 8000c06:	b2da      	uxtb	r2, r3
 8000c08:	4b15      	ldr	r3, [pc, #84]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000c0a:	709a      	strb	r2, [r3, #2]
 8000c0c:	68bb      	ldr	r3, [r7, #8]
 8000c0e:	0c1b      	lsrs	r3, r3, #16
 8000c10:	b2da      	uxtb	r2, r3
 8000c12:	4b13      	ldr	r3, [pc, #76]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000c14:	70da      	strb	r2, [r3, #3]
 8000c16:	68bb      	ldr	r3, [r7, #8]
 8000c18:	0a1b      	lsrs	r3, r3, #8
 8000c1a:	b2da      	uxtb	r2, r3
 8000c1c:	4b10      	ldr	r3, [pc, #64]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000c1e:	711a      	strb	r2, [r3, #4]
 8000c20:	68bb      	ldr	r3, [r7, #8]
 8000c22:	b2da      	uxtb	r2, r3
 8000c24:	4b0e      	ldr	r3, [pc, #56]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000c26:	715a      	strb	r2, [r3, #5]
 8000c28:	693b      	ldr	r3, [r7, #16]
 8000c2a:	0e1b      	lsrs	r3, r3, #24
 8000c2c:	b2da      	uxtb	r2, r3
 8000c2e:	4b0c      	ldr	r3, [pc, #48]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000c30:	739a      	strb	r2, [r3, #14]
 8000c32:	693b      	ldr	r3, [r7, #16]
 8000c34:	0c1b      	lsrs	r3, r3, #16
 8000c36:	b2da      	uxtb	r2, r3
 8000c38:	4b09      	ldr	r3, [pc, #36]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000c3a:	73da      	strb	r2, [r3, #15]
 8000c3c:	693b      	ldr	r3, [r7, #16]
 8000c3e:	0a1b      	lsrs	r3, r3, #8
 8000c40:	b2da      	uxtb	r2, r3
 8000c42:	4b07      	ldr	r3, [pc, #28]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000c44:	741a      	strb	r2, [r3, #16]
 8000c46:	693b      	ldr	r3, [r7, #16]
 8000c48:	b2da      	uxtb	r2, r3
 8000c4a:	4b05      	ldr	r3, [pc, #20]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000c4c:	745a      	strb	r2, [r3, #17]
 8000c4e:	4904      	ldr	r1, [pc, #16]	@ (8000c60 <HAL_CAN_RxFifo0MsgPendingCallback+0xdc>)
 8000c50:	4808      	ldr	r0, [pc, #32]	@ (8000c74 <HAL_CAN_RxFifo0MsgPendingCallback+0xf0>)
 8000c52:	f008 fa73 	bl	800913c <HID_Frame_Write>
 8000c56:	bf00      	nop
 8000c58:	3718      	adds	r7, #24
 8000c5a:	46bd      	mov	sp, r7
 8000c5c:	bd80      	pop	{r7, pc}
 8000c5e:	bf00      	nop
 8000c60:	200003f8 	.word	0x200003f8
 8000c64:	20000718 	.word	0x20000718
 8000c68:	200003fe 	.word	0x200003fe
 8000c6c:	200003b4 	.word	0x200003b4
 8000c70:	20000320 	.word	0x20000320
 8000c74:	20000438 	.word	0x20000438

08000c78 <Error_Handler>:
 8000c78:	b480      	push	{r7}
 8000c7a:	af00      	add	r7, sp, #0
 8000c7c:	b672      	cpsid	i
 8000c7e:	bf00      	nop
 8000c80:	bf00      	nop
 8000c82:	e7fd      	b.n	8000c80 <Error_Handler+0x8>

08000c84 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000c84:	b480      	push	{r7}
 8000c86:	b083      	sub	sp, #12
 8000c88:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c8a:	2300      	movs	r3, #0
 8000c8c:	607b      	str	r3, [r7, #4]
 8000c8e:	4b10      	ldr	r3, [pc, #64]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000c90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c92:	4a0f      	ldr	r2, [pc, #60]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000c94:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000c98:	6453      	str	r3, [r2, #68]	@ 0x44
 8000c9a:	4b0d      	ldr	r3, [pc, #52]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000c9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c9e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000ca2:	607b      	str	r3, [r7, #4]
 8000ca4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	603b      	str	r3, [r7, #0]
 8000caa:	4b09      	ldr	r3, [pc, #36]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000cac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000cae:	4a08      	ldr	r2, [pc, #32]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000cb0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000cb4:	6413      	str	r3, [r2, #64]	@ 0x40
 8000cb6:	4b06      	ldr	r3, [pc, #24]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000cb8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000cba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000cbe:	603b      	str	r3, [r7, #0]
 8000cc0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000cc2:	bf00      	nop
 8000cc4:	370c      	adds	r7, #12
 8000cc6:	46bd      	mov	sp, r7
 8000cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ccc:	4770      	bx	lr
 8000cce:	bf00      	nop
 8000cd0:	40023800 	.word	0x40023800

08000cd4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000cd4:	b480      	push	{r7}
 8000cd6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000cd8:	bf00      	nop
 8000cda:	e7fd      	b.n	8000cd8 <NMI_Handler+0x4>

08000cdc <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000cdc:	b480      	push	{r7}
 8000cde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000ce0:	bf00      	nop
 8000ce2:	e7fd      	b.n	8000ce0 <HardFault_Handler+0x4>

08000ce4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000ce4:	b480      	push	{r7}
 8000ce6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000ce8:	bf00      	nop
 8000cea:	e7fd      	b.n	8000ce8 <MemManage_Handler+0x4>

08000cec <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000cec:	b480      	push	{r7}
 8000cee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000cf0:	bf00      	nop
 8000cf2:	e7fd      	b.n	8000cf0 <BusFault_Handler+0x4>

08000cf4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000cf4:	b480      	push	{r7}
 8000cf6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000cf8:	bf00      	nop
 8000cfa:	e7fd      	b.n	8000cf8 <UsageFault_Handler+0x4>

08000cfc <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000cfc:	b480      	push	{r7}
 8000cfe:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000d00:	bf00      	nop
 8000d02:	46bd      	mov	sp, r7
 8000d04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d08:	4770      	bx	lr

08000d0a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000d0a:	b480      	push	{r7}
 8000d0c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000d0e:	bf00      	nop
 8000d10:	46bd      	mov	sp, r7
 8000d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d16:	4770      	bx	lr

08000d18 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000d18:	b480      	push	{r7}
 8000d1a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000d1c:	bf00      	nop
 8000d1e:	46bd      	mov	sp, r7
 8000d20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d24:	4770      	bx	lr

08000d26 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000d26:	b580      	push	{r7, lr}
 8000d28:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000d2a:	f000 fc87 	bl	800163c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000d2e:	bf00      	nop
 8000d30:	bd80      	pop	{r7, pc}
	...

08000d34 <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 8000d34:	b580      	push	{r7, lr}
 8000d36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart5_rx);
 8000d38:	4802      	ldr	r0, [pc, #8]	@ (8000d44 <DMA1_Stream0_IRQHandler+0x10>)
 8000d3a:	f001 fe53 	bl	80029e4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 8000d3e:	bf00      	nop
 8000d40:	bd80      	pop	{r7, pc}
 8000d42:	bf00      	nop
 8000d44:	20000808 	.word	0x20000808

08000d48 <CAN1_RX0_IRQHandler>:

/**
  * @brief This function handles CAN1 RX0 interrupts.
  */
void CAN1_RX0_IRQHandler(void)
{
 8000d48:	b580      	push	{r7, lr}
 8000d4a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN1_RX0_IRQn 0 */

  /* USER CODE END CAN1_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan1);
 8000d4c:	4802      	ldr	r0, [pc, #8]	@ (8000d58 <CAN1_RX0_IRQHandler+0x10>)
 8000d4e:	f001 f938 	bl	8001fc2 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN1_RX0_IRQn 1 */

  /* USER CODE END CAN1_RX0_IRQn 1 */
}
 8000d52:	bf00      	nop
 8000d54:	bd80      	pop	{r7, pc}
 8000d56:	bf00      	nop
 8000d58:	20000320 	.word	0x20000320

08000d5c <CAN1_RX1_IRQHandler>:

/**
  * @brief This function handles CAN1 RX1 interrupt.
  */
void CAN1_RX1_IRQHandler(void)
{
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN1_RX1_IRQn 0 */

  /* USER CODE END CAN1_RX1_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan1);
 8000d60:	4802      	ldr	r0, [pc, #8]	@ (8000d6c <CAN1_RX1_IRQHandler+0x10>)
 8000d62:	f001 f92e 	bl	8001fc2 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN1_RX1_IRQn 1 */

  /* USER CODE END CAN1_RX1_IRQn 1 */
}
 8000d66:	bf00      	nop
 8000d68:	bd80      	pop	{r7, pc}
 8000d6a:	bf00      	nop
 8000d6c:	20000320 	.word	0x20000320

08000d70 <TIM1_UP_TIM10_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
 8000d70:	b580      	push	{r7, lr}
 8000d72:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8000d74:	4802      	ldr	r0, [pc, #8]	@ (8000d80 <TIM1_UP_TIM10_IRQHandler+0x10>)
 8000d76:	f004 fcea 	bl	800574e <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}
 8000d7a:	bf00      	nop
 8000d7c:	bd80      	pop	{r7, pc}
 8000d7e:	bf00      	nop
 8000d80:	20000640 	.word	0x20000640

08000d84 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8000d84:	b580      	push	{r7, lr}
 8000d86:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000d88:	4802      	ldr	r0, [pc, #8]	@ (8000d94 <TIM2_IRQHandler+0x10>)
 8000d8a:	f004 fce0 	bl	800574e <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8000d8e:	bf00      	nop
 8000d90:	bd80      	pop	{r7, pc}
 8000d92:	bf00      	nop
 8000d94:	20000688 	.word	0x20000688

08000d98 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8000d98:	b580      	push	{r7, lr}
 8000d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8000d9c:	4802      	ldr	r0, [pc, #8]	@ (8000da8 <TIM4_IRQHandler+0x10>)
 8000d9e:	f004 fcd6 	bl	800574e <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8000da2:	bf00      	nop
 8000da4:	bd80      	pop	{r7, pc}
 8000da6:	bf00      	nop
 8000da8:	200006d0 	.word	0x200006d0

08000dac <DMA1_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA1 stream7 global interrupt.
  */
void DMA1_Stream7_IRQHandler(void)
{
 8000dac:	b580      	push	{r7, lr}
 8000dae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */

  /* USER CODE END DMA1_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart5_tx);
 8000db0:	4802      	ldr	r0, [pc, #8]	@ (8000dbc <DMA1_Stream7_IRQHandler+0x10>)
 8000db2:	f001 fe17 	bl	80029e4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */

  /* USER CODE END DMA1_Stream7_IRQn 1 */
}
 8000db6:	bf00      	nop
 8000db8:	bd80      	pop	{r7, pc}
 8000dba:	bf00      	nop
 8000dbc:	200007a8 	.word	0x200007a8

08000dc0 <UART5_IRQHandler>:

/**
  * @brief This function handles UART5 global interrupt.
  */
void UART5_IRQHandler(void)
{
 8000dc0:	b580      	push	{r7, lr}
 8000dc2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART5_IRQn 0 */

  /* USER CODE END UART5_IRQn 0 */
  HAL_UART_IRQHandler(&huart5);
 8000dc4:	4802      	ldr	r0, [pc, #8]	@ (8000dd0 <UART5_IRQHandler+0x10>)
 8000dc6:	f005 f9a3 	bl	8006110 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART5_IRQn 1 */

  /* USER CODE END UART5_IRQn 1 */
}
 8000dca:	bf00      	nop
 8000dcc:	bd80      	pop	{r7, pc}
 8000dce:	bf00      	nop
 8000dd0:	20000760 	.word	0x20000760

08000dd4 <OTG_FS_IRQHandler>:

/**
  * @brief This function handles USB On The Go FS global interrupt.
  */
void OTG_FS_IRQHandler(void)
{
 8000dd4:	b580      	push	{r7, lr}
 8000dd6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 8000dd8:	4802      	ldr	r0, [pc, #8]	@ (8000de4 <OTG_FS_IRQHandler+0x10>)
 8000dda:	f002 fd93 	bl	8003904 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN OTG_FS_IRQn 1 */

  /* USER CODE END OTG_FS_IRQn 1 */
}
 8000dde:	bf00      	nop
 8000de0:	bd80      	pop	{r7, pc}
 8000de2:	bf00      	nop
 8000de4:	20000868 	.word	0x20000868

08000de8 <_sbrk>:
 8000de8:	b580      	push	{r7, lr}
 8000dea:	b086      	sub	sp, #24
 8000dec:	af00      	add	r7, sp, #0
 8000dee:	6078      	str	r0, [r7, #4]
 8000df0:	4a14      	ldr	r2, [pc, #80]	@ (8000e44 <_sbrk+0x5c>)
 8000df2:	4b15      	ldr	r3, [pc, #84]	@ (8000e48 <_sbrk+0x60>)
 8000df4:	1ad3      	subs	r3, r2, r3
 8000df6:	617b      	str	r3, [r7, #20]
 8000df8:	697b      	ldr	r3, [r7, #20]
 8000dfa:	613b      	str	r3, [r7, #16]
 8000dfc:	4b13      	ldr	r3, [pc, #76]	@ (8000e4c <_sbrk+0x64>)
 8000dfe:	681b      	ldr	r3, [r3, #0]
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	d102      	bne.n	8000e0a <_sbrk+0x22>
 8000e04:	4b11      	ldr	r3, [pc, #68]	@ (8000e4c <_sbrk+0x64>)
 8000e06:	4a12      	ldr	r2, [pc, #72]	@ (8000e50 <_sbrk+0x68>)
 8000e08:	601a      	str	r2, [r3, #0]
 8000e0a:	4b10      	ldr	r3, [pc, #64]	@ (8000e4c <_sbrk+0x64>)
 8000e0c:	681a      	ldr	r2, [r3, #0]
 8000e0e:	687b      	ldr	r3, [r7, #4]
 8000e10:	4413      	add	r3, r2
 8000e12:	693a      	ldr	r2, [r7, #16]
 8000e14:	429a      	cmp	r2, r3
 8000e16:	d207      	bcs.n	8000e28 <_sbrk+0x40>
 8000e18:	f00b f974 	bl	800c104 <__errno>
 8000e1c:	4603      	mov	r3, r0
 8000e1e:	220c      	movs	r2, #12
 8000e20:	601a      	str	r2, [r3, #0]
 8000e22:	f04f 33ff 	mov.w	r3, #4294967295
 8000e26:	e009      	b.n	8000e3c <_sbrk+0x54>
 8000e28:	4b08      	ldr	r3, [pc, #32]	@ (8000e4c <_sbrk+0x64>)
 8000e2a:	681b      	ldr	r3, [r3, #0]
 8000e2c:	60fb      	str	r3, [r7, #12]
 8000e2e:	4b07      	ldr	r3, [pc, #28]	@ (8000e4c <_sbrk+0x64>)
 8000e30:	681a      	ldr	r2, [r3, #0]
 8000e32:	687b      	ldr	r3, [r7, #4]
 8000e34:	4413      	add	r3, r2
 8000e36:	4a05      	ldr	r2, [pc, #20]	@ (8000e4c <_sbrk+0x64>)
 8000e38:	6013      	str	r3, [r2, #0]
 8000e3a:	68fb      	ldr	r3, [r7, #12]
 8000e3c:	4618      	mov	r0, r3
 8000e3e:	3718      	adds	r7, #24
 8000e40:	46bd      	mov	sp, r7
 8000e42:	bd80      	pop	{r7, pc}
 8000e44:	20020000 	.word	0x20020000
 8000e48:	00000400 	.word	0x00000400
 8000e4c:	2000063c 	.word	0x2000063c
 8000e50:	20002a08 	.word	0x20002a08

08000e54 <SystemInit>:
 8000e54:	b480      	push	{r7}
 8000e56:	af00      	add	r7, sp, #0
 8000e58:	4b06      	ldr	r3, [pc, #24]	@ (8000e74 <SystemInit+0x20>)
 8000e5a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000e5e:	4a05      	ldr	r2, [pc, #20]	@ (8000e74 <SystemInit+0x20>)
 8000e60:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000e64:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000e68:	bf00      	nop
 8000e6a:	46bd      	mov	sp, r7
 8000e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e70:	4770      	bx	lr
 8000e72:	bf00      	nop
 8000e74:	e000ed00 	.word	0xe000ed00

08000e78 <MX_TIM1_Init>:
 8000e78:	b580      	push	{r7, lr}
 8000e7a:	b086      	sub	sp, #24
 8000e7c:	af00      	add	r7, sp, #0
 8000e7e:	f107 0308 	add.w	r3, r7, #8
 8000e82:	2200      	movs	r2, #0
 8000e84:	601a      	str	r2, [r3, #0]
 8000e86:	605a      	str	r2, [r3, #4]
 8000e88:	609a      	str	r2, [r3, #8]
 8000e8a:	60da      	str	r2, [r3, #12]
 8000e8c:	463b      	mov	r3, r7
 8000e8e:	2200      	movs	r2, #0
 8000e90:	601a      	str	r2, [r3, #0]
 8000e92:	605a      	str	r2, [r3, #4]
 8000e94:	4b1e      	ldr	r3, [pc, #120]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000e96:	4a1f      	ldr	r2, [pc, #124]	@ (8000f14 <MX_TIM1_Init+0x9c>)
 8000e98:	601a      	str	r2, [r3, #0]
 8000e9a:	4b1d      	ldr	r3, [pc, #116]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000e9c:	22a7      	movs	r2, #167	@ 0xa7
 8000e9e:	605a      	str	r2, [r3, #4]
 8000ea0:	4b1b      	ldr	r3, [pc, #108]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000ea2:	2200      	movs	r2, #0
 8000ea4:	609a      	str	r2, [r3, #8]
 8000ea6:	4b1a      	ldr	r3, [pc, #104]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000ea8:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000eac:	60da      	str	r2, [r3, #12]
 8000eae:	4b18      	ldr	r3, [pc, #96]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000eb0:	2200      	movs	r2, #0
 8000eb2:	611a      	str	r2, [r3, #16]
 8000eb4:	4b16      	ldr	r3, [pc, #88]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000eb6:	2200      	movs	r2, #0
 8000eb8:	615a      	str	r2, [r3, #20]
 8000eba:	4b15      	ldr	r3, [pc, #84]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000ebc:	2200      	movs	r2, #0
 8000ebe:	619a      	str	r2, [r3, #24]
 8000ec0:	4813      	ldr	r0, [pc, #76]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000ec2:	f004 fac5 	bl	8005450 <HAL_TIM_Base_Init>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d001      	beq.n	8000ed0 <MX_TIM1_Init+0x58>
 8000ecc:	f7ff fed4 	bl	8000c78 <Error_Handler>
 8000ed0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000ed4:	60bb      	str	r3, [r7, #8]
 8000ed6:	f107 0308 	add.w	r3, r7, #8
 8000eda:	4619      	mov	r1, r3
 8000edc:	480c      	ldr	r0, [pc, #48]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000ede:	f004 fd26 	bl	800592e <HAL_TIM_ConfigClockSource>
 8000ee2:	4603      	mov	r3, r0
 8000ee4:	2b00      	cmp	r3, #0
 8000ee6:	d001      	beq.n	8000eec <MX_TIM1_Init+0x74>
 8000ee8:	f7ff fec6 	bl	8000c78 <Error_Handler>
 8000eec:	2300      	movs	r3, #0
 8000eee:	603b      	str	r3, [r7, #0]
 8000ef0:	2300      	movs	r3, #0
 8000ef2:	607b      	str	r3, [r7, #4]
 8000ef4:	463b      	mov	r3, r7
 8000ef6:	4619      	mov	r1, r3
 8000ef8:	4805      	ldr	r0, [pc, #20]	@ (8000f10 <MX_TIM1_Init+0x98>)
 8000efa:	f004 ff47 	bl	8005d8c <HAL_TIMEx_MasterConfigSynchronization>
 8000efe:	4603      	mov	r3, r0
 8000f00:	2b00      	cmp	r3, #0
 8000f02:	d001      	beq.n	8000f08 <MX_TIM1_Init+0x90>
 8000f04:	f7ff feb8 	bl	8000c78 <Error_Handler>
 8000f08:	bf00      	nop
 8000f0a:	3718      	adds	r7, #24
 8000f0c:	46bd      	mov	sp, r7
 8000f0e:	bd80      	pop	{r7, pc}
 8000f10:	20000640 	.word	0x20000640
 8000f14:	40010000 	.word	0x40010000

08000f18 <MX_TIM2_Init>:
 8000f18:	b580      	push	{r7, lr}
 8000f1a:	b086      	sub	sp, #24
 8000f1c:	af00      	add	r7, sp, #0
 8000f1e:	f107 0308 	add.w	r3, r7, #8
 8000f22:	2200      	movs	r2, #0
 8000f24:	601a      	str	r2, [r3, #0]
 8000f26:	605a      	str	r2, [r3, #4]
 8000f28:	609a      	str	r2, [r3, #8]
 8000f2a:	60da      	str	r2, [r3, #12]
 8000f2c:	463b      	mov	r3, r7
 8000f2e:	2200      	movs	r2, #0
 8000f30:	601a      	str	r2, [r3, #0]
 8000f32:	605a      	str	r2, [r3, #4]
 8000f34:	4b1d      	ldr	r3, [pc, #116]	@ (8000fac <MX_TIM2_Init+0x94>)
 8000f36:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000f3a:	601a      	str	r2, [r3, #0]
 8000f3c:	4b1b      	ldr	r3, [pc, #108]	@ (8000fac <MX_TIM2_Init+0x94>)
 8000f3e:	2253      	movs	r2, #83	@ 0x53
 8000f40:	605a      	str	r2, [r3, #4]
 8000f42:	4b1a      	ldr	r3, [pc, #104]	@ (8000fac <MX_TIM2_Init+0x94>)
 8000f44:	2200      	movs	r2, #0
 8000f46:	609a      	str	r2, [r3, #8]
 8000f48:	4b18      	ldr	r3, [pc, #96]	@ (8000fac <MX_TIM2_Init+0x94>)
 8000f4a:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 8000f4e:	60da      	str	r2, [r3, #12]
 8000f50:	4b16      	ldr	r3, [pc, #88]	@ (8000fac <MX_TIM2_Init+0x94>)
 8000f52:	2200      	movs	r2, #0
 8000f54:	611a      	str	r2, [r3, #16]
 8000f56:	4b15      	ldr	r3, [pc, #84]	@ (8000fac <MX_TIM2_Init+0x94>)
 8000f58:	2200      	movs	r2, #0
 8000f5a:	619a      	str	r2, [r3, #24]
 8000f5c:	4813      	ldr	r0, [pc, #76]	@ (8000fac <MX_TIM2_Init+0x94>)
 8000f5e:	f004 fa77 	bl	8005450 <HAL_TIM_Base_Init>
 8000f62:	4603      	mov	r3, r0
 8000f64:	2b00      	cmp	r3, #0
 8000f66:	d001      	beq.n	8000f6c <MX_TIM2_Init+0x54>
 8000f68:	f7ff fe86 	bl	8000c78 <Error_Handler>
 8000f6c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000f70:	60bb      	str	r3, [r7, #8]
 8000f72:	f107 0308 	add.w	r3, r7, #8
 8000f76:	4619      	mov	r1, r3
 8000f78:	480c      	ldr	r0, [pc, #48]	@ (8000fac <MX_TIM2_Init+0x94>)
 8000f7a:	f004 fcd8 	bl	800592e <HAL_TIM_ConfigClockSource>
 8000f7e:	4603      	mov	r3, r0
 8000f80:	2b00      	cmp	r3, #0
 8000f82:	d001      	beq.n	8000f88 <MX_TIM2_Init+0x70>
 8000f84:	f7ff fe78 	bl	8000c78 <Error_Handler>
 8000f88:	2300      	movs	r3, #0
 8000f8a:	603b      	str	r3, [r7, #0]
 8000f8c:	2300      	movs	r3, #0
 8000f8e:	607b      	str	r3, [r7, #4]
 8000f90:	463b      	mov	r3, r7
 8000f92:	4619      	mov	r1, r3
 8000f94:	4805      	ldr	r0, [pc, #20]	@ (8000fac <MX_TIM2_Init+0x94>)
 8000f96:	f004 fef9 	bl	8005d8c <HAL_TIMEx_MasterConfigSynchronization>
 8000f9a:	4603      	mov	r3, r0
 8000f9c:	2b00      	cmp	r3, #0
 8000f9e:	d001      	beq.n	8000fa4 <MX_TIM2_Init+0x8c>
 8000fa0:	f7ff fe6a 	bl	8000c78 <Error_Handler>
 8000fa4:	bf00      	nop
 8000fa6:	3718      	adds	r7, #24
 8000fa8:	46bd      	mov	sp, r7
 8000faa:	bd80      	pop	{r7, pc}
 8000fac:	20000688 	.word	0x20000688

08000fb0 <MX_TIM4_Init>:
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	b086      	sub	sp, #24
 8000fb4:	af00      	add	r7, sp, #0
 8000fb6:	f107 0308 	add.w	r3, r7, #8
 8000fba:	2200      	movs	r2, #0
 8000fbc:	601a      	str	r2, [r3, #0]
 8000fbe:	605a      	str	r2, [r3, #4]
 8000fc0:	609a      	str	r2, [r3, #8]
 8000fc2:	60da      	str	r2, [r3, #12]
 8000fc4:	463b      	mov	r3, r7
 8000fc6:	2200      	movs	r2, #0
 8000fc8:	601a      	str	r2, [r3, #0]
 8000fca:	605a      	str	r2, [r3, #4]
 8000fcc:	4b1d      	ldr	r3, [pc, #116]	@ (8001044 <MX_TIM4_Init+0x94>)
 8000fce:	4a1e      	ldr	r2, [pc, #120]	@ (8001048 <MX_TIM4_Init+0x98>)
 8000fd0:	601a      	str	r2, [r3, #0]
 8000fd2:	4b1c      	ldr	r3, [pc, #112]	@ (8001044 <MX_TIM4_Init+0x94>)
 8000fd4:	2253      	movs	r2, #83	@ 0x53
 8000fd6:	605a      	str	r2, [r3, #4]
 8000fd8:	4b1a      	ldr	r3, [pc, #104]	@ (8001044 <MX_TIM4_Init+0x94>)
 8000fda:	2200      	movs	r2, #0
 8000fdc:	609a      	str	r2, [r3, #8]
 8000fde:	4b19      	ldr	r3, [pc, #100]	@ (8001044 <MX_TIM4_Init+0x94>)
 8000fe0:	f44f 72e1 	mov.w	r2, #450	@ 0x1c2
 8000fe4:	60da      	str	r2, [r3, #12]
 8000fe6:	4b17      	ldr	r3, [pc, #92]	@ (8001044 <MX_TIM4_Init+0x94>)
 8000fe8:	2200      	movs	r2, #0
 8000fea:	611a      	str	r2, [r3, #16]
 8000fec:	4b15      	ldr	r3, [pc, #84]	@ (8001044 <MX_TIM4_Init+0x94>)
 8000fee:	2200      	movs	r2, #0
 8000ff0:	619a      	str	r2, [r3, #24]
 8000ff2:	4814      	ldr	r0, [pc, #80]	@ (8001044 <MX_TIM4_Init+0x94>)
 8000ff4:	f004 fa2c 	bl	8005450 <HAL_TIM_Base_Init>
 8000ff8:	4603      	mov	r3, r0
 8000ffa:	2b00      	cmp	r3, #0
 8000ffc:	d001      	beq.n	8001002 <MX_TIM4_Init+0x52>
 8000ffe:	f7ff fe3b 	bl	8000c78 <Error_Handler>
 8001002:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001006:	60bb      	str	r3, [r7, #8]
 8001008:	f107 0308 	add.w	r3, r7, #8
 800100c:	4619      	mov	r1, r3
 800100e:	480d      	ldr	r0, [pc, #52]	@ (8001044 <MX_TIM4_Init+0x94>)
 8001010:	f004 fc8d 	bl	800592e <HAL_TIM_ConfigClockSource>
 8001014:	4603      	mov	r3, r0
 8001016:	2b00      	cmp	r3, #0
 8001018:	d001      	beq.n	800101e <MX_TIM4_Init+0x6e>
 800101a:	f7ff fe2d 	bl	8000c78 <Error_Handler>
 800101e:	2300      	movs	r3, #0
 8001020:	603b      	str	r3, [r7, #0]
 8001022:	2300      	movs	r3, #0
 8001024:	607b      	str	r3, [r7, #4]
 8001026:	463b      	mov	r3, r7
 8001028:	4619      	mov	r1, r3
 800102a:	4806      	ldr	r0, [pc, #24]	@ (8001044 <MX_TIM4_Init+0x94>)
 800102c:	f004 feae 	bl	8005d8c <HAL_TIMEx_MasterConfigSynchronization>
 8001030:	4603      	mov	r3, r0
 8001032:	2b00      	cmp	r3, #0
 8001034:	d001      	beq.n	800103a <MX_TIM4_Init+0x8a>
 8001036:	f7ff fe1f 	bl	8000c78 <Error_Handler>
 800103a:	bf00      	nop
 800103c:	3718      	adds	r7, #24
 800103e:	46bd      	mov	sp, r7
 8001040:	bd80      	pop	{r7, pc}
 8001042:	bf00      	nop
 8001044:	200006d0 	.word	0x200006d0
 8001048:	40000800 	.word	0x40000800

0800104c <MX_TIM5_Init>:
 800104c:	b580      	push	{r7, lr}
 800104e:	b086      	sub	sp, #24
 8001050:	af00      	add	r7, sp, #0
 8001052:	f107 0308 	add.w	r3, r7, #8
 8001056:	2200      	movs	r2, #0
 8001058:	601a      	str	r2, [r3, #0]
 800105a:	605a      	str	r2, [r3, #4]
 800105c:	609a      	str	r2, [r3, #8]
 800105e:	60da      	str	r2, [r3, #12]
 8001060:	463b      	mov	r3, r7
 8001062:	2200      	movs	r2, #0
 8001064:	601a      	str	r2, [r3, #0]
 8001066:	605a      	str	r2, [r3, #4]
 8001068:	4b1d      	ldr	r3, [pc, #116]	@ (80010e0 <MX_TIM5_Init+0x94>)
 800106a:	4a1e      	ldr	r2, [pc, #120]	@ (80010e4 <MX_TIM5_Init+0x98>)
 800106c:	601a      	str	r2, [r3, #0]
 800106e:	4b1c      	ldr	r3, [pc, #112]	@ (80010e0 <MX_TIM5_Init+0x94>)
 8001070:	f242 02cf 	movw	r2, #8399	@ 0x20cf
 8001074:	605a      	str	r2, [r3, #4]
 8001076:	4b1a      	ldr	r3, [pc, #104]	@ (80010e0 <MX_TIM5_Init+0x94>)
 8001078:	2200      	movs	r2, #0
 800107a:	609a      	str	r2, [r3, #8]
 800107c:	4b18      	ldr	r3, [pc, #96]	@ (80010e0 <MX_TIM5_Init+0x94>)
 800107e:	f04f 32ff 	mov.w	r2, #4294967295
 8001082:	60da      	str	r2, [r3, #12]
 8001084:	4b16      	ldr	r3, [pc, #88]	@ (80010e0 <MX_TIM5_Init+0x94>)
 8001086:	2200      	movs	r2, #0
 8001088:	611a      	str	r2, [r3, #16]
 800108a:	4b15      	ldr	r3, [pc, #84]	@ (80010e0 <MX_TIM5_Init+0x94>)
 800108c:	2200      	movs	r2, #0
 800108e:	619a      	str	r2, [r3, #24]
 8001090:	4813      	ldr	r0, [pc, #76]	@ (80010e0 <MX_TIM5_Init+0x94>)
 8001092:	f004 f9dd 	bl	8005450 <HAL_TIM_Base_Init>
 8001096:	4603      	mov	r3, r0
 8001098:	2b00      	cmp	r3, #0
 800109a:	d001      	beq.n	80010a0 <MX_TIM5_Init+0x54>
 800109c:	f7ff fdec 	bl	8000c78 <Error_Handler>
 80010a0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80010a4:	60bb      	str	r3, [r7, #8]
 80010a6:	f107 0308 	add.w	r3, r7, #8
 80010aa:	4619      	mov	r1, r3
 80010ac:	480c      	ldr	r0, [pc, #48]	@ (80010e0 <MX_TIM5_Init+0x94>)
 80010ae:	f004 fc3e 	bl	800592e <HAL_TIM_ConfigClockSource>
 80010b2:	4603      	mov	r3, r0
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d001      	beq.n	80010bc <MX_TIM5_Init+0x70>
 80010b8:	f7ff fdde 	bl	8000c78 <Error_Handler>
 80010bc:	2300      	movs	r3, #0
 80010be:	603b      	str	r3, [r7, #0]
 80010c0:	2300      	movs	r3, #0
 80010c2:	607b      	str	r3, [r7, #4]
 80010c4:	463b      	mov	r3, r7
 80010c6:	4619      	mov	r1, r3
 80010c8:	4805      	ldr	r0, [pc, #20]	@ (80010e0 <MX_TIM5_Init+0x94>)
 80010ca:	f004 fe5f 	bl	8005d8c <HAL_TIMEx_MasterConfigSynchronization>
 80010ce:	4603      	mov	r3, r0
 80010d0:	2b00      	cmp	r3, #0
 80010d2:	d001      	beq.n	80010d8 <MX_TIM5_Init+0x8c>
 80010d4:	f7ff fdd0 	bl	8000c78 <Error_Handler>
 80010d8:	bf00      	nop
 80010da:	3718      	adds	r7, #24
 80010dc:	46bd      	mov	sp, r7
 80010de:	bd80      	pop	{r7, pc}
 80010e0:	20000718 	.word	0x20000718
 80010e4:	40000c00 	.word	0x40000c00

080010e8 <HAL_TIM_Base_MspInit>:
 80010e8:	b580      	push	{r7, lr}
 80010ea:	b086      	sub	sp, #24
 80010ec:	af00      	add	r7, sp, #0
 80010ee:	6078      	str	r0, [r7, #4]
 80010f0:	687b      	ldr	r3, [r7, #4]
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	4a34      	ldr	r2, [pc, #208]	@ (80011c8 <HAL_TIM_Base_MspInit+0xe0>)
 80010f6:	4293      	cmp	r3, r2
 80010f8:	d116      	bne.n	8001128 <HAL_TIM_Base_MspInit+0x40>
 80010fa:	2300      	movs	r3, #0
 80010fc:	617b      	str	r3, [r7, #20]
 80010fe:	4b33      	ldr	r3, [pc, #204]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 8001100:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001102:	4a32      	ldr	r2, [pc, #200]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 8001104:	f043 0301 	orr.w	r3, r3, #1
 8001108:	6453      	str	r3, [r2, #68]	@ 0x44
 800110a:	4b30      	ldr	r3, [pc, #192]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 800110c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800110e:	f003 0301 	and.w	r3, r3, #1
 8001112:	617b      	str	r3, [r7, #20]
 8001114:	697b      	ldr	r3, [r7, #20]
 8001116:	2200      	movs	r2, #0
 8001118:	2100      	movs	r1, #0
 800111a:	2019      	movs	r0, #25
 800111c:	f001 fa7f 	bl	800261e <HAL_NVIC_SetPriority>
 8001120:	2019      	movs	r0, #25
 8001122:	f001 fa98 	bl	8002656 <HAL_NVIC_EnableIRQ>
 8001126:	e04a      	b.n	80011be <HAL_TIM_Base_MspInit+0xd6>
 8001128:	687b      	ldr	r3, [r7, #4]
 800112a:	681b      	ldr	r3, [r3, #0]
 800112c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001130:	d116      	bne.n	8001160 <HAL_TIM_Base_MspInit+0x78>
 8001132:	2300      	movs	r3, #0
 8001134:	613b      	str	r3, [r7, #16]
 8001136:	4b25      	ldr	r3, [pc, #148]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 8001138:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800113a:	4a24      	ldr	r2, [pc, #144]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 800113c:	f043 0301 	orr.w	r3, r3, #1
 8001140:	6413      	str	r3, [r2, #64]	@ 0x40
 8001142:	4b22      	ldr	r3, [pc, #136]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 8001144:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001146:	f003 0301 	and.w	r3, r3, #1
 800114a:	613b      	str	r3, [r7, #16]
 800114c:	693b      	ldr	r3, [r7, #16]
 800114e:	2200      	movs	r2, #0
 8001150:	2100      	movs	r1, #0
 8001152:	201c      	movs	r0, #28
 8001154:	f001 fa63 	bl	800261e <HAL_NVIC_SetPriority>
 8001158:	201c      	movs	r0, #28
 800115a:	f001 fa7c 	bl	8002656 <HAL_NVIC_EnableIRQ>
 800115e:	e02e      	b.n	80011be <HAL_TIM_Base_MspInit+0xd6>
 8001160:	687b      	ldr	r3, [r7, #4]
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	4a1a      	ldr	r2, [pc, #104]	@ (80011d0 <HAL_TIM_Base_MspInit+0xe8>)
 8001166:	4293      	cmp	r3, r2
 8001168:	d116      	bne.n	8001198 <HAL_TIM_Base_MspInit+0xb0>
 800116a:	2300      	movs	r3, #0
 800116c:	60fb      	str	r3, [r7, #12]
 800116e:	4b17      	ldr	r3, [pc, #92]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 8001170:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001172:	4a16      	ldr	r2, [pc, #88]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 8001174:	f043 0304 	orr.w	r3, r3, #4
 8001178:	6413      	str	r3, [r2, #64]	@ 0x40
 800117a:	4b14      	ldr	r3, [pc, #80]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 800117c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800117e:	f003 0304 	and.w	r3, r3, #4
 8001182:	60fb      	str	r3, [r7, #12]
 8001184:	68fb      	ldr	r3, [r7, #12]
 8001186:	2200      	movs	r2, #0
 8001188:	2100      	movs	r1, #0
 800118a:	201e      	movs	r0, #30
 800118c:	f001 fa47 	bl	800261e <HAL_NVIC_SetPriority>
 8001190:	201e      	movs	r0, #30
 8001192:	f001 fa60 	bl	8002656 <HAL_NVIC_EnableIRQ>
 8001196:	e012      	b.n	80011be <HAL_TIM_Base_MspInit+0xd6>
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	4a0d      	ldr	r2, [pc, #52]	@ (80011d4 <HAL_TIM_Base_MspInit+0xec>)
 800119e:	4293      	cmp	r3, r2
 80011a0:	d10d      	bne.n	80011be <HAL_TIM_Base_MspInit+0xd6>
 80011a2:	2300      	movs	r3, #0
 80011a4:	60bb      	str	r3, [r7, #8]
 80011a6:	4b09      	ldr	r3, [pc, #36]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 80011a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011aa:	4a08      	ldr	r2, [pc, #32]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 80011ac:	f043 0308 	orr.w	r3, r3, #8
 80011b0:	6413      	str	r3, [r2, #64]	@ 0x40
 80011b2:	4b06      	ldr	r3, [pc, #24]	@ (80011cc <HAL_TIM_Base_MspInit+0xe4>)
 80011b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011b6:	f003 0308 	and.w	r3, r3, #8
 80011ba:	60bb      	str	r3, [r7, #8]
 80011bc:	68bb      	ldr	r3, [r7, #8]
 80011be:	bf00      	nop
 80011c0:	3718      	adds	r7, #24
 80011c2:	46bd      	mov	sp, r7
 80011c4:	bd80      	pop	{r7, pc}
 80011c6:	bf00      	nop
 80011c8:	40010000 	.word	0x40010000
 80011cc:	40023800 	.word	0x40023800
 80011d0:	40000800 	.word	0x40000800
 80011d4:	40000c00 	.word	0x40000c00

080011d8 <MX_UART5_Init>:
DMA_HandleTypeDef hdma_uart5_tx;
DMA_HandleTypeDef hdma_uart5_rx;

/* UART5 init function */
void MX_UART5_Init(void)
{
 80011d8:	b580      	push	{r7, lr}
 80011da:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 80011dc:	4b11      	ldr	r3, [pc, #68]	@ (8001224 <MX_UART5_Init+0x4c>)
 80011de:	4a12      	ldr	r2, [pc, #72]	@ (8001228 <MX_UART5_Init+0x50>)
 80011e0:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 115200;
 80011e2:	4b10      	ldr	r3, [pc, #64]	@ (8001224 <MX_UART5_Init+0x4c>)
 80011e4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80011e8:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 80011ea:	4b0e      	ldr	r3, [pc, #56]	@ (8001224 <MX_UART5_Init+0x4c>)
 80011ec:	2200      	movs	r2, #0
 80011ee:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 80011f0:	4b0c      	ldr	r3, [pc, #48]	@ (8001224 <MX_UART5_Init+0x4c>)
 80011f2:	2200      	movs	r2, #0
 80011f4:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 80011f6:	4b0b      	ldr	r3, [pc, #44]	@ (8001224 <MX_UART5_Init+0x4c>)
 80011f8:	2200      	movs	r2, #0
 80011fa:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 80011fc:	4b09      	ldr	r3, [pc, #36]	@ (8001224 <MX_UART5_Init+0x4c>)
 80011fe:	220c      	movs	r2, #12
 8001200:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001202:	4b08      	ldr	r3, [pc, #32]	@ (8001224 <MX_UART5_Init+0x4c>)
 8001204:	2200      	movs	r2, #0
 8001206:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 8001208:	4b06      	ldr	r3, [pc, #24]	@ (8001224 <MX_UART5_Init+0x4c>)
 800120a:	2200      	movs	r2, #0
 800120c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 800120e:	4805      	ldr	r0, [pc, #20]	@ (8001224 <MX_UART5_Init+0x4c>)
 8001210:	f004 fe4c 	bl	8005eac <HAL_UART_Init>
 8001214:	4603      	mov	r3, r0
 8001216:	2b00      	cmp	r3, #0
 8001218:	d001      	beq.n	800121e <MX_UART5_Init+0x46>
  {
    Error_Handler();
 800121a:	f7ff fd2d 	bl	8000c78 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */
 // HAL_UART_Receive_IT(&huart5, &uart5_rx_byte, UART5_RX_BUF_LEN);
  /* USER CODE END UART5_Init 2 */

}
 800121e:	bf00      	nop
 8001220:	bd80      	pop	{r7, pc}
 8001222:	bf00      	nop
 8001224:	20000760 	.word	0x20000760
 8001228:	40005000 	.word	0x40005000

0800122c <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 800122c:	b580      	push	{r7, lr}
 800122e:	b08a      	sub	sp, #40	@ 0x28
 8001230:	af00      	add	r7, sp, #0
 8001232:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001234:	f107 0314 	add.w	r3, r7, #20
 8001238:	2200      	movs	r2, #0
 800123a:	601a      	str	r2, [r3, #0]
 800123c:	605a      	str	r2, [r3, #4]
 800123e:	609a      	str	r2, [r3, #8]
 8001240:	60da      	str	r2, [r3, #12]
 8001242:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==UART5)
 8001244:	687b      	ldr	r3, [r7, #4]
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	4a5c      	ldr	r2, [pc, #368]	@ (80013bc <HAL_UART_MspInit+0x190>)
 800124a:	4293      	cmp	r3, r2
 800124c:	f040 80b1 	bne.w	80013b2 <HAL_UART_MspInit+0x186>
  {
  /* USER CODE BEGIN UART5_MspInit 0 */

  /* USER CODE END UART5_MspInit 0 */
    /* UART5 clock enable */
    __HAL_RCC_UART5_CLK_ENABLE();
 8001250:	2300      	movs	r3, #0
 8001252:	613b      	str	r3, [r7, #16]
 8001254:	4b5a      	ldr	r3, [pc, #360]	@ (80013c0 <HAL_UART_MspInit+0x194>)
 8001256:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001258:	4a59      	ldr	r2, [pc, #356]	@ (80013c0 <HAL_UART_MspInit+0x194>)
 800125a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800125e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001260:	4b57      	ldr	r3, [pc, #348]	@ (80013c0 <HAL_UART_MspInit+0x194>)
 8001262:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001264:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001268:	613b      	str	r3, [r7, #16]
 800126a:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800126c:	2300      	movs	r3, #0
 800126e:	60fb      	str	r3, [r7, #12]
 8001270:	4b53      	ldr	r3, [pc, #332]	@ (80013c0 <HAL_UART_MspInit+0x194>)
 8001272:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001274:	4a52      	ldr	r2, [pc, #328]	@ (80013c0 <HAL_UART_MspInit+0x194>)
 8001276:	f043 0304 	orr.w	r3, r3, #4
 800127a:	6313      	str	r3, [r2, #48]	@ 0x30
 800127c:	4b50      	ldr	r3, [pc, #320]	@ (80013c0 <HAL_UART_MspInit+0x194>)
 800127e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001280:	f003 0304 	and.w	r3, r3, #4
 8001284:	60fb      	str	r3, [r7, #12]
 8001286:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001288:	2300      	movs	r3, #0
 800128a:	60bb      	str	r3, [r7, #8]
 800128c:	4b4c      	ldr	r3, [pc, #304]	@ (80013c0 <HAL_UART_MspInit+0x194>)
 800128e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001290:	4a4b      	ldr	r2, [pc, #300]	@ (80013c0 <HAL_UART_MspInit+0x194>)
 8001292:	f043 0308 	orr.w	r3, r3, #8
 8001296:	6313      	str	r3, [r2, #48]	@ 0x30
 8001298:	4b49      	ldr	r3, [pc, #292]	@ (80013c0 <HAL_UART_MspInit+0x194>)
 800129a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800129c:	f003 0308 	and.w	r3, r3, #8
 80012a0:	60bb      	str	r3, [r7, #8]
 80012a2:	68bb      	ldr	r3, [r7, #8]
    /**UART5 GPIO Configuration
    PC12     ------> UART5_TX
    PD2     ------> UART5_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12;
 80012a4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80012a8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012aa:	2302      	movs	r3, #2
 80012ac:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012ae:	2300      	movs	r3, #0
 80012b0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012b2:	2303      	movs	r3, #3
 80012b4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 80012b6:	2308      	movs	r3, #8
 80012b8:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012ba:	f107 0314 	add.w	r3, r7, #20
 80012be:	4619      	mov	r1, r3
 80012c0:	4840      	ldr	r0, [pc, #256]	@ (80013c4 <HAL_UART_MspInit+0x198>)
 80012c2:	f001 fdcb 	bl	8002e5c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80012c6:	2304      	movs	r3, #4
 80012c8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012ca:	2302      	movs	r3, #2
 80012cc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012ce:	2300      	movs	r3, #0
 80012d0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012d2:	2303      	movs	r3, #3
 80012d4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 80012d6:	2308      	movs	r3, #8
 80012d8:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012da:	f107 0314 	add.w	r3, r7, #20
 80012de:	4619      	mov	r1, r3
 80012e0:	4839      	ldr	r0, [pc, #228]	@ (80013c8 <HAL_UART_MspInit+0x19c>)
 80012e2:	f001 fdbb 	bl	8002e5c <HAL_GPIO_Init>

    /* UART5 DMA Init */
    /* UART5_TX Init */
    hdma_uart5_tx.Instance = DMA1_Stream7;
 80012e6:	4b39      	ldr	r3, [pc, #228]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 80012e8:	4a39      	ldr	r2, [pc, #228]	@ (80013d0 <HAL_UART_MspInit+0x1a4>)
 80012ea:	601a      	str	r2, [r3, #0]
    hdma_uart5_tx.Init.Channel = DMA_CHANNEL_4;
 80012ec:	4b37      	ldr	r3, [pc, #220]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 80012ee:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80012f2:	605a      	str	r2, [r3, #4]
    hdma_uart5_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80012f4:	4b35      	ldr	r3, [pc, #212]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 80012f6:	2240      	movs	r2, #64	@ 0x40
 80012f8:	609a      	str	r2, [r3, #8]
    hdma_uart5_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80012fa:	4b34      	ldr	r3, [pc, #208]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 80012fc:	2200      	movs	r2, #0
 80012fe:	60da      	str	r2, [r3, #12]
    hdma_uart5_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001300:	4b32      	ldr	r3, [pc, #200]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 8001302:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001306:	611a      	str	r2, [r3, #16]
    hdma_uart5_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001308:	4b30      	ldr	r3, [pc, #192]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 800130a:	2200      	movs	r2, #0
 800130c:	615a      	str	r2, [r3, #20]
    hdma_uart5_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800130e:	4b2f      	ldr	r3, [pc, #188]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 8001310:	2200      	movs	r2, #0
 8001312:	619a      	str	r2, [r3, #24]
    hdma_uart5_tx.Init.Mode = DMA_NORMAL;
 8001314:	4b2d      	ldr	r3, [pc, #180]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 8001316:	2200      	movs	r2, #0
 8001318:	61da      	str	r2, [r3, #28]
    hdma_uart5_tx.Init.Priority = DMA_PRIORITY_HIGH;
 800131a:	4b2c      	ldr	r3, [pc, #176]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 800131c:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001320:	621a      	str	r2, [r3, #32]
    hdma_uart5_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001322:	4b2a      	ldr	r3, [pc, #168]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 8001324:	2200      	movs	r2, #0
 8001326:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_uart5_tx) != HAL_OK)
 8001328:	4828      	ldr	r0, [pc, #160]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 800132a:	f001 f9bd 	bl	80026a8 <HAL_DMA_Init>
 800132e:	4603      	mov	r3, r0
 8001330:	2b00      	cmp	r3, #0
 8001332:	d001      	beq.n	8001338 <HAL_UART_MspInit+0x10c>
    {
      Error_Handler();
 8001334:	f7ff fca0 	bl	8000c78 <Error_Handler>
    }

    __HAL_LINKDMA(uartHandle,hdmatx,hdma_uart5_tx);
 8001338:	687b      	ldr	r3, [r7, #4]
 800133a:	4a24      	ldr	r2, [pc, #144]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 800133c:	639a      	str	r2, [r3, #56]	@ 0x38
 800133e:	4a23      	ldr	r2, [pc, #140]	@ (80013cc <HAL_UART_MspInit+0x1a0>)
 8001340:	687b      	ldr	r3, [r7, #4]
 8001342:	6393      	str	r3, [r2, #56]	@ 0x38

    /* UART5_RX Init */
    hdma_uart5_rx.Instance = DMA1_Stream0;
 8001344:	4b23      	ldr	r3, [pc, #140]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 8001346:	4a24      	ldr	r2, [pc, #144]	@ (80013d8 <HAL_UART_MspInit+0x1ac>)
 8001348:	601a      	str	r2, [r3, #0]
    hdma_uart5_rx.Init.Channel = DMA_CHANNEL_4;
 800134a:	4b22      	ldr	r3, [pc, #136]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 800134c:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8001350:	605a      	str	r2, [r3, #4]
    hdma_uart5_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001352:	4b20      	ldr	r3, [pc, #128]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 8001354:	2200      	movs	r2, #0
 8001356:	609a      	str	r2, [r3, #8]
    hdma_uart5_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001358:	4b1e      	ldr	r3, [pc, #120]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 800135a:	2200      	movs	r2, #0
 800135c:	60da      	str	r2, [r3, #12]
    hdma_uart5_rx.Init.MemInc = DMA_MINC_ENABLE;
 800135e:	4b1d      	ldr	r3, [pc, #116]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 8001360:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001364:	611a      	str	r2, [r3, #16]
    hdma_uart5_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001366:	4b1b      	ldr	r3, [pc, #108]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 8001368:	2200      	movs	r2, #0
 800136a:	615a      	str	r2, [r3, #20]
    hdma_uart5_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800136c:	4b19      	ldr	r3, [pc, #100]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 800136e:	2200      	movs	r2, #0
 8001370:	619a      	str	r2, [r3, #24]
    hdma_uart5_rx.Init.Mode = DMA_NORMAL;
 8001372:	4b18      	ldr	r3, [pc, #96]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 8001374:	2200      	movs	r2, #0
 8001376:	61da      	str	r2, [r3, #28]
    hdma_uart5_rx.Init.Priority = DMA_PRIORITY_HIGH;
 8001378:	4b16      	ldr	r3, [pc, #88]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 800137a:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 800137e:	621a      	str	r2, [r3, #32]
    hdma_uart5_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001380:	4b14      	ldr	r3, [pc, #80]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 8001382:	2200      	movs	r2, #0
 8001384:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_uart5_rx) != HAL_OK)
 8001386:	4813      	ldr	r0, [pc, #76]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 8001388:	f001 f98e 	bl	80026a8 <HAL_DMA_Init>
 800138c:	4603      	mov	r3, r0
 800138e:	2b00      	cmp	r3, #0
 8001390:	d001      	beq.n	8001396 <HAL_UART_MspInit+0x16a>
    {
      Error_Handler();
 8001392:	f7ff fc71 	bl	8000c78 <Error_Handler>
    }

    __HAL_LINKDMA(uartHandle,hdmarx,hdma_uart5_rx);
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	4a0e      	ldr	r2, [pc, #56]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 800139a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800139c:	4a0d      	ldr	r2, [pc, #52]	@ (80013d4 <HAL_UART_MspInit+0x1a8>)
 800139e:	687b      	ldr	r3, [r7, #4]
 80013a0:	6393      	str	r3, [r2, #56]	@ 0x38

    /* UART5 interrupt Init */
    HAL_NVIC_SetPriority(UART5_IRQn, 0, 0);
 80013a2:	2200      	movs	r2, #0
 80013a4:	2100      	movs	r1, #0
 80013a6:	2035      	movs	r0, #53	@ 0x35
 80013a8:	f001 f939 	bl	800261e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART5_IRQn);
 80013ac:	2035      	movs	r0, #53	@ 0x35
 80013ae:	f001 f952 	bl	8002656 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN UART5_MspInit 1 */

  /* USER CODE END UART5_MspInit 1 */
  }
}
 80013b2:	bf00      	nop
 80013b4:	3728      	adds	r7, #40	@ 0x28
 80013b6:	46bd      	mov	sp, r7
 80013b8:	bd80      	pop	{r7, pc}
 80013ba:	bf00      	nop
 80013bc:	40005000 	.word	0x40005000
 80013c0:	40023800 	.word	0x40023800
 80013c4:	40020800 	.word	0x40020800
 80013c8:	40020c00 	.word	0x40020c00
 80013cc:	200007a8 	.word	0x200007a8
 80013d0:	400260b8 	.word	0x400260b8
 80013d4:	20000808 	.word	0x20000808
 80013d8:	40026010 	.word	0x40026010

080013dc <HAL_UART_MspDeInit>:

void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
{
 80013dc:	b580      	push	{r7, lr}
 80013de:	b082      	sub	sp, #8
 80013e0:	af00      	add	r7, sp, #0
 80013e2:	6078      	str	r0, [r7, #4]

  if(uartHandle->Instance==UART5)
 80013e4:	687b      	ldr	r3, [r7, #4]
 80013e6:	681b      	ldr	r3, [r3, #0]
 80013e8:	4a11      	ldr	r2, [pc, #68]	@ (8001430 <HAL_UART_MspDeInit+0x54>)
 80013ea:	4293      	cmp	r3, r2
 80013ec:	d11b      	bne.n	8001426 <HAL_UART_MspDeInit+0x4a>
  {
  /* USER CODE BEGIN UART5_MspDeInit 0 */

  /* USER CODE END UART5_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_UART5_CLK_DISABLE();
 80013ee:	4b11      	ldr	r3, [pc, #68]	@ (8001434 <HAL_UART_MspDeInit+0x58>)
 80013f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80013f2:	4a10      	ldr	r2, [pc, #64]	@ (8001434 <HAL_UART_MspDeInit+0x58>)
 80013f4:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80013f8:	6413      	str	r3, [r2, #64]	@ 0x40

    /**UART5 GPIO Configuration
    PC12     ------> UART5_TX
    PD2     ------> UART5_RX
    */
    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_12);
 80013fa:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80013fe:	480e      	ldr	r0, [pc, #56]	@ (8001438 <HAL_UART_MspDeInit+0x5c>)
 8001400:	f001 fec8 	bl	8003194 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_2);
 8001404:	2104      	movs	r1, #4
 8001406:	480d      	ldr	r0, [pc, #52]	@ (800143c <HAL_UART_MspDeInit+0x60>)
 8001408:	f001 fec4 	bl	8003194 <HAL_GPIO_DeInit>

    /* UART5 DMA DeInit */
    HAL_DMA_DeInit(uartHandle->hdmatx);
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001410:	4618      	mov	r0, r3
 8001412:	f001 f9f7 	bl	8002804 <HAL_DMA_DeInit>
    HAL_DMA_DeInit(uartHandle->hdmarx);
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800141a:	4618      	mov	r0, r3
 800141c:	f001 f9f2 	bl	8002804 <HAL_DMA_DeInit>

    /* UART5 interrupt Deinit */
    HAL_NVIC_DisableIRQ(UART5_IRQn);
 8001420:	2035      	movs	r0, #53	@ 0x35
 8001422:	f001 f926 	bl	8002672 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN UART5_MspDeInit 1 */

  /* USER CODE END UART5_MspDeInit 1 */
  }
}
 8001426:	bf00      	nop
 8001428:	3708      	adds	r7, #8
 800142a:	46bd      	mov	sp, r7
 800142c:	bd80      	pop	{r7, pc}
 800142e:	bf00      	nop
 8001430:	40005000 	.word	0x40005000
 8001434:	40023800 	.word	0x40023800
 8001438:	40020800 	.word	0x40020800
 800143c:	40020c00 	.word	0x40020c00

08001440 <MX_USB_OTG_FS_PCD_Init>:
PCD_HandleTypeDef hpcd_USB_OTG_FS;

/* USB_OTG_FS init function */

void MX_USB_OTG_FS_PCD_Init(void)
{
 8001440:	b580      	push	{r7, lr}
 8001442:	af00      	add	r7, sp, #0
  /* USER CODE END USB_OTG_FS_Init 0 */

  /* USER CODE BEGIN USB_OTG_FS_Init 1 */

  /* USER CODE END USB_OTG_FS_Init 1 */
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 8001444:	4b14      	ldr	r3, [pc, #80]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001446:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 800144a:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 800144c:	4b12      	ldr	r3, [pc, #72]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 800144e:	2204      	movs	r2, #4
 8001450:	711a      	strb	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 8001452:	4b11      	ldr	r3, [pc, #68]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001454:	2202      	movs	r2, #2
 8001456:	71da      	strb	r2, [r3, #7]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 8001458:	4b0f      	ldr	r3, [pc, #60]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 800145a:	2200      	movs	r2, #0
 800145c:	719a      	strb	r2, [r3, #6]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800145e:	4b0e      	ldr	r3, [pc, #56]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001460:	2202      	movs	r2, #2
 8001462:	725a      	strb	r2, [r3, #9]
  hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 8001464:	4b0c      	ldr	r3, [pc, #48]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001466:	2200      	movs	r2, #0
 8001468:	729a      	strb	r2, [r3, #10]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 800146a:	4b0b      	ldr	r3, [pc, #44]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 800146c:	2200      	movs	r2, #0
 800146e:	72da      	strb	r2, [r3, #11]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 8001470:	4b09      	ldr	r3, [pc, #36]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001472:	2200      	movs	r2, #0
 8001474:	731a      	strb	r2, [r3, #12]
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 8001476:	4b08      	ldr	r3, [pc, #32]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001478:	2200      	movs	r2, #0
 800147a:	739a      	strb	r2, [r3, #14]
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 800147c:	4b06      	ldr	r3, [pc, #24]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 800147e:	2200      	movs	r2, #0
 8001480:	73da      	strb	r2, [r3, #15]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8001482:	4805      	ldr	r0, [pc, #20]	@ (8001498 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001484:	f002 f8fa 	bl	800367c <HAL_PCD_Init>
 8001488:	4603      	mov	r3, r0
 800148a:	2b00      	cmp	r3, #0
 800148c:	d001      	beq.n	8001492 <MX_USB_OTG_FS_PCD_Init+0x52>
  {
    Error_Handler();
 800148e:	f7ff fbf3 	bl	8000c78 <Error_Handler>
  }
  /* USER CODE BEGIN USB_OTG_FS_Init 2 */

  /* USER CODE END USB_OTG_FS_Init 2 */

}
 8001492:	bf00      	nop
 8001494:	bd80      	pop	{r7, pc}
 8001496:	bf00      	nop
 8001498:	20000868 	.word	0x20000868

0800149c <HAL_PCD_MspInit>:

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 800149c:	b580      	push	{r7, lr}
 800149e:	b08a      	sub	sp, #40	@ 0x28
 80014a0:	af00      	add	r7, sp, #0
 80014a2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a4:	f107 0314 	add.w	r3, r7, #20
 80014a8:	2200      	movs	r2, #0
 80014aa:	601a      	str	r2, [r3, #0]
 80014ac:	605a      	str	r2, [r3, #4]
 80014ae:	609a      	str	r2, [r3, #8]
 80014b0:	60da      	str	r2, [r3, #12]
 80014b2:	611a      	str	r2, [r3, #16]
  if(pcdHandle->Instance==USB_OTG_FS)
 80014b4:	687b      	ldr	r3, [r7, #4]
 80014b6:	681b      	ldr	r3, [r3, #0]
 80014b8:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80014bc:	d13a      	bne.n	8001534 <HAL_PCD_MspInit+0x98>
  {
  /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */

  /* USER CODE END USB_OTG_FS_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80014be:	2300      	movs	r3, #0
 80014c0:	613b      	str	r3, [r7, #16]
 80014c2:	4b1e      	ldr	r3, [pc, #120]	@ (800153c <HAL_PCD_MspInit+0xa0>)
 80014c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014c6:	4a1d      	ldr	r2, [pc, #116]	@ (800153c <HAL_PCD_MspInit+0xa0>)
 80014c8:	f043 0301 	orr.w	r3, r3, #1
 80014cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80014ce:	4b1b      	ldr	r3, [pc, #108]	@ (800153c <HAL_PCD_MspInit+0xa0>)
 80014d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014d2:	f003 0301 	and.w	r3, r3, #1
 80014d6:	613b      	str	r3, [r7, #16]
 80014d8:	693b      	ldr	r3, [r7, #16]
    /**USB_OTG_FS GPIO Configuration
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 80014da:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 80014de:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014e0:	2302      	movs	r3, #2
 80014e2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014e4:	2300      	movs	r3, #0
 80014e6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014e8:	2303      	movs	r3, #3
 80014ea:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 80014ec:	230a      	movs	r3, #10
 80014ee:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014f0:	f107 0314 	add.w	r3, r7, #20
 80014f4:	4619      	mov	r1, r3
 80014f6:	4812      	ldr	r0, [pc, #72]	@ (8001540 <HAL_PCD_MspInit+0xa4>)
 80014f8:	f001 fcb0 	bl	8002e5c <HAL_GPIO_Init>

    /* USB_OTG_FS clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 80014fc:	4b0f      	ldr	r3, [pc, #60]	@ (800153c <HAL_PCD_MspInit+0xa0>)
 80014fe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001500:	4a0e      	ldr	r2, [pc, #56]	@ (800153c <HAL_PCD_MspInit+0xa0>)
 8001502:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001506:	6353      	str	r3, [r2, #52]	@ 0x34
 8001508:	2300      	movs	r3, #0
 800150a:	60fb      	str	r3, [r7, #12]
 800150c:	4b0b      	ldr	r3, [pc, #44]	@ (800153c <HAL_PCD_MspInit+0xa0>)
 800150e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001510:	4a0a      	ldr	r2, [pc, #40]	@ (800153c <HAL_PCD_MspInit+0xa0>)
 8001512:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001516:	6453      	str	r3, [r2, #68]	@ 0x44
 8001518:	4b08      	ldr	r3, [pc, #32]	@ (800153c <HAL_PCD_MspInit+0xa0>)
 800151a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800151c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001520:	60fb      	str	r3, [r7, #12]
 8001522:	68fb      	ldr	r3, [r7, #12]

    /* USB_OTG_FS interrupt Init */
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
 8001524:	2200      	movs	r2, #0
 8001526:	2100      	movs	r1, #0
 8001528:	2043      	movs	r0, #67	@ 0x43
 800152a:	f001 f878 	bl	800261e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
 800152e:	2043      	movs	r0, #67	@ 0x43
 8001530:	f001 f891 	bl	8002656 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }
}
 8001534:	bf00      	nop
 8001536:	3728      	adds	r7, #40	@ 0x28
 8001538:	46bd      	mov	sp, r7
 800153a:	bd80      	pop	{r7, pc}
 800153c:	40023800 	.word	0x40023800
 8001540:	40020000 	.word	0x40020000

08001544 <Reset_Handler>:
 8001544:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800157c <LoopFillZerobss+0xe>
 8001548:	f7ff fc84 	bl	8000e54 <SystemInit>
 800154c:	480c      	ldr	r0, [pc, #48]	@ (8001580 <LoopFillZerobss+0x12>)
 800154e:	490d      	ldr	r1, [pc, #52]	@ (8001584 <LoopFillZerobss+0x16>)
 8001550:	4a0d      	ldr	r2, [pc, #52]	@ (8001588 <LoopFillZerobss+0x1a>)
 8001552:	2300      	movs	r3, #0
 8001554:	e002      	b.n	800155c <LoopCopyDataInit>

08001556 <CopyDataInit>:
 8001556:	58d4      	ldr	r4, [r2, r3]
 8001558:	50c4      	str	r4, [r0, r3]
 800155a:	3304      	adds	r3, #4

0800155c <LoopCopyDataInit>:
 800155c:	18c4      	adds	r4, r0, r3
 800155e:	428c      	cmp	r4, r1
 8001560:	d3f9      	bcc.n	8001556 <CopyDataInit>
 8001562:	4a0a      	ldr	r2, [pc, #40]	@ (800158c <LoopFillZerobss+0x1e>)
 8001564:	4c0a      	ldr	r4, [pc, #40]	@ (8001590 <LoopFillZerobss+0x22>)
 8001566:	2300      	movs	r3, #0
 8001568:	e001      	b.n	800156e <LoopFillZerobss>

0800156a <FillZerobss>:
 800156a:	6013      	str	r3, [r2, #0]
 800156c:	3204      	adds	r2, #4

0800156e <LoopFillZerobss>:
 800156e:	42a2      	cmp	r2, r4
 8001570:	d3fb      	bcc.n	800156a <FillZerobss>
 8001572:	f00a fdcd 	bl	800c110 <__libc_init_array>
 8001576:	f7ff fa7b 	bl	8000a70 <main>
 800157a:	4770      	bx	lr
 800157c:	20020000 	.word	0x20020000
 8001580:	20000000 	.word	0x20000000
 8001584:	20000304 	.word	0x20000304
 8001588:	0800cac8 	.word	0x0800cac8
 800158c:	20000304 	.word	0x20000304
 8001590:	20002a08 	.word	0x20002a08

08001594 <ADC_IRQHandler>:
 8001594:	e7fe      	b.n	8001594 <ADC_IRQHandler>
	...

08001598 <HAL_Init>:
 8001598:	b580      	push	{r7, lr}
 800159a:	af00      	add	r7, sp, #0
 800159c:	4b0e      	ldr	r3, [pc, #56]	@ (80015d8 <HAL_Init+0x40>)
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	4a0d      	ldr	r2, [pc, #52]	@ (80015d8 <HAL_Init+0x40>)
 80015a2:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80015a6:	6013      	str	r3, [r2, #0]
 80015a8:	4b0b      	ldr	r3, [pc, #44]	@ (80015d8 <HAL_Init+0x40>)
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	4a0a      	ldr	r2, [pc, #40]	@ (80015d8 <HAL_Init+0x40>)
 80015ae:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80015b2:	6013      	str	r3, [r2, #0]
 80015b4:	4b08      	ldr	r3, [pc, #32]	@ (80015d8 <HAL_Init+0x40>)
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	4a07      	ldr	r2, [pc, #28]	@ (80015d8 <HAL_Init+0x40>)
 80015ba:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80015be:	6013      	str	r3, [r2, #0]
 80015c0:	2003      	movs	r0, #3
 80015c2:	f001 f821 	bl	8002608 <HAL_NVIC_SetPriorityGrouping>
 80015c6:	200f      	movs	r0, #15
 80015c8:	f000 f808 	bl	80015dc <HAL_InitTick>
 80015cc:	f7ff fb5a 	bl	8000c84 <HAL_MspInit>
 80015d0:	2300      	movs	r3, #0
 80015d2:	4618      	mov	r0, r3
 80015d4:	bd80      	pop	{r7, pc}
 80015d6:	bf00      	nop
 80015d8:	40023c00 	.word	0x40023c00

080015dc <HAL_InitTick>:
 80015dc:	b580      	push	{r7, lr}
 80015de:	b082      	sub	sp, #8
 80015e0:	af00      	add	r7, sp, #0
 80015e2:	6078      	str	r0, [r7, #4]
 80015e4:	4b12      	ldr	r3, [pc, #72]	@ (8001630 <HAL_InitTick+0x54>)
 80015e6:	681a      	ldr	r2, [r3, #0]
 80015e8:	4b12      	ldr	r3, [pc, #72]	@ (8001634 <HAL_InitTick+0x58>)
 80015ea:	781b      	ldrb	r3, [r3, #0]
 80015ec:	4619      	mov	r1, r3
 80015ee:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80015f2:	fbb3 f3f1 	udiv	r3, r3, r1
 80015f6:	fbb2 f3f3 	udiv	r3, r2, r3
 80015fa:	4618      	mov	r0, r3
 80015fc:	f001 f847 	bl	800268e <HAL_SYSTICK_Config>
 8001600:	4603      	mov	r3, r0
 8001602:	2b00      	cmp	r3, #0
 8001604:	d001      	beq.n	800160a <HAL_InitTick+0x2e>
 8001606:	2301      	movs	r3, #1
 8001608:	e00e      	b.n	8001628 <HAL_InitTick+0x4c>
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	2b0f      	cmp	r3, #15
 800160e:	d80a      	bhi.n	8001626 <HAL_InitTick+0x4a>
 8001610:	2200      	movs	r2, #0
 8001612:	6879      	ldr	r1, [r7, #4]
 8001614:	f04f 30ff 	mov.w	r0, #4294967295
 8001618:	f001 f801 	bl	800261e <HAL_NVIC_SetPriority>
 800161c:	4a06      	ldr	r2, [pc, #24]	@ (8001638 <HAL_InitTick+0x5c>)
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	6013      	str	r3, [r2, #0]
 8001622:	2300      	movs	r3, #0
 8001624:	e000      	b.n	8001628 <HAL_InitTick+0x4c>
 8001626:	2301      	movs	r3, #1
 8001628:	4618      	mov	r0, r3
 800162a:	3708      	adds	r7, #8
 800162c:	46bd      	mov	sp, r7
 800162e:	bd80      	pop	{r7, pc}
 8001630:	2000000c 	.word	0x2000000c
 8001634:	20000014 	.word	0x20000014
 8001638:	20000010 	.word	0x20000010

0800163c <HAL_IncTick>:
 800163c:	b480      	push	{r7}
 800163e:	af00      	add	r7, sp, #0
 8001640:	4b06      	ldr	r3, [pc, #24]	@ (800165c <HAL_IncTick+0x20>)
 8001642:	781b      	ldrb	r3, [r3, #0]
 8001644:	461a      	mov	r2, r3
 8001646:	4b06      	ldr	r3, [pc, #24]	@ (8001660 <HAL_IncTick+0x24>)
 8001648:	681b      	ldr	r3, [r3, #0]
 800164a:	4413      	add	r3, r2
 800164c:	4a04      	ldr	r2, [pc, #16]	@ (8001660 <HAL_IncTick+0x24>)
 800164e:	6013      	str	r3, [r2, #0]
 8001650:	bf00      	nop
 8001652:	46bd      	mov	sp, r7
 8001654:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001658:	4770      	bx	lr
 800165a:	bf00      	nop
 800165c:	20000014 	.word	0x20000014
 8001660:	20000d4c 	.word	0x20000d4c

08001664 <HAL_GetTick>:
 8001664:	b480      	push	{r7}
 8001666:	af00      	add	r7, sp, #0
 8001668:	4b03      	ldr	r3, [pc, #12]	@ (8001678 <HAL_GetTick+0x14>)
 800166a:	681b      	ldr	r3, [r3, #0]
 800166c:	4618      	mov	r0, r3
 800166e:	46bd      	mov	sp, r7
 8001670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001674:	4770      	bx	lr
 8001676:	bf00      	nop
 8001678:	20000d4c 	.word	0x20000d4c

0800167c <HAL_Delay>:
 800167c:	b580      	push	{r7, lr}
 800167e:	b084      	sub	sp, #16
 8001680:	af00      	add	r7, sp, #0
 8001682:	6078      	str	r0, [r7, #4]
 8001684:	f7ff ffee 	bl	8001664 <HAL_GetTick>
 8001688:	60b8      	str	r0, [r7, #8]
 800168a:	687b      	ldr	r3, [r7, #4]
 800168c:	60fb      	str	r3, [r7, #12]
 800168e:	68fb      	ldr	r3, [r7, #12]
 8001690:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001694:	d005      	beq.n	80016a2 <HAL_Delay+0x26>
 8001696:	4b0a      	ldr	r3, [pc, #40]	@ (80016c0 <HAL_Delay+0x44>)
 8001698:	781b      	ldrb	r3, [r3, #0]
 800169a:	461a      	mov	r2, r3
 800169c:	68fb      	ldr	r3, [r7, #12]
 800169e:	4413      	add	r3, r2
 80016a0:	60fb      	str	r3, [r7, #12]
 80016a2:	bf00      	nop
 80016a4:	f7ff ffde 	bl	8001664 <HAL_GetTick>
 80016a8:	4602      	mov	r2, r0
 80016aa:	68bb      	ldr	r3, [r7, #8]
 80016ac:	1ad3      	subs	r3, r2, r3
 80016ae:	68fa      	ldr	r2, [r7, #12]
 80016b0:	429a      	cmp	r2, r3
 80016b2:	d8f7      	bhi.n	80016a4 <HAL_Delay+0x28>
 80016b4:	bf00      	nop
 80016b6:	bf00      	nop
 80016b8:	3710      	adds	r7, #16
 80016ba:	46bd      	mov	sp, r7
 80016bc:	bd80      	pop	{r7, pc}
 80016be:	bf00      	nop
 80016c0:	20000014 	.word	0x20000014

080016c4 <HAL_CAN_Init>:
 80016c4:	b580      	push	{r7, lr}
 80016c6:	b084      	sub	sp, #16
 80016c8:	af00      	add	r7, sp, #0
 80016ca:	6078      	str	r0, [r7, #4]
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	2b00      	cmp	r3, #0
 80016d0:	d101      	bne.n	80016d6 <HAL_CAN_Init+0x12>
 80016d2:	2301      	movs	r3, #1
 80016d4:	e0ed      	b.n	80018b2 <HAL_CAN_Init+0x1ee>
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	f893 3020 	ldrb.w	r3, [r3, #32]
 80016dc:	b2db      	uxtb	r3, r3
 80016de:	2b00      	cmp	r3, #0
 80016e0:	d102      	bne.n	80016e8 <HAL_CAN_Init+0x24>
 80016e2:	6878      	ldr	r0, [r7, #4]
 80016e4:	f7fe ff90 	bl	8000608 <HAL_CAN_MspInit>
 80016e8:	687b      	ldr	r3, [r7, #4]
 80016ea:	681b      	ldr	r3, [r3, #0]
 80016ec:	681a      	ldr	r2, [r3, #0]
 80016ee:	687b      	ldr	r3, [r7, #4]
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	f042 0201 	orr.w	r2, r2, #1
 80016f6:	601a      	str	r2, [r3, #0]
 80016f8:	f7ff ffb4 	bl	8001664 <HAL_GetTick>
 80016fc:	60f8      	str	r0, [r7, #12]
 80016fe:	e012      	b.n	8001726 <HAL_CAN_Init+0x62>
 8001700:	f7ff ffb0 	bl	8001664 <HAL_GetTick>
 8001704:	4602      	mov	r2, r0
 8001706:	68fb      	ldr	r3, [r7, #12]
 8001708:	1ad3      	subs	r3, r2, r3
 800170a:	2b0a      	cmp	r3, #10
 800170c:	d90b      	bls.n	8001726 <HAL_CAN_Init+0x62>
 800170e:	687b      	ldr	r3, [r7, #4]
 8001710:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001712:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	625a      	str	r2, [r3, #36]	@ 0x24
 800171a:	687b      	ldr	r3, [r7, #4]
 800171c:	2205      	movs	r2, #5
 800171e:	f883 2020 	strb.w	r2, [r3, #32]
 8001722:	2301      	movs	r3, #1
 8001724:	e0c5      	b.n	80018b2 <HAL_CAN_Init+0x1ee>
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	685b      	ldr	r3, [r3, #4]
 800172c:	f003 0301 	and.w	r3, r3, #1
 8001730:	2b00      	cmp	r3, #0
 8001732:	d0e5      	beq.n	8001700 <HAL_CAN_Init+0x3c>
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	681b      	ldr	r3, [r3, #0]
 8001738:	681a      	ldr	r2, [r3, #0]
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	681b      	ldr	r3, [r3, #0]
 800173e:	f022 0202 	bic.w	r2, r2, #2
 8001742:	601a      	str	r2, [r3, #0]
 8001744:	f7ff ff8e 	bl	8001664 <HAL_GetTick>
 8001748:	60f8      	str	r0, [r7, #12]
 800174a:	e012      	b.n	8001772 <HAL_CAN_Init+0xae>
 800174c:	f7ff ff8a 	bl	8001664 <HAL_GetTick>
 8001750:	4602      	mov	r2, r0
 8001752:	68fb      	ldr	r3, [r7, #12]
 8001754:	1ad3      	subs	r3, r2, r3
 8001756:	2b0a      	cmp	r3, #10
 8001758:	d90b      	bls.n	8001772 <HAL_CAN_Init+0xae>
 800175a:	687b      	ldr	r3, [r7, #4]
 800175c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800175e:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	625a      	str	r2, [r3, #36]	@ 0x24
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	2205      	movs	r2, #5
 800176a:	f883 2020 	strb.w	r2, [r3, #32]
 800176e:	2301      	movs	r3, #1
 8001770:	e09f      	b.n	80018b2 <HAL_CAN_Init+0x1ee>
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	681b      	ldr	r3, [r3, #0]
 8001776:	685b      	ldr	r3, [r3, #4]
 8001778:	f003 0302 	and.w	r3, r3, #2
 800177c:	2b00      	cmp	r3, #0
 800177e:	d1e5      	bne.n	800174c <HAL_CAN_Init+0x88>
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	7e1b      	ldrb	r3, [r3, #24]
 8001784:	2b01      	cmp	r3, #1
 8001786:	d108      	bne.n	800179a <HAL_CAN_Init+0xd6>
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	681b      	ldr	r3, [r3, #0]
 800178c:	681a      	ldr	r2, [r3, #0]
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	681b      	ldr	r3, [r3, #0]
 8001792:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001796:	601a      	str	r2, [r3, #0]
 8001798:	e007      	b.n	80017aa <HAL_CAN_Init+0xe6>
 800179a:	687b      	ldr	r3, [r7, #4]
 800179c:	681b      	ldr	r3, [r3, #0]
 800179e:	681a      	ldr	r2, [r3, #0]
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80017a8:	601a      	str	r2, [r3, #0]
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	7e5b      	ldrb	r3, [r3, #25]
 80017ae:	2b01      	cmp	r3, #1
 80017b0:	d108      	bne.n	80017c4 <HAL_CAN_Init+0x100>
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	681a      	ldr	r2, [r3, #0]
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80017c0:	601a      	str	r2, [r3, #0]
 80017c2:	e007      	b.n	80017d4 <HAL_CAN_Init+0x110>
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	681a      	ldr	r2, [r3, #0]
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80017d2:	601a      	str	r2, [r3, #0]
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	7e9b      	ldrb	r3, [r3, #26]
 80017d8:	2b01      	cmp	r3, #1
 80017da:	d108      	bne.n	80017ee <HAL_CAN_Init+0x12a>
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	681a      	ldr	r2, [r3, #0]
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	f042 0220 	orr.w	r2, r2, #32
 80017ea:	601a      	str	r2, [r3, #0]
 80017ec:	e007      	b.n	80017fe <HAL_CAN_Init+0x13a>
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	681b      	ldr	r3, [r3, #0]
 80017f2:	681a      	ldr	r2, [r3, #0]
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	681b      	ldr	r3, [r3, #0]
 80017f8:	f022 0220 	bic.w	r2, r2, #32
 80017fc:	601a      	str	r2, [r3, #0]
 80017fe:	687b      	ldr	r3, [r7, #4]
 8001800:	7edb      	ldrb	r3, [r3, #27]
 8001802:	2b01      	cmp	r3, #1
 8001804:	d108      	bne.n	8001818 <HAL_CAN_Init+0x154>
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	681a      	ldr	r2, [r3, #0]
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	681b      	ldr	r3, [r3, #0]
 8001810:	f022 0210 	bic.w	r2, r2, #16
 8001814:	601a      	str	r2, [r3, #0]
 8001816:	e007      	b.n	8001828 <HAL_CAN_Init+0x164>
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	681a      	ldr	r2, [r3, #0]
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	f042 0210 	orr.w	r2, r2, #16
 8001826:	601a      	str	r2, [r3, #0]
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	7f1b      	ldrb	r3, [r3, #28]
 800182c:	2b01      	cmp	r3, #1
 800182e:	d108      	bne.n	8001842 <HAL_CAN_Init+0x17e>
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	681a      	ldr	r2, [r3, #0]
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	681b      	ldr	r3, [r3, #0]
 800183a:	f042 0208 	orr.w	r2, r2, #8
 800183e:	601a      	str	r2, [r3, #0]
 8001840:	e007      	b.n	8001852 <HAL_CAN_Init+0x18e>
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	681a      	ldr	r2, [r3, #0]
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	681b      	ldr	r3, [r3, #0]
 800184c:	f022 0208 	bic.w	r2, r2, #8
 8001850:	601a      	str	r2, [r3, #0]
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	7f5b      	ldrb	r3, [r3, #29]
 8001856:	2b01      	cmp	r3, #1
 8001858:	d108      	bne.n	800186c <HAL_CAN_Init+0x1a8>
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	681a      	ldr	r2, [r3, #0]
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	f042 0204 	orr.w	r2, r2, #4
 8001868:	601a      	str	r2, [r3, #0]
 800186a:	e007      	b.n	800187c <HAL_CAN_Init+0x1b8>
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	681a      	ldr	r2, [r3, #0]
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	681b      	ldr	r3, [r3, #0]
 8001876:	f022 0204 	bic.w	r2, r2, #4
 800187a:	601a      	str	r2, [r3, #0]
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	689a      	ldr	r2, [r3, #8]
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	68db      	ldr	r3, [r3, #12]
 8001884:	431a      	orrs	r2, r3
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	691b      	ldr	r3, [r3, #16]
 800188a:	431a      	orrs	r2, r3
 800188c:	687b      	ldr	r3, [r7, #4]
 800188e:	695b      	ldr	r3, [r3, #20]
 8001890:	ea42 0103 	orr.w	r1, r2, r3
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	685b      	ldr	r3, [r3, #4]
 8001898:	1e5a      	subs	r2, r3, #1
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	430a      	orrs	r2, r1
 80018a0:	61da      	str	r2, [r3, #28]
 80018a2:	687b      	ldr	r3, [r7, #4]
 80018a4:	2200      	movs	r2, #0
 80018a6:	625a      	str	r2, [r3, #36]	@ 0x24
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	2201      	movs	r2, #1
 80018ac:	f883 2020 	strb.w	r2, [r3, #32]
 80018b0:	2300      	movs	r3, #0
 80018b2:	4618      	mov	r0, r3
 80018b4:	3710      	adds	r7, #16
 80018b6:	46bd      	mov	sp, r7
 80018b8:	bd80      	pop	{r7, pc}
	...

080018bc <HAL_CAN_ConfigFilter>:
 80018bc:	b480      	push	{r7}
 80018be:	b087      	sub	sp, #28
 80018c0:	af00      	add	r7, sp, #0
 80018c2:	6078      	str	r0, [r7, #4]
 80018c4:	6039      	str	r1, [r7, #0]
 80018c6:	687b      	ldr	r3, [r7, #4]
 80018c8:	f893 3020 	ldrb.w	r3, [r3, #32]
 80018cc:	75fb      	strb	r3, [r7, #23]
 80018ce:	7dfb      	ldrb	r3, [r7, #23]
 80018d0:	2b01      	cmp	r3, #1
 80018d2:	d003      	beq.n	80018dc <HAL_CAN_ConfigFilter+0x20>
 80018d4:	7dfb      	ldrb	r3, [r7, #23]
 80018d6:	2b02      	cmp	r3, #2
 80018d8:	f040 80be 	bne.w	8001a58 <HAL_CAN_ConfigFilter+0x19c>
 80018dc:	4b65      	ldr	r3, [pc, #404]	@ (8001a74 <HAL_CAN_ConfigFilter+0x1b8>)
 80018de:	613b      	str	r3, [r7, #16]
 80018e0:	693b      	ldr	r3, [r7, #16]
 80018e2:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 80018e6:	f043 0201 	orr.w	r2, r3, #1
 80018ea:	693b      	ldr	r3, [r7, #16]
 80018ec:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80018f0:	693b      	ldr	r3, [r7, #16]
 80018f2:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 80018f6:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 80018fa:	693b      	ldr	r3, [r7, #16]
 80018fc:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8001900:	693b      	ldr	r3, [r7, #16]
 8001902:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8001906:	683b      	ldr	r3, [r7, #0]
 8001908:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800190a:	021b      	lsls	r3, r3, #8
 800190c:	431a      	orrs	r2, r3
 800190e:	693b      	ldr	r3, [r7, #16]
 8001910:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8001914:	683b      	ldr	r3, [r7, #0]
 8001916:	695b      	ldr	r3, [r3, #20]
 8001918:	f003 031f 	and.w	r3, r3, #31
 800191c:	2201      	movs	r2, #1
 800191e:	fa02 f303 	lsl.w	r3, r2, r3
 8001922:	60fb      	str	r3, [r7, #12]
 8001924:	693b      	ldr	r3, [r7, #16]
 8001926:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 800192a:	68fb      	ldr	r3, [r7, #12]
 800192c:	43db      	mvns	r3, r3
 800192e:	401a      	ands	r2, r3
 8001930:	693b      	ldr	r3, [r7, #16]
 8001932:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 8001936:	683b      	ldr	r3, [r7, #0]
 8001938:	69db      	ldr	r3, [r3, #28]
 800193a:	2b00      	cmp	r3, #0
 800193c:	d123      	bne.n	8001986 <HAL_CAN_ConfigFilter+0xca>
 800193e:	693b      	ldr	r3, [r7, #16]
 8001940:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 8001944:	68fb      	ldr	r3, [r7, #12]
 8001946:	43db      	mvns	r3, r3
 8001948:	401a      	ands	r2, r3
 800194a:	693b      	ldr	r3, [r7, #16]
 800194c:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8001950:	683b      	ldr	r3, [r7, #0]
 8001952:	68db      	ldr	r3, [r3, #12]
 8001954:	0419      	lsls	r1, r3, #16
 8001956:	683b      	ldr	r3, [r7, #0]
 8001958:	685b      	ldr	r3, [r3, #4]
 800195a:	b29b      	uxth	r3, r3
 800195c:	683a      	ldr	r2, [r7, #0]
 800195e:	6952      	ldr	r2, [r2, #20]
 8001960:	4319      	orrs	r1, r3
 8001962:	693b      	ldr	r3, [r7, #16]
 8001964:	3248      	adds	r2, #72	@ 0x48
 8001966:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800196a:	683b      	ldr	r3, [r7, #0]
 800196c:	689b      	ldr	r3, [r3, #8]
 800196e:	0419      	lsls	r1, r3, #16
 8001970:	683b      	ldr	r3, [r7, #0]
 8001972:	681b      	ldr	r3, [r3, #0]
 8001974:	b29a      	uxth	r2, r3
 8001976:	683b      	ldr	r3, [r7, #0]
 8001978:	695b      	ldr	r3, [r3, #20]
 800197a:	430a      	orrs	r2, r1
 800197c:	6939      	ldr	r1, [r7, #16]
 800197e:	3348      	adds	r3, #72	@ 0x48
 8001980:	00db      	lsls	r3, r3, #3
 8001982:	440b      	add	r3, r1
 8001984:	605a      	str	r2, [r3, #4]
 8001986:	683b      	ldr	r3, [r7, #0]
 8001988:	69db      	ldr	r3, [r3, #28]
 800198a:	2b01      	cmp	r3, #1
 800198c:	d122      	bne.n	80019d4 <HAL_CAN_ConfigFilter+0x118>
 800198e:	693b      	ldr	r3, [r7, #16]
 8001990:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 8001994:	68fb      	ldr	r3, [r7, #12]
 8001996:	431a      	orrs	r2, r3
 8001998:	693b      	ldr	r3, [r7, #16]
 800199a:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800199e:	683b      	ldr	r3, [r7, #0]
 80019a0:	681b      	ldr	r3, [r3, #0]
 80019a2:	0419      	lsls	r1, r3, #16
 80019a4:	683b      	ldr	r3, [r7, #0]
 80019a6:	685b      	ldr	r3, [r3, #4]
 80019a8:	b29b      	uxth	r3, r3
 80019aa:	683a      	ldr	r2, [r7, #0]
 80019ac:	6952      	ldr	r2, [r2, #20]
 80019ae:	4319      	orrs	r1, r3
 80019b0:	693b      	ldr	r3, [r7, #16]
 80019b2:	3248      	adds	r2, #72	@ 0x48
 80019b4:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 80019b8:	683b      	ldr	r3, [r7, #0]
 80019ba:	689b      	ldr	r3, [r3, #8]
 80019bc:	0419      	lsls	r1, r3, #16
 80019be:	683b      	ldr	r3, [r7, #0]
 80019c0:	68db      	ldr	r3, [r3, #12]
 80019c2:	b29a      	uxth	r2, r3
 80019c4:	683b      	ldr	r3, [r7, #0]
 80019c6:	695b      	ldr	r3, [r3, #20]
 80019c8:	430a      	orrs	r2, r1
 80019ca:	6939      	ldr	r1, [r7, #16]
 80019cc:	3348      	adds	r3, #72	@ 0x48
 80019ce:	00db      	lsls	r3, r3, #3
 80019d0:	440b      	add	r3, r1
 80019d2:	605a      	str	r2, [r3, #4]
 80019d4:	683b      	ldr	r3, [r7, #0]
 80019d6:	699b      	ldr	r3, [r3, #24]
 80019d8:	2b00      	cmp	r3, #0
 80019da:	d109      	bne.n	80019f0 <HAL_CAN_ConfigFilter+0x134>
 80019dc:	693b      	ldr	r3, [r7, #16]
 80019de:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80019e2:	68fb      	ldr	r3, [r7, #12]
 80019e4:	43db      	mvns	r3, r3
 80019e6:	401a      	ands	r2, r3
 80019e8:	693b      	ldr	r3, [r7, #16]
 80019ea:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80019ee:	e007      	b.n	8001a00 <HAL_CAN_ConfigFilter+0x144>
 80019f0:	693b      	ldr	r3, [r7, #16]
 80019f2:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80019f6:	68fb      	ldr	r3, [r7, #12]
 80019f8:	431a      	orrs	r2, r3
 80019fa:	693b      	ldr	r3, [r7, #16]
 80019fc:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8001a00:	683b      	ldr	r3, [r7, #0]
 8001a02:	691b      	ldr	r3, [r3, #16]
 8001a04:	2b00      	cmp	r3, #0
 8001a06:	d109      	bne.n	8001a1c <HAL_CAN_ConfigFilter+0x160>
 8001a08:	693b      	ldr	r3, [r7, #16]
 8001a0a:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 8001a0e:	68fb      	ldr	r3, [r7, #12]
 8001a10:	43db      	mvns	r3, r3
 8001a12:	401a      	ands	r2, r3
 8001a14:	693b      	ldr	r3, [r7, #16]
 8001a16:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8001a1a:	e007      	b.n	8001a2c <HAL_CAN_ConfigFilter+0x170>
 8001a1c:	693b      	ldr	r3, [r7, #16]
 8001a1e:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 8001a22:	68fb      	ldr	r3, [r7, #12]
 8001a24:	431a      	orrs	r2, r3
 8001a26:	693b      	ldr	r3, [r7, #16]
 8001a28:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8001a2c:	683b      	ldr	r3, [r7, #0]
 8001a2e:	6a1b      	ldr	r3, [r3, #32]
 8001a30:	2b01      	cmp	r3, #1
 8001a32:	d107      	bne.n	8001a44 <HAL_CAN_ConfigFilter+0x188>
 8001a34:	693b      	ldr	r3, [r7, #16]
 8001a36:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8001a3a:	68fb      	ldr	r3, [r7, #12]
 8001a3c:	431a      	orrs	r2, r3
 8001a3e:	693b      	ldr	r3, [r7, #16]
 8001a40:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 8001a44:	693b      	ldr	r3, [r7, #16]
 8001a46:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8001a4a:	f023 0201 	bic.w	r2, r3, #1
 8001a4e:	693b      	ldr	r3, [r7, #16]
 8001a50:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8001a54:	2300      	movs	r3, #0
 8001a56:	e006      	b.n	8001a66 <HAL_CAN_ConfigFilter+0x1aa>
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a5c:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	625a      	str	r2, [r3, #36]	@ 0x24
 8001a64:	2301      	movs	r3, #1
 8001a66:	4618      	mov	r0, r3
 8001a68:	371c      	adds	r7, #28
 8001a6a:	46bd      	mov	sp, r7
 8001a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a70:	4770      	bx	lr
 8001a72:	bf00      	nop
 8001a74:	40006400 	.word	0x40006400

08001a78 <HAL_CAN_Start>:
 8001a78:	b580      	push	{r7, lr}
 8001a7a:	b084      	sub	sp, #16
 8001a7c:	af00      	add	r7, sp, #0
 8001a7e:	6078      	str	r0, [r7, #4]
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001a86:	b2db      	uxtb	r3, r3
 8001a88:	2b01      	cmp	r3, #1
 8001a8a:	d12e      	bne.n	8001aea <HAL_CAN_Start+0x72>
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	2202      	movs	r2, #2
 8001a90:	f883 2020 	strb.w	r2, [r3, #32]
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	681b      	ldr	r3, [r3, #0]
 8001a98:	681a      	ldr	r2, [r3, #0]
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	f022 0201 	bic.w	r2, r2, #1
 8001aa2:	601a      	str	r2, [r3, #0]
 8001aa4:	f7ff fdde 	bl	8001664 <HAL_GetTick>
 8001aa8:	60f8      	str	r0, [r7, #12]
 8001aaa:	e012      	b.n	8001ad2 <HAL_CAN_Start+0x5a>
 8001aac:	f7ff fdda 	bl	8001664 <HAL_GetTick>
 8001ab0:	4602      	mov	r2, r0
 8001ab2:	68fb      	ldr	r3, [r7, #12]
 8001ab4:	1ad3      	subs	r3, r2, r3
 8001ab6:	2b0a      	cmp	r3, #10
 8001ab8:	d90b      	bls.n	8001ad2 <HAL_CAN_Start+0x5a>
 8001aba:	687b      	ldr	r3, [r7, #4]
 8001abc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001abe:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8001ac2:	687b      	ldr	r3, [r7, #4]
 8001ac4:	625a      	str	r2, [r3, #36]	@ 0x24
 8001ac6:	687b      	ldr	r3, [r7, #4]
 8001ac8:	2205      	movs	r2, #5
 8001aca:	f883 2020 	strb.w	r2, [r3, #32]
 8001ace:	2301      	movs	r3, #1
 8001ad0:	e012      	b.n	8001af8 <HAL_CAN_Start+0x80>
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	685b      	ldr	r3, [r3, #4]
 8001ad8:	f003 0301 	and.w	r3, r3, #1
 8001adc:	2b00      	cmp	r3, #0
 8001ade:	d1e5      	bne.n	8001aac <HAL_CAN_Start+0x34>
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	2200      	movs	r2, #0
 8001ae4:	625a      	str	r2, [r3, #36]	@ 0x24
 8001ae6:	2300      	movs	r3, #0
 8001ae8:	e006      	b.n	8001af8 <HAL_CAN_Start+0x80>
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001aee:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	625a      	str	r2, [r3, #36]	@ 0x24
 8001af6:	2301      	movs	r3, #1
 8001af8:	4618      	mov	r0, r3
 8001afa:	3710      	adds	r7, #16
 8001afc:	46bd      	mov	sp, r7
 8001afe:	bd80      	pop	{r7, pc}

08001b00 <HAL_CAN_Stop>:
 8001b00:	b580      	push	{r7, lr}
 8001b02:	b084      	sub	sp, #16
 8001b04:	af00      	add	r7, sp, #0
 8001b06:	6078      	str	r0, [r7, #4]
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001b0e:	b2db      	uxtb	r3, r3
 8001b10:	2b02      	cmp	r3, #2
 8001b12:	d133      	bne.n	8001b7c <HAL_CAN_Stop+0x7c>
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	681a      	ldr	r2, [r3, #0]
 8001b1a:	687b      	ldr	r3, [r7, #4]
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	f042 0201 	orr.w	r2, r2, #1
 8001b22:	601a      	str	r2, [r3, #0]
 8001b24:	f7ff fd9e 	bl	8001664 <HAL_GetTick>
 8001b28:	60f8      	str	r0, [r7, #12]
 8001b2a:	e012      	b.n	8001b52 <HAL_CAN_Stop+0x52>
 8001b2c:	f7ff fd9a 	bl	8001664 <HAL_GetTick>
 8001b30:	4602      	mov	r2, r0
 8001b32:	68fb      	ldr	r3, [r7, #12]
 8001b34:	1ad3      	subs	r3, r2, r3
 8001b36:	2b0a      	cmp	r3, #10
 8001b38:	d90b      	bls.n	8001b52 <HAL_CAN_Stop+0x52>
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001b3e:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8001b42:	687b      	ldr	r3, [r7, #4]
 8001b44:	625a      	str	r2, [r3, #36]	@ 0x24
 8001b46:	687b      	ldr	r3, [r7, #4]
 8001b48:	2205      	movs	r2, #5
 8001b4a:	f883 2020 	strb.w	r2, [r3, #32]
 8001b4e:	2301      	movs	r3, #1
 8001b50:	e01b      	b.n	8001b8a <HAL_CAN_Stop+0x8a>
 8001b52:	687b      	ldr	r3, [r7, #4]
 8001b54:	681b      	ldr	r3, [r3, #0]
 8001b56:	685b      	ldr	r3, [r3, #4]
 8001b58:	f003 0301 	and.w	r3, r3, #1
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d0e5      	beq.n	8001b2c <HAL_CAN_Stop+0x2c>
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	681b      	ldr	r3, [r3, #0]
 8001b64:	681a      	ldr	r2, [r3, #0]
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	f022 0202 	bic.w	r2, r2, #2
 8001b6e:	601a      	str	r2, [r3, #0]
 8001b70:	687b      	ldr	r3, [r7, #4]
 8001b72:	2201      	movs	r2, #1
 8001b74:	f883 2020 	strb.w	r2, [r3, #32]
 8001b78:	2300      	movs	r3, #0
 8001b7a:	e006      	b.n	8001b8a <HAL_CAN_Stop+0x8a>
 8001b7c:	687b      	ldr	r3, [r7, #4]
 8001b7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001b80:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	625a      	str	r2, [r3, #36]	@ 0x24
 8001b88:	2301      	movs	r3, #1
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	3710      	adds	r7, #16
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bd80      	pop	{r7, pc}

08001b92 <HAL_CAN_AddTxMessage>:
 8001b92:	b480      	push	{r7}
 8001b94:	b089      	sub	sp, #36	@ 0x24
 8001b96:	af00      	add	r7, sp, #0
 8001b98:	60f8      	str	r0, [r7, #12]
 8001b9a:	60b9      	str	r1, [r7, #8]
 8001b9c:	607a      	str	r2, [r7, #4]
 8001b9e:	603b      	str	r3, [r7, #0]
 8001ba0:	68fb      	ldr	r3, [r7, #12]
 8001ba2:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001ba6:	77fb      	strb	r3, [r7, #31]
 8001ba8:	68fb      	ldr	r3, [r7, #12]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	689b      	ldr	r3, [r3, #8]
 8001bae:	61bb      	str	r3, [r7, #24]
 8001bb0:	7ffb      	ldrb	r3, [r7, #31]
 8001bb2:	2b01      	cmp	r3, #1
 8001bb4:	d003      	beq.n	8001bbe <HAL_CAN_AddTxMessage+0x2c>
 8001bb6:	7ffb      	ldrb	r3, [r7, #31]
 8001bb8:	2b02      	cmp	r3, #2
 8001bba:	f040 80ad 	bne.w	8001d18 <HAL_CAN_AddTxMessage+0x186>
 8001bbe:	69bb      	ldr	r3, [r7, #24]
 8001bc0:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8001bc4:	2b00      	cmp	r3, #0
 8001bc6:	d10a      	bne.n	8001bde <HAL_CAN_AddTxMessage+0x4c>
 8001bc8:	69bb      	ldr	r3, [r7, #24]
 8001bca:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	d105      	bne.n	8001bde <HAL_CAN_AddTxMessage+0x4c>
 8001bd2:	69bb      	ldr	r3, [r7, #24]
 8001bd4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	f000 8095 	beq.w	8001d08 <HAL_CAN_AddTxMessage+0x176>
 8001bde:	69bb      	ldr	r3, [r7, #24]
 8001be0:	0e1b      	lsrs	r3, r3, #24
 8001be2:	f003 0303 	and.w	r3, r3, #3
 8001be6:	617b      	str	r3, [r7, #20]
 8001be8:	2201      	movs	r2, #1
 8001bea:	697b      	ldr	r3, [r7, #20]
 8001bec:	409a      	lsls	r2, r3
 8001bee:	683b      	ldr	r3, [r7, #0]
 8001bf0:	601a      	str	r2, [r3, #0]
 8001bf2:	68bb      	ldr	r3, [r7, #8]
 8001bf4:	689b      	ldr	r3, [r3, #8]
 8001bf6:	2b00      	cmp	r3, #0
 8001bf8:	d10d      	bne.n	8001c16 <HAL_CAN_AddTxMessage+0x84>
 8001bfa:	68bb      	ldr	r3, [r7, #8]
 8001bfc:	681b      	ldr	r3, [r3, #0]
 8001bfe:	055a      	lsls	r2, r3, #21
 8001c00:	68bb      	ldr	r3, [r7, #8]
 8001c02:	68db      	ldr	r3, [r3, #12]
 8001c04:	68f9      	ldr	r1, [r7, #12]
 8001c06:	6809      	ldr	r1, [r1, #0]
 8001c08:	431a      	orrs	r2, r3
 8001c0a:	697b      	ldr	r3, [r7, #20]
 8001c0c:	3318      	adds	r3, #24
 8001c0e:	011b      	lsls	r3, r3, #4
 8001c10:	440b      	add	r3, r1
 8001c12:	601a      	str	r2, [r3, #0]
 8001c14:	e00f      	b.n	8001c36 <HAL_CAN_AddTxMessage+0xa4>
 8001c16:	68bb      	ldr	r3, [r7, #8]
 8001c18:	685b      	ldr	r3, [r3, #4]
 8001c1a:	00da      	lsls	r2, r3, #3
 8001c1c:	68bb      	ldr	r3, [r7, #8]
 8001c1e:	689b      	ldr	r3, [r3, #8]
 8001c20:	431a      	orrs	r2, r3
 8001c22:	68bb      	ldr	r3, [r7, #8]
 8001c24:	68db      	ldr	r3, [r3, #12]
 8001c26:	68f9      	ldr	r1, [r7, #12]
 8001c28:	6809      	ldr	r1, [r1, #0]
 8001c2a:	431a      	orrs	r2, r3
 8001c2c:	697b      	ldr	r3, [r7, #20]
 8001c2e:	3318      	adds	r3, #24
 8001c30:	011b      	lsls	r3, r3, #4
 8001c32:	440b      	add	r3, r1
 8001c34:	601a      	str	r2, [r3, #0]
 8001c36:	68fb      	ldr	r3, [r7, #12]
 8001c38:	6819      	ldr	r1, [r3, #0]
 8001c3a:	68bb      	ldr	r3, [r7, #8]
 8001c3c:	691a      	ldr	r2, [r3, #16]
 8001c3e:	697b      	ldr	r3, [r7, #20]
 8001c40:	3318      	adds	r3, #24
 8001c42:	011b      	lsls	r3, r3, #4
 8001c44:	440b      	add	r3, r1
 8001c46:	3304      	adds	r3, #4
 8001c48:	601a      	str	r2, [r3, #0]
 8001c4a:	68bb      	ldr	r3, [r7, #8]
 8001c4c:	7d1b      	ldrb	r3, [r3, #20]
 8001c4e:	2b01      	cmp	r3, #1
 8001c50:	d111      	bne.n	8001c76 <HAL_CAN_AddTxMessage+0xe4>
 8001c52:	68fb      	ldr	r3, [r7, #12]
 8001c54:	681a      	ldr	r2, [r3, #0]
 8001c56:	697b      	ldr	r3, [r7, #20]
 8001c58:	3318      	adds	r3, #24
 8001c5a:	011b      	lsls	r3, r3, #4
 8001c5c:	4413      	add	r3, r2
 8001c5e:	3304      	adds	r3, #4
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	68fa      	ldr	r2, [r7, #12]
 8001c64:	6811      	ldr	r1, [r2, #0]
 8001c66:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001c6a:	697b      	ldr	r3, [r7, #20]
 8001c6c:	3318      	adds	r3, #24
 8001c6e:	011b      	lsls	r3, r3, #4
 8001c70:	440b      	add	r3, r1
 8001c72:	3304      	adds	r3, #4
 8001c74:	601a      	str	r2, [r3, #0]
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	3307      	adds	r3, #7
 8001c7a:	781b      	ldrb	r3, [r3, #0]
 8001c7c:	061a      	lsls	r2, r3, #24
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	3306      	adds	r3, #6
 8001c82:	781b      	ldrb	r3, [r3, #0]
 8001c84:	041b      	lsls	r3, r3, #16
 8001c86:	431a      	orrs	r2, r3
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	3305      	adds	r3, #5
 8001c8c:	781b      	ldrb	r3, [r3, #0]
 8001c8e:	021b      	lsls	r3, r3, #8
 8001c90:	4313      	orrs	r3, r2
 8001c92:	687a      	ldr	r2, [r7, #4]
 8001c94:	3204      	adds	r2, #4
 8001c96:	7812      	ldrb	r2, [r2, #0]
 8001c98:	4610      	mov	r0, r2
 8001c9a:	68fa      	ldr	r2, [r7, #12]
 8001c9c:	6811      	ldr	r1, [r2, #0]
 8001c9e:	ea43 0200 	orr.w	r2, r3, r0
 8001ca2:	697b      	ldr	r3, [r7, #20]
 8001ca4:	011b      	lsls	r3, r3, #4
 8001ca6:	440b      	add	r3, r1
 8001ca8:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 8001cac:	601a      	str	r2, [r3, #0]
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	3303      	adds	r3, #3
 8001cb2:	781b      	ldrb	r3, [r3, #0]
 8001cb4:	061a      	lsls	r2, r3, #24
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	3302      	adds	r3, #2
 8001cba:	781b      	ldrb	r3, [r3, #0]
 8001cbc:	041b      	lsls	r3, r3, #16
 8001cbe:	431a      	orrs	r2, r3
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	3301      	adds	r3, #1
 8001cc4:	781b      	ldrb	r3, [r3, #0]
 8001cc6:	021b      	lsls	r3, r3, #8
 8001cc8:	4313      	orrs	r3, r2
 8001cca:	687a      	ldr	r2, [r7, #4]
 8001ccc:	7812      	ldrb	r2, [r2, #0]
 8001cce:	4610      	mov	r0, r2
 8001cd0:	68fa      	ldr	r2, [r7, #12]
 8001cd2:	6811      	ldr	r1, [r2, #0]
 8001cd4:	ea43 0200 	orr.w	r2, r3, r0
 8001cd8:	697b      	ldr	r3, [r7, #20]
 8001cda:	011b      	lsls	r3, r3, #4
 8001cdc:	440b      	add	r3, r1
 8001cde:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 8001ce2:	601a      	str	r2, [r3, #0]
 8001ce4:	68fb      	ldr	r3, [r7, #12]
 8001ce6:	681a      	ldr	r2, [r3, #0]
 8001ce8:	697b      	ldr	r3, [r7, #20]
 8001cea:	3318      	adds	r3, #24
 8001cec:	011b      	lsls	r3, r3, #4
 8001cee:	4413      	add	r3, r2
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	68fa      	ldr	r2, [r7, #12]
 8001cf4:	6811      	ldr	r1, [r2, #0]
 8001cf6:	f043 0201 	orr.w	r2, r3, #1
 8001cfa:	697b      	ldr	r3, [r7, #20]
 8001cfc:	3318      	adds	r3, #24
 8001cfe:	011b      	lsls	r3, r3, #4
 8001d00:	440b      	add	r3, r1
 8001d02:	601a      	str	r2, [r3, #0]
 8001d04:	2300      	movs	r3, #0
 8001d06:	e00e      	b.n	8001d26 <HAL_CAN_AddTxMessage+0x194>
 8001d08:	68fb      	ldr	r3, [r7, #12]
 8001d0a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001d0c:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8001d10:	68fb      	ldr	r3, [r7, #12]
 8001d12:	625a      	str	r2, [r3, #36]	@ 0x24
 8001d14:	2301      	movs	r3, #1
 8001d16:	e006      	b.n	8001d26 <HAL_CAN_AddTxMessage+0x194>
 8001d18:	68fb      	ldr	r3, [r7, #12]
 8001d1a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001d1c:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8001d20:	68fb      	ldr	r3, [r7, #12]
 8001d22:	625a      	str	r2, [r3, #36]	@ 0x24
 8001d24:	2301      	movs	r3, #1
 8001d26:	4618      	mov	r0, r3
 8001d28:	3724      	adds	r7, #36	@ 0x24
 8001d2a:	46bd      	mov	sp, r7
 8001d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d30:	4770      	bx	lr

08001d32 <HAL_CAN_GetRxMessage>:
 8001d32:	b480      	push	{r7}
 8001d34:	b087      	sub	sp, #28
 8001d36:	af00      	add	r7, sp, #0
 8001d38:	60f8      	str	r0, [r7, #12]
 8001d3a:	60b9      	str	r1, [r7, #8]
 8001d3c:	607a      	str	r2, [r7, #4]
 8001d3e:	603b      	str	r3, [r7, #0]
 8001d40:	68fb      	ldr	r3, [r7, #12]
 8001d42:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001d46:	75fb      	strb	r3, [r7, #23]
 8001d48:	7dfb      	ldrb	r3, [r7, #23]
 8001d4a:	2b01      	cmp	r3, #1
 8001d4c:	d003      	beq.n	8001d56 <HAL_CAN_GetRxMessage+0x24>
 8001d4e:	7dfb      	ldrb	r3, [r7, #23]
 8001d50:	2b02      	cmp	r3, #2
 8001d52:	f040 8103 	bne.w	8001f5c <HAL_CAN_GetRxMessage+0x22a>
 8001d56:	68bb      	ldr	r3, [r7, #8]
 8001d58:	2b00      	cmp	r3, #0
 8001d5a:	d10e      	bne.n	8001d7a <HAL_CAN_GetRxMessage+0x48>
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	68db      	ldr	r3, [r3, #12]
 8001d62:	f003 0303 	and.w	r3, r3, #3
 8001d66:	2b00      	cmp	r3, #0
 8001d68:	d116      	bne.n	8001d98 <HAL_CAN_GetRxMessage+0x66>
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001d6e:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8001d72:	68fb      	ldr	r3, [r7, #12]
 8001d74:	625a      	str	r2, [r3, #36]	@ 0x24
 8001d76:	2301      	movs	r3, #1
 8001d78:	e0f7      	b.n	8001f6a <HAL_CAN_GetRxMessage+0x238>
 8001d7a:	68fb      	ldr	r3, [r7, #12]
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	691b      	ldr	r3, [r3, #16]
 8001d80:	f003 0303 	and.w	r3, r3, #3
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d107      	bne.n	8001d98 <HAL_CAN_GetRxMessage+0x66>
 8001d88:	68fb      	ldr	r3, [r7, #12]
 8001d8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001d8c:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8001d90:	68fb      	ldr	r3, [r7, #12]
 8001d92:	625a      	str	r2, [r3, #36]	@ 0x24
 8001d94:	2301      	movs	r3, #1
 8001d96:	e0e8      	b.n	8001f6a <HAL_CAN_GetRxMessage+0x238>
 8001d98:	68fb      	ldr	r3, [r7, #12]
 8001d9a:	681a      	ldr	r2, [r3, #0]
 8001d9c:	68bb      	ldr	r3, [r7, #8]
 8001d9e:	331b      	adds	r3, #27
 8001da0:	011b      	lsls	r3, r3, #4
 8001da2:	4413      	add	r3, r2
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	f003 0204 	and.w	r2, r3, #4
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	609a      	str	r2, [r3, #8]
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	689b      	ldr	r3, [r3, #8]
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d10c      	bne.n	8001dd0 <HAL_CAN_GetRxMessage+0x9e>
 8001db6:	68fb      	ldr	r3, [r7, #12]
 8001db8:	681a      	ldr	r2, [r3, #0]
 8001dba:	68bb      	ldr	r3, [r7, #8]
 8001dbc:	331b      	adds	r3, #27
 8001dbe:	011b      	lsls	r3, r3, #4
 8001dc0:	4413      	add	r3, r2
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	0d5b      	lsrs	r3, r3, #21
 8001dc6:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	601a      	str	r2, [r3, #0]
 8001dce:	e00b      	b.n	8001de8 <HAL_CAN_GetRxMessage+0xb6>
 8001dd0:	68fb      	ldr	r3, [r7, #12]
 8001dd2:	681a      	ldr	r2, [r3, #0]
 8001dd4:	68bb      	ldr	r3, [r7, #8]
 8001dd6:	331b      	adds	r3, #27
 8001dd8:	011b      	lsls	r3, r3, #4
 8001dda:	4413      	add	r3, r2
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	08db      	lsrs	r3, r3, #3
 8001de0:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	605a      	str	r2, [r3, #4]
 8001de8:	68fb      	ldr	r3, [r7, #12]
 8001dea:	681a      	ldr	r2, [r3, #0]
 8001dec:	68bb      	ldr	r3, [r7, #8]
 8001dee:	331b      	adds	r3, #27
 8001df0:	011b      	lsls	r3, r3, #4
 8001df2:	4413      	add	r3, r2
 8001df4:	681b      	ldr	r3, [r3, #0]
 8001df6:	f003 0202 	and.w	r2, r3, #2
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	60da      	str	r2, [r3, #12]
 8001dfe:	68fb      	ldr	r3, [r7, #12]
 8001e00:	681a      	ldr	r2, [r3, #0]
 8001e02:	68bb      	ldr	r3, [r7, #8]
 8001e04:	331b      	adds	r3, #27
 8001e06:	011b      	lsls	r3, r3, #4
 8001e08:	4413      	add	r3, r2
 8001e0a:	3304      	adds	r3, #4
 8001e0c:	681b      	ldr	r3, [r3, #0]
 8001e0e:	f003 0308 	and.w	r3, r3, #8
 8001e12:	2b00      	cmp	r3, #0
 8001e14:	d003      	beq.n	8001e1e <HAL_CAN_GetRxMessage+0xec>
 8001e16:	687b      	ldr	r3, [r7, #4]
 8001e18:	2208      	movs	r2, #8
 8001e1a:	611a      	str	r2, [r3, #16]
 8001e1c:	e00b      	b.n	8001e36 <HAL_CAN_GetRxMessage+0x104>
 8001e1e:	68fb      	ldr	r3, [r7, #12]
 8001e20:	681a      	ldr	r2, [r3, #0]
 8001e22:	68bb      	ldr	r3, [r7, #8]
 8001e24:	331b      	adds	r3, #27
 8001e26:	011b      	lsls	r3, r3, #4
 8001e28:	4413      	add	r3, r2
 8001e2a:	3304      	adds	r3, #4
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	f003 020f 	and.w	r2, r3, #15
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	611a      	str	r2, [r3, #16]
 8001e36:	68fb      	ldr	r3, [r7, #12]
 8001e38:	681a      	ldr	r2, [r3, #0]
 8001e3a:	68bb      	ldr	r3, [r7, #8]
 8001e3c:	331b      	adds	r3, #27
 8001e3e:	011b      	lsls	r3, r3, #4
 8001e40:	4413      	add	r3, r2
 8001e42:	3304      	adds	r3, #4
 8001e44:	681b      	ldr	r3, [r3, #0]
 8001e46:	0a1b      	lsrs	r3, r3, #8
 8001e48:	b2da      	uxtb	r2, r3
 8001e4a:	687b      	ldr	r3, [r7, #4]
 8001e4c:	619a      	str	r2, [r3, #24]
 8001e4e:	68fb      	ldr	r3, [r7, #12]
 8001e50:	681a      	ldr	r2, [r3, #0]
 8001e52:	68bb      	ldr	r3, [r7, #8]
 8001e54:	331b      	adds	r3, #27
 8001e56:	011b      	lsls	r3, r3, #4
 8001e58:	4413      	add	r3, r2
 8001e5a:	3304      	adds	r3, #4
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	0c1b      	lsrs	r3, r3, #16
 8001e60:	b29a      	uxth	r2, r3
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	615a      	str	r2, [r3, #20]
 8001e66:	68fb      	ldr	r3, [r7, #12]
 8001e68:	681a      	ldr	r2, [r3, #0]
 8001e6a:	68bb      	ldr	r3, [r7, #8]
 8001e6c:	011b      	lsls	r3, r3, #4
 8001e6e:	4413      	add	r3, r2
 8001e70:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8001e74:	681b      	ldr	r3, [r3, #0]
 8001e76:	b2da      	uxtb	r2, r3
 8001e78:	683b      	ldr	r3, [r7, #0]
 8001e7a:	701a      	strb	r2, [r3, #0]
 8001e7c:	68fb      	ldr	r3, [r7, #12]
 8001e7e:	681a      	ldr	r2, [r3, #0]
 8001e80:	68bb      	ldr	r3, [r7, #8]
 8001e82:	011b      	lsls	r3, r3, #4
 8001e84:	4413      	add	r3, r2
 8001e86:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8001e8a:	681b      	ldr	r3, [r3, #0]
 8001e8c:	0a1a      	lsrs	r2, r3, #8
 8001e8e:	683b      	ldr	r3, [r7, #0]
 8001e90:	3301      	adds	r3, #1
 8001e92:	b2d2      	uxtb	r2, r2
 8001e94:	701a      	strb	r2, [r3, #0]
 8001e96:	68fb      	ldr	r3, [r7, #12]
 8001e98:	681a      	ldr	r2, [r3, #0]
 8001e9a:	68bb      	ldr	r3, [r7, #8]
 8001e9c:	011b      	lsls	r3, r3, #4
 8001e9e:	4413      	add	r3, r2
 8001ea0:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8001ea4:	681b      	ldr	r3, [r3, #0]
 8001ea6:	0c1a      	lsrs	r2, r3, #16
 8001ea8:	683b      	ldr	r3, [r7, #0]
 8001eaa:	3302      	adds	r3, #2
 8001eac:	b2d2      	uxtb	r2, r2
 8001eae:	701a      	strb	r2, [r3, #0]
 8001eb0:	68fb      	ldr	r3, [r7, #12]
 8001eb2:	681a      	ldr	r2, [r3, #0]
 8001eb4:	68bb      	ldr	r3, [r7, #8]
 8001eb6:	011b      	lsls	r3, r3, #4
 8001eb8:	4413      	add	r3, r2
 8001eba:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	0e1a      	lsrs	r2, r3, #24
 8001ec2:	683b      	ldr	r3, [r7, #0]
 8001ec4:	3303      	adds	r3, #3
 8001ec6:	b2d2      	uxtb	r2, r2
 8001ec8:	701a      	strb	r2, [r3, #0]
 8001eca:	68fb      	ldr	r3, [r7, #12]
 8001ecc:	681a      	ldr	r2, [r3, #0]
 8001ece:	68bb      	ldr	r3, [r7, #8]
 8001ed0:	011b      	lsls	r3, r3, #4
 8001ed2:	4413      	add	r3, r2
 8001ed4:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8001ed8:	681a      	ldr	r2, [r3, #0]
 8001eda:	683b      	ldr	r3, [r7, #0]
 8001edc:	3304      	adds	r3, #4
 8001ede:	b2d2      	uxtb	r2, r2
 8001ee0:	701a      	strb	r2, [r3, #0]
 8001ee2:	68fb      	ldr	r3, [r7, #12]
 8001ee4:	681a      	ldr	r2, [r3, #0]
 8001ee6:	68bb      	ldr	r3, [r7, #8]
 8001ee8:	011b      	lsls	r3, r3, #4
 8001eea:	4413      	add	r3, r2
 8001eec:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	0a1a      	lsrs	r2, r3, #8
 8001ef4:	683b      	ldr	r3, [r7, #0]
 8001ef6:	3305      	adds	r3, #5
 8001ef8:	b2d2      	uxtb	r2, r2
 8001efa:	701a      	strb	r2, [r3, #0]
 8001efc:	68fb      	ldr	r3, [r7, #12]
 8001efe:	681a      	ldr	r2, [r3, #0]
 8001f00:	68bb      	ldr	r3, [r7, #8]
 8001f02:	011b      	lsls	r3, r3, #4
 8001f04:	4413      	add	r3, r2
 8001f06:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	0c1a      	lsrs	r2, r3, #16
 8001f0e:	683b      	ldr	r3, [r7, #0]
 8001f10:	3306      	adds	r3, #6
 8001f12:	b2d2      	uxtb	r2, r2
 8001f14:	701a      	strb	r2, [r3, #0]
 8001f16:	68fb      	ldr	r3, [r7, #12]
 8001f18:	681a      	ldr	r2, [r3, #0]
 8001f1a:	68bb      	ldr	r3, [r7, #8]
 8001f1c:	011b      	lsls	r3, r3, #4
 8001f1e:	4413      	add	r3, r2
 8001f20:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	0e1a      	lsrs	r2, r3, #24
 8001f28:	683b      	ldr	r3, [r7, #0]
 8001f2a:	3307      	adds	r3, #7
 8001f2c:	b2d2      	uxtb	r2, r2
 8001f2e:	701a      	strb	r2, [r3, #0]
 8001f30:	68bb      	ldr	r3, [r7, #8]
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	d108      	bne.n	8001f48 <HAL_CAN_GetRxMessage+0x216>
 8001f36:	68fb      	ldr	r3, [r7, #12]
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	68da      	ldr	r2, [r3, #12]
 8001f3c:	68fb      	ldr	r3, [r7, #12]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	f042 0220 	orr.w	r2, r2, #32
 8001f44:	60da      	str	r2, [r3, #12]
 8001f46:	e007      	b.n	8001f58 <HAL_CAN_GetRxMessage+0x226>
 8001f48:	68fb      	ldr	r3, [r7, #12]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	691a      	ldr	r2, [r3, #16]
 8001f4e:	68fb      	ldr	r3, [r7, #12]
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	f042 0220 	orr.w	r2, r2, #32
 8001f56:	611a      	str	r2, [r3, #16]
 8001f58:	2300      	movs	r3, #0
 8001f5a:	e006      	b.n	8001f6a <HAL_CAN_GetRxMessage+0x238>
 8001f5c:	68fb      	ldr	r3, [r7, #12]
 8001f5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f60:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8001f64:	68fb      	ldr	r3, [r7, #12]
 8001f66:	625a      	str	r2, [r3, #36]	@ 0x24
 8001f68:	2301      	movs	r3, #1
 8001f6a:	4618      	mov	r0, r3
 8001f6c:	371c      	adds	r7, #28
 8001f6e:	46bd      	mov	sp, r7
 8001f70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f74:	4770      	bx	lr

08001f76 <HAL_CAN_ActivateNotification>:
 8001f76:	b480      	push	{r7}
 8001f78:	b085      	sub	sp, #20
 8001f7a:	af00      	add	r7, sp, #0
 8001f7c:	6078      	str	r0, [r7, #4]
 8001f7e:	6039      	str	r1, [r7, #0]
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001f86:	73fb      	strb	r3, [r7, #15]
 8001f88:	7bfb      	ldrb	r3, [r7, #15]
 8001f8a:	2b01      	cmp	r3, #1
 8001f8c:	d002      	beq.n	8001f94 <HAL_CAN_ActivateNotification+0x1e>
 8001f8e:	7bfb      	ldrb	r3, [r7, #15]
 8001f90:	2b02      	cmp	r3, #2
 8001f92:	d109      	bne.n	8001fa8 <HAL_CAN_ActivateNotification+0x32>
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	6959      	ldr	r1, [r3, #20]
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	681b      	ldr	r3, [r3, #0]
 8001f9e:	683a      	ldr	r2, [r7, #0]
 8001fa0:	430a      	orrs	r2, r1
 8001fa2:	615a      	str	r2, [r3, #20]
 8001fa4:	2300      	movs	r3, #0
 8001fa6:	e006      	b.n	8001fb6 <HAL_CAN_ActivateNotification+0x40>
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001fac:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	625a      	str	r2, [r3, #36]	@ 0x24
 8001fb4:	2301      	movs	r3, #1
 8001fb6:	4618      	mov	r0, r3
 8001fb8:	3714      	adds	r7, #20
 8001fba:	46bd      	mov	sp, r7
 8001fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fc0:	4770      	bx	lr

08001fc2 <HAL_CAN_IRQHandler>:
 8001fc2:	b580      	push	{r7, lr}
 8001fc4:	b08a      	sub	sp, #40	@ 0x28
 8001fc6:	af00      	add	r7, sp, #0
 8001fc8:	6078      	str	r0, [r7, #4]
 8001fca:	2300      	movs	r3, #0
 8001fcc:	627b      	str	r3, [r7, #36]	@ 0x24
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	695b      	ldr	r3, [r3, #20]
 8001fd4:	623b      	str	r3, [r7, #32]
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	685b      	ldr	r3, [r3, #4]
 8001fdc:	61fb      	str	r3, [r7, #28]
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	689b      	ldr	r3, [r3, #8]
 8001fe4:	61bb      	str	r3, [r7, #24]
 8001fe6:	687b      	ldr	r3, [r7, #4]
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	68db      	ldr	r3, [r3, #12]
 8001fec:	617b      	str	r3, [r7, #20]
 8001fee:	687b      	ldr	r3, [r7, #4]
 8001ff0:	681b      	ldr	r3, [r3, #0]
 8001ff2:	691b      	ldr	r3, [r3, #16]
 8001ff4:	613b      	str	r3, [r7, #16]
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	699b      	ldr	r3, [r3, #24]
 8001ffc:	60fb      	str	r3, [r7, #12]
 8001ffe:	6a3b      	ldr	r3, [r7, #32]
 8002000:	f003 0301 	and.w	r3, r3, #1
 8002004:	2b00      	cmp	r3, #0
 8002006:	d07c      	beq.n	8002102 <HAL_CAN_IRQHandler+0x140>
 8002008:	69bb      	ldr	r3, [r7, #24]
 800200a:	f003 0301 	and.w	r3, r3, #1
 800200e:	2b00      	cmp	r3, #0
 8002010:	d023      	beq.n	800205a <HAL_CAN_IRQHandler+0x98>
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	681b      	ldr	r3, [r3, #0]
 8002016:	2201      	movs	r2, #1
 8002018:	609a      	str	r2, [r3, #8]
 800201a:	69bb      	ldr	r3, [r7, #24]
 800201c:	f003 0302 	and.w	r3, r3, #2
 8002020:	2b00      	cmp	r3, #0
 8002022:	d003      	beq.n	800202c <HAL_CAN_IRQHandler+0x6a>
 8002024:	6878      	ldr	r0, [r7, #4]
 8002026:	f000 f983 	bl	8002330 <HAL_CAN_TxMailbox0CompleteCallback>
 800202a:	e016      	b.n	800205a <HAL_CAN_IRQHandler+0x98>
 800202c:	69bb      	ldr	r3, [r7, #24]
 800202e:	f003 0304 	and.w	r3, r3, #4
 8002032:	2b00      	cmp	r3, #0
 8002034:	d004      	beq.n	8002040 <HAL_CAN_IRQHandler+0x7e>
 8002036:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002038:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800203c:	627b      	str	r3, [r7, #36]	@ 0x24
 800203e:	e00c      	b.n	800205a <HAL_CAN_IRQHandler+0x98>
 8002040:	69bb      	ldr	r3, [r7, #24]
 8002042:	f003 0308 	and.w	r3, r3, #8
 8002046:	2b00      	cmp	r3, #0
 8002048:	d004      	beq.n	8002054 <HAL_CAN_IRQHandler+0x92>
 800204a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800204c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002050:	627b      	str	r3, [r7, #36]	@ 0x24
 8002052:	e002      	b.n	800205a <HAL_CAN_IRQHandler+0x98>
 8002054:	6878      	ldr	r0, [r7, #4]
 8002056:	f000 f989 	bl	800236c <HAL_CAN_TxMailbox0AbortCallback>
 800205a:	69bb      	ldr	r3, [r7, #24]
 800205c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002060:	2b00      	cmp	r3, #0
 8002062:	d024      	beq.n	80020ae <HAL_CAN_IRQHandler+0xec>
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800206c:	609a      	str	r2, [r3, #8]
 800206e:	69bb      	ldr	r3, [r7, #24]
 8002070:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002074:	2b00      	cmp	r3, #0
 8002076:	d003      	beq.n	8002080 <HAL_CAN_IRQHandler+0xbe>
 8002078:	6878      	ldr	r0, [r7, #4]
 800207a:	f000 f963 	bl	8002344 <HAL_CAN_TxMailbox1CompleteCallback>
 800207e:	e016      	b.n	80020ae <HAL_CAN_IRQHandler+0xec>
 8002080:	69bb      	ldr	r3, [r7, #24]
 8002082:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002086:	2b00      	cmp	r3, #0
 8002088:	d004      	beq.n	8002094 <HAL_CAN_IRQHandler+0xd2>
 800208a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800208c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8002090:	627b      	str	r3, [r7, #36]	@ 0x24
 8002092:	e00c      	b.n	80020ae <HAL_CAN_IRQHandler+0xec>
 8002094:	69bb      	ldr	r3, [r7, #24]
 8002096:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800209a:	2b00      	cmp	r3, #0
 800209c:	d004      	beq.n	80020a8 <HAL_CAN_IRQHandler+0xe6>
 800209e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80020a0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80020a4:	627b      	str	r3, [r7, #36]	@ 0x24
 80020a6:	e002      	b.n	80020ae <HAL_CAN_IRQHandler+0xec>
 80020a8:	6878      	ldr	r0, [r7, #4]
 80020aa:	f000 f969 	bl	8002380 <HAL_CAN_TxMailbox1AbortCallback>
 80020ae:	69bb      	ldr	r3, [r7, #24]
 80020b0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80020b4:	2b00      	cmp	r3, #0
 80020b6:	d024      	beq.n	8002102 <HAL_CAN_IRQHandler+0x140>
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	681b      	ldr	r3, [r3, #0]
 80020bc:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80020c0:	609a      	str	r2, [r3, #8]
 80020c2:	69bb      	ldr	r3, [r7, #24]
 80020c4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80020c8:	2b00      	cmp	r3, #0
 80020ca:	d003      	beq.n	80020d4 <HAL_CAN_IRQHandler+0x112>
 80020cc:	6878      	ldr	r0, [r7, #4]
 80020ce:	f000 f943 	bl	8002358 <HAL_CAN_TxMailbox2CompleteCallback>
 80020d2:	e016      	b.n	8002102 <HAL_CAN_IRQHandler+0x140>
 80020d4:	69bb      	ldr	r3, [r7, #24]
 80020d6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80020da:	2b00      	cmp	r3, #0
 80020dc:	d004      	beq.n	80020e8 <HAL_CAN_IRQHandler+0x126>
 80020de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80020e0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80020e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80020e6:	e00c      	b.n	8002102 <HAL_CAN_IRQHandler+0x140>
 80020e8:	69bb      	ldr	r3, [r7, #24]
 80020ea:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	d004      	beq.n	80020fc <HAL_CAN_IRQHandler+0x13a>
 80020f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80020f4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80020f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80020fa:	e002      	b.n	8002102 <HAL_CAN_IRQHandler+0x140>
 80020fc:	6878      	ldr	r0, [r7, #4]
 80020fe:	f000 f949 	bl	8002394 <HAL_CAN_TxMailbox2AbortCallback>
 8002102:	6a3b      	ldr	r3, [r7, #32]
 8002104:	f003 0308 	and.w	r3, r3, #8
 8002108:	2b00      	cmp	r3, #0
 800210a:	d00c      	beq.n	8002126 <HAL_CAN_IRQHandler+0x164>
 800210c:	697b      	ldr	r3, [r7, #20]
 800210e:	f003 0310 	and.w	r3, r3, #16
 8002112:	2b00      	cmp	r3, #0
 8002114:	d007      	beq.n	8002126 <HAL_CAN_IRQHandler+0x164>
 8002116:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002118:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800211c:	627b      	str	r3, [r7, #36]	@ 0x24
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	2210      	movs	r2, #16
 8002124:	60da      	str	r2, [r3, #12]
 8002126:	6a3b      	ldr	r3, [r7, #32]
 8002128:	f003 0304 	and.w	r3, r3, #4
 800212c:	2b00      	cmp	r3, #0
 800212e:	d00b      	beq.n	8002148 <HAL_CAN_IRQHandler+0x186>
 8002130:	697b      	ldr	r3, [r7, #20]
 8002132:	f003 0308 	and.w	r3, r3, #8
 8002136:	2b00      	cmp	r3, #0
 8002138:	d006      	beq.n	8002148 <HAL_CAN_IRQHandler+0x186>
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	681b      	ldr	r3, [r3, #0]
 800213e:	2208      	movs	r2, #8
 8002140:	60da      	str	r2, [r3, #12]
 8002142:	6878      	ldr	r0, [r7, #4]
 8002144:	f000 f930 	bl	80023a8 <HAL_CAN_RxFifo0FullCallback>
 8002148:	6a3b      	ldr	r3, [r7, #32]
 800214a:	f003 0302 	and.w	r3, r3, #2
 800214e:	2b00      	cmp	r3, #0
 8002150:	d009      	beq.n	8002166 <HAL_CAN_IRQHandler+0x1a4>
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	681b      	ldr	r3, [r3, #0]
 8002156:	68db      	ldr	r3, [r3, #12]
 8002158:	f003 0303 	and.w	r3, r3, #3
 800215c:	2b00      	cmp	r3, #0
 800215e:	d002      	beq.n	8002166 <HAL_CAN_IRQHandler+0x1a4>
 8002160:	6878      	ldr	r0, [r7, #4]
 8002162:	f7fe fd0f 	bl	8000b84 <HAL_CAN_RxFifo0MsgPendingCallback>
 8002166:	6a3b      	ldr	r3, [r7, #32]
 8002168:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800216c:	2b00      	cmp	r3, #0
 800216e:	d00c      	beq.n	800218a <HAL_CAN_IRQHandler+0x1c8>
 8002170:	693b      	ldr	r3, [r7, #16]
 8002172:	f003 0310 	and.w	r3, r3, #16
 8002176:	2b00      	cmp	r3, #0
 8002178:	d007      	beq.n	800218a <HAL_CAN_IRQHandler+0x1c8>
 800217a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800217c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002180:	627b      	str	r3, [r7, #36]	@ 0x24
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	2210      	movs	r2, #16
 8002188:	611a      	str	r2, [r3, #16]
 800218a:	6a3b      	ldr	r3, [r7, #32]
 800218c:	f003 0320 	and.w	r3, r3, #32
 8002190:	2b00      	cmp	r3, #0
 8002192:	d00b      	beq.n	80021ac <HAL_CAN_IRQHandler+0x1ea>
 8002194:	693b      	ldr	r3, [r7, #16]
 8002196:	f003 0308 	and.w	r3, r3, #8
 800219a:	2b00      	cmp	r3, #0
 800219c:	d006      	beq.n	80021ac <HAL_CAN_IRQHandler+0x1ea>
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	2208      	movs	r2, #8
 80021a4:	611a      	str	r2, [r3, #16]
 80021a6:	6878      	ldr	r0, [r7, #4]
 80021a8:	f000 f912 	bl	80023d0 <HAL_CAN_RxFifo1FullCallback>
 80021ac:	6a3b      	ldr	r3, [r7, #32]
 80021ae:	f003 0310 	and.w	r3, r3, #16
 80021b2:	2b00      	cmp	r3, #0
 80021b4:	d009      	beq.n	80021ca <HAL_CAN_IRQHandler+0x208>
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	681b      	ldr	r3, [r3, #0]
 80021ba:	691b      	ldr	r3, [r3, #16]
 80021bc:	f003 0303 	and.w	r3, r3, #3
 80021c0:	2b00      	cmp	r3, #0
 80021c2:	d002      	beq.n	80021ca <HAL_CAN_IRQHandler+0x208>
 80021c4:	6878      	ldr	r0, [r7, #4]
 80021c6:	f000 f8f9 	bl	80023bc <HAL_CAN_RxFifo1MsgPendingCallback>
 80021ca:	6a3b      	ldr	r3, [r7, #32]
 80021cc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d00b      	beq.n	80021ec <HAL_CAN_IRQHandler+0x22a>
 80021d4:	69fb      	ldr	r3, [r7, #28]
 80021d6:	f003 0310 	and.w	r3, r3, #16
 80021da:	2b00      	cmp	r3, #0
 80021dc:	d006      	beq.n	80021ec <HAL_CAN_IRQHandler+0x22a>
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	681b      	ldr	r3, [r3, #0]
 80021e2:	2210      	movs	r2, #16
 80021e4:	605a      	str	r2, [r3, #4]
 80021e6:	6878      	ldr	r0, [r7, #4]
 80021e8:	f000 f8fc 	bl	80023e4 <HAL_CAN_SleepCallback>
 80021ec:	6a3b      	ldr	r3, [r7, #32]
 80021ee:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80021f2:	2b00      	cmp	r3, #0
 80021f4:	d00b      	beq.n	800220e <HAL_CAN_IRQHandler+0x24c>
 80021f6:	69fb      	ldr	r3, [r7, #28]
 80021f8:	f003 0308 	and.w	r3, r3, #8
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	d006      	beq.n	800220e <HAL_CAN_IRQHandler+0x24c>
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	2208      	movs	r2, #8
 8002206:	605a      	str	r2, [r3, #4]
 8002208:	6878      	ldr	r0, [r7, #4]
 800220a:	f000 f8f5 	bl	80023f8 <HAL_CAN_WakeUpFromRxMsgCallback>
 800220e:	6a3b      	ldr	r3, [r7, #32]
 8002210:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8002214:	2b00      	cmp	r3, #0
 8002216:	d07b      	beq.n	8002310 <HAL_CAN_IRQHandler+0x34e>
 8002218:	69fb      	ldr	r3, [r7, #28]
 800221a:	f003 0304 	and.w	r3, r3, #4
 800221e:	2b00      	cmp	r3, #0
 8002220:	d072      	beq.n	8002308 <HAL_CAN_IRQHandler+0x346>
 8002222:	6a3b      	ldr	r3, [r7, #32]
 8002224:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002228:	2b00      	cmp	r3, #0
 800222a:	d008      	beq.n	800223e <HAL_CAN_IRQHandler+0x27c>
 800222c:	68fb      	ldr	r3, [r7, #12]
 800222e:	f003 0301 	and.w	r3, r3, #1
 8002232:	2b00      	cmp	r3, #0
 8002234:	d003      	beq.n	800223e <HAL_CAN_IRQHandler+0x27c>
 8002236:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002238:	f043 0301 	orr.w	r3, r3, #1
 800223c:	627b      	str	r3, [r7, #36]	@ 0x24
 800223e:	6a3b      	ldr	r3, [r7, #32]
 8002240:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002244:	2b00      	cmp	r3, #0
 8002246:	d008      	beq.n	800225a <HAL_CAN_IRQHandler+0x298>
 8002248:	68fb      	ldr	r3, [r7, #12]
 800224a:	f003 0302 	and.w	r3, r3, #2
 800224e:	2b00      	cmp	r3, #0
 8002250:	d003      	beq.n	800225a <HAL_CAN_IRQHandler+0x298>
 8002252:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002254:	f043 0302 	orr.w	r3, r3, #2
 8002258:	627b      	str	r3, [r7, #36]	@ 0x24
 800225a:	6a3b      	ldr	r3, [r7, #32]
 800225c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002260:	2b00      	cmp	r3, #0
 8002262:	d008      	beq.n	8002276 <HAL_CAN_IRQHandler+0x2b4>
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	f003 0304 	and.w	r3, r3, #4
 800226a:	2b00      	cmp	r3, #0
 800226c:	d003      	beq.n	8002276 <HAL_CAN_IRQHandler+0x2b4>
 800226e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002270:	f043 0304 	orr.w	r3, r3, #4
 8002274:	627b      	str	r3, [r7, #36]	@ 0x24
 8002276:	6a3b      	ldr	r3, [r7, #32]
 8002278:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800227c:	2b00      	cmp	r3, #0
 800227e:	d043      	beq.n	8002308 <HAL_CAN_IRQHandler+0x346>
 8002280:	68fb      	ldr	r3, [r7, #12]
 8002282:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8002286:	2b00      	cmp	r3, #0
 8002288:	d03e      	beq.n	8002308 <HAL_CAN_IRQHandler+0x346>
 800228a:	68fb      	ldr	r3, [r7, #12]
 800228c:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8002290:	2b60      	cmp	r3, #96	@ 0x60
 8002292:	d02b      	beq.n	80022ec <HAL_CAN_IRQHandler+0x32a>
 8002294:	2b60      	cmp	r3, #96	@ 0x60
 8002296:	d82e      	bhi.n	80022f6 <HAL_CAN_IRQHandler+0x334>
 8002298:	2b50      	cmp	r3, #80	@ 0x50
 800229a:	d022      	beq.n	80022e2 <HAL_CAN_IRQHandler+0x320>
 800229c:	2b50      	cmp	r3, #80	@ 0x50
 800229e:	d82a      	bhi.n	80022f6 <HAL_CAN_IRQHandler+0x334>
 80022a0:	2b40      	cmp	r3, #64	@ 0x40
 80022a2:	d019      	beq.n	80022d8 <HAL_CAN_IRQHandler+0x316>
 80022a4:	2b40      	cmp	r3, #64	@ 0x40
 80022a6:	d826      	bhi.n	80022f6 <HAL_CAN_IRQHandler+0x334>
 80022a8:	2b30      	cmp	r3, #48	@ 0x30
 80022aa:	d010      	beq.n	80022ce <HAL_CAN_IRQHandler+0x30c>
 80022ac:	2b30      	cmp	r3, #48	@ 0x30
 80022ae:	d822      	bhi.n	80022f6 <HAL_CAN_IRQHandler+0x334>
 80022b0:	2b10      	cmp	r3, #16
 80022b2:	d002      	beq.n	80022ba <HAL_CAN_IRQHandler+0x2f8>
 80022b4:	2b20      	cmp	r3, #32
 80022b6:	d005      	beq.n	80022c4 <HAL_CAN_IRQHandler+0x302>
 80022b8:	e01d      	b.n	80022f6 <HAL_CAN_IRQHandler+0x334>
 80022ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80022bc:	f043 0308 	orr.w	r3, r3, #8
 80022c0:	627b      	str	r3, [r7, #36]	@ 0x24
 80022c2:	e019      	b.n	80022f8 <HAL_CAN_IRQHandler+0x336>
 80022c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80022c6:	f043 0310 	orr.w	r3, r3, #16
 80022ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80022cc:	e014      	b.n	80022f8 <HAL_CAN_IRQHandler+0x336>
 80022ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80022d0:	f043 0320 	orr.w	r3, r3, #32
 80022d4:	627b      	str	r3, [r7, #36]	@ 0x24
 80022d6:	e00f      	b.n	80022f8 <HAL_CAN_IRQHandler+0x336>
 80022d8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80022da:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80022de:	627b      	str	r3, [r7, #36]	@ 0x24
 80022e0:	e00a      	b.n	80022f8 <HAL_CAN_IRQHandler+0x336>
 80022e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80022e4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80022e8:	627b      	str	r3, [r7, #36]	@ 0x24
 80022ea:	e005      	b.n	80022f8 <HAL_CAN_IRQHandler+0x336>
 80022ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80022ee:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80022f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80022f4:	e000      	b.n	80022f8 <HAL_CAN_IRQHandler+0x336>
 80022f6:	bf00      	nop
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	699a      	ldr	r2, [r3, #24]
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8002306:	619a      	str	r2, [r3, #24]
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	2204      	movs	r2, #4
 800230e:	605a      	str	r2, [r3, #4]
 8002310:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002312:	2b00      	cmp	r3, #0
 8002314:	d008      	beq.n	8002328 <HAL_CAN_IRQHandler+0x366>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800231a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800231c:	431a      	orrs	r2, r3
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	625a      	str	r2, [r3, #36]	@ 0x24
 8002322:	6878      	ldr	r0, [r7, #4]
 8002324:	f000 f872 	bl	800240c <HAL_CAN_ErrorCallback>
 8002328:	bf00      	nop
 800232a:	3728      	adds	r7, #40	@ 0x28
 800232c:	46bd      	mov	sp, r7
 800232e:	bd80      	pop	{r7, pc}

08002330 <HAL_CAN_TxMailbox0CompleteCallback>:
 8002330:	b480      	push	{r7}
 8002332:	b083      	sub	sp, #12
 8002334:	af00      	add	r7, sp, #0
 8002336:	6078      	str	r0, [r7, #4]
 8002338:	bf00      	nop
 800233a:	370c      	adds	r7, #12
 800233c:	46bd      	mov	sp, r7
 800233e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002342:	4770      	bx	lr

08002344 <HAL_CAN_TxMailbox1CompleteCallback>:
 8002344:	b480      	push	{r7}
 8002346:	b083      	sub	sp, #12
 8002348:	af00      	add	r7, sp, #0
 800234a:	6078      	str	r0, [r7, #4]
 800234c:	bf00      	nop
 800234e:	370c      	adds	r7, #12
 8002350:	46bd      	mov	sp, r7
 8002352:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002356:	4770      	bx	lr

08002358 <HAL_CAN_TxMailbox2CompleteCallback>:
 8002358:	b480      	push	{r7}
 800235a:	b083      	sub	sp, #12
 800235c:	af00      	add	r7, sp, #0
 800235e:	6078      	str	r0, [r7, #4]
 8002360:	bf00      	nop
 8002362:	370c      	adds	r7, #12
 8002364:	46bd      	mov	sp, r7
 8002366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800236a:	4770      	bx	lr

0800236c <HAL_CAN_TxMailbox0AbortCallback>:
 800236c:	b480      	push	{r7}
 800236e:	b083      	sub	sp, #12
 8002370:	af00      	add	r7, sp, #0
 8002372:	6078      	str	r0, [r7, #4]
 8002374:	bf00      	nop
 8002376:	370c      	adds	r7, #12
 8002378:	46bd      	mov	sp, r7
 800237a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800237e:	4770      	bx	lr

08002380 <HAL_CAN_TxMailbox1AbortCallback>:
 8002380:	b480      	push	{r7}
 8002382:	b083      	sub	sp, #12
 8002384:	af00      	add	r7, sp, #0
 8002386:	6078      	str	r0, [r7, #4]
 8002388:	bf00      	nop
 800238a:	370c      	adds	r7, #12
 800238c:	46bd      	mov	sp, r7
 800238e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002392:	4770      	bx	lr

08002394 <HAL_CAN_TxMailbox2AbortCallback>:
 8002394:	b480      	push	{r7}
 8002396:	b083      	sub	sp, #12
 8002398:	af00      	add	r7, sp, #0
 800239a:	6078      	str	r0, [r7, #4]
 800239c:	bf00      	nop
 800239e:	370c      	adds	r7, #12
 80023a0:	46bd      	mov	sp, r7
 80023a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023a6:	4770      	bx	lr

080023a8 <HAL_CAN_RxFifo0FullCallback>:
 80023a8:	b480      	push	{r7}
 80023aa:	b083      	sub	sp, #12
 80023ac:	af00      	add	r7, sp, #0
 80023ae:	6078      	str	r0, [r7, #4]
 80023b0:	bf00      	nop
 80023b2:	370c      	adds	r7, #12
 80023b4:	46bd      	mov	sp, r7
 80023b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ba:	4770      	bx	lr

080023bc <HAL_CAN_RxFifo1MsgPendingCallback>:
 80023bc:	b480      	push	{r7}
 80023be:	b083      	sub	sp, #12
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
 80023c4:	bf00      	nop
 80023c6:	370c      	adds	r7, #12
 80023c8:	46bd      	mov	sp, r7
 80023ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ce:	4770      	bx	lr

080023d0 <HAL_CAN_RxFifo1FullCallback>:
 80023d0:	b480      	push	{r7}
 80023d2:	b083      	sub	sp, #12
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	6078      	str	r0, [r7, #4]
 80023d8:	bf00      	nop
 80023da:	370c      	adds	r7, #12
 80023dc:	46bd      	mov	sp, r7
 80023de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023e2:	4770      	bx	lr

080023e4 <HAL_CAN_SleepCallback>:
 80023e4:	b480      	push	{r7}
 80023e6:	b083      	sub	sp, #12
 80023e8:	af00      	add	r7, sp, #0
 80023ea:	6078      	str	r0, [r7, #4]
 80023ec:	bf00      	nop
 80023ee:	370c      	adds	r7, #12
 80023f0:	46bd      	mov	sp, r7
 80023f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023f6:	4770      	bx	lr

080023f8 <HAL_CAN_WakeUpFromRxMsgCallback>:
 80023f8:	b480      	push	{r7}
 80023fa:	b083      	sub	sp, #12
 80023fc:	af00      	add	r7, sp, #0
 80023fe:	6078      	str	r0, [r7, #4]
 8002400:	bf00      	nop
 8002402:	370c      	adds	r7, #12
 8002404:	46bd      	mov	sp, r7
 8002406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800240a:	4770      	bx	lr

0800240c <HAL_CAN_ErrorCallback>:
 800240c:	b480      	push	{r7}
 800240e:	b083      	sub	sp, #12
 8002410:	af00      	add	r7, sp, #0
 8002412:	6078      	str	r0, [r7, #4]
 8002414:	bf00      	nop
 8002416:	370c      	adds	r7, #12
 8002418:	46bd      	mov	sp, r7
 800241a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800241e:	4770      	bx	lr

08002420 <__NVIC_SetPriorityGrouping>:
 8002420:	b480      	push	{r7}
 8002422:	b085      	sub	sp, #20
 8002424:	af00      	add	r7, sp, #0
 8002426:	6078      	str	r0, [r7, #4]
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	f003 0307 	and.w	r3, r3, #7
 800242e:	60fb      	str	r3, [r7, #12]
 8002430:	4b0c      	ldr	r3, [pc, #48]	@ (8002464 <__NVIC_SetPriorityGrouping+0x44>)
 8002432:	68db      	ldr	r3, [r3, #12]
 8002434:	60bb      	str	r3, [r7, #8]
 8002436:	68ba      	ldr	r2, [r7, #8]
 8002438:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800243c:	4013      	ands	r3, r2
 800243e:	60bb      	str	r3, [r7, #8]
 8002440:	68fb      	ldr	r3, [r7, #12]
 8002442:	021a      	lsls	r2, r3, #8
 8002444:	68bb      	ldr	r3, [r7, #8]
 8002446:	4313      	orrs	r3, r2
 8002448:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800244c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002450:	60bb      	str	r3, [r7, #8]
 8002452:	4a04      	ldr	r2, [pc, #16]	@ (8002464 <__NVIC_SetPriorityGrouping+0x44>)
 8002454:	68bb      	ldr	r3, [r7, #8]
 8002456:	60d3      	str	r3, [r2, #12]
 8002458:	bf00      	nop
 800245a:	3714      	adds	r7, #20
 800245c:	46bd      	mov	sp, r7
 800245e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002462:	4770      	bx	lr
 8002464:	e000ed00 	.word	0xe000ed00

08002468 <__NVIC_GetPriorityGrouping>:
 8002468:	b480      	push	{r7}
 800246a:	af00      	add	r7, sp, #0
 800246c:	4b04      	ldr	r3, [pc, #16]	@ (8002480 <__NVIC_GetPriorityGrouping+0x18>)
 800246e:	68db      	ldr	r3, [r3, #12]
 8002470:	0a1b      	lsrs	r3, r3, #8
 8002472:	f003 0307 	and.w	r3, r3, #7
 8002476:	4618      	mov	r0, r3
 8002478:	46bd      	mov	sp, r7
 800247a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800247e:	4770      	bx	lr
 8002480:	e000ed00 	.word	0xe000ed00

08002484 <__NVIC_EnableIRQ>:
 8002484:	b480      	push	{r7}
 8002486:	b083      	sub	sp, #12
 8002488:	af00      	add	r7, sp, #0
 800248a:	4603      	mov	r3, r0
 800248c:	71fb      	strb	r3, [r7, #7]
 800248e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002492:	2b00      	cmp	r3, #0
 8002494:	db0b      	blt.n	80024ae <__NVIC_EnableIRQ+0x2a>
 8002496:	79fb      	ldrb	r3, [r7, #7]
 8002498:	f003 021f 	and.w	r2, r3, #31
 800249c:	4907      	ldr	r1, [pc, #28]	@ (80024bc <__NVIC_EnableIRQ+0x38>)
 800249e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80024a2:	095b      	lsrs	r3, r3, #5
 80024a4:	2001      	movs	r0, #1
 80024a6:	fa00 f202 	lsl.w	r2, r0, r2
 80024aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80024ae:	bf00      	nop
 80024b0:	370c      	adds	r7, #12
 80024b2:	46bd      	mov	sp, r7
 80024b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b8:	4770      	bx	lr
 80024ba:	bf00      	nop
 80024bc:	e000e100 	.word	0xe000e100

080024c0 <__NVIC_DisableIRQ>:
 80024c0:	b480      	push	{r7}
 80024c2:	b083      	sub	sp, #12
 80024c4:	af00      	add	r7, sp, #0
 80024c6:	4603      	mov	r3, r0
 80024c8:	71fb      	strb	r3, [r7, #7]
 80024ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	db12      	blt.n	80024f8 <__NVIC_DisableIRQ+0x38>
 80024d2:	79fb      	ldrb	r3, [r7, #7]
 80024d4:	f003 021f 	and.w	r2, r3, #31
 80024d8:	490a      	ldr	r1, [pc, #40]	@ (8002504 <__NVIC_DisableIRQ+0x44>)
 80024da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80024de:	095b      	lsrs	r3, r3, #5
 80024e0:	2001      	movs	r0, #1
 80024e2:	fa00 f202 	lsl.w	r2, r0, r2
 80024e6:	3320      	adds	r3, #32
 80024e8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80024ec:	f3bf 8f4f 	dsb	sy
 80024f0:	bf00      	nop
 80024f2:	f3bf 8f6f 	isb	sy
 80024f6:	bf00      	nop
 80024f8:	bf00      	nop
 80024fa:	370c      	adds	r7, #12
 80024fc:	46bd      	mov	sp, r7
 80024fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002502:	4770      	bx	lr
 8002504:	e000e100 	.word	0xe000e100

08002508 <__NVIC_SetPriority>:
 8002508:	b480      	push	{r7}
 800250a:	b083      	sub	sp, #12
 800250c:	af00      	add	r7, sp, #0
 800250e:	4603      	mov	r3, r0
 8002510:	6039      	str	r1, [r7, #0]
 8002512:	71fb      	strb	r3, [r7, #7]
 8002514:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002518:	2b00      	cmp	r3, #0
 800251a:	db0a      	blt.n	8002532 <__NVIC_SetPriority+0x2a>
 800251c:	683b      	ldr	r3, [r7, #0]
 800251e:	b2da      	uxtb	r2, r3
 8002520:	490c      	ldr	r1, [pc, #48]	@ (8002554 <__NVIC_SetPriority+0x4c>)
 8002522:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002526:	0112      	lsls	r2, r2, #4
 8002528:	b2d2      	uxtb	r2, r2
 800252a:	440b      	add	r3, r1
 800252c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002530:	e00a      	b.n	8002548 <__NVIC_SetPriority+0x40>
 8002532:	683b      	ldr	r3, [r7, #0]
 8002534:	b2da      	uxtb	r2, r3
 8002536:	4908      	ldr	r1, [pc, #32]	@ (8002558 <__NVIC_SetPriority+0x50>)
 8002538:	79fb      	ldrb	r3, [r7, #7]
 800253a:	f003 030f 	and.w	r3, r3, #15
 800253e:	3b04      	subs	r3, #4
 8002540:	0112      	lsls	r2, r2, #4
 8002542:	b2d2      	uxtb	r2, r2
 8002544:	440b      	add	r3, r1
 8002546:	761a      	strb	r2, [r3, #24]
 8002548:	bf00      	nop
 800254a:	370c      	adds	r7, #12
 800254c:	46bd      	mov	sp, r7
 800254e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002552:	4770      	bx	lr
 8002554:	e000e100 	.word	0xe000e100
 8002558:	e000ed00 	.word	0xe000ed00

0800255c <NVIC_EncodePriority>:
 800255c:	b480      	push	{r7}
 800255e:	b089      	sub	sp, #36	@ 0x24
 8002560:	af00      	add	r7, sp, #0
 8002562:	60f8      	str	r0, [r7, #12]
 8002564:	60b9      	str	r1, [r7, #8]
 8002566:	607a      	str	r2, [r7, #4]
 8002568:	68fb      	ldr	r3, [r7, #12]
 800256a:	f003 0307 	and.w	r3, r3, #7
 800256e:	61fb      	str	r3, [r7, #28]
 8002570:	69fb      	ldr	r3, [r7, #28]
 8002572:	f1c3 0307 	rsb	r3, r3, #7
 8002576:	2b04      	cmp	r3, #4
 8002578:	bf28      	it	cs
 800257a:	2304      	movcs	r3, #4
 800257c:	61bb      	str	r3, [r7, #24]
 800257e:	69fb      	ldr	r3, [r7, #28]
 8002580:	3304      	adds	r3, #4
 8002582:	2b06      	cmp	r3, #6
 8002584:	d902      	bls.n	800258c <NVIC_EncodePriority+0x30>
 8002586:	69fb      	ldr	r3, [r7, #28]
 8002588:	3b03      	subs	r3, #3
 800258a:	e000      	b.n	800258e <NVIC_EncodePriority+0x32>
 800258c:	2300      	movs	r3, #0
 800258e:	617b      	str	r3, [r7, #20]
 8002590:	f04f 32ff 	mov.w	r2, #4294967295
 8002594:	69bb      	ldr	r3, [r7, #24]
 8002596:	fa02 f303 	lsl.w	r3, r2, r3
 800259a:	43da      	mvns	r2, r3
 800259c:	68bb      	ldr	r3, [r7, #8]
 800259e:	401a      	ands	r2, r3
 80025a0:	697b      	ldr	r3, [r7, #20]
 80025a2:	409a      	lsls	r2, r3
 80025a4:	f04f 31ff 	mov.w	r1, #4294967295
 80025a8:	697b      	ldr	r3, [r7, #20]
 80025aa:	fa01 f303 	lsl.w	r3, r1, r3
 80025ae:	43d9      	mvns	r1, r3
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	400b      	ands	r3, r1
 80025b4:	4313      	orrs	r3, r2
 80025b6:	4618      	mov	r0, r3
 80025b8:	3724      	adds	r7, #36	@ 0x24
 80025ba:	46bd      	mov	sp, r7
 80025bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025c0:	4770      	bx	lr
	...

080025c4 <SysTick_Config>:
 80025c4:	b580      	push	{r7, lr}
 80025c6:	b082      	sub	sp, #8
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	6078      	str	r0, [r7, #4]
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	3b01      	subs	r3, #1
 80025d0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80025d4:	d301      	bcc.n	80025da <SysTick_Config+0x16>
 80025d6:	2301      	movs	r3, #1
 80025d8:	e00f      	b.n	80025fa <SysTick_Config+0x36>
 80025da:	4a0a      	ldr	r2, [pc, #40]	@ (8002604 <SysTick_Config+0x40>)
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	3b01      	subs	r3, #1
 80025e0:	6053      	str	r3, [r2, #4]
 80025e2:	210f      	movs	r1, #15
 80025e4:	f04f 30ff 	mov.w	r0, #4294967295
 80025e8:	f7ff ff8e 	bl	8002508 <__NVIC_SetPriority>
 80025ec:	4b05      	ldr	r3, [pc, #20]	@ (8002604 <SysTick_Config+0x40>)
 80025ee:	2200      	movs	r2, #0
 80025f0:	609a      	str	r2, [r3, #8]
 80025f2:	4b04      	ldr	r3, [pc, #16]	@ (8002604 <SysTick_Config+0x40>)
 80025f4:	2207      	movs	r2, #7
 80025f6:	601a      	str	r2, [r3, #0]
 80025f8:	2300      	movs	r3, #0
 80025fa:	4618      	mov	r0, r3
 80025fc:	3708      	adds	r7, #8
 80025fe:	46bd      	mov	sp, r7
 8002600:	bd80      	pop	{r7, pc}
 8002602:	bf00      	nop
 8002604:	e000e010 	.word	0xe000e010

08002608 <HAL_NVIC_SetPriorityGrouping>:
 8002608:	b580      	push	{r7, lr}
 800260a:	b082      	sub	sp, #8
 800260c:	af00      	add	r7, sp, #0
 800260e:	6078      	str	r0, [r7, #4]
 8002610:	6878      	ldr	r0, [r7, #4]
 8002612:	f7ff ff05 	bl	8002420 <__NVIC_SetPriorityGrouping>
 8002616:	bf00      	nop
 8002618:	3708      	adds	r7, #8
 800261a:	46bd      	mov	sp, r7
 800261c:	bd80      	pop	{r7, pc}

0800261e <HAL_NVIC_SetPriority>:
 800261e:	b580      	push	{r7, lr}
 8002620:	b086      	sub	sp, #24
 8002622:	af00      	add	r7, sp, #0
 8002624:	4603      	mov	r3, r0
 8002626:	60b9      	str	r1, [r7, #8]
 8002628:	607a      	str	r2, [r7, #4]
 800262a:	73fb      	strb	r3, [r7, #15]
 800262c:	2300      	movs	r3, #0
 800262e:	617b      	str	r3, [r7, #20]
 8002630:	f7ff ff1a 	bl	8002468 <__NVIC_GetPriorityGrouping>
 8002634:	6178      	str	r0, [r7, #20]
 8002636:	687a      	ldr	r2, [r7, #4]
 8002638:	68b9      	ldr	r1, [r7, #8]
 800263a:	6978      	ldr	r0, [r7, #20]
 800263c:	f7ff ff8e 	bl	800255c <NVIC_EncodePriority>
 8002640:	4602      	mov	r2, r0
 8002642:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002646:	4611      	mov	r1, r2
 8002648:	4618      	mov	r0, r3
 800264a:	f7ff ff5d 	bl	8002508 <__NVIC_SetPriority>
 800264e:	bf00      	nop
 8002650:	3718      	adds	r7, #24
 8002652:	46bd      	mov	sp, r7
 8002654:	bd80      	pop	{r7, pc}

08002656 <HAL_NVIC_EnableIRQ>:
 8002656:	b580      	push	{r7, lr}
 8002658:	b082      	sub	sp, #8
 800265a:	af00      	add	r7, sp, #0
 800265c:	4603      	mov	r3, r0
 800265e:	71fb      	strb	r3, [r7, #7]
 8002660:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002664:	4618      	mov	r0, r3
 8002666:	f7ff ff0d 	bl	8002484 <__NVIC_EnableIRQ>
 800266a:	bf00      	nop
 800266c:	3708      	adds	r7, #8
 800266e:	46bd      	mov	sp, r7
 8002670:	bd80      	pop	{r7, pc}

08002672 <HAL_NVIC_DisableIRQ>:
 8002672:	b580      	push	{r7, lr}
 8002674:	b082      	sub	sp, #8
 8002676:	af00      	add	r7, sp, #0
 8002678:	4603      	mov	r3, r0
 800267a:	71fb      	strb	r3, [r7, #7]
 800267c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002680:	4618      	mov	r0, r3
 8002682:	f7ff ff1d 	bl	80024c0 <__NVIC_DisableIRQ>
 8002686:	bf00      	nop
 8002688:	3708      	adds	r7, #8
 800268a:	46bd      	mov	sp, r7
 800268c:	bd80      	pop	{r7, pc}

0800268e <HAL_SYSTICK_Config>:
 800268e:	b580      	push	{r7, lr}
 8002690:	b082      	sub	sp, #8
 8002692:	af00      	add	r7, sp, #0
 8002694:	6078      	str	r0, [r7, #4]
 8002696:	6878      	ldr	r0, [r7, #4]
 8002698:	f7ff ff94 	bl	80025c4 <SysTick_Config>
 800269c:	4603      	mov	r3, r0
 800269e:	4618      	mov	r0, r3
 80026a0:	3708      	adds	r7, #8
 80026a2:	46bd      	mov	sp, r7
 80026a4:	bd80      	pop	{r7, pc}
	...

080026a8 <HAL_DMA_Init>:
 80026a8:	b580      	push	{r7, lr}
 80026aa:	b086      	sub	sp, #24
 80026ac:	af00      	add	r7, sp, #0
 80026ae:	6078      	str	r0, [r7, #4]
 80026b0:	2300      	movs	r3, #0
 80026b2:	617b      	str	r3, [r7, #20]
 80026b4:	f7fe ffd6 	bl	8001664 <HAL_GetTick>
 80026b8:	6138      	str	r0, [r7, #16]
 80026ba:	687b      	ldr	r3, [r7, #4]
 80026bc:	2b00      	cmp	r3, #0
 80026be:	d101      	bne.n	80026c4 <HAL_DMA_Init+0x1c>
 80026c0:	2301      	movs	r3, #1
 80026c2:	e099      	b.n	80027f8 <HAL_DMA_Init+0x150>
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	2202      	movs	r2, #2
 80026c8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	2200      	movs	r2, #0
 80026d0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	681a      	ldr	r2, [r3, #0]
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	681b      	ldr	r3, [r3, #0]
 80026de:	f022 0201 	bic.w	r2, r2, #1
 80026e2:	601a      	str	r2, [r3, #0]
 80026e4:	e00f      	b.n	8002706 <HAL_DMA_Init+0x5e>
 80026e6:	f7fe ffbd 	bl	8001664 <HAL_GetTick>
 80026ea:	4602      	mov	r2, r0
 80026ec:	693b      	ldr	r3, [r7, #16]
 80026ee:	1ad3      	subs	r3, r2, r3
 80026f0:	2b05      	cmp	r3, #5
 80026f2:	d908      	bls.n	8002706 <HAL_DMA_Init+0x5e>
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	2220      	movs	r2, #32
 80026f8:	655a      	str	r2, [r3, #84]	@ 0x54
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	2203      	movs	r2, #3
 80026fe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002702:	2303      	movs	r3, #3
 8002704:	e078      	b.n	80027f8 <HAL_DMA_Init+0x150>
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	681b      	ldr	r3, [r3, #0]
 800270c:	f003 0301 	and.w	r3, r3, #1
 8002710:	2b00      	cmp	r3, #0
 8002712:	d1e8      	bne.n	80026e6 <HAL_DMA_Init+0x3e>
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	681b      	ldr	r3, [r3, #0]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	617b      	str	r3, [r7, #20]
 800271c:	697a      	ldr	r2, [r7, #20]
 800271e:	4b38      	ldr	r3, [pc, #224]	@ (8002800 <HAL_DMA_Init+0x158>)
 8002720:	4013      	ands	r3, r2
 8002722:	617b      	str	r3, [r7, #20]
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	685a      	ldr	r2, [r3, #4]
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	689b      	ldr	r3, [r3, #8]
 800272c:	431a      	orrs	r2, r3
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	68db      	ldr	r3, [r3, #12]
 8002732:	431a      	orrs	r2, r3
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	691b      	ldr	r3, [r3, #16]
 8002738:	431a      	orrs	r2, r3
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	695b      	ldr	r3, [r3, #20]
 800273e:	431a      	orrs	r2, r3
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	699b      	ldr	r3, [r3, #24]
 8002744:	431a      	orrs	r2, r3
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	69db      	ldr	r3, [r3, #28]
 800274a:	431a      	orrs	r2, r3
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	6a1b      	ldr	r3, [r3, #32]
 8002750:	4313      	orrs	r3, r2
 8002752:	697a      	ldr	r2, [r7, #20]
 8002754:	4313      	orrs	r3, r2
 8002756:	617b      	str	r3, [r7, #20]
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800275c:	2b04      	cmp	r3, #4
 800275e:	d107      	bne.n	8002770 <HAL_DMA_Init+0xc8>
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002768:	4313      	orrs	r3, r2
 800276a:	697a      	ldr	r2, [r7, #20]
 800276c:	4313      	orrs	r3, r2
 800276e:	617b      	str	r3, [r7, #20]
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	681b      	ldr	r3, [r3, #0]
 8002774:	697a      	ldr	r2, [r7, #20]
 8002776:	601a      	str	r2, [r3, #0]
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	695b      	ldr	r3, [r3, #20]
 800277e:	617b      	str	r3, [r7, #20]
 8002780:	697b      	ldr	r3, [r7, #20]
 8002782:	f023 0307 	bic.w	r3, r3, #7
 8002786:	617b      	str	r3, [r7, #20]
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800278c:	697a      	ldr	r2, [r7, #20]
 800278e:	4313      	orrs	r3, r2
 8002790:	617b      	str	r3, [r7, #20]
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002796:	2b04      	cmp	r3, #4
 8002798:	d117      	bne.n	80027ca <HAL_DMA_Init+0x122>
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800279e:	697a      	ldr	r2, [r7, #20]
 80027a0:	4313      	orrs	r3, r2
 80027a2:	617b      	str	r3, [r7, #20]
 80027a4:	687b      	ldr	r3, [r7, #4]
 80027a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80027a8:	2b00      	cmp	r3, #0
 80027aa:	d00e      	beq.n	80027ca <HAL_DMA_Init+0x122>
 80027ac:	6878      	ldr	r0, [r7, #4]
 80027ae:	f000 fad9 	bl	8002d64 <DMA_CheckFifoParam>
 80027b2:	4603      	mov	r3, r0
 80027b4:	2b00      	cmp	r3, #0
 80027b6:	d008      	beq.n	80027ca <HAL_DMA_Init+0x122>
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	2240      	movs	r2, #64	@ 0x40
 80027bc:	655a      	str	r2, [r3, #84]	@ 0x54
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	2201      	movs	r2, #1
 80027c2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80027c6:	2301      	movs	r3, #1
 80027c8:	e016      	b.n	80027f8 <HAL_DMA_Init+0x150>
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	681b      	ldr	r3, [r3, #0]
 80027ce:	697a      	ldr	r2, [r7, #20]
 80027d0:	615a      	str	r2, [r3, #20]
 80027d2:	6878      	ldr	r0, [r7, #4]
 80027d4:	f000 fa90 	bl	8002cf8 <DMA_CalcBaseAndBitshift>
 80027d8:	4603      	mov	r3, r0
 80027da:	60fb      	str	r3, [r7, #12]
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80027e0:	223f      	movs	r2, #63	@ 0x3f
 80027e2:	409a      	lsls	r2, r3
 80027e4:	68fb      	ldr	r3, [r7, #12]
 80027e6:	609a      	str	r2, [r3, #8]
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	2200      	movs	r2, #0
 80027ec:	655a      	str	r2, [r3, #84]	@ 0x54
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	2201      	movs	r2, #1
 80027f2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80027f6:	2300      	movs	r3, #0
 80027f8:	4618      	mov	r0, r3
 80027fa:	3718      	adds	r7, #24
 80027fc:	46bd      	mov	sp, r7
 80027fe:	bd80      	pop	{r7, pc}
 8002800:	f010803f 	.word	0xf010803f

08002804 <HAL_DMA_DeInit>:
 8002804:	b580      	push	{r7, lr}
 8002806:	b084      	sub	sp, #16
 8002808:	af00      	add	r7, sp, #0
 800280a:	6078      	str	r0, [r7, #4]
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	2b00      	cmp	r3, #0
 8002810:	d101      	bne.n	8002816 <HAL_DMA_DeInit+0x12>
 8002812:	2301      	movs	r3, #1
 8002814:	e050      	b.n	80028b8 <HAL_DMA_DeInit+0xb4>
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800281c:	b2db      	uxtb	r3, r3
 800281e:	2b02      	cmp	r3, #2
 8002820:	d101      	bne.n	8002826 <HAL_DMA_DeInit+0x22>
 8002822:	2302      	movs	r3, #2
 8002824:	e048      	b.n	80028b8 <HAL_DMA_DeInit+0xb4>
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	681a      	ldr	r2, [r3, #0]
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	f022 0201 	bic.w	r2, r2, #1
 8002834:	601a      	str	r2, [r3, #0]
 8002836:	687b      	ldr	r3, [r7, #4]
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	2200      	movs	r2, #0
 800283c:	601a      	str	r2, [r3, #0]
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	2200      	movs	r2, #0
 8002844:	605a      	str	r2, [r3, #4]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	2200      	movs	r2, #0
 800284c:	609a      	str	r2, [r3, #8]
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	681b      	ldr	r3, [r3, #0]
 8002852:	2200      	movs	r2, #0
 8002854:	60da      	str	r2, [r3, #12]
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	2200      	movs	r2, #0
 800285c:	611a      	str	r2, [r3, #16]
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	2221      	movs	r2, #33	@ 0x21
 8002864:	615a      	str	r2, [r3, #20]
 8002866:	6878      	ldr	r0, [r7, #4]
 8002868:	f000 fa46 	bl	8002cf8 <DMA_CalcBaseAndBitshift>
 800286c:	4603      	mov	r3, r0
 800286e:	60fb      	str	r3, [r7, #12]
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	2200      	movs	r2, #0
 8002874:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002876:	687b      	ldr	r3, [r7, #4]
 8002878:	2200      	movs	r2, #0
 800287a:	641a      	str	r2, [r3, #64]	@ 0x40
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	2200      	movs	r2, #0
 8002880:	645a      	str	r2, [r3, #68]	@ 0x44
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	2200      	movs	r2, #0
 8002886:	649a      	str	r2, [r3, #72]	@ 0x48
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	2200      	movs	r2, #0
 800288c:	64da      	str	r2, [r3, #76]	@ 0x4c
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	2200      	movs	r2, #0
 8002892:	651a      	str	r2, [r3, #80]	@ 0x50
 8002894:	687b      	ldr	r3, [r7, #4]
 8002896:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002898:	223f      	movs	r2, #63	@ 0x3f
 800289a:	409a      	lsls	r2, r3
 800289c:	68fb      	ldr	r3, [r7, #12]
 800289e:	609a      	str	r2, [r3, #8]
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	2200      	movs	r2, #0
 80028a4:	655a      	str	r2, [r3, #84]	@ 0x54
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	2200      	movs	r2, #0
 80028aa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	2200      	movs	r2, #0
 80028b2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80028b6:	2300      	movs	r3, #0
 80028b8:	4618      	mov	r0, r3
 80028ba:	3710      	adds	r7, #16
 80028bc:	46bd      	mov	sp, r7
 80028be:	bd80      	pop	{r7, pc}

080028c0 <HAL_DMA_Abort>:
 80028c0:	b580      	push	{r7, lr}
 80028c2:	b084      	sub	sp, #16
 80028c4:	af00      	add	r7, sp, #0
 80028c6:	6078      	str	r0, [r7, #4]
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80028cc:	60fb      	str	r3, [r7, #12]
 80028ce:	f7fe fec9 	bl	8001664 <HAL_GetTick>
 80028d2:	60b8      	str	r0, [r7, #8]
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80028da:	b2db      	uxtb	r3, r3
 80028dc:	2b02      	cmp	r3, #2
 80028de:	d008      	beq.n	80028f2 <HAL_DMA_Abort+0x32>
 80028e0:	687b      	ldr	r3, [r7, #4]
 80028e2:	2280      	movs	r2, #128	@ 0x80
 80028e4:	655a      	str	r2, [r3, #84]	@ 0x54
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	2200      	movs	r2, #0
 80028ea:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80028ee:	2301      	movs	r3, #1
 80028f0:	e052      	b.n	8002998 <HAL_DMA_Abort+0xd8>
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	681a      	ldr	r2, [r3, #0]
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	f022 0216 	bic.w	r2, r2, #22
 8002900:	601a      	str	r2, [r3, #0]
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	681b      	ldr	r3, [r3, #0]
 8002906:	695a      	ldr	r2, [r3, #20]
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002910:	615a      	str	r2, [r3, #20]
 8002912:	687b      	ldr	r3, [r7, #4]
 8002914:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002916:	2b00      	cmp	r3, #0
 8002918:	d103      	bne.n	8002922 <HAL_DMA_Abort+0x62>
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800291e:	2b00      	cmp	r3, #0
 8002920:	d007      	beq.n	8002932 <HAL_DMA_Abort+0x72>
 8002922:	687b      	ldr	r3, [r7, #4]
 8002924:	681b      	ldr	r3, [r3, #0]
 8002926:	681a      	ldr	r2, [r3, #0]
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	f022 0208 	bic.w	r2, r2, #8
 8002930:	601a      	str	r2, [r3, #0]
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	681b      	ldr	r3, [r3, #0]
 8002936:	681a      	ldr	r2, [r3, #0]
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	681b      	ldr	r3, [r3, #0]
 800293c:	f022 0201 	bic.w	r2, r2, #1
 8002940:	601a      	str	r2, [r3, #0]
 8002942:	e013      	b.n	800296c <HAL_DMA_Abort+0xac>
 8002944:	f7fe fe8e 	bl	8001664 <HAL_GetTick>
 8002948:	4602      	mov	r2, r0
 800294a:	68bb      	ldr	r3, [r7, #8]
 800294c:	1ad3      	subs	r3, r2, r3
 800294e:	2b05      	cmp	r3, #5
 8002950:	d90c      	bls.n	800296c <HAL_DMA_Abort+0xac>
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	2220      	movs	r2, #32
 8002956:	655a      	str	r2, [r3, #84]	@ 0x54
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	2203      	movs	r2, #3
 800295c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002960:	687b      	ldr	r3, [r7, #4]
 8002962:	2200      	movs	r2, #0
 8002964:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002968:	2303      	movs	r3, #3
 800296a:	e015      	b.n	8002998 <HAL_DMA_Abort+0xd8>
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	681b      	ldr	r3, [r3, #0]
 8002972:	f003 0301 	and.w	r3, r3, #1
 8002976:	2b00      	cmp	r3, #0
 8002978:	d1e4      	bne.n	8002944 <HAL_DMA_Abort+0x84>
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800297e:	223f      	movs	r2, #63	@ 0x3f
 8002980:	409a      	lsls	r2, r3
 8002982:	68fb      	ldr	r3, [r7, #12]
 8002984:	609a      	str	r2, [r3, #8]
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	2201      	movs	r2, #1
 800298a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800298e:	687b      	ldr	r3, [r7, #4]
 8002990:	2200      	movs	r2, #0
 8002992:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002996:	2300      	movs	r3, #0
 8002998:	4618      	mov	r0, r3
 800299a:	3710      	adds	r7, #16
 800299c:	46bd      	mov	sp, r7
 800299e:	bd80      	pop	{r7, pc}

080029a0 <HAL_DMA_Abort_IT>:
 80029a0:	b480      	push	{r7}
 80029a2:	b083      	sub	sp, #12
 80029a4:	af00      	add	r7, sp, #0
 80029a6:	6078      	str	r0, [r7, #4]
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80029ae:	b2db      	uxtb	r3, r3
 80029b0:	2b02      	cmp	r3, #2
 80029b2:	d004      	beq.n	80029be <HAL_DMA_Abort_IT+0x1e>
 80029b4:	687b      	ldr	r3, [r7, #4]
 80029b6:	2280      	movs	r2, #128	@ 0x80
 80029b8:	655a      	str	r2, [r3, #84]	@ 0x54
 80029ba:	2301      	movs	r3, #1
 80029bc:	e00c      	b.n	80029d8 <HAL_DMA_Abort_IT+0x38>
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	2205      	movs	r2, #5
 80029c2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	681a      	ldr	r2, [r3, #0]
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	f022 0201 	bic.w	r2, r2, #1
 80029d4:	601a      	str	r2, [r3, #0]
 80029d6:	2300      	movs	r3, #0
 80029d8:	4618      	mov	r0, r3
 80029da:	370c      	adds	r7, #12
 80029dc:	46bd      	mov	sp, r7
 80029de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029e2:	4770      	bx	lr

080029e4 <HAL_DMA_IRQHandler>:
 80029e4:	b580      	push	{r7, lr}
 80029e6:	b086      	sub	sp, #24
 80029e8:	af00      	add	r7, sp, #0
 80029ea:	6078      	str	r0, [r7, #4]
 80029ec:	2300      	movs	r3, #0
 80029ee:	60bb      	str	r3, [r7, #8]
 80029f0:	4b8e      	ldr	r3, [pc, #568]	@ (8002c2c <HAL_DMA_IRQHandler+0x248>)
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	4a8e      	ldr	r2, [pc, #568]	@ (8002c30 <HAL_DMA_IRQHandler+0x24c>)
 80029f6:	fba2 2303 	umull	r2, r3, r2, r3
 80029fa:	0a9b      	lsrs	r3, r3, #10
 80029fc:	617b      	str	r3, [r7, #20]
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002a02:	613b      	str	r3, [r7, #16]
 8002a04:	693b      	ldr	r3, [r7, #16]
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	60fb      	str	r3, [r7, #12]
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a0e:	2208      	movs	r2, #8
 8002a10:	409a      	lsls	r2, r3
 8002a12:	68fb      	ldr	r3, [r7, #12]
 8002a14:	4013      	ands	r3, r2
 8002a16:	2b00      	cmp	r3, #0
 8002a18:	d01a      	beq.n	8002a50 <HAL_DMA_IRQHandler+0x6c>
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	681b      	ldr	r3, [r3, #0]
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	f003 0304 	and.w	r3, r3, #4
 8002a24:	2b00      	cmp	r3, #0
 8002a26:	d013      	beq.n	8002a50 <HAL_DMA_IRQHandler+0x6c>
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	681a      	ldr	r2, [r3, #0]
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	681b      	ldr	r3, [r3, #0]
 8002a32:	f022 0204 	bic.w	r2, r2, #4
 8002a36:	601a      	str	r2, [r3, #0]
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a3c:	2208      	movs	r2, #8
 8002a3e:	409a      	lsls	r2, r3
 8002a40:	693b      	ldr	r3, [r7, #16]
 8002a42:	609a      	str	r2, [r3, #8]
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002a48:	f043 0201 	orr.w	r2, r3, #1
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a50:	687b      	ldr	r3, [r7, #4]
 8002a52:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a54:	2201      	movs	r2, #1
 8002a56:	409a      	lsls	r2, r3
 8002a58:	68fb      	ldr	r3, [r7, #12]
 8002a5a:	4013      	ands	r3, r2
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d012      	beq.n	8002a86 <HAL_DMA_IRQHandler+0xa2>
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	695b      	ldr	r3, [r3, #20]
 8002a66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002a6a:	2b00      	cmp	r3, #0
 8002a6c:	d00b      	beq.n	8002a86 <HAL_DMA_IRQHandler+0xa2>
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a72:	2201      	movs	r2, #1
 8002a74:	409a      	lsls	r2, r3
 8002a76:	693b      	ldr	r3, [r7, #16]
 8002a78:	609a      	str	r2, [r3, #8]
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002a7e:	f043 0202 	orr.w	r2, r3, #2
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a86:	687b      	ldr	r3, [r7, #4]
 8002a88:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002a8a:	2204      	movs	r2, #4
 8002a8c:	409a      	lsls	r2, r3
 8002a8e:	68fb      	ldr	r3, [r7, #12]
 8002a90:	4013      	ands	r3, r2
 8002a92:	2b00      	cmp	r3, #0
 8002a94:	d012      	beq.n	8002abc <HAL_DMA_IRQHandler+0xd8>
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	f003 0302 	and.w	r3, r3, #2
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d00b      	beq.n	8002abc <HAL_DMA_IRQHandler+0xd8>
 8002aa4:	687b      	ldr	r3, [r7, #4]
 8002aa6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002aa8:	2204      	movs	r2, #4
 8002aaa:	409a      	lsls	r2, r3
 8002aac:	693b      	ldr	r3, [r7, #16]
 8002aae:	609a      	str	r2, [r3, #8]
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002ab4:	f043 0204 	orr.w	r2, r3, #4
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	655a      	str	r2, [r3, #84]	@ 0x54
 8002abc:	687b      	ldr	r3, [r7, #4]
 8002abe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ac0:	2210      	movs	r2, #16
 8002ac2:	409a      	lsls	r2, r3
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	4013      	ands	r3, r2
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d043      	beq.n	8002b54 <HAL_DMA_IRQHandler+0x170>
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	f003 0308 	and.w	r3, r3, #8
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d03c      	beq.n	8002b54 <HAL_DMA_IRQHandler+0x170>
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ade:	2210      	movs	r2, #16
 8002ae0:	409a      	lsls	r2, r3
 8002ae2:	693b      	ldr	r3, [r7, #16]
 8002ae4:	609a      	str	r2, [r3, #8]
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	681b      	ldr	r3, [r3, #0]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	d018      	beq.n	8002b26 <HAL_DMA_IRQHandler+0x142>
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	681b      	ldr	r3, [r3, #0]
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002afe:	2b00      	cmp	r3, #0
 8002b00:	d108      	bne.n	8002b14 <HAL_DMA_IRQHandler+0x130>
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b06:	2b00      	cmp	r3, #0
 8002b08:	d024      	beq.n	8002b54 <HAL_DMA_IRQHandler+0x170>
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b0e:	6878      	ldr	r0, [r7, #4]
 8002b10:	4798      	blx	r3
 8002b12:	e01f      	b.n	8002b54 <HAL_DMA_IRQHandler+0x170>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002b18:	2b00      	cmp	r3, #0
 8002b1a:	d01b      	beq.n	8002b54 <HAL_DMA_IRQHandler+0x170>
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002b20:	6878      	ldr	r0, [r7, #4]
 8002b22:	4798      	blx	r3
 8002b24:	e016      	b.n	8002b54 <HAL_DMA_IRQHandler+0x170>
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	681b      	ldr	r3, [r3, #0]
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002b30:	2b00      	cmp	r3, #0
 8002b32:	d107      	bne.n	8002b44 <HAL_DMA_IRQHandler+0x160>
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	681a      	ldr	r2, [r3, #0]
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	f022 0208 	bic.w	r2, r2, #8
 8002b42:	601a      	str	r2, [r3, #0]
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b48:	2b00      	cmp	r3, #0
 8002b4a:	d003      	beq.n	8002b54 <HAL_DMA_IRQHandler+0x170>
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b50:	6878      	ldr	r0, [r7, #4]
 8002b52:	4798      	blx	r3
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b58:	2220      	movs	r2, #32
 8002b5a:	409a      	lsls	r2, r3
 8002b5c:	68fb      	ldr	r3, [r7, #12]
 8002b5e:	4013      	ands	r3, r2
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	f000 808f 	beq.w	8002c84 <HAL_DMA_IRQHandler+0x2a0>
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	681b      	ldr	r3, [r3, #0]
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	f003 0310 	and.w	r3, r3, #16
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	f000 8087 	beq.w	8002c84 <HAL_DMA_IRQHandler+0x2a0>
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b7a:	2220      	movs	r2, #32
 8002b7c:	409a      	lsls	r2, r3
 8002b7e:	693b      	ldr	r3, [r7, #16]
 8002b80:	609a      	str	r2, [r3, #8]
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002b88:	b2db      	uxtb	r3, r3
 8002b8a:	2b05      	cmp	r3, #5
 8002b8c:	d136      	bne.n	8002bfc <HAL_DMA_IRQHandler+0x218>
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	681b      	ldr	r3, [r3, #0]
 8002b92:	681a      	ldr	r2, [r3, #0]
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	f022 0216 	bic.w	r2, r2, #22
 8002b9c:	601a      	str	r2, [r3, #0]
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	695a      	ldr	r2, [r3, #20]
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002bac:	615a      	str	r2, [r3, #20]
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bb2:	2b00      	cmp	r3, #0
 8002bb4:	d103      	bne.n	8002bbe <HAL_DMA_IRQHandler+0x1da>
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002bba:	2b00      	cmp	r3, #0
 8002bbc:	d007      	beq.n	8002bce <HAL_DMA_IRQHandler+0x1ea>
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	681b      	ldr	r3, [r3, #0]
 8002bc2:	681a      	ldr	r2, [r3, #0]
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	f022 0208 	bic.w	r2, r2, #8
 8002bcc:	601a      	str	r2, [r3, #0]
 8002bce:	687b      	ldr	r3, [r7, #4]
 8002bd0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002bd2:	223f      	movs	r2, #63	@ 0x3f
 8002bd4:	409a      	lsls	r2, r3
 8002bd6:	693b      	ldr	r3, [r7, #16]
 8002bd8:	609a      	str	r2, [r3, #8]
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	2201      	movs	r2, #1
 8002bde:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	2200      	movs	r2, #0
 8002be6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d07e      	beq.n	8002cf0 <HAL_DMA_IRQHandler+0x30c>
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002bf6:	6878      	ldr	r0, [r7, #4]
 8002bf8:	4798      	blx	r3
 8002bfa:	e079      	b.n	8002cf0 <HAL_DMA_IRQHandler+0x30c>
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002c06:	2b00      	cmp	r3, #0
 8002c08:	d01d      	beq.n	8002c46 <HAL_DMA_IRQHandler+0x262>
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002c14:	2b00      	cmp	r3, #0
 8002c16:	d10d      	bne.n	8002c34 <HAL_DMA_IRQHandler+0x250>
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002c1c:	2b00      	cmp	r3, #0
 8002c1e:	d031      	beq.n	8002c84 <HAL_DMA_IRQHandler+0x2a0>
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002c24:	6878      	ldr	r0, [r7, #4]
 8002c26:	4798      	blx	r3
 8002c28:	e02c      	b.n	8002c84 <HAL_DMA_IRQHandler+0x2a0>
 8002c2a:	bf00      	nop
 8002c2c:	2000000c 	.word	0x2000000c
 8002c30:	1b4e81b5 	.word	0x1b4e81b5
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002c38:	2b00      	cmp	r3, #0
 8002c3a:	d023      	beq.n	8002c84 <HAL_DMA_IRQHandler+0x2a0>
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002c40:	6878      	ldr	r0, [r7, #4]
 8002c42:	4798      	blx	r3
 8002c44:	e01e      	b.n	8002c84 <HAL_DMA_IRQHandler+0x2a0>
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	681b      	ldr	r3, [r3, #0]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002c50:	2b00      	cmp	r3, #0
 8002c52:	d10f      	bne.n	8002c74 <HAL_DMA_IRQHandler+0x290>
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	681a      	ldr	r2, [r3, #0]
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	f022 0210 	bic.w	r2, r2, #16
 8002c62:	601a      	str	r2, [r3, #0]
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	2201      	movs	r2, #1
 8002c68:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	2200      	movs	r2, #0
 8002c70:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	d003      	beq.n	8002c84 <HAL_DMA_IRQHandler+0x2a0>
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002c80:	6878      	ldr	r0, [r7, #4]
 8002c82:	4798      	blx	r3
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002c88:	2b00      	cmp	r3, #0
 8002c8a:	d032      	beq.n	8002cf2 <HAL_DMA_IRQHandler+0x30e>
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002c90:	f003 0301 	and.w	r3, r3, #1
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d022      	beq.n	8002cde <HAL_DMA_IRQHandler+0x2fa>
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	2205      	movs	r2, #5
 8002c9c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	681a      	ldr	r2, [r3, #0]
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	681b      	ldr	r3, [r3, #0]
 8002caa:	f022 0201 	bic.w	r2, r2, #1
 8002cae:	601a      	str	r2, [r3, #0]
 8002cb0:	68bb      	ldr	r3, [r7, #8]
 8002cb2:	3301      	adds	r3, #1
 8002cb4:	60bb      	str	r3, [r7, #8]
 8002cb6:	697a      	ldr	r2, [r7, #20]
 8002cb8:	429a      	cmp	r2, r3
 8002cba:	d307      	bcc.n	8002ccc <HAL_DMA_IRQHandler+0x2e8>
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	681b      	ldr	r3, [r3, #0]
 8002cc2:	f003 0301 	and.w	r3, r3, #1
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d1f2      	bne.n	8002cb0 <HAL_DMA_IRQHandler+0x2cc>
 8002cca:	e000      	b.n	8002cce <HAL_DMA_IRQHandler+0x2ea>
 8002ccc:	bf00      	nop
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	2201      	movs	r2, #1
 8002cd2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	2200      	movs	r2, #0
 8002cda:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002ce2:	2b00      	cmp	r3, #0
 8002ce4:	d005      	beq.n	8002cf2 <HAL_DMA_IRQHandler+0x30e>
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002cea:	6878      	ldr	r0, [r7, #4]
 8002cec:	4798      	blx	r3
 8002cee:	e000      	b.n	8002cf2 <HAL_DMA_IRQHandler+0x30e>
 8002cf0:	bf00      	nop
 8002cf2:	3718      	adds	r7, #24
 8002cf4:	46bd      	mov	sp, r7
 8002cf6:	bd80      	pop	{r7, pc}

08002cf8 <DMA_CalcBaseAndBitshift>:
 8002cf8:	b480      	push	{r7}
 8002cfa:	b085      	sub	sp, #20
 8002cfc:	af00      	add	r7, sp, #0
 8002cfe:	6078      	str	r0, [r7, #4]
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	b2db      	uxtb	r3, r3
 8002d06:	3b10      	subs	r3, #16
 8002d08:	4a14      	ldr	r2, [pc, #80]	@ (8002d5c <DMA_CalcBaseAndBitshift+0x64>)
 8002d0a:	fba2 2303 	umull	r2, r3, r2, r3
 8002d0e:	091b      	lsrs	r3, r3, #4
 8002d10:	60fb      	str	r3, [r7, #12]
 8002d12:	4a13      	ldr	r2, [pc, #76]	@ (8002d60 <DMA_CalcBaseAndBitshift+0x68>)
 8002d14:	68fb      	ldr	r3, [r7, #12]
 8002d16:	4413      	add	r3, r2
 8002d18:	781b      	ldrb	r3, [r3, #0]
 8002d1a:	461a      	mov	r2, r3
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d20:	68fb      	ldr	r3, [r7, #12]
 8002d22:	2b03      	cmp	r3, #3
 8002d24:	d909      	bls.n	8002d3a <DMA_CalcBaseAndBitshift+0x42>
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002d2e:	f023 0303 	bic.w	r3, r3, #3
 8002d32:	1d1a      	adds	r2, r3, #4
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	659a      	str	r2, [r3, #88]	@ 0x58
 8002d38:	e007      	b.n	8002d4a <DMA_CalcBaseAndBitshift+0x52>
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002d42:	f023 0303 	bic.w	r3, r3, #3
 8002d46:	687a      	ldr	r2, [r7, #4]
 8002d48:	6593      	str	r3, [r2, #88]	@ 0x58
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002d4e:	4618      	mov	r0, r3
 8002d50:	3714      	adds	r7, #20
 8002d52:	46bd      	mov	sp, r7
 8002d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d58:	4770      	bx	lr
 8002d5a:	bf00      	nop
 8002d5c:	aaaaaaab 	.word	0xaaaaaaab
 8002d60:	0800ca7c 	.word	0x0800ca7c

08002d64 <DMA_CheckFifoParam>:
 8002d64:	b480      	push	{r7}
 8002d66:	b085      	sub	sp, #20
 8002d68:	af00      	add	r7, sp, #0
 8002d6a:	6078      	str	r0, [r7, #4]
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	73fb      	strb	r3, [r7, #15]
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d74:	60bb      	str	r3, [r7, #8]
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	699b      	ldr	r3, [r3, #24]
 8002d7a:	2b00      	cmp	r3, #0
 8002d7c:	d11f      	bne.n	8002dbe <DMA_CheckFifoParam+0x5a>
 8002d7e:	68bb      	ldr	r3, [r7, #8]
 8002d80:	2b03      	cmp	r3, #3
 8002d82:	d856      	bhi.n	8002e32 <DMA_CheckFifoParam+0xce>
 8002d84:	a201      	add	r2, pc, #4	@ (adr r2, 8002d8c <DMA_CheckFifoParam+0x28>)
 8002d86:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d8a:	bf00      	nop
 8002d8c:	08002d9d 	.word	0x08002d9d
 8002d90:	08002daf 	.word	0x08002daf
 8002d94:	08002d9d 	.word	0x08002d9d
 8002d98:	08002e33 	.word	0x08002e33
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002da0:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d046      	beq.n	8002e36 <DMA_CheckFifoParam+0xd2>
 8002da8:	2301      	movs	r3, #1
 8002daa:	73fb      	strb	r3, [r7, #15]
 8002dac:	e043      	b.n	8002e36 <DMA_CheckFifoParam+0xd2>
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002db2:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8002db6:	d140      	bne.n	8002e3a <DMA_CheckFifoParam+0xd6>
 8002db8:	2301      	movs	r3, #1
 8002dba:	73fb      	strb	r3, [r7, #15]
 8002dbc:	e03d      	b.n	8002e3a <DMA_CheckFifoParam+0xd6>
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	699b      	ldr	r3, [r3, #24]
 8002dc2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002dc6:	d121      	bne.n	8002e0c <DMA_CheckFifoParam+0xa8>
 8002dc8:	68bb      	ldr	r3, [r7, #8]
 8002dca:	2b03      	cmp	r3, #3
 8002dcc:	d837      	bhi.n	8002e3e <DMA_CheckFifoParam+0xda>
 8002dce:	a201      	add	r2, pc, #4	@ (adr r2, 8002dd4 <DMA_CheckFifoParam+0x70>)
 8002dd0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002dd4:	08002de5 	.word	0x08002de5
 8002dd8:	08002deb 	.word	0x08002deb
 8002ddc:	08002de5 	.word	0x08002de5
 8002de0:	08002dfd 	.word	0x08002dfd
 8002de4:	2301      	movs	r3, #1
 8002de6:	73fb      	strb	r3, [r7, #15]
 8002de8:	e030      	b.n	8002e4c <DMA_CheckFifoParam+0xe8>
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002dee:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002df2:	2b00      	cmp	r3, #0
 8002df4:	d025      	beq.n	8002e42 <DMA_CheckFifoParam+0xde>
 8002df6:	2301      	movs	r3, #1
 8002df8:	73fb      	strb	r3, [r7, #15]
 8002dfa:	e022      	b.n	8002e42 <DMA_CheckFifoParam+0xde>
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e00:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8002e04:	d11f      	bne.n	8002e46 <DMA_CheckFifoParam+0xe2>
 8002e06:	2301      	movs	r3, #1
 8002e08:	73fb      	strb	r3, [r7, #15]
 8002e0a:	e01c      	b.n	8002e46 <DMA_CheckFifoParam+0xe2>
 8002e0c:	68bb      	ldr	r3, [r7, #8]
 8002e0e:	2b02      	cmp	r3, #2
 8002e10:	d903      	bls.n	8002e1a <DMA_CheckFifoParam+0xb6>
 8002e12:	68bb      	ldr	r3, [r7, #8]
 8002e14:	2b03      	cmp	r3, #3
 8002e16:	d003      	beq.n	8002e20 <DMA_CheckFifoParam+0xbc>
 8002e18:	e018      	b.n	8002e4c <DMA_CheckFifoParam+0xe8>
 8002e1a:	2301      	movs	r3, #1
 8002e1c:	73fb      	strb	r3, [r7, #15]
 8002e1e:	e015      	b.n	8002e4c <DMA_CheckFifoParam+0xe8>
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e24:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002e28:	2b00      	cmp	r3, #0
 8002e2a:	d00e      	beq.n	8002e4a <DMA_CheckFifoParam+0xe6>
 8002e2c:	2301      	movs	r3, #1
 8002e2e:	73fb      	strb	r3, [r7, #15]
 8002e30:	e00b      	b.n	8002e4a <DMA_CheckFifoParam+0xe6>
 8002e32:	bf00      	nop
 8002e34:	e00a      	b.n	8002e4c <DMA_CheckFifoParam+0xe8>
 8002e36:	bf00      	nop
 8002e38:	e008      	b.n	8002e4c <DMA_CheckFifoParam+0xe8>
 8002e3a:	bf00      	nop
 8002e3c:	e006      	b.n	8002e4c <DMA_CheckFifoParam+0xe8>
 8002e3e:	bf00      	nop
 8002e40:	e004      	b.n	8002e4c <DMA_CheckFifoParam+0xe8>
 8002e42:	bf00      	nop
 8002e44:	e002      	b.n	8002e4c <DMA_CheckFifoParam+0xe8>
 8002e46:	bf00      	nop
 8002e48:	e000      	b.n	8002e4c <DMA_CheckFifoParam+0xe8>
 8002e4a:	bf00      	nop
 8002e4c:	7bfb      	ldrb	r3, [r7, #15]
 8002e4e:	4618      	mov	r0, r3
 8002e50:	3714      	adds	r7, #20
 8002e52:	46bd      	mov	sp, r7
 8002e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e58:	4770      	bx	lr
 8002e5a:	bf00      	nop

08002e5c <HAL_GPIO_Init>:
 8002e5c:	b480      	push	{r7}
 8002e5e:	b089      	sub	sp, #36	@ 0x24
 8002e60:	af00      	add	r7, sp, #0
 8002e62:	6078      	str	r0, [r7, #4]
 8002e64:	6039      	str	r1, [r7, #0]
 8002e66:	2300      	movs	r3, #0
 8002e68:	617b      	str	r3, [r7, #20]
 8002e6a:	2300      	movs	r3, #0
 8002e6c:	613b      	str	r3, [r7, #16]
 8002e6e:	2300      	movs	r3, #0
 8002e70:	61bb      	str	r3, [r7, #24]
 8002e72:	2300      	movs	r3, #0
 8002e74:	61fb      	str	r3, [r7, #28]
 8002e76:	e16b      	b.n	8003150 <HAL_GPIO_Init+0x2f4>
 8002e78:	2201      	movs	r2, #1
 8002e7a:	69fb      	ldr	r3, [r7, #28]
 8002e7c:	fa02 f303 	lsl.w	r3, r2, r3
 8002e80:	617b      	str	r3, [r7, #20]
 8002e82:	683b      	ldr	r3, [r7, #0]
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	697a      	ldr	r2, [r7, #20]
 8002e88:	4013      	ands	r3, r2
 8002e8a:	613b      	str	r3, [r7, #16]
 8002e8c:	693a      	ldr	r2, [r7, #16]
 8002e8e:	697b      	ldr	r3, [r7, #20]
 8002e90:	429a      	cmp	r2, r3
 8002e92:	f040 815a 	bne.w	800314a <HAL_GPIO_Init+0x2ee>
 8002e96:	683b      	ldr	r3, [r7, #0]
 8002e98:	685b      	ldr	r3, [r3, #4]
 8002e9a:	f003 0303 	and.w	r3, r3, #3
 8002e9e:	2b01      	cmp	r3, #1
 8002ea0:	d005      	beq.n	8002eae <HAL_GPIO_Init+0x52>
 8002ea2:	683b      	ldr	r3, [r7, #0]
 8002ea4:	685b      	ldr	r3, [r3, #4]
 8002ea6:	f003 0303 	and.w	r3, r3, #3
 8002eaa:	2b02      	cmp	r3, #2
 8002eac:	d130      	bne.n	8002f10 <HAL_GPIO_Init+0xb4>
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	689b      	ldr	r3, [r3, #8]
 8002eb2:	61bb      	str	r3, [r7, #24]
 8002eb4:	69fb      	ldr	r3, [r7, #28]
 8002eb6:	005b      	lsls	r3, r3, #1
 8002eb8:	2203      	movs	r2, #3
 8002eba:	fa02 f303 	lsl.w	r3, r2, r3
 8002ebe:	43db      	mvns	r3, r3
 8002ec0:	69ba      	ldr	r2, [r7, #24]
 8002ec2:	4013      	ands	r3, r2
 8002ec4:	61bb      	str	r3, [r7, #24]
 8002ec6:	683b      	ldr	r3, [r7, #0]
 8002ec8:	68da      	ldr	r2, [r3, #12]
 8002eca:	69fb      	ldr	r3, [r7, #28]
 8002ecc:	005b      	lsls	r3, r3, #1
 8002ece:	fa02 f303 	lsl.w	r3, r2, r3
 8002ed2:	69ba      	ldr	r2, [r7, #24]
 8002ed4:	4313      	orrs	r3, r2
 8002ed6:	61bb      	str	r3, [r7, #24]
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	69ba      	ldr	r2, [r7, #24]
 8002edc:	609a      	str	r2, [r3, #8]
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	685b      	ldr	r3, [r3, #4]
 8002ee2:	61bb      	str	r3, [r7, #24]
 8002ee4:	2201      	movs	r2, #1
 8002ee6:	69fb      	ldr	r3, [r7, #28]
 8002ee8:	fa02 f303 	lsl.w	r3, r2, r3
 8002eec:	43db      	mvns	r3, r3
 8002eee:	69ba      	ldr	r2, [r7, #24]
 8002ef0:	4013      	ands	r3, r2
 8002ef2:	61bb      	str	r3, [r7, #24]
 8002ef4:	683b      	ldr	r3, [r7, #0]
 8002ef6:	685b      	ldr	r3, [r3, #4]
 8002ef8:	091b      	lsrs	r3, r3, #4
 8002efa:	f003 0201 	and.w	r2, r3, #1
 8002efe:	69fb      	ldr	r3, [r7, #28]
 8002f00:	fa02 f303 	lsl.w	r3, r2, r3
 8002f04:	69ba      	ldr	r2, [r7, #24]
 8002f06:	4313      	orrs	r3, r2
 8002f08:	61bb      	str	r3, [r7, #24]
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	69ba      	ldr	r2, [r7, #24]
 8002f0e:	605a      	str	r2, [r3, #4]
 8002f10:	683b      	ldr	r3, [r7, #0]
 8002f12:	685b      	ldr	r3, [r3, #4]
 8002f14:	f003 0303 	and.w	r3, r3, #3
 8002f18:	2b03      	cmp	r3, #3
 8002f1a:	d017      	beq.n	8002f4c <HAL_GPIO_Init+0xf0>
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	68db      	ldr	r3, [r3, #12]
 8002f20:	61bb      	str	r3, [r7, #24]
 8002f22:	69fb      	ldr	r3, [r7, #28]
 8002f24:	005b      	lsls	r3, r3, #1
 8002f26:	2203      	movs	r2, #3
 8002f28:	fa02 f303 	lsl.w	r3, r2, r3
 8002f2c:	43db      	mvns	r3, r3
 8002f2e:	69ba      	ldr	r2, [r7, #24]
 8002f30:	4013      	ands	r3, r2
 8002f32:	61bb      	str	r3, [r7, #24]
 8002f34:	683b      	ldr	r3, [r7, #0]
 8002f36:	689a      	ldr	r2, [r3, #8]
 8002f38:	69fb      	ldr	r3, [r7, #28]
 8002f3a:	005b      	lsls	r3, r3, #1
 8002f3c:	fa02 f303 	lsl.w	r3, r2, r3
 8002f40:	69ba      	ldr	r2, [r7, #24]
 8002f42:	4313      	orrs	r3, r2
 8002f44:	61bb      	str	r3, [r7, #24]
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	69ba      	ldr	r2, [r7, #24]
 8002f4a:	60da      	str	r2, [r3, #12]
 8002f4c:	683b      	ldr	r3, [r7, #0]
 8002f4e:	685b      	ldr	r3, [r3, #4]
 8002f50:	f003 0303 	and.w	r3, r3, #3
 8002f54:	2b02      	cmp	r3, #2
 8002f56:	d123      	bne.n	8002fa0 <HAL_GPIO_Init+0x144>
 8002f58:	69fb      	ldr	r3, [r7, #28]
 8002f5a:	08da      	lsrs	r2, r3, #3
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	3208      	adds	r2, #8
 8002f60:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002f64:	61bb      	str	r3, [r7, #24]
 8002f66:	69fb      	ldr	r3, [r7, #28]
 8002f68:	f003 0307 	and.w	r3, r3, #7
 8002f6c:	009b      	lsls	r3, r3, #2
 8002f6e:	220f      	movs	r2, #15
 8002f70:	fa02 f303 	lsl.w	r3, r2, r3
 8002f74:	43db      	mvns	r3, r3
 8002f76:	69ba      	ldr	r2, [r7, #24]
 8002f78:	4013      	ands	r3, r2
 8002f7a:	61bb      	str	r3, [r7, #24]
 8002f7c:	683b      	ldr	r3, [r7, #0]
 8002f7e:	691a      	ldr	r2, [r3, #16]
 8002f80:	69fb      	ldr	r3, [r7, #28]
 8002f82:	f003 0307 	and.w	r3, r3, #7
 8002f86:	009b      	lsls	r3, r3, #2
 8002f88:	fa02 f303 	lsl.w	r3, r2, r3
 8002f8c:	69ba      	ldr	r2, [r7, #24]
 8002f8e:	4313      	orrs	r3, r2
 8002f90:	61bb      	str	r3, [r7, #24]
 8002f92:	69fb      	ldr	r3, [r7, #28]
 8002f94:	08da      	lsrs	r2, r3, #3
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	3208      	adds	r2, #8
 8002f9a:	69b9      	ldr	r1, [r7, #24]
 8002f9c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	61bb      	str	r3, [r7, #24]
 8002fa6:	69fb      	ldr	r3, [r7, #28]
 8002fa8:	005b      	lsls	r3, r3, #1
 8002faa:	2203      	movs	r2, #3
 8002fac:	fa02 f303 	lsl.w	r3, r2, r3
 8002fb0:	43db      	mvns	r3, r3
 8002fb2:	69ba      	ldr	r2, [r7, #24]
 8002fb4:	4013      	ands	r3, r2
 8002fb6:	61bb      	str	r3, [r7, #24]
 8002fb8:	683b      	ldr	r3, [r7, #0]
 8002fba:	685b      	ldr	r3, [r3, #4]
 8002fbc:	f003 0203 	and.w	r2, r3, #3
 8002fc0:	69fb      	ldr	r3, [r7, #28]
 8002fc2:	005b      	lsls	r3, r3, #1
 8002fc4:	fa02 f303 	lsl.w	r3, r2, r3
 8002fc8:	69ba      	ldr	r2, [r7, #24]
 8002fca:	4313      	orrs	r3, r2
 8002fcc:	61bb      	str	r3, [r7, #24]
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	69ba      	ldr	r2, [r7, #24]
 8002fd2:	601a      	str	r2, [r3, #0]
 8002fd4:	683b      	ldr	r3, [r7, #0]
 8002fd6:	685b      	ldr	r3, [r3, #4]
 8002fd8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	f000 80b4 	beq.w	800314a <HAL_GPIO_Init+0x2ee>
 8002fe2:	2300      	movs	r3, #0
 8002fe4:	60fb      	str	r3, [r7, #12]
 8002fe6:	4b60      	ldr	r3, [pc, #384]	@ (8003168 <HAL_GPIO_Init+0x30c>)
 8002fe8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fea:	4a5f      	ldr	r2, [pc, #380]	@ (8003168 <HAL_GPIO_Init+0x30c>)
 8002fec:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002ff0:	6453      	str	r3, [r2, #68]	@ 0x44
 8002ff2:	4b5d      	ldr	r3, [pc, #372]	@ (8003168 <HAL_GPIO_Init+0x30c>)
 8002ff4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ff6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002ffa:	60fb      	str	r3, [r7, #12]
 8002ffc:	68fb      	ldr	r3, [r7, #12]
 8002ffe:	4a5b      	ldr	r2, [pc, #364]	@ (800316c <HAL_GPIO_Init+0x310>)
 8003000:	69fb      	ldr	r3, [r7, #28]
 8003002:	089b      	lsrs	r3, r3, #2
 8003004:	3302      	adds	r3, #2
 8003006:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800300a:	61bb      	str	r3, [r7, #24]
 800300c:	69fb      	ldr	r3, [r7, #28]
 800300e:	f003 0303 	and.w	r3, r3, #3
 8003012:	009b      	lsls	r3, r3, #2
 8003014:	220f      	movs	r2, #15
 8003016:	fa02 f303 	lsl.w	r3, r2, r3
 800301a:	43db      	mvns	r3, r3
 800301c:	69ba      	ldr	r2, [r7, #24]
 800301e:	4013      	ands	r3, r2
 8003020:	61bb      	str	r3, [r7, #24]
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	4a52      	ldr	r2, [pc, #328]	@ (8003170 <HAL_GPIO_Init+0x314>)
 8003026:	4293      	cmp	r3, r2
 8003028:	d02b      	beq.n	8003082 <HAL_GPIO_Init+0x226>
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	4a51      	ldr	r2, [pc, #324]	@ (8003174 <HAL_GPIO_Init+0x318>)
 800302e:	4293      	cmp	r3, r2
 8003030:	d025      	beq.n	800307e <HAL_GPIO_Init+0x222>
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	4a50      	ldr	r2, [pc, #320]	@ (8003178 <HAL_GPIO_Init+0x31c>)
 8003036:	4293      	cmp	r3, r2
 8003038:	d01f      	beq.n	800307a <HAL_GPIO_Init+0x21e>
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	4a4f      	ldr	r2, [pc, #316]	@ (800317c <HAL_GPIO_Init+0x320>)
 800303e:	4293      	cmp	r3, r2
 8003040:	d019      	beq.n	8003076 <HAL_GPIO_Init+0x21a>
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	4a4e      	ldr	r2, [pc, #312]	@ (8003180 <HAL_GPIO_Init+0x324>)
 8003046:	4293      	cmp	r3, r2
 8003048:	d013      	beq.n	8003072 <HAL_GPIO_Init+0x216>
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	4a4d      	ldr	r2, [pc, #308]	@ (8003184 <HAL_GPIO_Init+0x328>)
 800304e:	4293      	cmp	r3, r2
 8003050:	d00d      	beq.n	800306e <HAL_GPIO_Init+0x212>
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	4a4c      	ldr	r2, [pc, #304]	@ (8003188 <HAL_GPIO_Init+0x32c>)
 8003056:	4293      	cmp	r3, r2
 8003058:	d007      	beq.n	800306a <HAL_GPIO_Init+0x20e>
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	4a4b      	ldr	r2, [pc, #300]	@ (800318c <HAL_GPIO_Init+0x330>)
 800305e:	4293      	cmp	r3, r2
 8003060:	d101      	bne.n	8003066 <HAL_GPIO_Init+0x20a>
 8003062:	2307      	movs	r3, #7
 8003064:	e00e      	b.n	8003084 <HAL_GPIO_Init+0x228>
 8003066:	2308      	movs	r3, #8
 8003068:	e00c      	b.n	8003084 <HAL_GPIO_Init+0x228>
 800306a:	2306      	movs	r3, #6
 800306c:	e00a      	b.n	8003084 <HAL_GPIO_Init+0x228>
 800306e:	2305      	movs	r3, #5
 8003070:	e008      	b.n	8003084 <HAL_GPIO_Init+0x228>
 8003072:	2304      	movs	r3, #4
 8003074:	e006      	b.n	8003084 <HAL_GPIO_Init+0x228>
 8003076:	2303      	movs	r3, #3
 8003078:	e004      	b.n	8003084 <HAL_GPIO_Init+0x228>
 800307a:	2302      	movs	r3, #2
 800307c:	e002      	b.n	8003084 <HAL_GPIO_Init+0x228>
 800307e:	2301      	movs	r3, #1
 8003080:	e000      	b.n	8003084 <HAL_GPIO_Init+0x228>
 8003082:	2300      	movs	r3, #0
 8003084:	69fa      	ldr	r2, [r7, #28]
 8003086:	f002 0203 	and.w	r2, r2, #3
 800308a:	0092      	lsls	r2, r2, #2
 800308c:	4093      	lsls	r3, r2
 800308e:	69ba      	ldr	r2, [r7, #24]
 8003090:	4313      	orrs	r3, r2
 8003092:	61bb      	str	r3, [r7, #24]
 8003094:	4935      	ldr	r1, [pc, #212]	@ (800316c <HAL_GPIO_Init+0x310>)
 8003096:	69fb      	ldr	r3, [r7, #28]
 8003098:	089b      	lsrs	r3, r3, #2
 800309a:	3302      	adds	r3, #2
 800309c:	69ba      	ldr	r2, [r7, #24]
 800309e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80030a2:	4b3b      	ldr	r3, [pc, #236]	@ (8003190 <HAL_GPIO_Init+0x334>)
 80030a4:	689b      	ldr	r3, [r3, #8]
 80030a6:	61bb      	str	r3, [r7, #24]
 80030a8:	693b      	ldr	r3, [r7, #16]
 80030aa:	43db      	mvns	r3, r3
 80030ac:	69ba      	ldr	r2, [r7, #24]
 80030ae:	4013      	ands	r3, r2
 80030b0:	61bb      	str	r3, [r7, #24]
 80030b2:	683b      	ldr	r3, [r7, #0]
 80030b4:	685b      	ldr	r3, [r3, #4]
 80030b6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	d003      	beq.n	80030c6 <HAL_GPIO_Init+0x26a>
 80030be:	69ba      	ldr	r2, [r7, #24]
 80030c0:	693b      	ldr	r3, [r7, #16]
 80030c2:	4313      	orrs	r3, r2
 80030c4:	61bb      	str	r3, [r7, #24]
 80030c6:	4a32      	ldr	r2, [pc, #200]	@ (8003190 <HAL_GPIO_Init+0x334>)
 80030c8:	69bb      	ldr	r3, [r7, #24]
 80030ca:	6093      	str	r3, [r2, #8]
 80030cc:	4b30      	ldr	r3, [pc, #192]	@ (8003190 <HAL_GPIO_Init+0x334>)
 80030ce:	68db      	ldr	r3, [r3, #12]
 80030d0:	61bb      	str	r3, [r7, #24]
 80030d2:	693b      	ldr	r3, [r7, #16]
 80030d4:	43db      	mvns	r3, r3
 80030d6:	69ba      	ldr	r2, [r7, #24]
 80030d8:	4013      	ands	r3, r2
 80030da:	61bb      	str	r3, [r7, #24]
 80030dc:	683b      	ldr	r3, [r7, #0]
 80030de:	685b      	ldr	r3, [r3, #4]
 80030e0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80030e4:	2b00      	cmp	r3, #0
 80030e6:	d003      	beq.n	80030f0 <HAL_GPIO_Init+0x294>
 80030e8:	69ba      	ldr	r2, [r7, #24]
 80030ea:	693b      	ldr	r3, [r7, #16]
 80030ec:	4313      	orrs	r3, r2
 80030ee:	61bb      	str	r3, [r7, #24]
 80030f0:	4a27      	ldr	r2, [pc, #156]	@ (8003190 <HAL_GPIO_Init+0x334>)
 80030f2:	69bb      	ldr	r3, [r7, #24]
 80030f4:	60d3      	str	r3, [r2, #12]
 80030f6:	4b26      	ldr	r3, [pc, #152]	@ (8003190 <HAL_GPIO_Init+0x334>)
 80030f8:	685b      	ldr	r3, [r3, #4]
 80030fa:	61bb      	str	r3, [r7, #24]
 80030fc:	693b      	ldr	r3, [r7, #16]
 80030fe:	43db      	mvns	r3, r3
 8003100:	69ba      	ldr	r2, [r7, #24]
 8003102:	4013      	ands	r3, r2
 8003104:	61bb      	str	r3, [r7, #24]
 8003106:	683b      	ldr	r3, [r7, #0]
 8003108:	685b      	ldr	r3, [r3, #4]
 800310a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800310e:	2b00      	cmp	r3, #0
 8003110:	d003      	beq.n	800311a <HAL_GPIO_Init+0x2be>
 8003112:	69ba      	ldr	r2, [r7, #24]
 8003114:	693b      	ldr	r3, [r7, #16]
 8003116:	4313      	orrs	r3, r2
 8003118:	61bb      	str	r3, [r7, #24]
 800311a:	4a1d      	ldr	r2, [pc, #116]	@ (8003190 <HAL_GPIO_Init+0x334>)
 800311c:	69bb      	ldr	r3, [r7, #24]
 800311e:	6053      	str	r3, [r2, #4]
 8003120:	4b1b      	ldr	r3, [pc, #108]	@ (8003190 <HAL_GPIO_Init+0x334>)
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	61bb      	str	r3, [r7, #24]
 8003126:	693b      	ldr	r3, [r7, #16]
 8003128:	43db      	mvns	r3, r3
 800312a:	69ba      	ldr	r2, [r7, #24]
 800312c:	4013      	ands	r3, r2
 800312e:	61bb      	str	r3, [r7, #24]
 8003130:	683b      	ldr	r3, [r7, #0]
 8003132:	685b      	ldr	r3, [r3, #4]
 8003134:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003138:	2b00      	cmp	r3, #0
 800313a:	d003      	beq.n	8003144 <HAL_GPIO_Init+0x2e8>
 800313c:	69ba      	ldr	r2, [r7, #24]
 800313e:	693b      	ldr	r3, [r7, #16]
 8003140:	4313      	orrs	r3, r2
 8003142:	61bb      	str	r3, [r7, #24]
 8003144:	4a12      	ldr	r2, [pc, #72]	@ (8003190 <HAL_GPIO_Init+0x334>)
 8003146:	69bb      	ldr	r3, [r7, #24]
 8003148:	6013      	str	r3, [r2, #0]
 800314a:	69fb      	ldr	r3, [r7, #28]
 800314c:	3301      	adds	r3, #1
 800314e:	61fb      	str	r3, [r7, #28]
 8003150:	69fb      	ldr	r3, [r7, #28]
 8003152:	2b0f      	cmp	r3, #15
 8003154:	f67f ae90 	bls.w	8002e78 <HAL_GPIO_Init+0x1c>
 8003158:	bf00      	nop
 800315a:	bf00      	nop
 800315c:	3724      	adds	r7, #36	@ 0x24
 800315e:	46bd      	mov	sp, r7
 8003160:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003164:	4770      	bx	lr
 8003166:	bf00      	nop
 8003168:	40023800 	.word	0x40023800
 800316c:	40013800 	.word	0x40013800
 8003170:	40020000 	.word	0x40020000
 8003174:	40020400 	.word	0x40020400
 8003178:	40020800 	.word	0x40020800
 800317c:	40020c00 	.word	0x40020c00
 8003180:	40021000 	.word	0x40021000
 8003184:	40021400 	.word	0x40021400
 8003188:	40021800 	.word	0x40021800
 800318c:	40021c00 	.word	0x40021c00
 8003190:	40013c00 	.word	0x40013c00

08003194 <HAL_GPIO_DeInit>:
 8003194:	b480      	push	{r7}
 8003196:	b087      	sub	sp, #28
 8003198:	af00      	add	r7, sp, #0
 800319a:	6078      	str	r0, [r7, #4]
 800319c:	6039      	str	r1, [r7, #0]
 800319e:	2300      	movs	r3, #0
 80031a0:	613b      	str	r3, [r7, #16]
 80031a2:	2300      	movs	r3, #0
 80031a4:	60fb      	str	r3, [r7, #12]
 80031a6:	2300      	movs	r3, #0
 80031a8:	60bb      	str	r3, [r7, #8]
 80031aa:	2300      	movs	r3, #0
 80031ac:	617b      	str	r3, [r7, #20]
 80031ae:	e0cd      	b.n	800334c <HAL_GPIO_DeInit+0x1b8>
 80031b0:	2201      	movs	r2, #1
 80031b2:	697b      	ldr	r3, [r7, #20]
 80031b4:	fa02 f303 	lsl.w	r3, r2, r3
 80031b8:	613b      	str	r3, [r7, #16]
 80031ba:	683a      	ldr	r2, [r7, #0]
 80031bc:	693b      	ldr	r3, [r7, #16]
 80031be:	4013      	ands	r3, r2
 80031c0:	60fb      	str	r3, [r7, #12]
 80031c2:	68fa      	ldr	r2, [r7, #12]
 80031c4:	693b      	ldr	r3, [r7, #16]
 80031c6:	429a      	cmp	r2, r3
 80031c8:	f040 80bd 	bne.w	8003346 <HAL_GPIO_DeInit+0x1b2>
 80031cc:	4a65      	ldr	r2, [pc, #404]	@ (8003364 <HAL_GPIO_DeInit+0x1d0>)
 80031ce:	697b      	ldr	r3, [r7, #20]
 80031d0:	089b      	lsrs	r3, r3, #2
 80031d2:	3302      	adds	r3, #2
 80031d4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80031d8:	60bb      	str	r3, [r7, #8]
 80031da:	697b      	ldr	r3, [r7, #20]
 80031dc:	f003 0303 	and.w	r3, r3, #3
 80031e0:	009b      	lsls	r3, r3, #2
 80031e2:	220f      	movs	r2, #15
 80031e4:	fa02 f303 	lsl.w	r3, r2, r3
 80031e8:	68ba      	ldr	r2, [r7, #8]
 80031ea:	4013      	ands	r3, r2
 80031ec:	60bb      	str	r3, [r7, #8]
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	4a5d      	ldr	r2, [pc, #372]	@ (8003368 <HAL_GPIO_DeInit+0x1d4>)
 80031f2:	4293      	cmp	r3, r2
 80031f4:	d02b      	beq.n	800324e <HAL_GPIO_DeInit+0xba>
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	4a5c      	ldr	r2, [pc, #368]	@ (800336c <HAL_GPIO_DeInit+0x1d8>)
 80031fa:	4293      	cmp	r3, r2
 80031fc:	d025      	beq.n	800324a <HAL_GPIO_DeInit+0xb6>
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	4a5b      	ldr	r2, [pc, #364]	@ (8003370 <HAL_GPIO_DeInit+0x1dc>)
 8003202:	4293      	cmp	r3, r2
 8003204:	d01f      	beq.n	8003246 <HAL_GPIO_DeInit+0xb2>
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	4a5a      	ldr	r2, [pc, #360]	@ (8003374 <HAL_GPIO_DeInit+0x1e0>)
 800320a:	4293      	cmp	r3, r2
 800320c:	d019      	beq.n	8003242 <HAL_GPIO_DeInit+0xae>
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	4a59      	ldr	r2, [pc, #356]	@ (8003378 <HAL_GPIO_DeInit+0x1e4>)
 8003212:	4293      	cmp	r3, r2
 8003214:	d013      	beq.n	800323e <HAL_GPIO_DeInit+0xaa>
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	4a58      	ldr	r2, [pc, #352]	@ (800337c <HAL_GPIO_DeInit+0x1e8>)
 800321a:	4293      	cmp	r3, r2
 800321c:	d00d      	beq.n	800323a <HAL_GPIO_DeInit+0xa6>
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	4a57      	ldr	r2, [pc, #348]	@ (8003380 <HAL_GPIO_DeInit+0x1ec>)
 8003222:	4293      	cmp	r3, r2
 8003224:	d007      	beq.n	8003236 <HAL_GPIO_DeInit+0xa2>
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	4a56      	ldr	r2, [pc, #344]	@ (8003384 <HAL_GPIO_DeInit+0x1f0>)
 800322a:	4293      	cmp	r3, r2
 800322c:	d101      	bne.n	8003232 <HAL_GPIO_DeInit+0x9e>
 800322e:	2307      	movs	r3, #7
 8003230:	e00e      	b.n	8003250 <HAL_GPIO_DeInit+0xbc>
 8003232:	2308      	movs	r3, #8
 8003234:	e00c      	b.n	8003250 <HAL_GPIO_DeInit+0xbc>
 8003236:	2306      	movs	r3, #6
 8003238:	e00a      	b.n	8003250 <HAL_GPIO_DeInit+0xbc>
 800323a:	2305      	movs	r3, #5
 800323c:	e008      	b.n	8003250 <HAL_GPIO_DeInit+0xbc>
 800323e:	2304      	movs	r3, #4
 8003240:	e006      	b.n	8003250 <HAL_GPIO_DeInit+0xbc>
 8003242:	2303      	movs	r3, #3
 8003244:	e004      	b.n	8003250 <HAL_GPIO_DeInit+0xbc>
 8003246:	2302      	movs	r3, #2
 8003248:	e002      	b.n	8003250 <HAL_GPIO_DeInit+0xbc>
 800324a:	2301      	movs	r3, #1
 800324c:	e000      	b.n	8003250 <HAL_GPIO_DeInit+0xbc>
 800324e:	2300      	movs	r3, #0
 8003250:	697a      	ldr	r2, [r7, #20]
 8003252:	f002 0203 	and.w	r2, r2, #3
 8003256:	0092      	lsls	r2, r2, #2
 8003258:	4093      	lsls	r3, r2
 800325a:	68ba      	ldr	r2, [r7, #8]
 800325c:	429a      	cmp	r2, r3
 800325e:	d132      	bne.n	80032c6 <HAL_GPIO_DeInit+0x132>
 8003260:	4b49      	ldr	r3, [pc, #292]	@ (8003388 <HAL_GPIO_DeInit+0x1f4>)
 8003262:	681a      	ldr	r2, [r3, #0]
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	43db      	mvns	r3, r3
 8003268:	4947      	ldr	r1, [pc, #284]	@ (8003388 <HAL_GPIO_DeInit+0x1f4>)
 800326a:	4013      	ands	r3, r2
 800326c:	600b      	str	r3, [r1, #0]
 800326e:	4b46      	ldr	r3, [pc, #280]	@ (8003388 <HAL_GPIO_DeInit+0x1f4>)
 8003270:	685a      	ldr	r2, [r3, #4]
 8003272:	68fb      	ldr	r3, [r7, #12]
 8003274:	43db      	mvns	r3, r3
 8003276:	4944      	ldr	r1, [pc, #272]	@ (8003388 <HAL_GPIO_DeInit+0x1f4>)
 8003278:	4013      	ands	r3, r2
 800327a:	604b      	str	r3, [r1, #4]
 800327c:	4b42      	ldr	r3, [pc, #264]	@ (8003388 <HAL_GPIO_DeInit+0x1f4>)
 800327e:	68da      	ldr	r2, [r3, #12]
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	43db      	mvns	r3, r3
 8003284:	4940      	ldr	r1, [pc, #256]	@ (8003388 <HAL_GPIO_DeInit+0x1f4>)
 8003286:	4013      	ands	r3, r2
 8003288:	60cb      	str	r3, [r1, #12]
 800328a:	4b3f      	ldr	r3, [pc, #252]	@ (8003388 <HAL_GPIO_DeInit+0x1f4>)
 800328c:	689a      	ldr	r2, [r3, #8]
 800328e:	68fb      	ldr	r3, [r7, #12]
 8003290:	43db      	mvns	r3, r3
 8003292:	493d      	ldr	r1, [pc, #244]	@ (8003388 <HAL_GPIO_DeInit+0x1f4>)
 8003294:	4013      	ands	r3, r2
 8003296:	608b      	str	r3, [r1, #8]
 8003298:	697b      	ldr	r3, [r7, #20]
 800329a:	f003 0303 	and.w	r3, r3, #3
 800329e:	009b      	lsls	r3, r3, #2
 80032a0:	220f      	movs	r2, #15
 80032a2:	fa02 f303 	lsl.w	r3, r2, r3
 80032a6:	60bb      	str	r3, [r7, #8]
 80032a8:	4a2e      	ldr	r2, [pc, #184]	@ (8003364 <HAL_GPIO_DeInit+0x1d0>)
 80032aa:	697b      	ldr	r3, [r7, #20]
 80032ac:	089b      	lsrs	r3, r3, #2
 80032ae:	3302      	adds	r3, #2
 80032b0:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80032b4:	68bb      	ldr	r3, [r7, #8]
 80032b6:	43da      	mvns	r2, r3
 80032b8:	482a      	ldr	r0, [pc, #168]	@ (8003364 <HAL_GPIO_DeInit+0x1d0>)
 80032ba:	697b      	ldr	r3, [r7, #20]
 80032bc:	089b      	lsrs	r3, r3, #2
 80032be:	400a      	ands	r2, r1
 80032c0:	3302      	adds	r3, #2
 80032c2:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	681a      	ldr	r2, [r3, #0]
 80032ca:	697b      	ldr	r3, [r7, #20]
 80032cc:	005b      	lsls	r3, r3, #1
 80032ce:	2103      	movs	r1, #3
 80032d0:	fa01 f303 	lsl.w	r3, r1, r3
 80032d4:	43db      	mvns	r3, r3
 80032d6:	401a      	ands	r2, r3
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	601a      	str	r2, [r3, #0]
 80032dc:	697b      	ldr	r3, [r7, #20]
 80032de:	08da      	lsrs	r2, r3, #3
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	3208      	adds	r2, #8
 80032e4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80032e8:	697b      	ldr	r3, [r7, #20]
 80032ea:	f003 0307 	and.w	r3, r3, #7
 80032ee:	009b      	lsls	r3, r3, #2
 80032f0:	220f      	movs	r2, #15
 80032f2:	fa02 f303 	lsl.w	r3, r2, r3
 80032f6:	43db      	mvns	r3, r3
 80032f8:	697a      	ldr	r2, [r7, #20]
 80032fa:	08d2      	lsrs	r2, r2, #3
 80032fc:	4019      	ands	r1, r3
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	3208      	adds	r2, #8
 8003302:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	68da      	ldr	r2, [r3, #12]
 800330a:	697b      	ldr	r3, [r7, #20]
 800330c:	005b      	lsls	r3, r3, #1
 800330e:	2103      	movs	r1, #3
 8003310:	fa01 f303 	lsl.w	r3, r1, r3
 8003314:	43db      	mvns	r3, r3
 8003316:	401a      	ands	r2, r3
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	60da      	str	r2, [r3, #12]
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	685a      	ldr	r2, [r3, #4]
 8003320:	2101      	movs	r1, #1
 8003322:	697b      	ldr	r3, [r7, #20]
 8003324:	fa01 f303 	lsl.w	r3, r1, r3
 8003328:	43db      	mvns	r3, r3
 800332a:	401a      	ands	r2, r3
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	605a      	str	r2, [r3, #4]
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	689a      	ldr	r2, [r3, #8]
 8003334:	697b      	ldr	r3, [r7, #20]
 8003336:	005b      	lsls	r3, r3, #1
 8003338:	2103      	movs	r1, #3
 800333a:	fa01 f303 	lsl.w	r3, r1, r3
 800333e:	43db      	mvns	r3, r3
 8003340:	401a      	ands	r2, r3
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	609a      	str	r2, [r3, #8]
 8003346:	697b      	ldr	r3, [r7, #20]
 8003348:	3301      	adds	r3, #1
 800334a:	617b      	str	r3, [r7, #20]
 800334c:	697b      	ldr	r3, [r7, #20]
 800334e:	2b0f      	cmp	r3, #15
 8003350:	f67f af2e 	bls.w	80031b0 <HAL_GPIO_DeInit+0x1c>
 8003354:	bf00      	nop
 8003356:	bf00      	nop
 8003358:	371c      	adds	r7, #28
 800335a:	46bd      	mov	sp, r7
 800335c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003360:	4770      	bx	lr
 8003362:	bf00      	nop
 8003364:	40013800 	.word	0x40013800
 8003368:	40020000 	.word	0x40020000
 800336c:	40020400 	.word	0x40020400
 8003370:	40020800 	.word	0x40020800
 8003374:	40020c00 	.word	0x40020c00
 8003378:	40021000 	.word	0x40021000
 800337c:	40021400 	.word	0x40021400
 8003380:	40021800 	.word	0x40021800
 8003384:	40021c00 	.word	0x40021c00
 8003388:	40013c00 	.word	0x40013c00

0800338c <HAL_GPIO_WritePin>:
 800338c:	b480      	push	{r7}
 800338e:	b083      	sub	sp, #12
 8003390:	af00      	add	r7, sp, #0
 8003392:	6078      	str	r0, [r7, #4]
 8003394:	460b      	mov	r3, r1
 8003396:	807b      	strh	r3, [r7, #2]
 8003398:	4613      	mov	r3, r2
 800339a:	707b      	strb	r3, [r7, #1]
 800339c:	787b      	ldrb	r3, [r7, #1]
 800339e:	2b00      	cmp	r3, #0
 80033a0:	d003      	beq.n	80033aa <HAL_GPIO_WritePin+0x1e>
 80033a2:	887a      	ldrh	r2, [r7, #2]
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	619a      	str	r2, [r3, #24]
 80033a8:	e003      	b.n	80033b2 <HAL_GPIO_WritePin+0x26>
 80033aa:	887b      	ldrh	r3, [r7, #2]
 80033ac:	041a      	lsls	r2, r3, #16
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	619a      	str	r2, [r3, #24]
 80033b2:	bf00      	nop
 80033b4:	370c      	adds	r7, #12
 80033b6:	46bd      	mov	sp, r7
 80033b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033bc:	4770      	bx	lr

080033be <HAL_GPIO_TogglePin>:
 80033be:	b480      	push	{r7}
 80033c0:	b085      	sub	sp, #20
 80033c2:	af00      	add	r7, sp, #0
 80033c4:	6078      	str	r0, [r7, #4]
 80033c6:	460b      	mov	r3, r1
 80033c8:	807b      	strh	r3, [r7, #2]
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	695b      	ldr	r3, [r3, #20]
 80033ce:	60fb      	str	r3, [r7, #12]
 80033d0:	887a      	ldrh	r2, [r7, #2]
 80033d2:	68fb      	ldr	r3, [r7, #12]
 80033d4:	4013      	ands	r3, r2
 80033d6:	041a      	lsls	r2, r3, #16
 80033d8:	68fb      	ldr	r3, [r7, #12]
 80033da:	43d9      	mvns	r1, r3
 80033dc:	887b      	ldrh	r3, [r7, #2]
 80033de:	400b      	ands	r3, r1
 80033e0:	431a      	orrs	r2, r3
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	619a      	str	r2, [r3, #24]
 80033e6:	bf00      	nop
 80033e8:	3714      	adds	r7, #20
 80033ea:	46bd      	mov	sp, r7
 80033ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033f0:	4770      	bx	lr
	...

080033f4 <HAL_I2C_Init>:
 80033f4:	b580      	push	{r7, lr}
 80033f6:	b084      	sub	sp, #16
 80033f8:	af00      	add	r7, sp, #0
 80033fa:	6078      	str	r0, [r7, #4]
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d101      	bne.n	8003406 <HAL_I2C_Init+0x12>
 8003402:	2301      	movs	r3, #1
 8003404:	e12b      	b.n	800365e <HAL_I2C_Init+0x26a>
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800340c:	b2db      	uxtb	r3, r3
 800340e:	2b00      	cmp	r3, #0
 8003410:	d106      	bne.n	8003420 <HAL_I2C_Init+0x2c>
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	2200      	movs	r2, #0
 8003416:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800341a:	6878      	ldr	r0, [r7, #4]
 800341c:	f7fd fa0e 	bl	800083c <HAL_I2C_MspInit>
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	2224      	movs	r2, #36	@ 0x24
 8003424:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	681a      	ldr	r2, [r3, #0]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	f022 0201 	bic.w	r2, r2, #1
 8003436:	601a      	str	r2, [r3, #0]
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	681a      	ldr	r2, [r3, #0]
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003446:	601a      	str	r2, [r3, #0]
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	681b      	ldr	r3, [r3, #0]
 800344c:	681a      	ldr	r2, [r3, #0]
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003456:	601a      	str	r2, [r3, #0]
 8003458:	f001 ffd2 	bl	8005400 <HAL_RCC_GetPCLK1Freq>
 800345c:	60f8      	str	r0, [r7, #12]
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	685b      	ldr	r3, [r3, #4]
 8003462:	4a81      	ldr	r2, [pc, #516]	@ (8003668 <HAL_I2C_Init+0x274>)
 8003464:	4293      	cmp	r3, r2
 8003466:	d807      	bhi.n	8003478 <HAL_I2C_Init+0x84>
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	4a80      	ldr	r2, [pc, #512]	@ (800366c <HAL_I2C_Init+0x278>)
 800346c:	4293      	cmp	r3, r2
 800346e:	bf94      	ite	ls
 8003470:	2301      	movls	r3, #1
 8003472:	2300      	movhi	r3, #0
 8003474:	b2db      	uxtb	r3, r3
 8003476:	e006      	b.n	8003486 <HAL_I2C_Init+0x92>
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	4a7d      	ldr	r2, [pc, #500]	@ (8003670 <HAL_I2C_Init+0x27c>)
 800347c:	4293      	cmp	r3, r2
 800347e:	bf94      	ite	ls
 8003480:	2301      	movls	r3, #1
 8003482:	2300      	movhi	r3, #0
 8003484:	b2db      	uxtb	r3, r3
 8003486:	2b00      	cmp	r3, #0
 8003488:	d001      	beq.n	800348e <HAL_I2C_Init+0x9a>
 800348a:	2301      	movs	r3, #1
 800348c:	e0e7      	b.n	800365e <HAL_I2C_Init+0x26a>
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	4a78      	ldr	r2, [pc, #480]	@ (8003674 <HAL_I2C_Init+0x280>)
 8003492:	fba2 2303 	umull	r2, r3, r2, r3
 8003496:	0c9b      	lsrs	r3, r3, #18
 8003498:	60bb      	str	r3, [r7, #8]
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	681b      	ldr	r3, [r3, #0]
 800349e:	685b      	ldr	r3, [r3, #4]
 80034a0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	68ba      	ldr	r2, [r7, #8]
 80034aa:	430a      	orrs	r2, r1
 80034ac:	605a      	str	r2, [r3, #4]
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	6a1b      	ldr	r3, [r3, #32]
 80034b4:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	685b      	ldr	r3, [r3, #4]
 80034bc:	4a6a      	ldr	r2, [pc, #424]	@ (8003668 <HAL_I2C_Init+0x274>)
 80034be:	4293      	cmp	r3, r2
 80034c0:	d802      	bhi.n	80034c8 <HAL_I2C_Init+0xd4>
 80034c2:	68bb      	ldr	r3, [r7, #8]
 80034c4:	3301      	adds	r3, #1
 80034c6:	e009      	b.n	80034dc <HAL_I2C_Init+0xe8>
 80034c8:	68bb      	ldr	r3, [r7, #8]
 80034ca:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80034ce:	fb02 f303 	mul.w	r3, r2, r3
 80034d2:	4a69      	ldr	r2, [pc, #420]	@ (8003678 <HAL_I2C_Init+0x284>)
 80034d4:	fba2 2303 	umull	r2, r3, r2, r3
 80034d8:	099b      	lsrs	r3, r3, #6
 80034da:	3301      	adds	r3, #1
 80034dc:	687a      	ldr	r2, [r7, #4]
 80034de:	6812      	ldr	r2, [r2, #0]
 80034e0:	430b      	orrs	r3, r1
 80034e2:	6213      	str	r3, [r2, #32]
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	69db      	ldr	r3, [r3, #28]
 80034ea:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80034ee:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	685b      	ldr	r3, [r3, #4]
 80034f6:	495c      	ldr	r1, [pc, #368]	@ (8003668 <HAL_I2C_Init+0x274>)
 80034f8:	428b      	cmp	r3, r1
 80034fa:	d819      	bhi.n	8003530 <HAL_I2C_Init+0x13c>
 80034fc:	68fb      	ldr	r3, [r7, #12]
 80034fe:	1e59      	subs	r1, r3, #1
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	685b      	ldr	r3, [r3, #4]
 8003504:	005b      	lsls	r3, r3, #1
 8003506:	fbb1 f3f3 	udiv	r3, r1, r3
 800350a:	1c59      	adds	r1, r3, #1
 800350c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8003510:	400b      	ands	r3, r1
 8003512:	2b00      	cmp	r3, #0
 8003514:	d00a      	beq.n	800352c <HAL_I2C_Init+0x138>
 8003516:	68fb      	ldr	r3, [r7, #12]
 8003518:	1e59      	subs	r1, r3, #1
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	685b      	ldr	r3, [r3, #4]
 800351e:	005b      	lsls	r3, r3, #1
 8003520:	fbb1 f3f3 	udiv	r3, r1, r3
 8003524:	3301      	adds	r3, #1
 8003526:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800352a:	e051      	b.n	80035d0 <HAL_I2C_Init+0x1dc>
 800352c:	2304      	movs	r3, #4
 800352e:	e04f      	b.n	80035d0 <HAL_I2C_Init+0x1dc>
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	689b      	ldr	r3, [r3, #8]
 8003534:	2b00      	cmp	r3, #0
 8003536:	d111      	bne.n	800355c <HAL_I2C_Init+0x168>
 8003538:	68fb      	ldr	r3, [r7, #12]
 800353a:	1e58      	subs	r0, r3, #1
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	6859      	ldr	r1, [r3, #4]
 8003540:	460b      	mov	r3, r1
 8003542:	005b      	lsls	r3, r3, #1
 8003544:	440b      	add	r3, r1
 8003546:	fbb0 f3f3 	udiv	r3, r0, r3
 800354a:	3301      	adds	r3, #1
 800354c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003550:	2b00      	cmp	r3, #0
 8003552:	bf0c      	ite	eq
 8003554:	2301      	moveq	r3, #1
 8003556:	2300      	movne	r3, #0
 8003558:	b2db      	uxtb	r3, r3
 800355a:	e012      	b.n	8003582 <HAL_I2C_Init+0x18e>
 800355c:	68fb      	ldr	r3, [r7, #12]
 800355e:	1e58      	subs	r0, r3, #1
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	6859      	ldr	r1, [r3, #4]
 8003564:	460b      	mov	r3, r1
 8003566:	009b      	lsls	r3, r3, #2
 8003568:	440b      	add	r3, r1
 800356a:	0099      	lsls	r1, r3, #2
 800356c:	440b      	add	r3, r1
 800356e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003572:	3301      	adds	r3, #1
 8003574:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003578:	2b00      	cmp	r3, #0
 800357a:	bf0c      	ite	eq
 800357c:	2301      	moveq	r3, #1
 800357e:	2300      	movne	r3, #0
 8003580:	b2db      	uxtb	r3, r3
 8003582:	2b00      	cmp	r3, #0
 8003584:	d001      	beq.n	800358a <HAL_I2C_Init+0x196>
 8003586:	2301      	movs	r3, #1
 8003588:	e022      	b.n	80035d0 <HAL_I2C_Init+0x1dc>
 800358a:	687b      	ldr	r3, [r7, #4]
 800358c:	689b      	ldr	r3, [r3, #8]
 800358e:	2b00      	cmp	r3, #0
 8003590:	d10e      	bne.n	80035b0 <HAL_I2C_Init+0x1bc>
 8003592:	68fb      	ldr	r3, [r7, #12]
 8003594:	1e58      	subs	r0, r3, #1
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	6859      	ldr	r1, [r3, #4]
 800359a:	460b      	mov	r3, r1
 800359c:	005b      	lsls	r3, r3, #1
 800359e:	440b      	add	r3, r1
 80035a0:	fbb0 f3f3 	udiv	r3, r0, r3
 80035a4:	3301      	adds	r3, #1
 80035a6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80035aa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80035ae:	e00f      	b.n	80035d0 <HAL_I2C_Init+0x1dc>
 80035b0:	68fb      	ldr	r3, [r7, #12]
 80035b2:	1e58      	subs	r0, r3, #1
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	6859      	ldr	r1, [r3, #4]
 80035b8:	460b      	mov	r3, r1
 80035ba:	009b      	lsls	r3, r3, #2
 80035bc:	440b      	add	r3, r1
 80035be:	0099      	lsls	r1, r3, #2
 80035c0:	440b      	add	r3, r1
 80035c2:	fbb0 f3f3 	udiv	r3, r0, r3
 80035c6:	3301      	adds	r3, #1
 80035c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80035cc:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80035d0:	6879      	ldr	r1, [r7, #4]
 80035d2:	6809      	ldr	r1, [r1, #0]
 80035d4:	4313      	orrs	r3, r2
 80035d6:	61cb      	str	r3, [r1, #28]
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	69da      	ldr	r2, [r3, #28]
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	6a1b      	ldr	r3, [r3, #32]
 80035ea:	431a      	orrs	r2, r3
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	430a      	orrs	r2, r1
 80035f2:	601a      	str	r2, [r3, #0]
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	689b      	ldr	r3, [r3, #8]
 80035fa:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80035fe:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8003602:	687a      	ldr	r2, [r7, #4]
 8003604:	6911      	ldr	r1, [r2, #16]
 8003606:	687a      	ldr	r2, [r7, #4]
 8003608:	68d2      	ldr	r2, [r2, #12]
 800360a:	4311      	orrs	r1, r2
 800360c:	687a      	ldr	r2, [r7, #4]
 800360e:	6812      	ldr	r2, [r2, #0]
 8003610:	430b      	orrs	r3, r1
 8003612:	6093      	str	r3, [r2, #8]
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	68db      	ldr	r3, [r3, #12]
 800361a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	695a      	ldr	r2, [r3, #20]
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	699b      	ldr	r3, [r3, #24]
 8003626:	431a      	orrs	r2, r3
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	681b      	ldr	r3, [r3, #0]
 800362c:	430a      	orrs	r2, r1
 800362e:	60da      	str	r2, [r3, #12]
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	681a      	ldr	r2, [r3, #0]
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	f042 0201 	orr.w	r2, r2, #1
 800363e:	601a      	str	r2, [r3, #0]
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	2200      	movs	r2, #0
 8003644:	641a      	str	r2, [r3, #64]	@ 0x40
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	2220      	movs	r2, #32
 800364a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	2200      	movs	r2, #0
 8003652:	631a      	str	r2, [r3, #48]	@ 0x30
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	2200      	movs	r2, #0
 8003658:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800365c:	2300      	movs	r3, #0
 800365e:	4618      	mov	r0, r3
 8003660:	3710      	adds	r7, #16
 8003662:	46bd      	mov	sp, r7
 8003664:	bd80      	pop	{r7, pc}
 8003666:	bf00      	nop
 8003668:	000186a0 	.word	0x000186a0
 800366c:	001e847f 	.word	0x001e847f
 8003670:	003d08ff 	.word	0x003d08ff
 8003674:	431bde83 	.word	0x431bde83
 8003678:	10624dd3 	.word	0x10624dd3

0800367c <HAL_PCD_Init>:
 800367c:	b580      	push	{r7, lr}
 800367e:	b086      	sub	sp, #24
 8003680:	af02      	add	r7, sp, #8
 8003682:	6078      	str	r0, [r7, #4]
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	2b00      	cmp	r3, #0
 8003688:	d101      	bne.n	800368e <HAL_PCD_Init+0x12>
 800368a:	2301      	movs	r3, #1
 800368c:	e101      	b.n	8003892 <HAL_PCD_Init+0x216>
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	60bb      	str	r3, [r7, #8]
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	f893 3495 	ldrb.w	r3, [r3, #1173]	@ 0x495
 800369a:	b2db      	uxtb	r3, r3
 800369c:	2b00      	cmp	r3, #0
 800369e:	d106      	bne.n	80036ae <HAL_PCD_Init+0x32>
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	2200      	movs	r2, #0
 80036a4:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80036a8:	6878      	ldr	r0, [r7, #4]
 80036aa:	f7fd fef7 	bl	800149c <HAL_PCD_MspInit>
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	2203      	movs	r2, #3
 80036b2:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 80036b6:	68bb      	ldr	r3, [r7, #8]
 80036b8:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80036bc:	d102      	bne.n	80036c4 <HAL_PCD_Init+0x48>
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	2200      	movs	r2, #0
 80036c2:	719a      	strb	r2, [r3, #6]
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	4618      	mov	r0, r3
 80036ca:	f003 fd9a 	bl	8007202 <USB_DisableGlobalInt>
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	6818      	ldr	r0, [r3, #0]
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	7c1a      	ldrb	r2, [r3, #16]
 80036d6:	f88d 2000 	strb.w	r2, [sp]
 80036da:	3304      	adds	r3, #4
 80036dc:	cb0e      	ldmia	r3, {r1, r2, r3}
 80036de:	f003 fc79 	bl	8006fd4 <USB_CoreInit>
 80036e2:	4603      	mov	r3, r0
 80036e4:	2b00      	cmp	r3, #0
 80036e6:	d005      	beq.n	80036f4 <HAL_PCD_Init+0x78>
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	2202      	movs	r2, #2
 80036ec:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 80036f0:	2301      	movs	r3, #1
 80036f2:	e0ce      	b.n	8003892 <HAL_PCD_Init+0x216>
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	2100      	movs	r1, #0
 80036fa:	4618      	mov	r0, r3
 80036fc:	f003 fd92 	bl	8007224 <USB_SetCurrentMode>
 8003700:	4603      	mov	r3, r0
 8003702:	2b00      	cmp	r3, #0
 8003704:	d005      	beq.n	8003712 <HAL_PCD_Init+0x96>
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	2202      	movs	r2, #2
 800370a:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 800370e:	2301      	movs	r3, #1
 8003710:	e0bf      	b.n	8003892 <HAL_PCD_Init+0x216>
 8003712:	2300      	movs	r3, #0
 8003714:	73fb      	strb	r3, [r7, #15]
 8003716:	e04a      	b.n	80037ae <HAL_PCD_Init+0x132>
 8003718:	7bfa      	ldrb	r2, [r7, #15]
 800371a:	6879      	ldr	r1, [r7, #4]
 800371c:	4613      	mov	r3, r2
 800371e:	00db      	lsls	r3, r3, #3
 8003720:	4413      	add	r3, r2
 8003722:	009b      	lsls	r3, r3, #2
 8003724:	440b      	add	r3, r1
 8003726:	3315      	adds	r3, #21
 8003728:	2201      	movs	r2, #1
 800372a:	701a      	strb	r2, [r3, #0]
 800372c:	7bfa      	ldrb	r2, [r7, #15]
 800372e:	6879      	ldr	r1, [r7, #4]
 8003730:	4613      	mov	r3, r2
 8003732:	00db      	lsls	r3, r3, #3
 8003734:	4413      	add	r3, r2
 8003736:	009b      	lsls	r3, r3, #2
 8003738:	440b      	add	r3, r1
 800373a:	3314      	adds	r3, #20
 800373c:	7bfa      	ldrb	r2, [r7, #15]
 800373e:	701a      	strb	r2, [r3, #0]
 8003740:	7bfa      	ldrb	r2, [r7, #15]
 8003742:	7bfb      	ldrb	r3, [r7, #15]
 8003744:	b298      	uxth	r0, r3
 8003746:	6879      	ldr	r1, [r7, #4]
 8003748:	4613      	mov	r3, r2
 800374a:	00db      	lsls	r3, r3, #3
 800374c:	4413      	add	r3, r2
 800374e:	009b      	lsls	r3, r3, #2
 8003750:	440b      	add	r3, r1
 8003752:	332e      	adds	r3, #46	@ 0x2e
 8003754:	4602      	mov	r2, r0
 8003756:	801a      	strh	r2, [r3, #0]
 8003758:	7bfa      	ldrb	r2, [r7, #15]
 800375a:	6879      	ldr	r1, [r7, #4]
 800375c:	4613      	mov	r3, r2
 800375e:	00db      	lsls	r3, r3, #3
 8003760:	4413      	add	r3, r2
 8003762:	009b      	lsls	r3, r3, #2
 8003764:	440b      	add	r3, r1
 8003766:	3318      	adds	r3, #24
 8003768:	2200      	movs	r2, #0
 800376a:	701a      	strb	r2, [r3, #0]
 800376c:	7bfa      	ldrb	r2, [r7, #15]
 800376e:	6879      	ldr	r1, [r7, #4]
 8003770:	4613      	mov	r3, r2
 8003772:	00db      	lsls	r3, r3, #3
 8003774:	4413      	add	r3, r2
 8003776:	009b      	lsls	r3, r3, #2
 8003778:	440b      	add	r3, r1
 800377a:	331c      	adds	r3, #28
 800377c:	2200      	movs	r2, #0
 800377e:	601a      	str	r2, [r3, #0]
 8003780:	7bfa      	ldrb	r2, [r7, #15]
 8003782:	6879      	ldr	r1, [r7, #4]
 8003784:	4613      	mov	r3, r2
 8003786:	00db      	lsls	r3, r3, #3
 8003788:	4413      	add	r3, r2
 800378a:	009b      	lsls	r3, r3, #2
 800378c:	440b      	add	r3, r1
 800378e:	3320      	adds	r3, #32
 8003790:	2200      	movs	r2, #0
 8003792:	601a      	str	r2, [r3, #0]
 8003794:	7bfa      	ldrb	r2, [r7, #15]
 8003796:	6879      	ldr	r1, [r7, #4]
 8003798:	4613      	mov	r3, r2
 800379a:	00db      	lsls	r3, r3, #3
 800379c:	4413      	add	r3, r2
 800379e:	009b      	lsls	r3, r3, #2
 80037a0:	440b      	add	r3, r1
 80037a2:	3324      	adds	r3, #36	@ 0x24
 80037a4:	2200      	movs	r2, #0
 80037a6:	601a      	str	r2, [r3, #0]
 80037a8:	7bfb      	ldrb	r3, [r7, #15]
 80037aa:	3301      	adds	r3, #1
 80037ac:	73fb      	strb	r3, [r7, #15]
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	791b      	ldrb	r3, [r3, #4]
 80037b2:	7bfa      	ldrb	r2, [r7, #15]
 80037b4:	429a      	cmp	r2, r3
 80037b6:	d3af      	bcc.n	8003718 <HAL_PCD_Init+0x9c>
 80037b8:	2300      	movs	r3, #0
 80037ba:	73fb      	strb	r3, [r7, #15]
 80037bc:	e044      	b.n	8003848 <HAL_PCD_Init+0x1cc>
 80037be:	7bfa      	ldrb	r2, [r7, #15]
 80037c0:	6879      	ldr	r1, [r7, #4]
 80037c2:	4613      	mov	r3, r2
 80037c4:	00db      	lsls	r3, r3, #3
 80037c6:	4413      	add	r3, r2
 80037c8:	009b      	lsls	r3, r3, #2
 80037ca:	440b      	add	r3, r1
 80037cc:	f203 2355 	addw	r3, r3, #597	@ 0x255
 80037d0:	2200      	movs	r2, #0
 80037d2:	701a      	strb	r2, [r3, #0]
 80037d4:	7bfa      	ldrb	r2, [r7, #15]
 80037d6:	6879      	ldr	r1, [r7, #4]
 80037d8:	4613      	mov	r3, r2
 80037da:	00db      	lsls	r3, r3, #3
 80037dc:	4413      	add	r3, r2
 80037de:	009b      	lsls	r3, r3, #2
 80037e0:	440b      	add	r3, r1
 80037e2:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 80037e6:	7bfa      	ldrb	r2, [r7, #15]
 80037e8:	701a      	strb	r2, [r3, #0]
 80037ea:	7bfa      	ldrb	r2, [r7, #15]
 80037ec:	6879      	ldr	r1, [r7, #4]
 80037ee:	4613      	mov	r3, r2
 80037f0:	00db      	lsls	r3, r3, #3
 80037f2:	4413      	add	r3, r2
 80037f4:	009b      	lsls	r3, r3, #2
 80037f6:	440b      	add	r3, r1
 80037f8:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 80037fc:	2200      	movs	r2, #0
 80037fe:	701a      	strb	r2, [r3, #0]
 8003800:	7bfa      	ldrb	r2, [r7, #15]
 8003802:	6879      	ldr	r1, [r7, #4]
 8003804:	4613      	mov	r3, r2
 8003806:	00db      	lsls	r3, r3, #3
 8003808:	4413      	add	r3, r2
 800380a:	009b      	lsls	r3, r3, #2
 800380c:	440b      	add	r3, r1
 800380e:	f503 7317 	add.w	r3, r3, #604	@ 0x25c
 8003812:	2200      	movs	r2, #0
 8003814:	601a      	str	r2, [r3, #0]
 8003816:	7bfa      	ldrb	r2, [r7, #15]
 8003818:	6879      	ldr	r1, [r7, #4]
 800381a:	4613      	mov	r3, r2
 800381c:	00db      	lsls	r3, r3, #3
 800381e:	4413      	add	r3, r2
 8003820:	009b      	lsls	r3, r3, #2
 8003822:	440b      	add	r3, r1
 8003824:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8003828:	2200      	movs	r2, #0
 800382a:	601a      	str	r2, [r3, #0]
 800382c:	7bfa      	ldrb	r2, [r7, #15]
 800382e:	6879      	ldr	r1, [r7, #4]
 8003830:	4613      	mov	r3, r2
 8003832:	00db      	lsls	r3, r3, #3
 8003834:	4413      	add	r3, r2
 8003836:	009b      	lsls	r3, r3, #2
 8003838:	440b      	add	r3, r1
 800383a:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 800383e:	2200      	movs	r2, #0
 8003840:	601a      	str	r2, [r3, #0]
 8003842:	7bfb      	ldrb	r3, [r7, #15]
 8003844:	3301      	adds	r3, #1
 8003846:	73fb      	strb	r3, [r7, #15]
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	791b      	ldrb	r3, [r3, #4]
 800384c:	7bfa      	ldrb	r2, [r7, #15]
 800384e:	429a      	cmp	r2, r3
 8003850:	d3b5      	bcc.n	80037be <HAL_PCD_Init+0x142>
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	6818      	ldr	r0, [r3, #0]
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	7c1a      	ldrb	r2, [r3, #16]
 800385a:	f88d 2000 	strb.w	r2, [sp]
 800385e:	3304      	adds	r3, #4
 8003860:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003862:	f003 fd2b 	bl	80072bc <USB_DevInit>
 8003866:	4603      	mov	r3, r0
 8003868:	2b00      	cmp	r3, #0
 800386a:	d005      	beq.n	8003878 <HAL_PCD_Init+0x1fc>
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	2202      	movs	r2, #2
 8003870:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8003874:	2301      	movs	r3, #1
 8003876:	e00c      	b.n	8003892 <HAL_PCD_Init+0x216>
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	2200      	movs	r2, #0
 800387c:	745a      	strb	r2, [r3, #17]
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	2201      	movs	r2, #1
 8003882:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	4618      	mov	r0, r3
 800388c:	f004 fd75 	bl	800837a <USB_DevDisconnect>
 8003890:	2300      	movs	r3, #0
 8003892:	4618      	mov	r0, r3
 8003894:	3710      	adds	r7, #16
 8003896:	46bd      	mov	sp, r7
 8003898:	bd80      	pop	{r7, pc}

0800389a <HAL_PCD_Start>:
 800389a:	b580      	push	{r7, lr}
 800389c:	b084      	sub	sp, #16
 800389e:	af00      	add	r7, sp, #0
 80038a0:	6078      	str	r0, [r7, #4]
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	60fb      	str	r3, [r7, #12]
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 80038ae:	2b01      	cmp	r3, #1
 80038b0:	d101      	bne.n	80038b6 <HAL_PCD_Start+0x1c>
 80038b2:	2302      	movs	r3, #2
 80038b4:	e022      	b.n	80038fc <HAL_PCD_Start+0x62>
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	2201      	movs	r2, #1
 80038ba:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	68db      	ldr	r3, [r3, #12]
 80038c2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80038c6:	2b00      	cmp	r3, #0
 80038c8:	d009      	beq.n	80038de <HAL_PCD_Start+0x44>
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	7b5b      	ldrb	r3, [r3, #13]
 80038ce:	2b01      	cmp	r3, #1
 80038d0:	d105      	bne.n	80038de <HAL_PCD_Start+0x44>
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80038d6:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 80038da:	68fb      	ldr	r3, [r7, #12]
 80038dc:	639a      	str	r2, [r3, #56]	@ 0x38
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	4618      	mov	r0, r3
 80038e4:	f003 fc7c 	bl	80071e0 <USB_EnableGlobalInt>
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	4618      	mov	r0, r3
 80038ee:	f004 fd23 	bl	8008338 <USB_DevConnect>
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	2200      	movs	r2, #0
 80038f6:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80038fa:	2300      	movs	r3, #0
 80038fc:	4618      	mov	r0, r3
 80038fe:	3710      	adds	r7, #16
 8003900:	46bd      	mov	sp, r7
 8003902:	bd80      	pop	{r7, pc}

08003904 <HAL_PCD_IRQHandler>:
 8003904:	b590      	push	{r4, r7, lr}
 8003906:	b08d      	sub	sp, #52	@ 0x34
 8003908:	af00      	add	r7, sp, #0
 800390a:	6078      	str	r0, [r7, #4]
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	623b      	str	r3, [r7, #32]
 8003912:	6a3b      	ldr	r3, [r7, #32]
 8003914:	61fb      	str	r3, [r7, #28]
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	4618      	mov	r0, r3
 800391c:	f004 fde1 	bl	80084e2 <USB_GetMode>
 8003920:	4603      	mov	r3, r0
 8003922:	2b00      	cmp	r3, #0
 8003924:	f040 848c 	bne.w	8004240 <HAL_PCD_IRQHandler+0x93c>
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	681b      	ldr	r3, [r3, #0]
 800392c:	4618      	mov	r0, r3
 800392e:	f004 fd45 	bl	80083bc <USB_ReadInterrupts>
 8003932:	4603      	mov	r3, r0
 8003934:	2b00      	cmp	r3, #0
 8003936:	f000 8482 	beq.w	800423e <HAL_PCD_IRQHandler+0x93a>
 800393a:	69fb      	ldr	r3, [r7, #28]
 800393c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003940:	689b      	ldr	r3, [r3, #8]
 8003942:	0a1b      	lsrs	r3, r3, #8
 8003944:	f3c3 020d 	ubfx	r2, r3, #0, #14
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	f8c3 24d4 	str.w	r2, [r3, #1236]	@ 0x4d4
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	4618      	mov	r0, r3
 8003954:	f004 fd32 	bl	80083bc <USB_ReadInterrupts>
 8003958:	4603      	mov	r3, r0
 800395a:	f003 0302 	and.w	r3, r3, #2
 800395e:	2b02      	cmp	r3, #2
 8003960:	d107      	bne.n	8003972 <HAL_PCD_IRQHandler+0x6e>
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	695a      	ldr	r2, [r3, #20]
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	681b      	ldr	r3, [r3, #0]
 800396c:	f002 0202 	and.w	r2, r2, #2
 8003970:	615a      	str	r2, [r3, #20]
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	4618      	mov	r0, r3
 8003978:	f004 fd20 	bl	80083bc <USB_ReadInterrupts>
 800397c:	4603      	mov	r3, r0
 800397e:	f003 0310 	and.w	r3, r3, #16
 8003982:	2b10      	cmp	r3, #16
 8003984:	d161      	bne.n	8003a4a <HAL_PCD_IRQHandler+0x146>
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	699a      	ldr	r2, [r3, #24]
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	f022 0210 	bic.w	r2, r2, #16
 8003994:	619a      	str	r2, [r3, #24]
 8003996:	6a3b      	ldr	r3, [r7, #32]
 8003998:	6a1b      	ldr	r3, [r3, #32]
 800399a:	61bb      	str	r3, [r7, #24]
 800399c:	69bb      	ldr	r3, [r7, #24]
 800399e:	f003 020f 	and.w	r2, r3, #15
 80039a2:	4613      	mov	r3, r2
 80039a4:	00db      	lsls	r3, r3, #3
 80039a6:	4413      	add	r3, r2
 80039a8:	009b      	lsls	r3, r3, #2
 80039aa:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 80039ae:	687a      	ldr	r2, [r7, #4]
 80039b0:	4413      	add	r3, r2
 80039b2:	3304      	adds	r3, #4
 80039b4:	617b      	str	r3, [r7, #20]
 80039b6:	69bb      	ldr	r3, [r7, #24]
 80039b8:	f403 13f0 	and.w	r3, r3, #1966080	@ 0x1e0000
 80039bc:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80039c0:	d124      	bne.n	8003a0c <HAL_PCD_IRQHandler+0x108>
 80039c2:	69ba      	ldr	r2, [r7, #24]
 80039c4:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 80039c8:	4013      	ands	r3, r2
 80039ca:	2b00      	cmp	r3, #0
 80039cc:	d035      	beq.n	8003a3a <HAL_PCD_IRQHandler+0x136>
 80039ce:	697b      	ldr	r3, [r7, #20]
 80039d0:	68d9      	ldr	r1, [r3, #12]
 80039d2:	69bb      	ldr	r3, [r7, #24]
 80039d4:	091b      	lsrs	r3, r3, #4
 80039d6:	b29b      	uxth	r3, r3
 80039d8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80039dc:	b29b      	uxth	r3, r3
 80039de:	461a      	mov	r2, r3
 80039e0:	6a38      	ldr	r0, [r7, #32]
 80039e2:	f004 fb57 	bl	8008094 <USB_ReadPacket>
 80039e6:	697b      	ldr	r3, [r7, #20]
 80039e8:	68da      	ldr	r2, [r3, #12]
 80039ea:	69bb      	ldr	r3, [r7, #24]
 80039ec:	091b      	lsrs	r3, r3, #4
 80039ee:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80039f2:	441a      	add	r2, r3
 80039f4:	697b      	ldr	r3, [r7, #20]
 80039f6:	60da      	str	r2, [r3, #12]
 80039f8:	697b      	ldr	r3, [r7, #20]
 80039fa:	695a      	ldr	r2, [r3, #20]
 80039fc:	69bb      	ldr	r3, [r7, #24]
 80039fe:	091b      	lsrs	r3, r3, #4
 8003a00:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003a04:	441a      	add	r2, r3
 8003a06:	697b      	ldr	r3, [r7, #20]
 8003a08:	615a      	str	r2, [r3, #20]
 8003a0a:	e016      	b.n	8003a3a <HAL_PCD_IRQHandler+0x136>
 8003a0c:	69bb      	ldr	r3, [r7, #24]
 8003a0e:	f403 13f0 	and.w	r3, r3, #1966080	@ 0x1e0000
 8003a12:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8003a16:	d110      	bne.n	8003a3a <HAL_PCD_IRQHandler+0x136>
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8003a1e:	2208      	movs	r2, #8
 8003a20:	4619      	mov	r1, r3
 8003a22:	6a38      	ldr	r0, [r7, #32]
 8003a24:	f004 fb36 	bl	8008094 <USB_ReadPacket>
 8003a28:	697b      	ldr	r3, [r7, #20]
 8003a2a:	695a      	ldr	r2, [r3, #20]
 8003a2c:	69bb      	ldr	r3, [r7, #24]
 8003a2e:	091b      	lsrs	r3, r3, #4
 8003a30:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003a34:	441a      	add	r2, r3
 8003a36:	697b      	ldr	r3, [r7, #20]
 8003a38:	615a      	str	r2, [r3, #20]
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	681b      	ldr	r3, [r3, #0]
 8003a3e:	699a      	ldr	r2, [r3, #24]
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	f042 0210 	orr.w	r2, r2, #16
 8003a48:	619a      	str	r2, [r3, #24]
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	4618      	mov	r0, r3
 8003a50:	f004 fcb4 	bl	80083bc <USB_ReadInterrupts>
 8003a54:	4603      	mov	r3, r0
 8003a56:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003a5a:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8003a5e:	f040 80a7 	bne.w	8003bb0 <HAL_PCD_IRQHandler+0x2ac>
 8003a62:	2300      	movs	r3, #0
 8003a64:	627b      	str	r3, [r7, #36]	@ 0x24
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	4618      	mov	r0, r3
 8003a6c:	f004 fcb9 	bl	80083e2 <USB_ReadDevAllOutEpInterrupt>
 8003a70:	62b8      	str	r0, [r7, #40]	@ 0x28
 8003a72:	e099      	b.n	8003ba8 <HAL_PCD_IRQHandler+0x2a4>
 8003a74:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003a76:	f003 0301 	and.w	r3, r3, #1
 8003a7a:	2b00      	cmp	r3, #0
 8003a7c:	f000 808e 	beq.w	8003b9c <HAL_PCD_IRQHandler+0x298>
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003a86:	b2d2      	uxtb	r2, r2
 8003a88:	4611      	mov	r1, r2
 8003a8a:	4618      	mov	r0, r3
 8003a8c:	f004 fcdd 	bl	800844a <USB_ReadDevOutEPInterrupt>
 8003a90:	6138      	str	r0, [r7, #16]
 8003a92:	693b      	ldr	r3, [r7, #16]
 8003a94:	f003 0301 	and.w	r3, r3, #1
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	d00c      	beq.n	8003ab6 <HAL_PCD_IRQHandler+0x1b2>
 8003a9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a9e:	015a      	lsls	r2, r3, #5
 8003aa0:	69fb      	ldr	r3, [r7, #28]
 8003aa2:	4413      	add	r3, r2
 8003aa4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003aa8:	461a      	mov	r2, r3
 8003aaa:	2301      	movs	r3, #1
 8003aac:	6093      	str	r3, [r2, #8]
 8003aae:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8003ab0:	6878      	ldr	r0, [r7, #4]
 8003ab2:	f000 fea3 	bl	80047fc <PCD_EP_OutXfrComplete_int>
 8003ab6:	693b      	ldr	r3, [r7, #16]
 8003ab8:	f003 0308 	and.w	r3, r3, #8
 8003abc:	2b00      	cmp	r3, #0
 8003abe:	d00c      	beq.n	8003ada <HAL_PCD_IRQHandler+0x1d6>
 8003ac0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ac2:	015a      	lsls	r2, r3, #5
 8003ac4:	69fb      	ldr	r3, [r7, #28]
 8003ac6:	4413      	add	r3, r2
 8003ac8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003acc:	461a      	mov	r2, r3
 8003ace:	2308      	movs	r3, #8
 8003ad0:	6093      	str	r3, [r2, #8]
 8003ad2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8003ad4:	6878      	ldr	r0, [r7, #4]
 8003ad6:	f000 ff79 	bl	80049cc <PCD_EP_OutSetupPacket_int>
 8003ada:	693b      	ldr	r3, [r7, #16]
 8003adc:	f003 0310 	and.w	r3, r3, #16
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	d008      	beq.n	8003af6 <HAL_PCD_IRQHandler+0x1f2>
 8003ae4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ae6:	015a      	lsls	r2, r3, #5
 8003ae8:	69fb      	ldr	r3, [r7, #28]
 8003aea:	4413      	add	r3, r2
 8003aec:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003af0:	461a      	mov	r2, r3
 8003af2:	2310      	movs	r3, #16
 8003af4:	6093      	str	r3, [r2, #8]
 8003af6:	693b      	ldr	r3, [r7, #16]
 8003af8:	f003 0302 	and.w	r3, r3, #2
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d030      	beq.n	8003b62 <HAL_PCD_IRQHandler+0x25e>
 8003b00:	6a3b      	ldr	r3, [r7, #32]
 8003b02:	695b      	ldr	r3, [r3, #20]
 8003b04:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003b08:	2b80      	cmp	r3, #128	@ 0x80
 8003b0a:	d109      	bne.n	8003b20 <HAL_PCD_IRQHandler+0x21c>
 8003b0c:	69fb      	ldr	r3, [r7, #28]
 8003b0e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003b12:	685b      	ldr	r3, [r3, #4]
 8003b14:	69fa      	ldr	r2, [r7, #28]
 8003b16:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003b1a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8003b1e:	6053      	str	r3, [r2, #4]
 8003b20:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003b22:	4613      	mov	r3, r2
 8003b24:	00db      	lsls	r3, r3, #3
 8003b26:	4413      	add	r3, r2
 8003b28:	009b      	lsls	r3, r3, #2
 8003b2a:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8003b2e:	687a      	ldr	r2, [r7, #4]
 8003b30:	4413      	add	r3, r2
 8003b32:	3304      	adds	r3, #4
 8003b34:	617b      	str	r3, [r7, #20]
 8003b36:	697b      	ldr	r3, [r7, #20]
 8003b38:	78db      	ldrb	r3, [r3, #3]
 8003b3a:	2b01      	cmp	r3, #1
 8003b3c:	d108      	bne.n	8003b50 <HAL_PCD_IRQHandler+0x24c>
 8003b3e:	697b      	ldr	r3, [r7, #20]
 8003b40:	2200      	movs	r2, #0
 8003b42:	70da      	strb	r2, [r3, #3]
 8003b44:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b46:	b2db      	uxtb	r3, r3
 8003b48:	4619      	mov	r1, r3
 8003b4a:	6878      	ldr	r0, [r7, #4]
 8003b4c:	f008 f894 	bl	800bc78 <HAL_PCD_ISOOUTIncompleteCallback>
 8003b50:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b52:	015a      	lsls	r2, r3, #5
 8003b54:	69fb      	ldr	r3, [r7, #28]
 8003b56:	4413      	add	r3, r2
 8003b58:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003b5c:	461a      	mov	r2, r3
 8003b5e:	2302      	movs	r3, #2
 8003b60:	6093      	str	r3, [r2, #8]
 8003b62:	693b      	ldr	r3, [r7, #16]
 8003b64:	f003 0320 	and.w	r3, r3, #32
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d008      	beq.n	8003b7e <HAL_PCD_IRQHandler+0x27a>
 8003b6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b6e:	015a      	lsls	r2, r3, #5
 8003b70:	69fb      	ldr	r3, [r7, #28]
 8003b72:	4413      	add	r3, r2
 8003b74:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003b78:	461a      	mov	r2, r3
 8003b7a:	2320      	movs	r3, #32
 8003b7c:	6093      	str	r3, [r2, #8]
 8003b7e:	693b      	ldr	r3, [r7, #16]
 8003b80:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8003b84:	2b00      	cmp	r3, #0
 8003b86:	d009      	beq.n	8003b9c <HAL_PCD_IRQHandler+0x298>
 8003b88:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b8a:	015a      	lsls	r2, r3, #5
 8003b8c:	69fb      	ldr	r3, [r7, #28]
 8003b8e:	4413      	add	r3, r2
 8003b90:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003b94:	461a      	mov	r2, r3
 8003b96:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8003b9a:	6093      	str	r3, [r2, #8]
 8003b9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b9e:	3301      	adds	r3, #1
 8003ba0:	627b      	str	r3, [r7, #36]	@ 0x24
 8003ba2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003ba4:	085b      	lsrs	r3, r3, #1
 8003ba6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003ba8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	f47f af62 	bne.w	8003a74 <HAL_PCD_IRQHandler+0x170>
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	4618      	mov	r0, r3
 8003bb6:	f004 fc01 	bl	80083bc <USB_ReadInterrupts>
 8003bba:	4603      	mov	r3, r0
 8003bbc:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003bc0:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8003bc4:	f040 80db 	bne.w	8003d7e <HAL_PCD_IRQHandler+0x47a>
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	4618      	mov	r0, r3
 8003bce:	f004 fc22 	bl	8008416 <USB_ReadDevAllInEpInterrupt>
 8003bd2:	62b8      	str	r0, [r7, #40]	@ 0x28
 8003bd4:	2300      	movs	r3, #0
 8003bd6:	627b      	str	r3, [r7, #36]	@ 0x24
 8003bd8:	e0cd      	b.n	8003d76 <HAL_PCD_IRQHandler+0x472>
 8003bda:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003bdc:	f003 0301 	and.w	r3, r3, #1
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	f000 80c2 	beq.w	8003d6a <HAL_PCD_IRQHandler+0x466>
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003bec:	b2d2      	uxtb	r2, r2
 8003bee:	4611      	mov	r1, r2
 8003bf0:	4618      	mov	r0, r3
 8003bf2:	f004 fc48 	bl	8008486 <USB_ReadDevInEPInterrupt>
 8003bf6:	6138      	str	r0, [r7, #16]
 8003bf8:	693b      	ldr	r3, [r7, #16]
 8003bfa:	f003 0301 	and.w	r3, r3, #1
 8003bfe:	2b00      	cmp	r3, #0
 8003c00:	d057      	beq.n	8003cb2 <HAL_PCD_IRQHandler+0x3ae>
 8003c02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003c04:	f003 030f 	and.w	r3, r3, #15
 8003c08:	2201      	movs	r2, #1
 8003c0a:	fa02 f303 	lsl.w	r3, r2, r3
 8003c0e:	60fb      	str	r3, [r7, #12]
 8003c10:	69fb      	ldr	r3, [r7, #28]
 8003c12:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003c16:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	43db      	mvns	r3, r3
 8003c1c:	69f9      	ldr	r1, [r7, #28]
 8003c1e:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8003c22:	4013      	ands	r3, r2
 8003c24:	634b      	str	r3, [r1, #52]	@ 0x34
 8003c26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003c28:	015a      	lsls	r2, r3, #5
 8003c2a:	69fb      	ldr	r3, [r7, #28]
 8003c2c:	4413      	add	r3, r2
 8003c2e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8003c32:	461a      	mov	r2, r3
 8003c34:	2301      	movs	r3, #1
 8003c36:	6093      	str	r3, [r2, #8]
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	799b      	ldrb	r3, [r3, #6]
 8003c3c:	2b01      	cmp	r3, #1
 8003c3e:	d132      	bne.n	8003ca6 <HAL_PCD_IRQHandler+0x3a2>
 8003c40:	6879      	ldr	r1, [r7, #4]
 8003c42:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003c44:	4613      	mov	r3, r2
 8003c46:	00db      	lsls	r3, r3, #3
 8003c48:	4413      	add	r3, r2
 8003c4a:	009b      	lsls	r3, r3, #2
 8003c4c:	440b      	add	r3, r1
 8003c4e:	3320      	adds	r3, #32
 8003c50:	6819      	ldr	r1, [r3, #0]
 8003c52:	6878      	ldr	r0, [r7, #4]
 8003c54:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003c56:	4613      	mov	r3, r2
 8003c58:	00db      	lsls	r3, r3, #3
 8003c5a:	4413      	add	r3, r2
 8003c5c:	009b      	lsls	r3, r3, #2
 8003c5e:	4403      	add	r3, r0
 8003c60:	331c      	adds	r3, #28
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	4419      	add	r1, r3
 8003c66:	6878      	ldr	r0, [r7, #4]
 8003c68:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003c6a:	4613      	mov	r3, r2
 8003c6c:	00db      	lsls	r3, r3, #3
 8003c6e:	4413      	add	r3, r2
 8003c70:	009b      	lsls	r3, r3, #2
 8003c72:	4403      	add	r3, r0
 8003c74:	3320      	adds	r3, #32
 8003c76:	6019      	str	r1, [r3, #0]
 8003c78:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d113      	bne.n	8003ca6 <HAL_PCD_IRQHandler+0x3a2>
 8003c7e:	6879      	ldr	r1, [r7, #4]
 8003c80:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003c82:	4613      	mov	r3, r2
 8003c84:	00db      	lsls	r3, r3, #3
 8003c86:	4413      	add	r3, r2
 8003c88:	009b      	lsls	r3, r3, #2
 8003c8a:	440b      	add	r3, r1
 8003c8c:	3324      	adds	r3, #36	@ 0x24
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	d108      	bne.n	8003ca6 <HAL_PCD_IRQHandler+0x3a2>
 8003c94:	687b      	ldr	r3, [r7, #4]
 8003c96:	6818      	ldr	r0, [r3, #0]
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8003c9e:	461a      	mov	r2, r3
 8003ca0:	2101      	movs	r1, #1
 8003ca2:	f004 fc4f 	bl	8008544 <USB_EP0_OutStart>
 8003ca6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003ca8:	b2db      	uxtb	r3, r3
 8003caa:	4619      	mov	r1, r3
 8003cac:	6878      	ldr	r0, [r7, #4]
 8003cae:	f007 ff5e 	bl	800bb6e <HAL_PCD_DataInStageCallback>
 8003cb2:	693b      	ldr	r3, [r7, #16]
 8003cb4:	f003 0308 	and.w	r3, r3, #8
 8003cb8:	2b00      	cmp	r3, #0
 8003cba:	d008      	beq.n	8003cce <HAL_PCD_IRQHandler+0x3ca>
 8003cbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003cbe:	015a      	lsls	r2, r3, #5
 8003cc0:	69fb      	ldr	r3, [r7, #28]
 8003cc2:	4413      	add	r3, r2
 8003cc4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8003cc8:	461a      	mov	r2, r3
 8003cca:	2308      	movs	r3, #8
 8003ccc:	6093      	str	r3, [r2, #8]
 8003cce:	693b      	ldr	r3, [r7, #16]
 8003cd0:	f003 0310 	and.w	r3, r3, #16
 8003cd4:	2b00      	cmp	r3, #0
 8003cd6:	d008      	beq.n	8003cea <HAL_PCD_IRQHandler+0x3e6>
 8003cd8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003cda:	015a      	lsls	r2, r3, #5
 8003cdc:	69fb      	ldr	r3, [r7, #28]
 8003cde:	4413      	add	r3, r2
 8003ce0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8003ce4:	461a      	mov	r2, r3
 8003ce6:	2310      	movs	r3, #16
 8003ce8:	6093      	str	r3, [r2, #8]
 8003cea:	693b      	ldr	r3, [r7, #16]
 8003cec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003cf0:	2b00      	cmp	r3, #0
 8003cf2:	d008      	beq.n	8003d06 <HAL_PCD_IRQHandler+0x402>
 8003cf4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003cf6:	015a      	lsls	r2, r3, #5
 8003cf8:	69fb      	ldr	r3, [r7, #28]
 8003cfa:	4413      	add	r3, r2
 8003cfc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8003d00:	461a      	mov	r2, r3
 8003d02:	2340      	movs	r3, #64	@ 0x40
 8003d04:	6093      	str	r3, [r2, #8]
 8003d06:	693b      	ldr	r3, [r7, #16]
 8003d08:	f003 0302 	and.w	r3, r3, #2
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d023      	beq.n	8003d58 <HAL_PCD_IRQHandler+0x454>
 8003d10:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8003d12:	6a38      	ldr	r0, [r7, #32]
 8003d14:	f003 fc36 	bl	8007584 <USB_FlushTxFifo>
 8003d18:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003d1a:	4613      	mov	r3, r2
 8003d1c:	00db      	lsls	r3, r3, #3
 8003d1e:	4413      	add	r3, r2
 8003d20:	009b      	lsls	r3, r3, #2
 8003d22:	3310      	adds	r3, #16
 8003d24:	687a      	ldr	r2, [r7, #4]
 8003d26:	4413      	add	r3, r2
 8003d28:	3304      	adds	r3, #4
 8003d2a:	617b      	str	r3, [r7, #20]
 8003d2c:	697b      	ldr	r3, [r7, #20]
 8003d2e:	78db      	ldrb	r3, [r3, #3]
 8003d30:	2b01      	cmp	r3, #1
 8003d32:	d108      	bne.n	8003d46 <HAL_PCD_IRQHandler+0x442>
 8003d34:	697b      	ldr	r3, [r7, #20]
 8003d36:	2200      	movs	r2, #0
 8003d38:	70da      	strb	r2, [r3, #3]
 8003d3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003d3c:	b2db      	uxtb	r3, r3
 8003d3e:	4619      	mov	r1, r3
 8003d40:	6878      	ldr	r0, [r7, #4]
 8003d42:	f007 ffab 	bl	800bc9c <HAL_PCD_ISOINIncompleteCallback>
 8003d46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003d48:	015a      	lsls	r2, r3, #5
 8003d4a:	69fb      	ldr	r3, [r7, #28]
 8003d4c:	4413      	add	r3, r2
 8003d4e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8003d52:	461a      	mov	r2, r3
 8003d54:	2302      	movs	r3, #2
 8003d56:	6093      	str	r3, [r2, #8]
 8003d58:	693b      	ldr	r3, [r7, #16]
 8003d5a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d003      	beq.n	8003d6a <HAL_PCD_IRQHandler+0x466>
 8003d62:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8003d64:	6878      	ldr	r0, [r7, #4]
 8003d66:	f000 fcbd 	bl	80046e4 <PCD_WriteEmptyTxFifo>
 8003d6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003d6c:	3301      	adds	r3, #1
 8003d6e:	627b      	str	r3, [r7, #36]	@ 0x24
 8003d70:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003d72:	085b      	lsrs	r3, r3, #1
 8003d74:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003d76:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003d78:	2b00      	cmp	r3, #0
 8003d7a:	f47f af2e 	bne.w	8003bda <HAL_PCD_IRQHandler+0x2d6>
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	681b      	ldr	r3, [r3, #0]
 8003d82:	4618      	mov	r0, r3
 8003d84:	f004 fb1a 	bl	80083bc <USB_ReadInterrupts>
 8003d88:	4603      	mov	r3, r0
 8003d8a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8003d8e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8003d92:	d122      	bne.n	8003dda <HAL_PCD_IRQHandler+0x4d6>
 8003d94:	69fb      	ldr	r3, [r7, #28]
 8003d96:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003d9a:	685b      	ldr	r3, [r3, #4]
 8003d9c:	69fa      	ldr	r2, [r7, #28]
 8003d9e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003da2:	f023 0301 	bic.w	r3, r3, #1
 8003da6:	6053      	str	r3, [r2, #4]
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	f893 34cc 	ldrb.w	r3, [r3, #1228]	@ 0x4cc
 8003dae:	2b01      	cmp	r3, #1
 8003db0:	d108      	bne.n	8003dc4 <HAL_PCD_IRQHandler+0x4c0>
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	2200      	movs	r2, #0
 8003db6:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 8003dba:	2100      	movs	r1, #0
 8003dbc:	6878      	ldr	r0, [r7, #4]
 8003dbe:	f000 fea3 	bl	8004b08 <HAL_PCDEx_LPM_Callback>
 8003dc2:	e002      	b.n	8003dca <HAL_PCD_IRQHandler+0x4c6>
 8003dc4:	6878      	ldr	r0, [r7, #4]
 8003dc6:	f007 ff49 	bl	800bc5c <HAL_PCD_ResumeCallback>
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	695a      	ldr	r2, [r3, #20]
 8003dd0:	687b      	ldr	r3, [r7, #4]
 8003dd2:	681b      	ldr	r3, [r3, #0]
 8003dd4:	f002 4200 	and.w	r2, r2, #2147483648	@ 0x80000000
 8003dd8:	615a      	str	r2, [r3, #20]
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	4618      	mov	r0, r3
 8003de0:	f004 faec 	bl	80083bc <USB_ReadInterrupts>
 8003de4:	4603      	mov	r3, r0
 8003de6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003dea:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003dee:	d112      	bne.n	8003e16 <HAL_PCD_IRQHandler+0x512>
 8003df0:	69fb      	ldr	r3, [r7, #28]
 8003df2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003df6:	689b      	ldr	r3, [r3, #8]
 8003df8:	f003 0301 	and.w	r3, r3, #1
 8003dfc:	2b01      	cmp	r3, #1
 8003dfe:	d102      	bne.n	8003e06 <HAL_PCD_IRQHandler+0x502>
 8003e00:	6878      	ldr	r0, [r7, #4]
 8003e02:	f007 ff05 	bl	800bc10 <HAL_PCD_SuspendCallback>
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	695a      	ldr	r2, [r3, #20]
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	f402 6200 	and.w	r2, r2, #2048	@ 0x800
 8003e14:	615a      	str	r2, [r3, #20]
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	4618      	mov	r0, r3
 8003e1c:	f004 face 	bl	80083bc <USB_ReadInterrupts>
 8003e20:	4603      	mov	r3, r0
 8003e22:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003e26:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003e2a:	f040 80b7 	bne.w	8003f9c <HAL_PCD_IRQHandler+0x698>
 8003e2e:	69fb      	ldr	r3, [r7, #28]
 8003e30:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003e34:	685b      	ldr	r3, [r3, #4]
 8003e36:	69fa      	ldr	r2, [r7, #28]
 8003e38:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003e3c:	f023 0301 	bic.w	r3, r3, #1
 8003e40:	6053      	str	r3, [r2, #4]
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	2110      	movs	r1, #16
 8003e48:	4618      	mov	r0, r3
 8003e4a:	f003 fb9b 	bl	8007584 <USB_FlushTxFifo>
 8003e4e:	2300      	movs	r3, #0
 8003e50:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003e52:	e046      	b.n	8003ee2 <HAL_PCD_IRQHandler+0x5de>
 8003e54:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003e56:	015a      	lsls	r2, r3, #5
 8003e58:	69fb      	ldr	r3, [r7, #28]
 8003e5a:	4413      	add	r3, r2
 8003e5c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8003e60:	461a      	mov	r2, r3
 8003e62:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8003e66:	6093      	str	r3, [r2, #8]
 8003e68:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003e6a:	015a      	lsls	r2, r3, #5
 8003e6c:	69fb      	ldr	r3, [r7, #28]
 8003e6e:	4413      	add	r3, r2
 8003e70:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8003e74:	681b      	ldr	r3, [r3, #0]
 8003e76:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003e78:	0151      	lsls	r1, r2, #5
 8003e7a:	69fa      	ldr	r2, [r7, #28]
 8003e7c:	440a      	add	r2, r1
 8003e7e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8003e82:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8003e86:	6013      	str	r3, [r2, #0]
 8003e88:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003e8a:	015a      	lsls	r2, r3, #5
 8003e8c:	69fb      	ldr	r3, [r7, #28]
 8003e8e:	4413      	add	r3, r2
 8003e90:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003e94:	461a      	mov	r2, r3
 8003e96:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8003e9a:	6093      	str	r3, [r2, #8]
 8003e9c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003e9e:	015a      	lsls	r2, r3, #5
 8003ea0:	69fb      	ldr	r3, [r7, #28]
 8003ea2:	4413      	add	r3, r2
 8003ea4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003eac:	0151      	lsls	r1, r2, #5
 8003eae:	69fa      	ldr	r2, [r7, #28]
 8003eb0:	440a      	add	r2, r1
 8003eb2:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8003eb6:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8003eba:	6013      	str	r3, [r2, #0]
 8003ebc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003ebe:	015a      	lsls	r2, r3, #5
 8003ec0:	69fb      	ldr	r3, [r7, #28]
 8003ec2:	4413      	add	r3, r2
 8003ec4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003ecc:	0151      	lsls	r1, r2, #5
 8003ece:	69fa      	ldr	r2, [r7, #28]
 8003ed0:	440a      	add	r2, r1
 8003ed2:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8003ed6:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8003eda:	6013      	str	r3, [r2, #0]
 8003edc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003ede:	3301      	adds	r3, #1
 8003ee0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	791b      	ldrb	r3, [r3, #4]
 8003ee6:	461a      	mov	r2, r3
 8003ee8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003eea:	4293      	cmp	r3, r2
 8003eec:	d3b2      	bcc.n	8003e54 <HAL_PCD_IRQHandler+0x550>
 8003eee:	69fb      	ldr	r3, [r7, #28]
 8003ef0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003ef4:	69db      	ldr	r3, [r3, #28]
 8003ef6:	69fa      	ldr	r2, [r7, #28]
 8003ef8:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003efc:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 8003f00:	61d3      	str	r3, [r2, #28]
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	7bdb      	ldrb	r3, [r3, #15]
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d016      	beq.n	8003f38 <HAL_PCD_IRQHandler+0x634>
 8003f0a:	69fb      	ldr	r3, [r7, #28]
 8003f0c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003f10:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003f14:	69fa      	ldr	r2, [r7, #28]
 8003f16:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003f1a:	f043 030b 	orr.w	r3, r3, #11
 8003f1e:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
 8003f22:	69fb      	ldr	r3, [r7, #28]
 8003f24:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003f28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f2a:	69fa      	ldr	r2, [r7, #28]
 8003f2c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003f30:	f043 030b 	orr.w	r3, r3, #11
 8003f34:	6453      	str	r3, [r2, #68]	@ 0x44
 8003f36:	e015      	b.n	8003f64 <HAL_PCD_IRQHandler+0x660>
 8003f38:	69fb      	ldr	r3, [r7, #28]
 8003f3a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003f3e:	695b      	ldr	r3, [r3, #20]
 8003f40:	69fa      	ldr	r2, [r7, #28]
 8003f42:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003f46:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8003f4a:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 8003f4e:	6153      	str	r3, [r2, #20]
 8003f50:	69fb      	ldr	r3, [r7, #28]
 8003f52:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003f56:	691b      	ldr	r3, [r3, #16]
 8003f58:	69fa      	ldr	r2, [r7, #28]
 8003f5a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003f5e:	f043 030b 	orr.w	r3, r3, #11
 8003f62:	6113      	str	r3, [r2, #16]
 8003f64:	69fb      	ldr	r3, [r7, #28]
 8003f66:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	69fa      	ldr	r2, [r7, #28]
 8003f6e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8003f72:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8003f76:	6013      	str	r3, [r2, #0]
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	6818      	ldr	r0, [r3, #0]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	7999      	ldrb	r1, [r3, #6]
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8003f86:	461a      	mov	r2, r3
 8003f88:	f004 fadc 	bl	8008544 <USB_EP0_OutStart>
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	695a      	ldr	r2, [r3, #20]
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 8003f9a:	615a      	str	r2, [r3, #20]
 8003f9c:	687b      	ldr	r3, [r7, #4]
 8003f9e:	681b      	ldr	r3, [r3, #0]
 8003fa0:	4618      	mov	r0, r3
 8003fa2:	f004 fa0b 	bl	80083bc <USB_ReadInterrupts>
 8003fa6:	4603      	mov	r3, r0
 8003fa8:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8003fac:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003fb0:	d123      	bne.n	8003ffa <HAL_PCD_IRQHandler+0x6f6>
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	681b      	ldr	r3, [r3, #0]
 8003fb6:	4618      	mov	r0, r3
 8003fb8:	f004 faa1 	bl	80084fe <USB_ActivateSetup>
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	4618      	mov	r0, r3
 8003fc2:	f003 fb58 	bl	8007676 <USB_GetDevSpeed>
 8003fc6:	4603      	mov	r3, r0
 8003fc8:	461a      	mov	r2, r3
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	71da      	strb	r2, [r3, #7]
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	681c      	ldr	r4, [r3, #0]
 8003fd2:	f001 fa09 	bl	80053e8 <HAL_RCC_GetHCLKFreq>
 8003fd6:	4601      	mov	r1, r0
 8003fd8:	687b      	ldr	r3, [r7, #4]
 8003fda:	79db      	ldrb	r3, [r3, #7]
 8003fdc:	461a      	mov	r2, r3
 8003fde:	4620      	mov	r0, r4
 8003fe0:	f003 f85c 	bl	800709c <USB_SetTurnaroundTime>
 8003fe4:	6878      	ldr	r0, [r7, #4]
 8003fe6:	f007 fdea 	bl	800bbbe <HAL_PCD_ResetCallback>
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	695a      	ldr	r2, [r3, #20]
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 8003ff8:	615a      	str	r2, [r3, #20]
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	4618      	mov	r0, r3
 8004000:	f004 f9dc 	bl	80083bc <USB_ReadInterrupts>
 8004004:	4603      	mov	r3, r0
 8004006:	f003 0308 	and.w	r3, r3, #8
 800400a:	2b08      	cmp	r3, #8
 800400c:	d10a      	bne.n	8004024 <HAL_PCD_IRQHandler+0x720>
 800400e:	6878      	ldr	r0, [r7, #4]
 8004010:	f007 fdc7 	bl	800bba2 <HAL_PCD_SOFCallback>
 8004014:	687b      	ldr	r3, [r7, #4]
 8004016:	681b      	ldr	r3, [r3, #0]
 8004018:	695a      	ldr	r2, [r3, #20]
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	f002 0208 	and.w	r2, r2, #8
 8004022:	615a      	str	r2, [r3, #20]
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	4618      	mov	r0, r3
 800402a:	f004 f9c7 	bl	80083bc <USB_ReadInterrupts>
 800402e:	4603      	mov	r3, r0
 8004030:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004034:	2b80      	cmp	r3, #128	@ 0x80
 8004036:	d123      	bne.n	8004080 <HAL_PCD_IRQHandler+0x77c>
 8004038:	6a3b      	ldr	r3, [r7, #32]
 800403a:	699b      	ldr	r3, [r3, #24]
 800403c:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004040:	6a3b      	ldr	r3, [r7, #32]
 8004042:	619a      	str	r2, [r3, #24]
 8004044:	2301      	movs	r3, #1
 8004046:	627b      	str	r3, [r7, #36]	@ 0x24
 8004048:	e014      	b.n	8004074 <HAL_PCD_IRQHandler+0x770>
 800404a:	6879      	ldr	r1, [r7, #4]
 800404c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800404e:	4613      	mov	r3, r2
 8004050:	00db      	lsls	r3, r3, #3
 8004052:	4413      	add	r3, r2
 8004054:	009b      	lsls	r3, r3, #2
 8004056:	440b      	add	r3, r1
 8004058:	f203 2357 	addw	r3, r3, #599	@ 0x257
 800405c:	781b      	ldrb	r3, [r3, #0]
 800405e:	2b01      	cmp	r3, #1
 8004060:	d105      	bne.n	800406e <HAL_PCD_IRQHandler+0x76a>
 8004062:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004064:	b2db      	uxtb	r3, r3
 8004066:	4619      	mov	r1, r3
 8004068:	6878      	ldr	r0, [r7, #4]
 800406a:	f000 fb0a 	bl	8004682 <HAL_PCD_EP_Abort>
 800406e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004070:	3301      	adds	r3, #1
 8004072:	627b      	str	r3, [r7, #36]	@ 0x24
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	791b      	ldrb	r3, [r3, #4]
 8004078:	461a      	mov	r2, r3
 800407a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800407c:	4293      	cmp	r3, r2
 800407e:	d3e4      	bcc.n	800404a <HAL_PCD_IRQHandler+0x746>
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	4618      	mov	r0, r3
 8004086:	f004 f999 	bl	80083bc <USB_ReadInterrupts>
 800408a:	4603      	mov	r3, r0
 800408c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004090:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004094:	d13c      	bne.n	8004110 <HAL_PCD_IRQHandler+0x80c>
 8004096:	2301      	movs	r3, #1
 8004098:	627b      	str	r3, [r7, #36]	@ 0x24
 800409a:	e02b      	b.n	80040f4 <HAL_PCD_IRQHandler+0x7f0>
 800409c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800409e:	015a      	lsls	r2, r3, #5
 80040a0:	69fb      	ldr	r3, [r7, #28]
 80040a2:	4413      	add	r3, r2
 80040a4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	61bb      	str	r3, [r7, #24]
 80040ac:	6879      	ldr	r1, [r7, #4]
 80040ae:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80040b0:	4613      	mov	r3, r2
 80040b2:	00db      	lsls	r3, r3, #3
 80040b4:	4413      	add	r3, r2
 80040b6:	009b      	lsls	r3, r3, #2
 80040b8:	440b      	add	r3, r1
 80040ba:	3318      	adds	r3, #24
 80040bc:	781b      	ldrb	r3, [r3, #0]
 80040be:	2b01      	cmp	r3, #1
 80040c0:	d115      	bne.n	80040ee <HAL_PCD_IRQHandler+0x7ea>
 80040c2:	69bb      	ldr	r3, [r7, #24]
 80040c4:	2b00      	cmp	r3, #0
 80040c6:	da12      	bge.n	80040ee <HAL_PCD_IRQHandler+0x7ea>
 80040c8:	6879      	ldr	r1, [r7, #4]
 80040ca:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80040cc:	4613      	mov	r3, r2
 80040ce:	00db      	lsls	r3, r3, #3
 80040d0:	4413      	add	r3, r2
 80040d2:	009b      	lsls	r3, r3, #2
 80040d4:	440b      	add	r3, r1
 80040d6:	3317      	adds	r3, #23
 80040d8:	2201      	movs	r2, #1
 80040da:	701a      	strb	r2, [r3, #0]
 80040dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80040de:	b2db      	uxtb	r3, r3
 80040e0:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80040e4:	b2db      	uxtb	r3, r3
 80040e6:	4619      	mov	r1, r3
 80040e8:	6878      	ldr	r0, [r7, #4]
 80040ea:	f000 faca 	bl	8004682 <HAL_PCD_EP_Abort>
 80040ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80040f0:	3301      	adds	r3, #1
 80040f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	791b      	ldrb	r3, [r3, #4]
 80040f8:	461a      	mov	r2, r3
 80040fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80040fc:	4293      	cmp	r3, r2
 80040fe:	d3cd      	bcc.n	800409c <HAL_PCD_IRQHandler+0x798>
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	695a      	ldr	r2, [r3, #20]
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800410e:	615a      	str	r2, [r3, #20]
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	681b      	ldr	r3, [r3, #0]
 8004114:	4618      	mov	r0, r3
 8004116:	f004 f951 	bl	80083bc <USB_ReadInterrupts>
 800411a:	4603      	mov	r3, r0
 800411c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004120:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004124:	d156      	bne.n	80041d4 <HAL_PCD_IRQHandler+0x8d0>
 8004126:	2301      	movs	r3, #1
 8004128:	627b      	str	r3, [r7, #36]	@ 0x24
 800412a:	e045      	b.n	80041b8 <HAL_PCD_IRQHandler+0x8b4>
 800412c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800412e:	015a      	lsls	r2, r3, #5
 8004130:	69fb      	ldr	r3, [r7, #28]
 8004132:	4413      	add	r3, r2
 8004134:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8004138:	681b      	ldr	r3, [r3, #0]
 800413a:	61bb      	str	r3, [r7, #24]
 800413c:	6879      	ldr	r1, [r7, #4]
 800413e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004140:	4613      	mov	r3, r2
 8004142:	00db      	lsls	r3, r3, #3
 8004144:	4413      	add	r3, r2
 8004146:	009b      	lsls	r3, r3, #2
 8004148:	440b      	add	r3, r1
 800414a:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 800414e:	781b      	ldrb	r3, [r3, #0]
 8004150:	2b01      	cmp	r3, #1
 8004152:	d12e      	bne.n	80041b2 <HAL_PCD_IRQHandler+0x8ae>
 8004154:	69bb      	ldr	r3, [r7, #24]
 8004156:	2b00      	cmp	r3, #0
 8004158:	da2b      	bge.n	80041b2 <HAL_PCD_IRQHandler+0x8ae>
 800415a:	69bb      	ldr	r3, [r7, #24]
 800415c:	0c1a      	lsrs	r2, r3, #16
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	f8d3 34d4 	ldr.w	r3, [r3, #1236]	@ 0x4d4
 8004164:	4053      	eors	r3, r2
 8004166:	f003 0301 	and.w	r3, r3, #1
 800416a:	2b00      	cmp	r3, #0
 800416c:	d121      	bne.n	80041b2 <HAL_PCD_IRQHandler+0x8ae>
 800416e:	6879      	ldr	r1, [r7, #4]
 8004170:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004172:	4613      	mov	r3, r2
 8004174:	00db      	lsls	r3, r3, #3
 8004176:	4413      	add	r3, r2
 8004178:	009b      	lsls	r3, r3, #2
 800417a:	440b      	add	r3, r1
 800417c:	f203 2357 	addw	r3, r3, #599	@ 0x257
 8004180:	2201      	movs	r2, #1
 8004182:	701a      	strb	r2, [r3, #0]
 8004184:	6a3b      	ldr	r3, [r7, #32]
 8004186:	699b      	ldr	r3, [r3, #24]
 8004188:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800418c:	6a3b      	ldr	r3, [r7, #32]
 800418e:	619a      	str	r2, [r3, #24]
 8004190:	6a3b      	ldr	r3, [r7, #32]
 8004192:	695b      	ldr	r3, [r3, #20]
 8004194:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004198:	2b00      	cmp	r3, #0
 800419a:	d10a      	bne.n	80041b2 <HAL_PCD_IRQHandler+0x8ae>
 800419c:	69fb      	ldr	r3, [r7, #28]
 800419e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80041a2:	685b      	ldr	r3, [r3, #4]
 80041a4:	69fa      	ldr	r2, [r7, #28]
 80041a6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 80041aa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80041ae:	6053      	str	r3, [r2, #4]
 80041b0:	e008      	b.n	80041c4 <HAL_PCD_IRQHandler+0x8c0>
 80041b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041b4:	3301      	adds	r3, #1
 80041b6:	627b      	str	r3, [r7, #36]	@ 0x24
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	791b      	ldrb	r3, [r3, #4]
 80041bc:	461a      	mov	r2, r3
 80041be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041c0:	4293      	cmp	r3, r2
 80041c2:	d3b3      	bcc.n	800412c <HAL_PCD_IRQHandler+0x828>
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	695a      	ldr	r2, [r3, #20]
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 80041d2:	615a      	str	r2, [r3, #20]
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	4618      	mov	r0, r3
 80041da:	f004 f8ef 	bl	80083bc <USB_ReadInterrupts>
 80041de:	4603      	mov	r3, r0
 80041e0:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 80041e4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80041e8:	d10a      	bne.n	8004200 <HAL_PCD_IRQHandler+0x8fc>
 80041ea:	6878      	ldr	r0, [r7, #4]
 80041ec:	f007 fd68 	bl	800bcc0 <HAL_PCD_ConnectCallback>
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	681b      	ldr	r3, [r3, #0]
 80041f4:	695a      	ldr	r2, [r3, #20]
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 80041fe:	615a      	str	r2, [r3, #20]
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	4618      	mov	r0, r3
 8004206:	f004 f8d9 	bl	80083bc <USB_ReadInterrupts>
 800420a:	4603      	mov	r3, r0
 800420c:	f003 0304 	and.w	r3, r3, #4
 8004210:	2b04      	cmp	r3, #4
 8004212:	d115      	bne.n	8004240 <HAL_PCD_IRQHandler+0x93c>
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	685b      	ldr	r3, [r3, #4]
 800421a:	61bb      	str	r3, [r7, #24]
 800421c:	69bb      	ldr	r3, [r7, #24]
 800421e:	f003 0304 	and.w	r3, r3, #4
 8004222:	2b00      	cmp	r3, #0
 8004224:	d002      	beq.n	800422c <HAL_PCD_IRQHandler+0x928>
 8004226:	6878      	ldr	r0, [r7, #4]
 8004228:	f007 fd58 	bl	800bcdc <HAL_PCD_DisconnectCallback>
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	681b      	ldr	r3, [r3, #0]
 8004230:	6859      	ldr	r1, [r3, #4]
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	681b      	ldr	r3, [r3, #0]
 8004236:	69ba      	ldr	r2, [r7, #24]
 8004238:	430a      	orrs	r2, r1
 800423a:	605a      	str	r2, [r3, #4]
 800423c:	e000      	b.n	8004240 <HAL_PCD_IRQHandler+0x93c>
 800423e:	bf00      	nop
 8004240:	3734      	adds	r7, #52	@ 0x34
 8004242:	46bd      	mov	sp, r7
 8004244:	bd90      	pop	{r4, r7, pc}

08004246 <HAL_PCD_SetAddress>:
 8004246:	b580      	push	{r7, lr}
 8004248:	b082      	sub	sp, #8
 800424a:	af00      	add	r7, sp, #0
 800424c:	6078      	str	r0, [r7, #4]
 800424e:	460b      	mov	r3, r1
 8004250:	70fb      	strb	r3, [r7, #3]
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 8004258:	2b01      	cmp	r3, #1
 800425a:	d101      	bne.n	8004260 <HAL_PCD_SetAddress+0x1a>
 800425c:	2302      	movs	r3, #2
 800425e:	e012      	b.n	8004286 <HAL_PCD_SetAddress+0x40>
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	2201      	movs	r2, #1
 8004264:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	78fa      	ldrb	r2, [r7, #3]
 800426c:	745a      	strb	r2, [r3, #17]
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	78fa      	ldrb	r2, [r7, #3]
 8004274:	4611      	mov	r1, r2
 8004276:	4618      	mov	r0, r3
 8004278:	f004 f838 	bl	80082ec <USB_SetDevAddress>
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	2200      	movs	r2, #0
 8004280:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8004284:	2300      	movs	r3, #0
 8004286:	4618      	mov	r0, r3
 8004288:	3708      	adds	r7, #8
 800428a:	46bd      	mov	sp, r7
 800428c:	bd80      	pop	{r7, pc}

0800428e <HAL_PCD_EP_Open>:
 800428e:	b580      	push	{r7, lr}
 8004290:	b084      	sub	sp, #16
 8004292:	af00      	add	r7, sp, #0
 8004294:	6078      	str	r0, [r7, #4]
 8004296:	4608      	mov	r0, r1
 8004298:	4611      	mov	r1, r2
 800429a:	461a      	mov	r2, r3
 800429c:	4603      	mov	r3, r0
 800429e:	70fb      	strb	r3, [r7, #3]
 80042a0:	460b      	mov	r3, r1
 80042a2:	803b      	strh	r3, [r7, #0]
 80042a4:	4613      	mov	r3, r2
 80042a6:	70bb      	strb	r3, [r7, #2]
 80042a8:	2300      	movs	r3, #0
 80042aa:	72fb      	strb	r3, [r7, #11]
 80042ac:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80042b0:	2b00      	cmp	r3, #0
 80042b2:	da0f      	bge.n	80042d4 <HAL_PCD_EP_Open+0x46>
 80042b4:	78fb      	ldrb	r3, [r7, #3]
 80042b6:	f003 020f 	and.w	r2, r3, #15
 80042ba:	4613      	mov	r3, r2
 80042bc:	00db      	lsls	r3, r3, #3
 80042be:	4413      	add	r3, r2
 80042c0:	009b      	lsls	r3, r3, #2
 80042c2:	3310      	adds	r3, #16
 80042c4:	687a      	ldr	r2, [r7, #4]
 80042c6:	4413      	add	r3, r2
 80042c8:	3304      	adds	r3, #4
 80042ca:	60fb      	str	r3, [r7, #12]
 80042cc:	68fb      	ldr	r3, [r7, #12]
 80042ce:	2201      	movs	r2, #1
 80042d0:	705a      	strb	r2, [r3, #1]
 80042d2:	e00f      	b.n	80042f4 <HAL_PCD_EP_Open+0x66>
 80042d4:	78fb      	ldrb	r3, [r7, #3]
 80042d6:	f003 020f 	and.w	r2, r3, #15
 80042da:	4613      	mov	r3, r2
 80042dc:	00db      	lsls	r3, r3, #3
 80042de:	4413      	add	r3, r2
 80042e0:	009b      	lsls	r3, r3, #2
 80042e2:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 80042e6:	687a      	ldr	r2, [r7, #4]
 80042e8:	4413      	add	r3, r2
 80042ea:	3304      	adds	r3, #4
 80042ec:	60fb      	str	r3, [r7, #12]
 80042ee:	68fb      	ldr	r3, [r7, #12]
 80042f0:	2200      	movs	r2, #0
 80042f2:	705a      	strb	r2, [r3, #1]
 80042f4:	78fb      	ldrb	r3, [r7, #3]
 80042f6:	f003 030f 	and.w	r3, r3, #15
 80042fa:	b2da      	uxtb	r2, r3
 80042fc:	68fb      	ldr	r3, [r7, #12]
 80042fe:	701a      	strb	r2, [r3, #0]
 8004300:	883b      	ldrh	r3, [r7, #0]
 8004302:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8004306:	68fb      	ldr	r3, [r7, #12]
 8004308:	609a      	str	r2, [r3, #8]
 800430a:	68fb      	ldr	r3, [r7, #12]
 800430c:	78ba      	ldrb	r2, [r7, #2]
 800430e:	711a      	strb	r2, [r3, #4]
 8004310:	68fb      	ldr	r3, [r7, #12]
 8004312:	785b      	ldrb	r3, [r3, #1]
 8004314:	2b00      	cmp	r3, #0
 8004316:	d004      	beq.n	8004322 <HAL_PCD_EP_Open+0x94>
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	781b      	ldrb	r3, [r3, #0]
 800431c:	461a      	mov	r2, r3
 800431e:	68fb      	ldr	r3, [r7, #12]
 8004320:	835a      	strh	r2, [r3, #26]
 8004322:	78bb      	ldrb	r3, [r7, #2]
 8004324:	2b02      	cmp	r3, #2
 8004326:	d102      	bne.n	800432e <HAL_PCD_EP_Open+0xa0>
 8004328:	68fb      	ldr	r3, [r7, #12]
 800432a:	2200      	movs	r2, #0
 800432c:	715a      	strb	r2, [r3, #5]
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 8004334:	2b01      	cmp	r3, #1
 8004336:	d101      	bne.n	800433c <HAL_PCD_EP_Open+0xae>
 8004338:	2302      	movs	r3, #2
 800433a:	e00e      	b.n	800435a <HAL_PCD_EP_Open+0xcc>
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	2201      	movs	r2, #1
 8004340:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	68f9      	ldr	r1, [r7, #12]
 800434a:	4618      	mov	r0, r3
 800434c:	f003 f9b8 	bl	80076c0 <USB_ActivateEndpoint>
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	2200      	movs	r2, #0
 8004354:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8004358:	7afb      	ldrb	r3, [r7, #11]
 800435a:	4618      	mov	r0, r3
 800435c:	3710      	adds	r7, #16
 800435e:	46bd      	mov	sp, r7
 8004360:	bd80      	pop	{r7, pc}

08004362 <HAL_PCD_EP_Close>:
 8004362:	b580      	push	{r7, lr}
 8004364:	b084      	sub	sp, #16
 8004366:	af00      	add	r7, sp, #0
 8004368:	6078      	str	r0, [r7, #4]
 800436a:	460b      	mov	r3, r1
 800436c:	70fb      	strb	r3, [r7, #3]
 800436e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8004372:	2b00      	cmp	r3, #0
 8004374:	da0f      	bge.n	8004396 <HAL_PCD_EP_Close+0x34>
 8004376:	78fb      	ldrb	r3, [r7, #3]
 8004378:	f003 020f 	and.w	r2, r3, #15
 800437c:	4613      	mov	r3, r2
 800437e:	00db      	lsls	r3, r3, #3
 8004380:	4413      	add	r3, r2
 8004382:	009b      	lsls	r3, r3, #2
 8004384:	3310      	adds	r3, #16
 8004386:	687a      	ldr	r2, [r7, #4]
 8004388:	4413      	add	r3, r2
 800438a:	3304      	adds	r3, #4
 800438c:	60fb      	str	r3, [r7, #12]
 800438e:	68fb      	ldr	r3, [r7, #12]
 8004390:	2201      	movs	r2, #1
 8004392:	705a      	strb	r2, [r3, #1]
 8004394:	e00f      	b.n	80043b6 <HAL_PCD_EP_Close+0x54>
 8004396:	78fb      	ldrb	r3, [r7, #3]
 8004398:	f003 020f 	and.w	r2, r3, #15
 800439c:	4613      	mov	r3, r2
 800439e:	00db      	lsls	r3, r3, #3
 80043a0:	4413      	add	r3, r2
 80043a2:	009b      	lsls	r3, r3, #2
 80043a4:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 80043a8:	687a      	ldr	r2, [r7, #4]
 80043aa:	4413      	add	r3, r2
 80043ac:	3304      	adds	r3, #4
 80043ae:	60fb      	str	r3, [r7, #12]
 80043b0:	68fb      	ldr	r3, [r7, #12]
 80043b2:	2200      	movs	r2, #0
 80043b4:	705a      	strb	r2, [r3, #1]
 80043b6:	78fb      	ldrb	r3, [r7, #3]
 80043b8:	f003 030f 	and.w	r3, r3, #15
 80043bc:	b2da      	uxtb	r2, r3
 80043be:	68fb      	ldr	r3, [r7, #12]
 80043c0:	701a      	strb	r2, [r3, #0]
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 80043c8:	2b01      	cmp	r3, #1
 80043ca:	d101      	bne.n	80043d0 <HAL_PCD_EP_Close+0x6e>
 80043cc:	2302      	movs	r3, #2
 80043ce:	e00e      	b.n	80043ee <HAL_PCD_EP_Close+0x8c>
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	2201      	movs	r2, #1
 80043d4:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	681b      	ldr	r3, [r3, #0]
 80043dc:	68f9      	ldr	r1, [r7, #12]
 80043de:	4618      	mov	r0, r3
 80043e0:	f003 f9f6 	bl	80077d0 <USB_DeactivateEndpoint>
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	2200      	movs	r2, #0
 80043e8:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80043ec:	2300      	movs	r3, #0
 80043ee:	4618      	mov	r0, r3
 80043f0:	3710      	adds	r7, #16
 80043f2:	46bd      	mov	sp, r7
 80043f4:	bd80      	pop	{r7, pc}

080043f6 <HAL_PCD_EP_Receive>:
 80043f6:	b580      	push	{r7, lr}
 80043f8:	b086      	sub	sp, #24
 80043fa:	af00      	add	r7, sp, #0
 80043fc:	60f8      	str	r0, [r7, #12]
 80043fe:	607a      	str	r2, [r7, #4]
 8004400:	603b      	str	r3, [r7, #0]
 8004402:	460b      	mov	r3, r1
 8004404:	72fb      	strb	r3, [r7, #11]
 8004406:	7afb      	ldrb	r3, [r7, #11]
 8004408:	f003 020f 	and.w	r2, r3, #15
 800440c:	4613      	mov	r3, r2
 800440e:	00db      	lsls	r3, r3, #3
 8004410:	4413      	add	r3, r2
 8004412:	009b      	lsls	r3, r3, #2
 8004414:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8004418:	68fa      	ldr	r2, [r7, #12]
 800441a:	4413      	add	r3, r2
 800441c:	3304      	adds	r3, #4
 800441e:	617b      	str	r3, [r7, #20]
 8004420:	697b      	ldr	r3, [r7, #20]
 8004422:	687a      	ldr	r2, [r7, #4]
 8004424:	60da      	str	r2, [r3, #12]
 8004426:	697b      	ldr	r3, [r7, #20]
 8004428:	683a      	ldr	r2, [r7, #0]
 800442a:	611a      	str	r2, [r3, #16]
 800442c:	697b      	ldr	r3, [r7, #20]
 800442e:	2200      	movs	r2, #0
 8004430:	615a      	str	r2, [r3, #20]
 8004432:	697b      	ldr	r3, [r7, #20]
 8004434:	2200      	movs	r2, #0
 8004436:	705a      	strb	r2, [r3, #1]
 8004438:	7afb      	ldrb	r3, [r7, #11]
 800443a:	f003 030f 	and.w	r3, r3, #15
 800443e:	b2da      	uxtb	r2, r3
 8004440:	697b      	ldr	r3, [r7, #20]
 8004442:	701a      	strb	r2, [r3, #0]
 8004444:	68fb      	ldr	r3, [r7, #12]
 8004446:	799b      	ldrb	r3, [r3, #6]
 8004448:	2b01      	cmp	r3, #1
 800444a:	d102      	bne.n	8004452 <HAL_PCD_EP_Receive+0x5c>
 800444c:	687a      	ldr	r2, [r7, #4]
 800444e:	697b      	ldr	r3, [r7, #20]
 8004450:	61da      	str	r2, [r3, #28]
 8004452:	68fb      	ldr	r3, [r7, #12]
 8004454:	6818      	ldr	r0, [r3, #0]
 8004456:	68fb      	ldr	r3, [r7, #12]
 8004458:	799b      	ldrb	r3, [r3, #6]
 800445a:	461a      	mov	r2, r3
 800445c:	6979      	ldr	r1, [r7, #20]
 800445e:	f003 fa93 	bl	8007988 <USB_EPStartXfer>
 8004462:	2300      	movs	r3, #0
 8004464:	4618      	mov	r0, r3
 8004466:	3718      	adds	r7, #24
 8004468:	46bd      	mov	sp, r7
 800446a:	bd80      	pop	{r7, pc}

0800446c <HAL_PCD_EP_GetRxCount>:
 800446c:	b480      	push	{r7}
 800446e:	b083      	sub	sp, #12
 8004470:	af00      	add	r7, sp, #0
 8004472:	6078      	str	r0, [r7, #4]
 8004474:	460b      	mov	r3, r1
 8004476:	70fb      	strb	r3, [r7, #3]
 8004478:	78fb      	ldrb	r3, [r7, #3]
 800447a:	f003 020f 	and.w	r2, r3, #15
 800447e:	6879      	ldr	r1, [r7, #4]
 8004480:	4613      	mov	r3, r2
 8004482:	00db      	lsls	r3, r3, #3
 8004484:	4413      	add	r3, r2
 8004486:	009b      	lsls	r3, r3, #2
 8004488:	440b      	add	r3, r1
 800448a:	f503 731a 	add.w	r3, r3, #616	@ 0x268
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	4618      	mov	r0, r3
 8004492:	370c      	adds	r7, #12
 8004494:	46bd      	mov	sp, r7
 8004496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800449a:	4770      	bx	lr

0800449c <HAL_PCD_EP_Transmit>:
 800449c:	b580      	push	{r7, lr}
 800449e:	b086      	sub	sp, #24
 80044a0:	af00      	add	r7, sp, #0
 80044a2:	60f8      	str	r0, [r7, #12]
 80044a4:	607a      	str	r2, [r7, #4]
 80044a6:	603b      	str	r3, [r7, #0]
 80044a8:	460b      	mov	r3, r1
 80044aa:	72fb      	strb	r3, [r7, #11]
 80044ac:	7afb      	ldrb	r3, [r7, #11]
 80044ae:	f003 020f 	and.w	r2, r3, #15
 80044b2:	4613      	mov	r3, r2
 80044b4:	00db      	lsls	r3, r3, #3
 80044b6:	4413      	add	r3, r2
 80044b8:	009b      	lsls	r3, r3, #2
 80044ba:	3310      	adds	r3, #16
 80044bc:	68fa      	ldr	r2, [r7, #12]
 80044be:	4413      	add	r3, r2
 80044c0:	3304      	adds	r3, #4
 80044c2:	617b      	str	r3, [r7, #20]
 80044c4:	697b      	ldr	r3, [r7, #20]
 80044c6:	687a      	ldr	r2, [r7, #4]
 80044c8:	60da      	str	r2, [r3, #12]
 80044ca:	697b      	ldr	r3, [r7, #20]
 80044cc:	683a      	ldr	r2, [r7, #0]
 80044ce:	611a      	str	r2, [r3, #16]
 80044d0:	697b      	ldr	r3, [r7, #20]
 80044d2:	2200      	movs	r2, #0
 80044d4:	615a      	str	r2, [r3, #20]
 80044d6:	697b      	ldr	r3, [r7, #20]
 80044d8:	2201      	movs	r2, #1
 80044da:	705a      	strb	r2, [r3, #1]
 80044dc:	7afb      	ldrb	r3, [r7, #11]
 80044de:	f003 030f 	and.w	r3, r3, #15
 80044e2:	b2da      	uxtb	r2, r3
 80044e4:	697b      	ldr	r3, [r7, #20]
 80044e6:	701a      	strb	r2, [r3, #0]
 80044e8:	68fb      	ldr	r3, [r7, #12]
 80044ea:	799b      	ldrb	r3, [r3, #6]
 80044ec:	2b01      	cmp	r3, #1
 80044ee:	d102      	bne.n	80044f6 <HAL_PCD_EP_Transmit+0x5a>
 80044f0:	687a      	ldr	r2, [r7, #4]
 80044f2:	697b      	ldr	r3, [r7, #20]
 80044f4:	61da      	str	r2, [r3, #28]
 80044f6:	68fb      	ldr	r3, [r7, #12]
 80044f8:	6818      	ldr	r0, [r3, #0]
 80044fa:	68fb      	ldr	r3, [r7, #12]
 80044fc:	799b      	ldrb	r3, [r3, #6]
 80044fe:	461a      	mov	r2, r3
 8004500:	6979      	ldr	r1, [r7, #20]
 8004502:	f003 fa41 	bl	8007988 <USB_EPStartXfer>
 8004506:	2300      	movs	r3, #0
 8004508:	4618      	mov	r0, r3
 800450a:	3718      	adds	r7, #24
 800450c:	46bd      	mov	sp, r7
 800450e:	bd80      	pop	{r7, pc}

08004510 <HAL_PCD_EP_SetStall>:
 8004510:	b580      	push	{r7, lr}
 8004512:	b084      	sub	sp, #16
 8004514:	af00      	add	r7, sp, #0
 8004516:	6078      	str	r0, [r7, #4]
 8004518:	460b      	mov	r3, r1
 800451a:	70fb      	strb	r3, [r7, #3]
 800451c:	78fb      	ldrb	r3, [r7, #3]
 800451e:	f003 030f 	and.w	r3, r3, #15
 8004522:	687a      	ldr	r2, [r7, #4]
 8004524:	7912      	ldrb	r2, [r2, #4]
 8004526:	4293      	cmp	r3, r2
 8004528:	d901      	bls.n	800452e <HAL_PCD_EP_SetStall+0x1e>
 800452a:	2301      	movs	r3, #1
 800452c:	e04f      	b.n	80045ce <HAL_PCD_EP_SetStall+0xbe>
 800452e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8004532:	2b00      	cmp	r3, #0
 8004534:	da0f      	bge.n	8004556 <HAL_PCD_EP_SetStall+0x46>
 8004536:	78fb      	ldrb	r3, [r7, #3]
 8004538:	f003 020f 	and.w	r2, r3, #15
 800453c:	4613      	mov	r3, r2
 800453e:	00db      	lsls	r3, r3, #3
 8004540:	4413      	add	r3, r2
 8004542:	009b      	lsls	r3, r3, #2
 8004544:	3310      	adds	r3, #16
 8004546:	687a      	ldr	r2, [r7, #4]
 8004548:	4413      	add	r3, r2
 800454a:	3304      	adds	r3, #4
 800454c:	60fb      	str	r3, [r7, #12]
 800454e:	68fb      	ldr	r3, [r7, #12]
 8004550:	2201      	movs	r2, #1
 8004552:	705a      	strb	r2, [r3, #1]
 8004554:	e00d      	b.n	8004572 <HAL_PCD_EP_SetStall+0x62>
 8004556:	78fa      	ldrb	r2, [r7, #3]
 8004558:	4613      	mov	r3, r2
 800455a:	00db      	lsls	r3, r3, #3
 800455c:	4413      	add	r3, r2
 800455e:	009b      	lsls	r3, r3, #2
 8004560:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8004564:	687a      	ldr	r2, [r7, #4]
 8004566:	4413      	add	r3, r2
 8004568:	3304      	adds	r3, #4
 800456a:	60fb      	str	r3, [r7, #12]
 800456c:	68fb      	ldr	r3, [r7, #12]
 800456e:	2200      	movs	r2, #0
 8004570:	705a      	strb	r2, [r3, #1]
 8004572:	68fb      	ldr	r3, [r7, #12]
 8004574:	2201      	movs	r2, #1
 8004576:	709a      	strb	r2, [r3, #2]
 8004578:	78fb      	ldrb	r3, [r7, #3]
 800457a:	f003 030f 	and.w	r3, r3, #15
 800457e:	b2da      	uxtb	r2, r3
 8004580:	68fb      	ldr	r3, [r7, #12]
 8004582:	701a      	strb	r2, [r3, #0]
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800458a:	2b01      	cmp	r3, #1
 800458c:	d101      	bne.n	8004592 <HAL_PCD_EP_SetStall+0x82>
 800458e:	2302      	movs	r3, #2
 8004590:	e01d      	b.n	80045ce <HAL_PCD_EP_SetStall+0xbe>
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	2201      	movs	r2, #1
 8004596:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	68f9      	ldr	r1, [r7, #12]
 80045a0:	4618      	mov	r0, r3
 80045a2:	f003 fdcf 	bl	8008144 <USB_EPSetStall>
 80045a6:	78fb      	ldrb	r3, [r7, #3]
 80045a8:	f003 030f 	and.w	r3, r3, #15
 80045ac:	2b00      	cmp	r3, #0
 80045ae:	d109      	bne.n	80045c4 <HAL_PCD_EP_SetStall+0xb4>
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	6818      	ldr	r0, [r3, #0]
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	7999      	ldrb	r1, [r3, #6]
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 80045be:	461a      	mov	r2, r3
 80045c0:	f003 ffc0 	bl	8008544 <USB_EP0_OutStart>
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	2200      	movs	r2, #0
 80045c8:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80045cc:	2300      	movs	r3, #0
 80045ce:	4618      	mov	r0, r3
 80045d0:	3710      	adds	r7, #16
 80045d2:	46bd      	mov	sp, r7
 80045d4:	bd80      	pop	{r7, pc}

080045d6 <HAL_PCD_EP_ClrStall>:
 80045d6:	b580      	push	{r7, lr}
 80045d8:	b084      	sub	sp, #16
 80045da:	af00      	add	r7, sp, #0
 80045dc:	6078      	str	r0, [r7, #4]
 80045de:	460b      	mov	r3, r1
 80045e0:	70fb      	strb	r3, [r7, #3]
 80045e2:	78fb      	ldrb	r3, [r7, #3]
 80045e4:	f003 030f 	and.w	r3, r3, #15
 80045e8:	687a      	ldr	r2, [r7, #4]
 80045ea:	7912      	ldrb	r2, [r2, #4]
 80045ec:	4293      	cmp	r3, r2
 80045ee:	d901      	bls.n	80045f4 <HAL_PCD_EP_ClrStall+0x1e>
 80045f0:	2301      	movs	r3, #1
 80045f2:	e042      	b.n	800467a <HAL_PCD_EP_ClrStall+0xa4>
 80045f4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80045f8:	2b00      	cmp	r3, #0
 80045fa:	da0f      	bge.n	800461c <HAL_PCD_EP_ClrStall+0x46>
 80045fc:	78fb      	ldrb	r3, [r7, #3]
 80045fe:	f003 020f 	and.w	r2, r3, #15
 8004602:	4613      	mov	r3, r2
 8004604:	00db      	lsls	r3, r3, #3
 8004606:	4413      	add	r3, r2
 8004608:	009b      	lsls	r3, r3, #2
 800460a:	3310      	adds	r3, #16
 800460c:	687a      	ldr	r2, [r7, #4]
 800460e:	4413      	add	r3, r2
 8004610:	3304      	adds	r3, #4
 8004612:	60fb      	str	r3, [r7, #12]
 8004614:	68fb      	ldr	r3, [r7, #12]
 8004616:	2201      	movs	r2, #1
 8004618:	705a      	strb	r2, [r3, #1]
 800461a:	e00f      	b.n	800463c <HAL_PCD_EP_ClrStall+0x66>
 800461c:	78fb      	ldrb	r3, [r7, #3]
 800461e:	f003 020f 	and.w	r2, r3, #15
 8004622:	4613      	mov	r3, r2
 8004624:	00db      	lsls	r3, r3, #3
 8004626:	4413      	add	r3, r2
 8004628:	009b      	lsls	r3, r3, #2
 800462a:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800462e:	687a      	ldr	r2, [r7, #4]
 8004630:	4413      	add	r3, r2
 8004632:	3304      	adds	r3, #4
 8004634:	60fb      	str	r3, [r7, #12]
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	2200      	movs	r2, #0
 800463a:	705a      	strb	r2, [r3, #1]
 800463c:	68fb      	ldr	r3, [r7, #12]
 800463e:	2200      	movs	r2, #0
 8004640:	709a      	strb	r2, [r3, #2]
 8004642:	78fb      	ldrb	r3, [r7, #3]
 8004644:	f003 030f 	and.w	r3, r3, #15
 8004648:	b2da      	uxtb	r2, r3
 800464a:	68fb      	ldr	r3, [r7, #12]
 800464c:	701a      	strb	r2, [r3, #0]
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 8004654:	2b01      	cmp	r3, #1
 8004656:	d101      	bne.n	800465c <HAL_PCD_EP_ClrStall+0x86>
 8004658:	2302      	movs	r3, #2
 800465a:	e00e      	b.n	800467a <HAL_PCD_EP_ClrStall+0xa4>
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	2201      	movs	r2, #1
 8004660:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	68f9      	ldr	r1, [r7, #12]
 800466a:	4618      	mov	r0, r3
 800466c:	f003 fdd8 	bl	8008220 <USB_EPClearStall>
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	2200      	movs	r2, #0
 8004674:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8004678:	2300      	movs	r3, #0
 800467a:	4618      	mov	r0, r3
 800467c:	3710      	adds	r7, #16
 800467e:	46bd      	mov	sp, r7
 8004680:	bd80      	pop	{r7, pc}

08004682 <HAL_PCD_EP_Abort>:
 8004682:	b580      	push	{r7, lr}
 8004684:	b084      	sub	sp, #16
 8004686:	af00      	add	r7, sp, #0
 8004688:	6078      	str	r0, [r7, #4]
 800468a:	460b      	mov	r3, r1
 800468c:	70fb      	strb	r3, [r7, #3]
 800468e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8004692:	2b00      	cmp	r3, #0
 8004694:	da0c      	bge.n	80046b0 <HAL_PCD_EP_Abort+0x2e>
 8004696:	78fb      	ldrb	r3, [r7, #3]
 8004698:	f003 020f 	and.w	r2, r3, #15
 800469c:	4613      	mov	r3, r2
 800469e:	00db      	lsls	r3, r3, #3
 80046a0:	4413      	add	r3, r2
 80046a2:	009b      	lsls	r3, r3, #2
 80046a4:	3310      	adds	r3, #16
 80046a6:	687a      	ldr	r2, [r7, #4]
 80046a8:	4413      	add	r3, r2
 80046aa:	3304      	adds	r3, #4
 80046ac:	60fb      	str	r3, [r7, #12]
 80046ae:	e00c      	b.n	80046ca <HAL_PCD_EP_Abort+0x48>
 80046b0:	78fb      	ldrb	r3, [r7, #3]
 80046b2:	f003 020f 	and.w	r2, r3, #15
 80046b6:	4613      	mov	r3, r2
 80046b8:	00db      	lsls	r3, r3, #3
 80046ba:	4413      	add	r3, r2
 80046bc:	009b      	lsls	r3, r3, #2
 80046be:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 80046c2:	687a      	ldr	r2, [r7, #4]
 80046c4:	4413      	add	r3, r2
 80046c6:	3304      	adds	r3, #4
 80046c8:	60fb      	str	r3, [r7, #12]
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	68f9      	ldr	r1, [r7, #12]
 80046d0:	4618      	mov	r0, r3
 80046d2:	f003 fbf7 	bl	8007ec4 <USB_EPStopXfer>
 80046d6:	4603      	mov	r3, r0
 80046d8:	72fb      	strb	r3, [r7, #11]
 80046da:	7afb      	ldrb	r3, [r7, #11]
 80046dc:	4618      	mov	r0, r3
 80046de:	3710      	adds	r7, #16
 80046e0:	46bd      	mov	sp, r7
 80046e2:	bd80      	pop	{r7, pc}

080046e4 <PCD_WriteEmptyTxFifo>:
 80046e4:	b580      	push	{r7, lr}
 80046e6:	b08a      	sub	sp, #40	@ 0x28
 80046e8:	af02      	add	r7, sp, #8
 80046ea:	6078      	str	r0, [r7, #4]
 80046ec:	6039      	str	r1, [r7, #0]
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	681b      	ldr	r3, [r3, #0]
 80046f2:	617b      	str	r3, [r7, #20]
 80046f4:	697b      	ldr	r3, [r7, #20]
 80046f6:	613b      	str	r3, [r7, #16]
 80046f8:	683a      	ldr	r2, [r7, #0]
 80046fa:	4613      	mov	r3, r2
 80046fc:	00db      	lsls	r3, r3, #3
 80046fe:	4413      	add	r3, r2
 8004700:	009b      	lsls	r3, r3, #2
 8004702:	3310      	adds	r3, #16
 8004704:	687a      	ldr	r2, [r7, #4]
 8004706:	4413      	add	r3, r2
 8004708:	3304      	adds	r3, #4
 800470a:	60fb      	str	r3, [r7, #12]
 800470c:	68fb      	ldr	r3, [r7, #12]
 800470e:	695a      	ldr	r2, [r3, #20]
 8004710:	68fb      	ldr	r3, [r7, #12]
 8004712:	691b      	ldr	r3, [r3, #16]
 8004714:	429a      	cmp	r2, r3
 8004716:	d901      	bls.n	800471c <PCD_WriteEmptyTxFifo+0x38>
 8004718:	2301      	movs	r3, #1
 800471a:	e06b      	b.n	80047f4 <PCD_WriteEmptyTxFifo+0x110>
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	691a      	ldr	r2, [r3, #16]
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	695b      	ldr	r3, [r3, #20]
 8004724:	1ad3      	subs	r3, r2, r3
 8004726:	61fb      	str	r3, [r7, #28]
 8004728:	68fb      	ldr	r3, [r7, #12]
 800472a:	689b      	ldr	r3, [r3, #8]
 800472c:	69fa      	ldr	r2, [r7, #28]
 800472e:	429a      	cmp	r2, r3
 8004730:	d902      	bls.n	8004738 <PCD_WriteEmptyTxFifo+0x54>
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	689b      	ldr	r3, [r3, #8]
 8004736:	61fb      	str	r3, [r7, #28]
 8004738:	69fb      	ldr	r3, [r7, #28]
 800473a:	3303      	adds	r3, #3
 800473c:	089b      	lsrs	r3, r3, #2
 800473e:	61bb      	str	r3, [r7, #24]
 8004740:	e02a      	b.n	8004798 <PCD_WriteEmptyTxFifo+0xb4>
 8004742:	68fb      	ldr	r3, [r7, #12]
 8004744:	691a      	ldr	r2, [r3, #16]
 8004746:	68fb      	ldr	r3, [r7, #12]
 8004748:	695b      	ldr	r3, [r3, #20]
 800474a:	1ad3      	subs	r3, r2, r3
 800474c:	61fb      	str	r3, [r7, #28]
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	689b      	ldr	r3, [r3, #8]
 8004752:	69fa      	ldr	r2, [r7, #28]
 8004754:	429a      	cmp	r2, r3
 8004756:	d902      	bls.n	800475e <PCD_WriteEmptyTxFifo+0x7a>
 8004758:	68fb      	ldr	r3, [r7, #12]
 800475a:	689b      	ldr	r3, [r3, #8]
 800475c:	61fb      	str	r3, [r7, #28]
 800475e:	69fb      	ldr	r3, [r7, #28]
 8004760:	3303      	adds	r3, #3
 8004762:	089b      	lsrs	r3, r3, #2
 8004764:	61bb      	str	r3, [r7, #24]
 8004766:	68fb      	ldr	r3, [r7, #12]
 8004768:	68d9      	ldr	r1, [r3, #12]
 800476a:	683b      	ldr	r3, [r7, #0]
 800476c:	b2da      	uxtb	r2, r3
 800476e:	69fb      	ldr	r3, [r7, #28]
 8004770:	b298      	uxth	r0, r3
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	799b      	ldrb	r3, [r3, #6]
 8004776:	9300      	str	r3, [sp, #0]
 8004778:	4603      	mov	r3, r0
 800477a:	6978      	ldr	r0, [r7, #20]
 800477c:	f003 fc4c 	bl	8008018 <USB_WritePacket>
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	68da      	ldr	r2, [r3, #12]
 8004784:	69fb      	ldr	r3, [r7, #28]
 8004786:	441a      	add	r2, r3
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	60da      	str	r2, [r3, #12]
 800478c:	68fb      	ldr	r3, [r7, #12]
 800478e:	695a      	ldr	r2, [r3, #20]
 8004790:	69fb      	ldr	r3, [r7, #28]
 8004792:	441a      	add	r2, r3
 8004794:	68fb      	ldr	r3, [r7, #12]
 8004796:	615a      	str	r2, [r3, #20]
 8004798:	683b      	ldr	r3, [r7, #0]
 800479a:	015a      	lsls	r2, r3, #5
 800479c:	693b      	ldr	r3, [r7, #16]
 800479e:	4413      	add	r3, r2
 80047a0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80047a4:	699b      	ldr	r3, [r3, #24]
 80047a6:	b29b      	uxth	r3, r3
 80047a8:	69ba      	ldr	r2, [r7, #24]
 80047aa:	429a      	cmp	r2, r3
 80047ac:	d809      	bhi.n	80047c2 <PCD_WriteEmptyTxFifo+0xde>
 80047ae:	68fb      	ldr	r3, [r7, #12]
 80047b0:	695a      	ldr	r2, [r3, #20]
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	691b      	ldr	r3, [r3, #16]
 80047b6:	429a      	cmp	r2, r3
 80047b8:	d203      	bcs.n	80047c2 <PCD_WriteEmptyTxFifo+0xde>
 80047ba:	68fb      	ldr	r3, [r7, #12]
 80047bc:	691b      	ldr	r3, [r3, #16]
 80047be:	2b00      	cmp	r3, #0
 80047c0:	d1bf      	bne.n	8004742 <PCD_WriteEmptyTxFifo+0x5e>
 80047c2:	68fb      	ldr	r3, [r7, #12]
 80047c4:	691a      	ldr	r2, [r3, #16]
 80047c6:	68fb      	ldr	r3, [r7, #12]
 80047c8:	695b      	ldr	r3, [r3, #20]
 80047ca:	429a      	cmp	r2, r3
 80047cc:	d811      	bhi.n	80047f2 <PCD_WriteEmptyTxFifo+0x10e>
 80047ce:	683b      	ldr	r3, [r7, #0]
 80047d0:	f003 030f 	and.w	r3, r3, #15
 80047d4:	2201      	movs	r2, #1
 80047d6:	fa02 f303 	lsl.w	r3, r2, r3
 80047da:	60bb      	str	r3, [r7, #8]
 80047dc:	693b      	ldr	r3, [r7, #16]
 80047de:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80047e2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80047e4:	68bb      	ldr	r3, [r7, #8]
 80047e6:	43db      	mvns	r3, r3
 80047e8:	6939      	ldr	r1, [r7, #16]
 80047ea:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80047ee:	4013      	ands	r3, r2
 80047f0:	634b      	str	r3, [r1, #52]	@ 0x34
 80047f2:	2300      	movs	r3, #0
 80047f4:	4618      	mov	r0, r3
 80047f6:	3720      	adds	r7, #32
 80047f8:	46bd      	mov	sp, r7
 80047fa:	bd80      	pop	{r7, pc}

080047fc <PCD_EP_OutXfrComplete_int>:
 80047fc:	b580      	push	{r7, lr}
 80047fe:	b088      	sub	sp, #32
 8004800:	af00      	add	r7, sp, #0
 8004802:	6078      	str	r0, [r7, #4]
 8004804:	6039      	str	r1, [r7, #0]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	61fb      	str	r3, [r7, #28]
 800480c:	69fb      	ldr	r3, [r7, #28]
 800480e:	61bb      	str	r3, [r7, #24]
 8004810:	69fb      	ldr	r3, [r7, #28]
 8004812:	333c      	adds	r3, #60	@ 0x3c
 8004814:	3304      	adds	r3, #4
 8004816:	681b      	ldr	r3, [r3, #0]
 8004818:	617b      	str	r3, [r7, #20]
 800481a:	683b      	ldr	r3, [r7, #0]
 800481c:	015a      	lsls	r2, r3, #5
 800481e:	69bb      	ldr	r3, [r7, #24]
 8004820:	4413      	add	r3, r2
 8004822:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8004826:	689b      	ldr	r3, [r3, #8]
 8004828:	613b      	str	r3, [r7, #16]
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	799b      	ldrb	r3, [r3, #6]
 800482e:	2b01      	cmp	r3, #1
 8004830:	d17b      	bne.n	800492a <PCD_EP_OutXfrComplete_int+0x12e>
 8004832:	693b      	ldr	r3, [r7, #16]
 8004834:	f003 0308 	and.w	r3, r3, #8
 8004838:	2b00      	cmp	r3, #0
 800483a:	d015      	beq.n	8004868 <PCD_EP_OutXfrComplete_int+0x6c>
 800483c:	697b      	ldr	r3, [r7, #20]
 800483e:	4a61      	ldr	r2, [pc, #388]	@ (80049c4 <PCD_EP_OutXfrComplete_int+0x1c8>)
 8004840:	4293      	cmp	r3, r2
 8004842:	f240 80b9 	bls.w	80049b8 <PCD_EP_OutXfrComplete_int+0x1bc>
 8004846:	693b      	ldr	r3, [r7, #16]
 8004848:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800484c:	2b00      	cmp	r3, #0
 800484e:	f000 80b3 	beq.w	80049b8 <PCD_EP_OutXfrComplete_int+0x1bc>
 8004852:	683b      	ldr	r3, [r7, #0]
 8004854:	015a      	lsls	r2, r3, #5
 8004856:	69bb      	ldr	r3, [r7, #24]
 8004858:	4413      	add	r3, r2
 800485a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800485e:	461a      	mov	r2, r3
 8004860:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8004864:	6093      	str	r3, [r2, #8]
 8004866:	e0a7      	b.n	80049b8 <PCD_EP_OutXfrComplete_int+0x1bc>
 8004868:	693b      	ldr	r3, [r7, #16]
 800486a:	f003 0320 	and.w	r3, r3, #32
 800486e:	2b00      	cmp	r3, #0
 8004870:	d009      	beq.n	8004886 <PCD_EP_OutXfrComplete_int+0x8a>
 8004872:	683b      	ldr	r3, [r7, #0]
 8004874:	015a      	lsls	r2, r3, #5
 8004876:	69bb      	ldr	r3, [r7, #24]
 8004878:	4413      	add	r3, r2
 800487a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800487e:	461a      	mov	r2, r3
 8004880:	2320      	movs	r3, #32
 8004882:	6093      	str	r3, [r2, #8]
 8004884:	e098      	b.n	80049b8 <PCD_EP_OutXfrComplete_int+0x1bc>
 8004886:	693b      	ldr	r3, [r7, #16]
 8004888:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800488c:	2b00      	cmp	r3, #0
 800488e:	f040 8093 	bne.w	80049b8 <PCD_EP_OutXfrComplete_int+0x1bc>
 8004892:	697b      	ldr	r3, [r7, #20]
 8004894:	4a4b      	ldr	r2, [pc, #300]	@ (80049c4 <PCD_EP_OutXfrComplete_int+0x1c8>)
 8004896:	4293      	cmp	r3, r2
 8004898:	d90f      	bls.n	80048ba <PCD_EP_OutXfrComplete_int+0xbe>
 800489a:	693b      	ldr	r3, [r7, #16]
 800489c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80048a0:	2b00      	cmp	r3, #0
 80048a2:	d00a      	beq.n	80048ba <PCD_EP_OutXfrComplete_int+0xbe>
 80048a4:	683b      	ldr	r3, [r7, #0]
 80048a6:	015a      	lsls	r2, r3, #5
 80048a8:	69bb      	ldr	r3, [r7, #24]
 80048aa:	4413      	add	r3, r2
 80048ac:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80048b0:	461a      	mov	r2, r3
 80048b2:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80048b6:	6093      	str	r3, [r2, #8]
 80048b8:	e07e      	b.n	80049b8 <PCD_EP_OutXfrComplete_int+0x1bc>
 80048ba:	683a      	ldr	r2, [r7, #0]
 80048bc:	4613      	mov	r3, r2
 80048be:	00db      	lsls	r3, r3, #3
 80048c0:	4413      	add	r3, r2
 80048c2:	009b      	lsls	r3, r3, #2
 80048c4:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 80048c8:	687a      	ldr	r2, [r7, #4]
 80048ca:	4413      	add	r3, r2
 80048cc:	3304      	adds	r3, #4
 80048ce:	60fb      	str	r3, [r7, #12]
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	6a1a      	ldr	r2, [r3, #32]
 80048d4:	683b      	ldr	r3, [r7, #0]
 80048d6:	0159      	lsls	r1, r3, #5
 80048d8:	69bb      	ldr	r3, [r7, #24]
 80048da:	440b      	add	r3, r1
 80048dc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80048e0:	691b      	ldr	r3, [r3, #16]
 80048e2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80048e6:	1ad2      	subs	r2, r2, r3
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	615a      	str	r2, [r3, #20]
 80048ec:	683b      	ldr	r3, [r7, #0]
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	d114      	bne.n	800491c <PCD_EP_OutXfrComplete_int+0x120>
 80048f2:	68fb      	ldr	r3, [r7, #12]
 80048f4:	691b      	ldr	r3, [r3, #16]
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	d109      	bne.n	800490e <PCD_EP_OutXfrComplete_int+0x112>
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	6818      	ldr	r0, [r3, #0]
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8004904:	461a      	mov	r2, r3
 8004906:	2101      	movs	r1, #1
 8004908:	f003 fe1c 	bl	8008544 <USB_EP0_OutStart>
 800490c:	e006      	b.n	800491c <PCD_EP_OutXfrComplete_int+0x120>
 800490e:	68fb      	ldr	r3, [r7, #12]
 8004910:	68da      	ldr	r2, [r3, #12]
 8004912:	68fb      	ldr	r3, [r7, #12]
 8004914:	695b      	ldr	r3, [r3, #20]
 8004916:	441a      	add	r2, r3
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	60da      	str	r2, [r3, #12]
 800491c:	683b      	ldr	r3, [r7, #0]
 800491e:	b2db      	uxtb	r3, r3
 8004920:	4619      	mov	r1, r3
 8004922:	6878      	ldr	r0, [r7, #4]
 8004924:	f007 f908 	bl	800bb38 <HAL_PCD_DataOutStageCallback>
 8004928:	e046      	b.n	80049b8 <PCD_EP_OutXfrComplete_int+0x1bc>
 800492a:	697b      	ldr	r3, [r7, #20]
 800492c:	4a26      	ldr	r2, [pc, #152]	@ (80049c8 <PCD_EP_OutXfrComplete_int+0x1cc>)
 800492e:	4293      	cmp	r3, r2
 8004930:	d124      	bne.n	800497c <PCD_EP_OutXfrComplete_int+0x180>
 8004932:	693b      	ldr	r3, [r7, #16]
 8004934:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004938:	2b00      	cmp	r3, #0
 800493a:	d00a      	beq.n	8004952 <PCD_EP_OutXfrComplete_int+0x156>
 800493c:	683b      	ldr	r3, [r7, #0]
 800493e:	015a      	lsls	r2, r3, #5
 8004940:	69bb      	ldr	r3, [r7, #24]
 8004942:	4413      	add	r3, r2
 8004944:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8004948:	461a      	mov	r2, r3
 800494a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800494e:	6093      	str	r3, [r2, #8]
 8004950:	e032      	b.n	80049b8 <PCD_EP_OutXfrComplete_int+0x1bc>
 8004952:	693b      	ldr	r3, [r7, #16]
 8004954:	f003 0320 	and.w	r3, r3, #32
 8004958:	2b00      	cmp	r3, #0
 800495a:	d008      	beq.n	800496e <PCD_EP_OutXfrComplete_int+0x172>
 800495c:	683b      	ldr	r3, [r7, #0]
 800495e:	015a      	lsls	r2, r3, #5
 8004960:	69bb      	ldr	r3, [r7, #24]
 8004962:	4413      	add	r3, r2
 8004964:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8004968:	461a      	mov	r2, r3
 800496a:	2320      	movs	r3, #32
 800496c:	6093      	str	r3, [r2, #8]
 800496e:	683b      	ldr	r3, [r7, #0]
 8004970:	b2db      	uxtb	r3, r3
 8004972:	4619      	mov	r1, r3
 8004974:	6878      	ldr	r0, [r7, #4]
 8004976:	f007 f8df 	bl	800bb38 <HAL_PCD_DataOutStageCallback>
 800497a:	e01d      	b.n	80049b8 <PCD_EP_OutXfrComplete_int+0x1bc>
 800497c:	683b      	ldr	r3, [r7, #0]
 800497e:	2b00      	cmp	r3, #0
 8004980:	d114      	bne.n	80049ac <PCD_EP_OutXfrComplete_int+0x1b0>
 8004982:	6879      	ldr	r1, [r7, #4]
 8004984:	683a      	ldr	r2, [r7, #0]
 8004986:	4613      	mov	r3, r2
 8004988:	00db      	lsls	r3, r3, #3
 800498a:	4413      	add	r3, r2
 800498c:	009b      	lsls	r3, r3, #2
 800498e:	440b      	add	r3, r1
 8004990:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 8004994:	681b      	ldr	r3, [r3, #0]
 8004996:	2b00      	cmp	r3, #0
 8004998:	d108      	bne.n	80049ac <PCD_EP_OutXfrComplete_int+0x1b0>
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	6818      	ldr	r0, [r3, #0]
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 80049a4:	461a      	mov	r2, r3
 80049a6:	2100      	movs	r1, #0
 80049a8:	f003 fdcc 	bl	8008544 <USB_EP0_OutStart>
 80049ac:	683b      	ldr	r3, [r7, #0]
 80049ae:	b2db      	uxtb	r3, r3
 80049b0:	4619      	mov	r1, r3
 80049b2:	6878      	ldr	r0, [r7, #4]
 80049b4:	f007 f8c0 	bl	800bb38 <HAL_PCD_DataOutStageCallback>
 80049b8:	2300      	movs	r3, #0
 80049ba:	4618      	mov	r0, r3
 80049bc:	3720      	adds	r7, #32
 80049be:	46bd      	mov	sp, r7
 80049c0:	bd80      	pop	{r7, pc}
 80049c2:	bf00      	nop
 80049c4:	4f54300a 	.word	0x4f54300a
 80049c8:	4f54310a 	.word	0x4f54310a

080049cc <PCD_EP_OutSetupPacket_int>:
 80049cc:	b580      	push	{r7, lr}
 80049ce:	b086      	sub	sp, #24
 80049d0:	af00      	add	r7, sp, #0
 80049d2:	6078      	str	r0, [r7, #4]
 80049d4:	6039      	str	r1, [r7, #0]
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	681b      	ldr	r3, [r3, #0]
 80049da:	617b      	str	r3, [r7, #20]
 80049dc:	697b      	ldr	r3, [r7, #20]
 80049de:	613b      	str	r3, [r7, #16]
 80049e0:	697b      	ldr	r3, [r7, #20]
 80049e2:	333c      	adds	r3, #60	@ 0x3c
 80049e4:	3304      	adds	r3, #4
 80049e6:	681b      	ldr	r3, [r3, #0]
 80049e8:	60fb      	str	r3, [r7, #12]
 80049ea:	683b      	ldr	r3, [r7, #0]
 80049ec:	015a      	lsls	r2, r3, #5
 80049ee:	693b      	ldr	r3, [r7, #16]
 80049f0:	4413      	add	r3, r2
 80049f2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80049f6:	689b      	ldr	r3, [r3, #8]
 80049f8:	60bb      	str	r3, [r7, #8]
 80049fa:	68fb      	ldr	r3, [r7, #12]
 80049fc:	4a15      	ldr	r2, [pc, #84]	@ (8004a54 <PCD_EP_OutSetupPacket_int+0x88>)
 80049fe:	4293      	cmp	r3, r2
 8004a00:	d90e      	bls.n	8004a20 <PCD_EP_OutSetupPacket_int+0x54>
 8004a02:	68bb      	ldr	r3, [r7, #8]
 8004a04:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004a08:	2b00      	cmp	r3, #0
 8004a0a:	d009      	beq.n	8004a20 <PCD_EP_OutSetupPacket_int+0x54>
 8004a0c:	683b      	ldr	r3, [r7, #0]
 8004a0e:	015a      	lsls	r2, r3, #5
 8004a10:	693b      	ldr	r3, [r7, #16]
 8004a12:	4413      	add	r3, r2
 8004a14:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8004a18:	461a      	mov	r2, r3
 8004a1a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8004a1e:	6093      	str	r3, [r2, #8]
 8004a20:	6878      	ldr	r0, [r7, #4]
 8004a22:	f007 f877 	bl	800bb14 <HAL_PCD_SetupStageCallback>
 8004a26:	68fb      	ldr	r3, [r7, #12]
 8004a28:	4a0a      	ldr	r2, [pc, #40]	@ (8004a54 <PCD_EP_OutSetupPacket_int+0x88>)
 8004a2a:	4293      	cmp	r3, r2
 8004a2c:	d90c      	bls.n	8004a48 <PCD_EP_OutSetupPacket_int+0x7c>
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	799b      	ldrb	r3, [r3, #6]
 8004a32:	2b01      	cmp	r3, #1
 8004a34:	d108      	bne.n	8004a48 <PCD_EP_OutSetupPacket_int+0x7c>
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	6818      	ldr	r0, [r3, #0]
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8004a40:	461a      	mov	r2, r3
 8004a42:	2101      	movs	r1, #1
 8004a44:	f003 fd7e 	bl	8008544 <USB_EP0_OutStart>
 8004a48:	2300      	movs	r3, #0
 8004a4a:	4618      	mov	r0, r3
 8004a4c:	3718      	adds	r7, #24
 8004a4e:	46bd      	mov	sp, r7
 8004a50:	bd80      	pop	{r7, pc}
 8004a52:	bf00      	nop
 8004a54:	4f54300a 	.word	0x4f54300a

08004a58 <HAL_PCDEx_SetTxFiFo>:
 8004a58:	b480      	push	{r7}
 8004a5a:	b085      	sub	sp, #20
 8004a5c:	af00      	add	r7, sp, #0
 8004a5e:	6078      	str	r0, [r7, #4]
 8004a60:	460b      	mov	r3, r1
 8004a62:	70fb      	strb	r3, [r7, #3]
 8004a64:	4613      	mov	r3, r2
 8004a66:	803b      	strh	r3, [r7, #0]
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a6e:	60bb      	str	r3, [r7, #8]
 8004a70:	78fb      	ldrb	r3, [r7, #3]
 8004a72:	2b00      	cmp	r3, #0
 8004a74:	d107      	bne.n	8004a86 <HAL_PCDEx_SetTxFiFo+0x2e>
 8004a76:	883b      	ldrh	r3, [r7, #0]
 8004a78:	0419      	lsls	r1, r3, #16
 8004a7a:	687b      	ldr	r3, [r7, #4]
 8004a7c:	681b      	ldr	r3, [r3, #0]
 8004a7e:	68ba      	ldr	r2, [r7, #8]
 8004a80:	430a      	orrs	r2, r1
 8004a82:	629a      	str	r2, [r3, #40]	@ 0x28
 8004a84:	e028      	b.n	8004ad8 <HAL_PCDEx_SetTxFiFo+0x80>
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004a8c:	0c1b      	lsrs	r3, r3, #16
 8004a8e:	68ba      	ldr	r2, [r7, #8]
 8004a90:	4413      	add	r3, r2
 8004a92:	60bb      	str	r3, [r7, #8]
 8004a94:	2300      	movs	r3, #0
 8004a96:	73fb      	strb	r3, [r7, #15]
 8004a98:	e00d      	b.n	8004ab6 <HAL_PCDEx_SetTxFiFo+0x5e>
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	681a      	ldr	r2, [r3, #0]
 8004a9e:	7bfb      	ldrb	r3, [r7, #15]
 8004aa0:	3340      	adds	r3, #64	@ 0x40
 8004aa2:	009b      	lsls	r3, r3, #2
 8004aa4:	4413      	add	r3, r2
 8004aa6:	685b      	ldr	r3, [r3, #4]
 8004aa8:	0c1b      	lsrs	r3, r3, #16
 8004aaa:	68ba      	ldr	r2, [r7, #8]
 8004aac:	4413      	add	r3, r2
 8004aae:	60bb      	str	r3, [r7, #8]
 8004ab0:	7bfb      	ldrb	r3, [r7, #15]
 8004ab2:	3301      	adds	r3, #1
 8004ab4:	73fb      	strb	r3, [r7, #15]
 8004ab6:	7bfa      	ldrb	r2, [r7, #15]
 8004ab8:	78fb      	ldrb	r3, [r7, #3]
 8004aba:	3b01      	subs	r3, #1
 8004abc:	429a      	cmp	r2, r3
 8004abe:	d3ec      	bcc.n	8004a9a <HAL_PCDEx_SetTxFiFo+0x42>
 8004ac0:	883b      	ldrh	r3, [r7, #0]
 8004ac2:	0418      	lsls	r0, r3, #16
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	6819      	ldr	r1, [r3, #0]
 8004ac8:	78fb      	ldrb	r3, [r7, #3]
 8004aca:	3b01      	subs	r3, #1
 8004acc:	68ba      	ldr	r2, [r7, #8]
 8004ace:	4302      	orrs	r2, r0
 8004ad0:	3340      	adds	r3, #64	@ 0x40
 8004ad2:	009b      	lsls	r3, r3, #2
 8004ad4:	440b      	add	r3, r1
 8004ad6:	605a      	str	r2, [r3, #4]
 8004ad8:	2300      	movs	r3, #0
 8004ada:	4618      	mov	r0, r3
 8004adc:	3714      	adds	r7, #20
 8004ade:	46bd      	mov	sp, r7
 8004ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ae4:	4770      	bx	lr

08004ae6 <HAL_PCDEx_SetRxFiFo>:
 8004ae6:	b480      	push	{r7}
 8004ae8:	b083      	sub	sp, #12
 8004aea:	af00      	add	r7, sp, #0
 8004aec:	6078      	str	r0, [r7, #4]
 8004aee:	460b      	mov	r3, r1
 8004af0:	807b      	strh	r3, [r7, #2]
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	887a      	ldrh	r2, [r7, #2]
 8004af8:	625a      	str	r2, [r3, #36]	@ 0x24
 8004afa:	2300      	movs	r3, #0
 8004afc:	4618      	mov	r0, r3
 8004afe:	370c      	adds	r7, #12
 8004b00:	46bd      	mov	sp, r7
 8004b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b06:	4770      	bx	lr

08004b08 <HAL_PCDEx_LPM_Callback>:
 8004b08:	b480      	push	{r7}
 8004b0a:	b083      	sub	sp, #12
 8004b0c:	af00      	add	r7, sp, #0
 8004b0e:	6078      	str	r0, [r7, #4]
 8004b10:	460b      	mov	r3, r1
 8004b12:	70fb      	strb	r3, [r7, #3]
 8004b14:	bf00      	nop
 8004b16:	370c      	adds	r7, #12
 8004b18:	46bd      	mov	sp, r7
 8004b1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b1e:	4770      	bx	lr

08004b20 <HAL_RCC_OscConfig>:
 8004b20:	b580      	push	{r7, lr}
 8004b22:	b086      	sub	sp, #24
 8004b24:	af00      	add	r7, sp, #0
 8004b26:	6078      	str	r0, [r7, #4]
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d101      	bne.n	8004b32 <HAL_RCC_OscConfig+0x12>
 8004b2e:	2301      	movs	r3, #1
 8004b30:	e267      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	f003 0301 	and.w	r3, r3, #1
 8004b3a:	2b00      	cmp	r3, #0
 8004b3c:	d075      	beq.n	8004c2a <HAL_RCC_OscConfig+0x10a>
 8004b3e:	4b88      	ldr	r3, [pc, #544]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004b40:	689b      	ldr	r3, [r3, #8]
 8004b42:	f003 030c 	and.w	r3, r3, #12
 8004b46:	2b04      	cmp	r3, #4
 8004b48:	d00c      	beq.n	8004b64 <HAL_RCC_OscConfig+0x44>
 8004b4a:	4b85      	ldr	r3, [pc, #532]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004b4c:	689b      	ldr	r3, [r3, #8]
 8004b4e:	f003 030c 	and.w	r3, r3, #12
 8004b52:	2b08      	cmp	r3, #8
 8004b54:	d112      	bne.n	8004b7c <HAL_RCC_OscConfig+0x5c>
 8004b56:	4b82      	ldr	r3, [pc, #520]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004b58:	685b      	ldr	r3, [r3, #4]
 8004b5a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004b5e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004b62:	d10b      	bne.n	8004b7c <HAL_RCC_OscConfig+0x5c>
 8004b64:	4b7e      	ldr	r3, [pc, #504]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004b6c:	2b00      	cmp	r3, #0
 8004b6e:	d05b      	beq.n	8004c28 <HAL_RCC_OscConfig+0x108>
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	685b      	ldr	r3, [r3, #4]
 8004b74:	2b00      	cmp	r3, #0
 8004b76:	d157      	bne.n	8004c28 <HAL_RCC_OscConfig+0x108>
 8004b78:	2301      	movs	r3, #1
 8004b7a:	e242      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004b7c:	687b      	ldr	r3, [r7, #4]
 8004b7e:	685b      	ldr	r3, [r3, #4]
 8004b80:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004b84:	d106      	bne.n	8004b94 <HAL_RCC_OscConfig+0x74>
 8004b86:	4b76      	ldr	r3, [pc, #472]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004b88:	681b      	ldr	r3, [r3, #0]
 8004b8a:	4a75      	ldr	r2, [pc, #468]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004b8c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004b90:	6013      	str	r3, [r2, #0]
 8004b92:	e01d      	b.n	8004bd0 <HAL_RCC_OscConfig+0xb0>
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	685b      	ldr	r3, [r3, #4]
 8004b98:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004b9c:	d10c      	bne.n	8004bb8 <HAL_RCC_OscConfig+0x98>
 8004b9e:	4b70      	ldr	r3, [pc, #448]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004ba0:	681b      	ldr	r3, [r3, #0]
 8004ba2:	4a6f      	ldr	r2, [pc, #444]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004ba4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004ba8:	6013      	str	r3, [r2, #0]
 8004baa:	4b6d      	ldr	r3, [pc, #436]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004bac:	681b      	ldr	r3, [r3, #0]
 8004bae:	4a6c      	ldr	r2, [pc, #432]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004bb0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004bb4:	6013      	str	r3, [r2, #0]
 8004bb6:	e00b      	b.n	8004bd0 <HAL_RCC_OscConfig+0xb0>
 8004bb8:	4b69      	ldr	r3, [pc, #420]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	4a68      	ldr	r2, [pc, #416]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004bbe:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004bc2:	6013      	str	r3, [r2, #0]
 8004bc4:	4b66      	ldr	r3, [pc, #408]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	4a65      	ldr	r2, [pc, #404]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004bca:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004bce:	6013      	str	r3, [r2, #0]
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	685b      	ldr	r3, [r3, #4]
 8004bd4:	2b00      	cmp	r3, #0
 8004bd6:	d013      	beq.n	8004c00 <HAL_RCC_OscConfig+0xe0>
 8004bd8:	f7fc fd44 	bl	8001664 <HAL_GetTick>
 8004bdc:	6138      	str	r0, [r7, #16]
 8004bde:	e008      	b.n	8004bf2 <HAL_RCC_OscConfig+0xd2>
 8004be0:	f7fc fd40 	bl	8001664 <HAL_GetTick>
 8004be4:	4602      	mov	r2, r0
 8004be6:	693b      	ldr	r3, [r7, #16]
 8004be8:	1ad3      	subs	r3, r2, r3
 8004bea:	2b64      	cmp	r3, #100	@ 0x64
 8004bec:	d901      	bls.n	8004bf2 <HAL_RCC_OscConfig+0xd2>
 8004bee:	2303      	movs	r3, #3
 8004bf0:	e207      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004bf2:	4b5b      	ldr	r3, [pc, #364]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004bf4:	681b      	ldr	r3, [r3, #0]
 8004bf6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004bfa:	2b00      	cmp	r3, #0
 8004bfc:	d0f0      	beq.n	8004be0 <HAL_RCC_OscConfig+0xc0>
 8004bfe:	e014      	b.n	8004c2a <HAL_RCC_OscConfig+0x10a>
 8004c00:	f7fc fd30 	bl	8001664 <HAL_GetTick>
 8004c04:	6138      	str	r0, [r7, #16]
 8004c06:	e008      	b.n	8004c1a <HAL_RCC_OscConfig+0xfa>
 8004c08:	f7fc fd2c 	bl	8001664 <HAL_GetTick>
 8004c0c:	4602      	mov	r2, r0
 8004c0e:	693b      	ldr	r3, [r7, #16]
 8004c10:	1ad3      	subs	r3, r2, r3
 8004c12:	2b64      	cmp	r3, #100	@ 0x64
 8004c14:	d901      	bls.n	8004c1a <HAL_RCC_OscConfig+0xfa>
 8004c16:	2303      	movs	r3, #3
 8004c18:	e1f3      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004c1a:	4b51      	ldr	r3, [pc, #324]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	d1f0      	bne.n	8004c08 <HAL_RCC_OscConfig+0xe8>
 8004c26:	e000      	b.n	8004c2a <HAL_RCC_OscConfig+0x10a>
 8004c28:	bf00      	nop
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	f003 0302 	and.w	r3, r3, #2
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d063      	beq.n	8004cfe <HAL_RCC_OscConfig+0x1de>
 8004c36:	4b4a      	ldr	r3, [pc, #296]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004c38:	689b      	ldr	r3, [r3, #8]
 8004c3a:	f003 030c 	and.w	r3, r3, #12
 8004c3e:	2b00      	cmp	r3, #0
 8004c40:	d00b      	beq.n	8004c5a <HAL_RCC_OscConfig+0x13a>
 8004c42:	4b47      	ldr	r3, [pc, #284]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004c44:	689b      	ldr	r3, [r3, #8]
 8004c46:	f003 030c 	and.w	r3, r3, #12
 8004c4a:	2b08      	cmp	r3, #8
 8004c4c:	d11c      	bne.n	8004c88 <HAL_RCC_OscConfig+0x168>
 8004c4e:	4b44      	ldr	r3, [pc, #272]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004c50:	685b      	ldr	r3, [r3, #4]
 8004c52:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004c56:	2b00      	cmp	r3, #0
 8004c58:	d116      	bne.n	8004c88 <HAL_RCC_OscConfig+0x168>
 8004c5a:	4b41      	ldr	r3, [pc, #260]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004c5c:	681b      	ldr	r3, [r3, #0]
 8004c5e:	f003 0302 	and.w	r3, r3, #2
 8004c62:	2b00      	cmp	r3, #0
 8004c64:	d005      	beq.n	8004c72 <HAL_RCC_OscConfig+0x152>
 8004c66:	687b      	ldr	r3, [r7, #4]
 8004c68:	68db      	ldr	r3, [r3, #12]
 8004c6a:	2b01      	cmp	r3, #1
 8004c6c:	d001      	beq.n	8004c72 <HAL_RCC_OscConfig+0x152>
 8004c6e:	2301      	movs	r3, #1
 8004c70:	e1c7      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004c72:	4b3b      	ldr	r3, [pc, #236]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004c74:	681b      	ldr	r3, [r3, #0]
 8004c76:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004c7a:	687b      	ldr	r3, [r7, #4]
 8004c7c:	691b      	ldr	r3, [r3, #16]
 8004c7e:	00db      	lsls	r3, r3, #3
 8004c80:	4937      	ldr	r1, [pc, #220]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004c82:	4313      	orrs	r3, r2
 8004c84:	600b      	str	r3, [r1, #0]
 8004c86:	e03a      	b.n	8004cfe <HAL_RCC_OscConfig+0x1de>
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	68db      	ldr	r3, [r3, #12]
 8004c8c:	2b00      	cmp	r3, #0
 8004c8e:	d020      	beq.n	8004cd2 <HAL_RCC_OscConfig+0x1b2>
 8004c90:	4b34      	ldr	r3, [pc, #208]	@ (8004d64 <HAL_RCC_OscConfig+0x244>)
 8004c92:	2201      	movs	r2, #1
 8004c94:	601a      	str	r2, [r3, #0]
 8004c96:	f7fc fce5 	bl	8001664 <HAL_GetTick>
 8004c9a:	6138      	str	r0, [r7, #16]
 8004c9c:	e008      	b.n	8004cb0 <HAL_RCC_OscConfig+0x190>
 8004c9e:	f7fc fce1 	bl	8001664 <HAL_GetTick>
 8004ca2:	4602      	mov	r2, r0
 8004ca4:	693b      	ldr	r3, [r7, #16]
 8004ca6:	1ad3      	subs	r3, r2, r3
 8004ca8:	2b02      	cmp	r3, #2
 8004caa:	d901      	bls.n	8004cb0 <HAL_RCC_OscConfig+0x190>
 8004cac:	2303      	movs	r3, #3
 8004cae:	e1a8      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004cb0:	4b2b      	ldr	r3, [pc, #172]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	f003 0302 	and.w	r3, r3, #2
 8004cb8:	2b00      	cmp	r3, #0
 8004cba:	d0f0      	beq.n	8004c9e <HAL_RCC_OscConfig+0x17e>
 8004cbc:	4b28      	ldr	r3, [pc, #160]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	691b      	ldr	r3, [r3, #16]
 8004cc8:	00db      	lsls	r3, r3, #3
 8004cca:	4925      	ldr	r1, [pc, #148]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004ccc:	4313      	orrs	r3, r2
 8004cce:	600b      	str	r3, [r1, #0]
 8004cd0:	e015      	b.n	8004cfe <HAL_RCC_OscConfig+0x1de>
 8004cd2:	4b24      	ldr	r3, [pc, #144]	@ (8004d64 <HAL_RCC_OscConfig+0x244>)
 8004cd4:	2200      	movs	r2, #0
 8004cd6:	601a      	str	r2, [r3, #0]
 8004cd8:	f7fc fcc4 	bl	8001664 <HAL_GetTick>
 8004cdc:	6138      	str	r0, [r7, #16]
 8004cde:	e008      	b.n	8004cf2 <HAL_RCC_OscConfig+0x1d2>
 8004ce0:	f7fc fcc0 	bl	8001664 <HAL_GetTick>
 8004ce4:	4602      	mov	r2, r0
 8004ce6:	693b      	ldr	r3, [r7, #16]
 8004ce8:	1ad3      	subs	r3, r2, r3
 8004cea:	2b02      	cmp	r3, #2
 8004cec:	d901      	bls.n	8004cf2 <HAL_RCC_OscConfig+0x1d2>
 8004cee:	2303      	movs	r3, #3
 8004cf0:	e187      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004cf2:	4b1b      	ldr	r3, [pc, #108]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	f003 0302 	and.w	r3, r3, #2
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	d1f0      	bne.n	8004ce0 <HAL_RCC_OscConfig+0x1c0>
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	f003 0308 	and.w	r3, r3, #8
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d036      	beq.n	8004d78 <HAL_RCC_OscConfig+0x258>
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	695b      	ldr	r3, [r3, #20]
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	d016      	beq.n	8004d40 <HAL_RCC_OscConfig+0x220>
 8004d12:	4b15      	ldr	r3, [pc, #84]	@ (8004d68 <HAL_RCC_OscConfig+0x248>)
 8004d14:	2201      	movs	r2, #1
 8004d16:	601a      	str	r2, [r3, #0]
 8004d18:	f7fc fca4 	bl	8001664 <HAL_GetTick>
 8004d1c:	6138      	str	r0, [r7, #16]
 8004d1e:	e008      	b.n	8004d32 <HAL_RCC_OscConfig+0x212>
 8004d20:	f7fc fca0 	bl	8001664 <HAL_GetTick>
 8004d24:	4602      	mov	r2, r0
 8004d26:	693b      	ldr	r3, [r7, #16]
 8004d28:	1ad3      	subs	r3, r2, r3
 8004d2a:	2b02      	cmp	r3, #2
 8004d2c:	d901      	bls.n	8004d32 <HAL_RCC_OscConfig+0x212>
 8004d2e:	2303      	movs	r3, #3
 8004d30:	e167      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004d32:	4b0b      	ldr	r3, [pc, #44]	@ (8004d60 <HAL_RCC_OscConfig+0x240>)
 8004d34:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004d36:	f003 0302 	and.w	r3, r3, #2
 8004d3a:	2b00      	cmp	r3, #0
 8004d3c:	d0f0      	beq.n	8004d20 <HAL_RCC_OscConfig+0x200>
 8004d3e:	e01b      	b.n	8004d78 <HAL_RCC_OscConfig+0x258>
 8004d40:	4b09      	ldr	r3, [pc, #36]	@ (8004d68 <HAL_RCC_OscConfig+0x248>)
 8004d42:	2200      	movs	r2, #0
 8004d44:	601a      	str	r2, [r3, #0]
 8004d46:	f7fc fc8d 	bl	8001664 <HAL_GetTick>
 8004d4a:	6138      	str	r0, [r7, #16]
 8004d4c:	e00e      	b.n	8004d6c <HAL_RCC_OscConfig+0x24c>
 8004d4e:	f7fc fc89 	bl	8001664 <HAL_GetTick>
 8004d52:	4602      	mov	r2, r0
 8004d54:	693b      	ldr	r3, [r7, #16]
 8004d56:	1ad3      	subs	r3, r2, r3
 8004d58:	2b02      	cmp	r3, #2
 8004d5a:	d907      	bls.n	8004d6c <HAL_RCC_OscConfig+0x24c>
 8004d5c:	2303      	movs	r3, #3
 8004d5e:	e150      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004d60:	40023800 	.word	0x40023800
 8004d64:	42470000 	.word	0x42470000
 8004d68:	42470e80 	.word	0x42470e80
 8004d6c:	4b88      	ldr	r3, [pc, #544]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004d6e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004d70:	f003 0302 	and.w	r3, r3, #2
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	d1ea      	bne.n	8004d4e <HAL_RCC_OscConfig+0x22e>
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	f003 0304 	and.w	r3, r3, #4
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	f000 8097 	beq.w	8004eb4 <HAL_RCC_OscConfig+0x394>
 8004d86:	2300      	movs	r3, #0
 8004d88:	75fb      	strb	r3, [r7, #23]
 8004d8a:	4b81      	ldr	r3, [pc, #516]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004d8c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d8e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004d92:	2b00      	cmp	r3, #0
 8004d94:	d10f      	bne.n	8004db6 <HAL_RCC_OscConfig+0x296>
 8004d96:	2300      	movs	r3, #0
 8004d98:	60bb      	str	r3, [r7, #8]
 8004d9a:	4b7d      	ldr	r3, [pc, #500]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004d9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d9e:	4a7c      	ldr	r2, [pc, #496]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004da0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004da4:	6413      	str	r3, [r2, #64]	@ 0x40
 8004da6:	4b7a      	ldr	r3, [pc, #488]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004da8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004daa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004dae:	60bb      	str	r3, [r7, #8]
 8004db0:	68bb      	ldr	r3, [r7, #8]
 8004db2:	2301      	movs	r3, #1
 8004db4:	75fb      	strb	r3, [r7, #23]
 8004db6:	4b77      	ldr	r3, [pc, #476]	@ (8004f94 <HAL_RCC_OscConfig+0x474>)
 8004db8:	681b      	ldr	r3, [r3, #0]
 8004dba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004dbe:	2b00      	cmp	r3, #0
 8004dc0:	d118      	bne.n	8004df4 <HAL_RCC_OscConfig+0x2d4>
 8004dc2:	4b74      	ldr	r3, [pc, #464]	@ (8004f94 <HAL_RCC_OscConfig+0x474>)
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	4a73      	ldr	r2, [pc, #460]	@ (8004f94 <HAL_RCC_OscConfig+0x474>)
 8004dc8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004dcc:	6013      	str	r3, [r2, #0]
 8004dce:	f7fc fc49 	bl	8001664 <HAL_GetTick>
 8004dd2:	6138      	str	r0, [r7, #16]
 8004dd4:	e008      	b.n	8004de8 <HAL_RCC_OscConfig+0x2c8>
 8004dd6:	f7fc fc45 	bl	8001664 <HAL_GetTick>
 8004dda:	4602      	mov	r2, r0
 8004ddc:	693b      	ldr	r3, [r7, #16]
 8004dde:	1ad3      	subs	r3, r2, r3
 8004de0:	2b02      	cmp	r3, #2
 8004de2:	d901      	bls.n	8004de8 <HAL_RCC_OscConfig+0x2c8>
 8004de4:	2303      	movs	r3, #3
 8004de6:	e10c      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004de8:	4b6a      	ldr	r3, [pc, #424]	@ (8004f94 <HAL_RCC_OscConfig+0x474>)
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	d0f0      	beq.n	8004dd6 <HAL_RCC_OscConfig+0x2b6>
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	689b      	ldr	r3, [r3, #8]
 8004df8:	2b01      	cmp	r3, #1
 8004dfa:	d106      	bne.n	8004e0a <HAL_RCC_OscConfig+0x2ea>
 8004dfc:	4b64      	ldr	r3, [pc, #400]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004dfe:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e00:	4a63      	ldr	r2, [pc, #396]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e02:	f043 0301 	orr.w	r3, r3, #1
 8004e06:	6713      	str	r3, [r2, #112]	@ 0x70
 8004e08:	e01c      	b.n	8004e44 <HAL_RCC_OscConfig+0x324>
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	689b      	ldr	r3, [r3, #8]
 8004e0e:	2b05      	cmp	r3, #5
 8004e10:	d10c      	bne.n	8004e2c <HAL_RCC_OscConfig+0x30c>
 8004e12:	4b5f      	ldr	r3, [pc, #380]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e14:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e16:	4a5e      	ldr	r2, [pc, #376]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e18:	f043 0304 	orr.w	r3, r3, #4
 8004e1c:	6713      	str	r3, [r2, #112]	@ 0x70
 8004e1e:	4b5c      	ldr	r3, [pc, #368]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e20:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e22:	4a5b      	ldr	r2, [pc, #364]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e24:	f043 0301 	orr.w	r3, r3, #1
 8004e28:	6713      	str	r3, [r2, #112]	@ 0x70
 8004e2a:	e00b      	b.n	8004e44 <HAL_RCC_OscConfig+0x324>
 8004e2c:	4b58      	ldr	r3, [pc, #352]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e2e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e30:	4a57      	ldr	r2, [pc, #348]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e32:	f023 0301 	bic.w	r3, r3, #1
 8004e36:	6713      	str	r3, [r2, #112]	@ 0x70
 8004e38:	4b55      	ldr	r3, [pc, #340]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e3a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e3c:	4a54      	ldr	r2, [pc, #336]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e3e:	f023 0304 	bic.w	r3, r3, #4
 8004e42:	6713      	str	r3, [r2, #112]	@ 0x70
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	689b      	ldr	r3, [r3, #8]
 8004e48:	2b00      	cmp	r3, #0
 8004e4a:	d015      	beq.n	8004e78 <HAL_RCC_OscConfig+0x358>
 8004e4c:	f7fc fc0a 	bl	8001664 <HAL_GetTick>
 8004e50:	6138      	str	r0, [r7, #16]
 8004e52:	e00a      	b.n	8004e6a <HAL_RCC_OscConfig+0x34a>
 8004e54:	f7fc fc06 	bl	8001664 <HAL_GetTick>
 8004e58:	4602      	mov	r2, r0
 8004e5a:	693b      	ldr	r3, [r7, #16]
 8004e5c:	1ad3      	subs	r3, r2, r3
 8004e5e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004e62:	4293      	cmp	r3, r2
 8004e64:	d901      	bls.n	8004e6a <HAL_RCC_OscConfig+0x34a>
 8004e66:	2303      	movs	r3, #3
 8004e68:	e0cb      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004e6a:	4b49      	ldr	r3, [pc, #292]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e6c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e6e:	f003 0302 	and.w	r3, r3, #2
 8004e72:	2b00      	cmp	r3, #0
 8004e74:	d0ee      	beq.n	8004e54 <HAL_RCC_OscConfig+0x334>
 8004e76:	e014      	b.n	8004ea2 <HAL_RCC_OscConfig+0x382>
 8004e78:	f7fc fbf4 	bl	8001664 <HAL_GetTick>
 8004e7c:	6138      	str	r0, [r7, #16]
 8004e7e:	e00a      	b.n	8004e96 <HAL_RCC_OscConfig+0x376>
 8004e80:	f7fc fbf0 	bl	8001664 <HAL_GetTick>
 8004e84:	4602      	mov	r2, r0
 8004e86:	693b      	ldr	r3, [r7, #16]
 8004e88:	1ad3      	subs	r3, r2, r3
 8004e8a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004e8e:	4293      	cmp	r3, r2
 8004e90:	d901      	bls.n	8004e96 <HAL_RCC_OscConfig+0x376>
 8004e92:	2303      	movs	r3, #3
 8004e94:	e0b5      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004e96:	4b3e      	ldr	r3, [pc, #248]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004e98:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e9a:	f003 0302 	and.w	r3, r3, #2
 8004e9e:	2b00      	cmp	r3, #0
 8004ea0:	d1ee      	bne.n	8004e80 <HAL_RCC_OscConfig+0x360>
 8004ea2:	7dfb      	ldrb	r3, [r7, #23]
 8004ea4:	2b01      	cmp	r3, #1
 8004ea6:	d105      	bne.n	8004eb4 <HAL_RCC_OscConfig+0x394>
 8004ea8:	4b39      	ldr	r3, [pc, #228]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004eaa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004eac:	4a38      	ldr	r2, [pc, #224]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004eae:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004eb2:	6413      	str	r3, [r2, #64]	@ 0x40
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	699b      	ldr	r3, [r3, #24]
 8004eb8:	2b00      	cmp	r3, #0
 8004eba:	f000 80a1 	beq.w	8005000 <HAL_RCC_OscConfig+0x4e0>
 8004ebe:	4b34      	ldr	r3, [pc, #208]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004ec0:	689b      	ldr	r3, [r3, #8]
 8004ec2:	f003 030c 	and.w	r3, r3, #12
 8004ec6:	2b08      	cmp	r3, #8
 8004ec8:	d05c      	beq.n	8004f84 <HAL_RCC_OscConfig+0x464>
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	699b      	ldr	r3, [r3, #24]
 8004ece:	2b02      	cmp	r3, #2
 8004ed0:	d141      	bne.n	8004f56 <HAL_RCC_OscConfig+0x436>
 8004ed2:	4b31      	ldr	r3, [pc, #196]	@ (8004f98 <HAL_RCC_OscConfig+0x478>)
 8004ed4:	2200      	movs	r2, #0
 8004ed6:	601a      	str	r2, [r3, #0]
 8004ed8:	f7fc fbc4 	bl	8001664 <HAL_GetTick>
 8004edc:	6138      	str	r0, [r7, #16]
 8004ede:	e008      	b.n	8004ef2 <HAL_RCC_OscConfig+0x3d2>
 8004ee0:	f7fc fbc0 	bl	8001664 <HAL_GetTick>
 8004ee4:	4602      	mov	r2, r0
 8004ee6:	693b      	ldr	r3, [r7, #16]
 8004ee8:	1ad3      	subs	r3, r2, r3
 8004eea:	2b02      	cmp	r3, #2
 8004eec:	d901      	bls.n	8004ef2 <HAL_RCC_OscConfig+0x3d2>
 8004eee:	2303      	movs	r3, #3
 8004ef0:	e087      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004ef2:	4b27      	ldr	r3, [pc, #156]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004efa:	2b00      	cmp	r3, #0
 8004efc:	d1f0      	bne.n	8004ee0 <HAL_RCC_OscConfig+0x3c0>
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	69da      	ldr	r2, [r3, #28]
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	6a1b      	ldr	r3, [r3, #32]
 8004f06:	431a      	orrs	r2, r3
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f0c:	019b      	lsls	r3, r3, #6
 8004f0e:	431a      	orrs	r2, r3
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004f14:	085b      	lsrs	r3, r3, #1
 8004f16:	3b01      	subs	r3, #1
 8004f18:	041b      	lsls	r3, r3, #16
 8004f1a:	431a      	orrs	r2, r3
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004f20:	061b      	lsls	r3, r3, #24
 8004f22:	491b      	ldr	r1, [pc, #108]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004f24:	4313      	orrs	r3, r2
 8004f26:	604b      	str	r3, [r1, #4]
 8004f28:	4b1b      	ldr	r3, [pc, #108]	@ (8004f98 <HAL_RCC_OscConfig+0x478>)
 8004f2a:	2201      	movs	r2, #1
 8004f2c:	601a      	str	r2, [r3, #0]
 8004f2e:	f7fc fb99 	bl	8001664 <HAL_GetTick>
 8004f32:	6138      	str	r0, [r7, #16]
 8004f34:	e008      	b.n	8004f48 <HAL_RCC_OscConfig+0x428>
 8004f36:	f7fc fb95 	bl	8001664 <HAL_GetTick>
 8004f3a:	4602      	mov	r2, r0
 8004f3c:	693b      	ldr	r3, [r7, #16]
 8004f3e:	1ad3      	subs	r3, r2, r3
 8004f40:	2b02      	cmp	r3, #2
 8004f42:	d901      	bls.n	8004f48 <HAL_RCC_OscConfig+0x428>
 8004f44:	2303      	movs	r3, #3
 8004f46:	e05c      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004f48:	4b11      	ldr	r3, [pc, #68]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004f50:	2b00      	cmp	r3, #0
 8004f52:	d0f0      	beq.n	8004f36 <HAL_RCC_OscConfig+0x416>
 8004f54:	e054      	b.n	8005000 <HAL_RCC_OscConfig+0x4e0>
 8004f56:	4b10      	ldr	r3, [pc, #64]	@ (8004f98 <HAL_RCC_OscConfig+0x478>)
 8004f58:	2200      	movs	r2, #0
 8004f5a:	601a      	str	r2, [r3, #0]
 8004f5c:	f7fc fb82 	bl	8001664 <HAL_GetTick>
 8004f60:	6138      	str	r0, [r7, #16]
 8004f62:	e008      	b.n	8004f76 <HAL_RCC_OscConfig+0x456>
 8004f64:	f7fc fb7e 	bl	8001664 <HAL_GetTick>
 8004f68:	4602      	mov	r2, r0
 8004f6a:	693b      	ldr	r3, [r7, #16]
 8004f6c:	1ad3      	subs	r3, r2, r3
 8004f6e:	2b02      	cmp	r3, #2
 8004f70:	d901      	bls.n	8004f76 <HAL_RCC_OscConfig+0x456>
 8004f72:	2303      	movs	r3, #3
 8004f74:	e045      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004f76:	4b06      	ldr	r3, [pc, #24]	@ (8004f90 <HAL_RCC_OscConfig+0x470>)
 8004f78:	681b      	ldr	r3, [r3, #0]
 8004f7a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	d1f0      	bne.n	8004f64 <HAL_RCC_OscConfig+0x444>
 8004f82:	e03d      	b.n	8005000 <HAL_RCC_OscConfig+0x4e0>
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	699b      	ldr	r3, [r3, #24]
 8004f88:	2b01      	cmp	r3, #1
 8004f8a:	d107      	bne.n	8004f9c <HAL_RCC_OscConfig+0x47c>
 8004f8c:	2301      	movs	r3, #1
 8004f8e:	e038      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8004f90:	40023800 	.word	0x40023800
 8004f94:	40007000 	.word	0x40007000
 8004f98:	42470060 	.word	0x42470060
 8004f9c:	4b1b      	ldr	r3, [pc, #108]	@ (800500c <HAL_RCC_OscConfig+0x4ec>)
 8004f9e:	685b      	ldr	r3, [r3, #4]
 8004fa0:	60fb      	str	r3, [r7, #12]
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	699b      	ldr	r3, [r3, #24]
 8004fa6:	2b01      	cmp	r3, #1
 8004fa8:	d028      	beq.n	8004ffc <HAL_RCC_OscConfig+0x4dc>
 8004faa:	68fb      	ldr	r3, [r7, #12]
 8004fac:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	69db      	ldr	r3, [r3, #28]
 8004fb4:	429a      	cmp	r2, r3
 8004fb6:	d121      	bne.n	8004ffc <HAL_RCC_OscConfig+0x4dc>
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	6a1b      	ldr	r3, [r3, #32]
 8004fc2:	429a      	cmp	r2, r3
 8004fc4:	d11a      	bne.n	8004ffc <HAL_RCC_OscConfig+0x4dc>
 8004fc6:	68fa      	ldr	r2, [r7, #12]
 8004fc8:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8004fcc:	4013      	ands	r3, r2
 8004fce:	687a      	ldr	r2, [r7, #4]
 8004fd0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8004fd2:	0192      	lsls	r2, r2, #6
 8004fd4:	4293      	cmp	r3, r2
 8004fd6:	d111      	bne.n	8004ffc <HAL_RCC_OscConfig+0x4dc>
 8004fd8:	68fb      	ldr	r3, [r7, #12]
 8004fda:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004fe2:	085b      	lsrs	r3, r3, #1
 8004fe4:	3b01      	subs	r3, #1
 8004fe6:	041b      	lsls	r3, r3, #16
 8004fe8:	429a      	cmp	r2, r3
 8004fea:	d107      	bne.n	8004ffc <HAL_RCC_OscConfig+0x4dc>
 8004fec:	68fb      	ldr	r3, [r7, #12]
 8004fee:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8004ff2:	687b      	ldr	r3, [r7, #4]
 8004ff4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004ff6:	061b      	lsls	r3, r3, #24
 8004ff8:	429a      	cmp	r2, r3
 8004ffa:	d001      	beq.n	8005000 <HAL_RCC_OscConfig+0x4e0>
 8004ffc:	2301      	movs	r3, #1
 8004ffe:	e000      	b.n	8005002 <HAL_RCC_OscConfig+0x4e2>
 8005000:	2300      	movs	r3, #0
 8005002:	4618      	mov	r0, r3
 8005004:	3718      	adds	r7, #24
 8005006:	46bd      	mov	sp, r7
 8005008:	bd80      	pop	{r7, pc}
 800500a:	bf00      	nop
 800500c:	40023800 	.word	0x40023800

08005010 <HAL_RCC_ClockConfig>:
 8005010:	b580      	push	{r7, lr}
 8005012:	b084      	sub	sp, #16
 8005014:	af00      	add	r7, sp, #0
 8005016:	6078      	str	r0, [r7, #4]
 8005018:	6039      	str	r1, [r7, #0]
 800501a:	687b      	ldr	r3, [r7, #4]
 800501c:	2b00      	cmp	r3, #0
 800501e:	d101      	bne.n	8005024 <HAL_RCC_ClockConfig+0x14>
 8005020:	2301      	movs	r3, #1
 8005022:	e0cc      	b.n	80051be <HAL_RCC_ClockConfig+0x1ae>
 8005024:	4b68      	ldr	r3, [pc, #416]	@ (80051c8 <HAL_RCC_ClockConfig+0x1b8>)
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	f003 0307 	and.w	r3, r3, #7
 800502c:	683a      	ldr	r2, [r7, #0]
 800502e:	429a      	cmp	r2, r3
 8005030:	d90c      	bls.n	800504c <HAL_RCC_ClockConfig+0x3c>
 8005032:	4b65      	ldr	r3, [pc, #404]	@ (80051c8 <HAL_RCC_ClockConfig+0x1b8>)
 8005034:	683a      	ldr	r2, [r7, #0]
 8005036:	b2d2      	uxtb	r2, r2
 8005038:	701a      	strb	r2, [r3, #0]
 800503a:	4b63      	ldr	r3, [pc, #396]	@ (80051c8 <HAL_RCC_ClockConfig+0x1b8>)
 800503c:	681b      	ldr	r3, [r3, #0]
 800503e:	f003 0307 	and.w	r3, r3, #7
 8005042:	683a      	ldr	r2, [r7, #0]
 8005044:	429a      	cmp	r2, r3
 8005046:	d001      	beq.n	800504c <HAL_RCC_ClockConfig+0x3c>
 8005048:	2301      	movs	r3, #1
 800504a:	e0b8      	b.n	80051be <HAL_RCC_ClockConfig+0x1ae>
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	f003 0302 	and.w	r3, r3, #2
 8005054:	2b00      	cmp	r3, #0
 8005056:	d020      	beq.n	800509a <HAL_RCC_ClockConfig+0x8a>
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	f003 0304 	and.w	r3, r3, #4
 8005060:	2b00      	cmp	r3, #0
 8005062:	d005      	beq.n	8005070 <HAL_RCC_ClockConfig+0x60>
 8005064:	4b59      	ldr	r3, [pc, #356]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 8005066:	689b      	ldr	r3, [r3, #8]
 8005068:	4a58      	ldr	r2, [pc, #352]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 800506a:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800506e:	6093      	str	r3, [r2, #8]
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	f003 0308 	and.w	r3, r3, #8
 8005078:	2b00      	cmp	r3, #0
 800507a:	d005      	beq.n	8005088 <HAL_RCC_ClockConfig+0x78>
 800507c:	4b53      	ldr	r3, [pc, #332]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 800507e:	689b      	ldr	r3, [r3, #8]
 8005080:	4a52      	ldr	r2, [pc, #328]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 8005082:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8005086:	6093      	str	r3, [r2, #8]
 8005088:	4b50      	ldr	r3, [pc, #320]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 800508a:	689b      	ldr	r3, [r3, #8]
 800508c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	689b      	ldr	r3, [r3, #8]
 8005094:	494d      	ldr	r1, [pc, #308]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 8005096:	4313      	orrs	r3, r2
 8005098:	608b      	str	r3, [r1, #8]
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	f003 0301 	and.w	r3, r3, #1
 80050a2:	2b00      	cmp	r3, #0
 80050a4:	d044      	beq.n	8005130 <HAL_RCC_ClockConfig+0x120>
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	685b      	ldr	r3, [r3, #4]
 80050aa:	2b01      	cmp	r3, #1
 80050ac:	d107      	bne.n	80050be <HAL_RCC_ClockConfig+0xae>
 80050ae:	4b47      	ldr	r3, [pc, #284]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80050b6:	2b00      	cmp	r3, #0
 80050b8:	d119      	bne.n	80050ee <HAL_RCC_ClockConfig+0xde>
 80050ba:	2301      	movs	r3, #1
 80050bc:	e07f      	b.n	80051be <HAL_RCC_ClockConfig+0x1ae>
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	685b      	ldr	r3, [r3, #4]
 80050c2:	2b02      	cmp	r3, #2
 80050c4:	d003      	beq.n	80050ce <HAL_RCC_ClockConfig+0xbe>
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	685b      	ldr	r3, [r3, #4]
 80050ca:	2b03      	cmp	r3, #3
 80050cc:	d107      	bne.n	80050de <HAL_RCC_ClockConfig+0xce>
 80050ce:	4b3f      	ldr	r3, [pc, #252]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 80050d0:	681b      	ldr	r3, [r3, #0]
 80050d2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d109      	bne.n	80050ee <HAL_RCC_ClockConfig+0xde>
 80050da:	2301      	movs	r3, #1
 80050dc:	e06f      	b.n	80051be <HAL_RCC_ClockConfig+0x1ae>
 80050de:	4b3b      	ldr	r3, [pc, #236]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 80050e0:	681b      	ldr	r3, [r3, #0]
 80050e2:	f003 0302 	and.w	r3, r3, #2
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d101      	bne.n	80050ee <HAL_RCC_ClockConfig+0xde>
 80050ea:	2301      	movs	r3, #1
 80050ec:	e067      	b.n	80051be <HAL_RCC_ClockConfig+0x1ae>
 80050ee:	4b37      	ldr	r3, [pc, #220]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 80050f0:	689b      	ldr	r3, [r3, #8]
 80050f2:	f023 0203 	bic.w	r2, r3, #3
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	685b      	ldr	r3, [r3, #4]
 80050fa:	4934      	ldr	r1, [pc, #208]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 80050fc:	4313      	orrs	r3, r2
 80050fe:	608b      	str	r3, [r1, #8]
 8005100:	f7fc fab0 	bl	8001664 <HAL_GetTick>
 8005104:	60f8      	str	r0, [r7, #12]
 8005106:	e00a      	b.n	800511e <HAL_RCC_ClockConfig+0x10e>
 8005108:	f7fc faac 	bl	8001664 <HAL_GetTick>
 800510c:	4602      	mov	r2, r0
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	1ad3      	subs	r3, r2, r3
 8005112:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005116:	4293      	cmp	r3, r2
 8005118:	d901      	bls.n	800511e <HAL_RCC_ClockConfig+0x10e>
 800511a:	2303      	movs	r3, #3
 800511c:	e04f      	b.n	80051be <HAL_RCC_ClockConfig+0x1ae>
 800511e:	4b2b      	ldr	r3, [pc, #172]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 8005120:	689b      	ldr	r3, [r3, #8]
 8005122:	f003 020c 	and.w	r2, r3, #12
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	685b      	ldr	r3, [r3, #4]
 800512a:	009b      	lsls	r3, r3, #2
 800512c:	429a      	cmp	r2, r3
 800512e:	d1eb      	bne.n	8005108 <HAL_RCC_ClockConfig+0xf8>
 8005130:	4b25      	ldr	r3, [pc, #148]	@ (80051c8 <HAL_RCC_ClockConfig+0x1b8>)
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	f003 0307 	and.w	r3, r3, #7
 8005138:	683a      	ldr	r2, [r7, #0]
 800513a:	429a      	cmp	r2, r3
 800513c:	d20c      	bcs.n	8005158 <HAL_RCC_ClockConfig+0x148>
 800513e:	4b22      	ldr	r3, [pc, #136]	@ (80051c8 <HAL_RCC_ClockConfig+0x1b8>)
 8005140:	683a      	ldr	r2, [r7, #0]
 8005142:	b2d2      	uxtb	r2, r2
 8005144:	701a      	strb	r2, [r3, #0]
 8005146:	4b20      	ldr	r3, [pc, #128]	@ (80051c8 <HAL_RCC_ClockConfig+0x1b8>)
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	f003 0307 	and.w	r3, r3, #7
 800514e:	683a      	ldr	r2, [r7, #0]
 8005150:	429a      	cmp	r2, r3
 8005152:	d001      	beq.n	8005158 <HAL_RCC_ClockConfig+0x148>
 8005154:	2301      	movs	r3, #1
 8005156:	e032      	b.n	80051be <HAL_RCC_ClockConfig+0x1ae>
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	f003 0304 	and.w	r3, r3, #4
 8005160:	2b00      	cmp	r3, #0
 8005162:	d008      	beq.n	8005176 <HAL_RCC_ClockConfig+0x166>
 8005164:	4b19      	ldr	r3, [pc, #100]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 8005166:	689b      	ldr	r3, [r3, #8]
 8005168:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	68db      	ldr	r3, [r3, #12]
 8005170:	4916      	ldr	r1, [pc, #88]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 8005172:	4313      	orrs	r3, r2
 8005174:	608b      	str	r3, [r1, #8]
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	681b      	ldr	r3, [r3, #0]
 800517a:	f003 0308 	and.w	r3, r3, #8
 800517e:	2b00      	cmp	r3, #0
 8005180:	d009      	beq.n	8005196 <HAL_RCC_ClockConfig+0x186>
 8005182:	4b12      	ldr	r3, [pc, #72]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 8005184:	689b      	ldr	r3, [r3, #8]
 8005186:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	691b      	ldr	r3, [r3, #16]
 800518e:	00db      	lsls	r3, r3, #3
 8005190:	490e      	ldr	r1, [pc, #56]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 8005192:	4313      	orrs	r3, r2
 8005194:	608b      	str	r3, [r1, #8]
 8005196:	f000 f821 	bl	80051dc <HAL_RCC_GetSysClockFreq>
 800519a:	4602      	mov	r2, r0
 800519c:	4b0b      	ldr	r3, [pc, #44]	@ (80051cc <HAL_RCC_ClockConfig+0x1bc>)
 800519e:	689b      	ldr	r3, [r3, #8]
 80051a0:	091b      	lsrs	r3, r3, #4
 80051a2:	f003 030f 	and.w	r3, r3, #15
 80051a6:	490a      	ldr	r1, [pc, #40]	@ (80051d0 <HAL_RCC_ClockConfig+0x1c0>)
 80051a8:	5ccb      	ldrb	r3, [r1, r3]
 80051aa:	fa22 f303 	lsr.w	r3, r2, r3
 80051ae:	4a09      	ldr	r2, [pc, #36]	@ (80051d4 <HAL_RCC_ClockConfig+0x1c4>)
 80051b0:	6013      	str	r3, [r2, #0]
 80051b2:	4b09      	ldr	r3, [pc, #36]	@ (80051d8 <HAL_RCC_ClockConfig+0x1c8>)
 80051b4:	681b      	ldr	r3, [r3, #0]
 80051b6:	4618      	mov	r0, r3
 80051b8:	f7fc fa10 	bl	80015dc <HAL_InitTick>
 80051bc:	2300      	movs	r3, #0
 80051be:	4618      	mov	r0, r3
 80051c0:	3710      	adds	r7, #16
 80051c2:	46bd      	mov	sp, r7
 80051c4:	bd80      	pop	{r7, pc}
 80051c6:	bf00      	nop
 80051c8:	40023c00 	.word	0x40023c00
 80051cc:	40023800 	.word	0x40023800
 80051d0:	0800ca64 	.word	0x0800ca64
 80051d4:	2000000c 	.word	0x2000000c
 80051d8:	20000010 	.word	0x20000010

080051dc <HAL_RCC_GetSysClockFreq>:
 80051dc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80051e0:	b094      	sub	sp, #80	@ 0x50
 80051e2:	af00      	add	r7, sp, #0
 80051e4:	2300      	movs	r3, #0
 80051e6:	647b      	str	r3, [r7, #68]	@ 0x44
 80051e8:	2300      	movs	r3, #0
 80051ea:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80051ec:	2300      	movs	r3, #0
 80051ee:	643b      	str	r3, [r7, #64]	@ 0x40
 80051f0:	2300      	movs	r3, #0
 80051f2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80051f4:	4b79      	ldr	r3, [pc, #484]	@ (80053dc <HAL_RCC_GetSysClockFreq+0x200>)
 80051f6:	689b      	ldr	r3, [r3, #8]
 80051f8:	f003 030c 	and.w	r3, r3, #12
 80051fc:	2b08      	cmp	r3, #8
 80051fe:	d00d      	beq.n	800521c <HAL_RCC_GetSysClockFreq+0x40>
 8005200:	2b08      	cmp	r3, #8
 8005202:	f200 80e1 	bhi.w	80053c8 <HAL_RCC_GetSysClockFreq+0x1ec>
 8005206:	2b00      	cmp	r3, #0
 8005208:	d002      	beq.n	8005210 <HAL_RCC_GetSysClockFreq+0x34>
 800520a:	2b04      	cmp	r3, #4
 800520c:	d003      	beq.n	8005216 <HAL_RCC_GetSysClockFreq+0x3a>
 800520e:	e0db      	b.n	80053c8 <HAL_RCC_GetSysClockFreq+0x1ec>
 8005210:	4b73      	ldr	r3, [pc, #460]	@ (80053e0 <HAL_RCC_GetSysClockFreq+0x204>)
 8005212:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005214:	e0db      	b.n	80053ce <HAL_RCC_GetSysClockFreq+0x1f2>
 8005216:	4b73      	ldr	r3, [pc, #460]	@ (80053e4 <HAL_RCC_GetSysClockFreq+0x208>)
 8005218:	64bb      	str	r3, [r7, #72]	@ 0x48
 800521a:	e0d8      	b.n	80053ce <HAL_RCC_GetSysClockFreq+0x1f2>
 800521c:	4b6f      	ldr	r3, [pc, #444]	@ (80053dc <HAL_RCC_GetSysClockFreq+0x200>)
 800521e:	685b      	ldr	r3, [r3, #4]
 8005220:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005224:	647b      	str	r3, [r7, #68]	@ 0x44
 8005226:	4b6d      	ldr	r3, [pc, #436]	@ (80053dc <HAL_RCC_GetSysClockFreq+0x200>)
 8005228:	685b      	ldr	r3, [r3, #4]
 800522a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800522e:	2b00      	cmp	r3, #0
 8005230:	d063      	beq.n	80052fa <HAL_RCC_GetSysClockFreq+0x11e>
 8005232:	4b6a      	ldr	r3, [pc, #424]	@ (80053dc <HAL_RCC_GetSysClockFreq+0x200>)
 8005234:	685b      	ldr	r3, [r3, #4]
 8005236:	099b      	lsrs	r3, r3, #6
 8005238:	2200      	movs	r2, #0
 800523a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800523c:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800523e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005240:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005244:	633b      	str	r3, [r7, #48]	@ 0x30
 8005246:	2300      	movs	r3, #0
 8005248:	637b      	str	r3, [r7, #52]	@ 0x34
 800524a:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 800524e:	4622      	mov	r2, r4
 8005250:	462b      	mov	r3, r5
 8005252:	f04f 0000 	mov.w	r0, #0
 8005256:	f04f 0100 	mov.w	r1, #0
 800525a:	0159      	lsls	r1, r3, #5
 800525c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005260:	0150      	lsls	r0, r2, #5
 8005262:	4602      	mov	r2, r0
 8005264:	460b      	mov	r3, r1
 8005266:	4621      	mov	r1, r4
 8005268:	1a51      	subs	r1, r2, r1
 800526a:	6139      	str	r1, [r7, #16]
 800526c:	4629      	mov	r1, r5
 800526e:	eb63 0301 	sbc.w	r3, r3, r1
 8005272:	617b      	str	r3, [r7, #20]
 8005274:	f04f 0200 	mov.w	r2, #0
 8005278:	f04f 0300 	mov.w	r3, #0
 800527c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8005280:	4659      	mov	r1, fp
 8005282:	018b      	lsls	r3, r1, #6
 8005284:	4651      	mov	r1, sl
 8005286:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800528a:	4651      	mov	r1, sl
 800528c:	018a      	lsls	r2, r1, #6
 800528e:	4651      	mov	r1, sl
 8005290:	ebb2 0801 	subs.w	r8, r2, r1
 8005294:	4659      	mov	r1, fp
 8005296:	eb63 0901 	sbc.w	r9, r3, r1
 800529a:	f04f 0200 	mov.w	r2, #0
 800529e:	f04f 0300 	mov.w	r3, #0
 80052a2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80052a6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80052aa:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80052ae:	4690      	mov	r8, r2
 80052b0:	4699      	mov	r9, r3
 80052b2:	4623      	mov	r3, r4
 80052b4:	eb18 0303 	adds.w	r3, r8, r3
 80052b8:	60bb      	str	r3, [r7, #8]
 80052ba:	462b      	mov	r3, r5
 80052bc:	eb49 0303 	adc.w	r3, r9, r3
 80052c0:	60fb      	str	r3, [r7, #12]
 80052c2:	f04f 0200 	mov.w	r2, #0
 80052c6:	f04f 0300 	mov.w	r3, #0
 80052ca:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80052ce:	4629      	mov	r1, r5
 80052d0:	024b      	lsls	r3, r1, #9
 80052d2:	4621      	mov	r1, r4
 80052d4:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80052d8:	4621      	mov	r1, r4
 80052da:	024a      	lsls	r2, r1, #9
 80052dc:	4610      	mov	r0, r2
 80052de:	4619      	mov	r1, r3
 80052e0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80052e2:	2200      	movs	r2, #0
 80052e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80052e6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80052e8:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80052ec:	f7fa ffc0 	bl	8000270 <__aeabi_uldivmod>
 80052f0:	4602      	mov	r2, r0
 80052f2:	460b      	mov	r3, r1
 80052f4:	4613      	mov	r3, r2
 80052f6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80052f8:	e058      	b.n	80053ac <HAL_RCC_GetSysClockFreq+0x1d0>
 80052fa:	4b38      	ldr	r3, [pc, #224]	@ (80053dc <HAL_RCC_GetSysClockFreq+0x200>)
 80052fc:	685b      	ldr	r3, [r3, #4]
 80052fe:	099b      	lsrs	r3, r3, #6
 8005300:	2200      	movs	r2, #0
 8005302:	4618      	mov	r0, r3
 8005304:	4611      	mov	r1, r2
 8005306:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800530a:	623b      	str	r3, [r7, #32]
 800530c:	2300      	movs	r3, #0
 800530e:	627b      	str	r3, [r7, #36]	@ 0x24
 8005310:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005314:	4642      	mov	r2, r8
 8005316:	464b      	mov	r3, r9
 8005318:	f04f 0000 	mov.w	r0, #0
 800531c:	f04f 0100 	mov.w	r1, #0
 8005320:	0159      	lsls	r1, r3, #5
 8005322:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005326:	0150      	lsls	r0, r2, #5
 8005328:	4602      	mov	r2, r0
 800532a:	460b      	mov	r3, r1
 800532c:	4641      	mov	r1, r8
 800532e:	ebb2 0a01 	subs.w	sl, r2, r1
 8005332:	4649      	mov	r1, r9
 8005334:	eb63 0b01 	sbc.w	fp, r3, r1
 8005338:	f04f 0200 	mov.w	r2, #0
 800533c:	f04f 0300 	mov.w	r3, #0
 8005340:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005344:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8005348:	ea4f 128a 	mov.w	r2, sl, lsl #6
 800534c:	ebb2 040a 	subs.w	r4, r2, sl
 8005350:	eb63 050b 	sbc.w	r5, r3, fp
 8005354:	f04f 0200 	mov.w	r2, #0
 8005358:	f04f 0300 	mov.w	r3, #0
 800535c:	00eb      	lsls	r3, r5, #3
 800535e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005362:	00e2      	lsls	r2, r4, #3
 8005364:	4614      	mov	r4, r2
 8005366:	461d      	mov	r5, r3
 8005368:	4643      	mov	r3, r8
 800536a:	18e3      	adds	r3, r4, r3
 800536c:	603b      	str	r3, [r7, #0]
 800536e:	464b      	mov	r3, r9
 8005370:	eb45 0303 	adc.w	r3, r5, r3
 8005374:	607b      	str	r3, [r7, #4]
 8005376:	f04f 0200 	mov.w	r2, #0
 800537a:	f04f 0300 	mov.w	r3, #0
 800537e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005382:	4629      	mov	r1, r5
 8005384:	028b      	lsls	r3, r1, #10
 8005386:	4621      	mov	r1, r4
 8005388:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800538c:	4621      	mov	r1, r4
 800538e:	028a      	lsls	r2, r1, #10
 8005390:	4610      	mov	r0, r2
 8005392:	4619      	mov	r1, r3
 8005394:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005396:	2200      	movs	r2, #0
 8005398:	61bb      	str	r3, [r7, #24]
 800539a:	61fa      	str	r2, [r7, #28]
 800539c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80053a0:	f7fa ff66 	bl	8000270 <__aeabi_uldivmod>
 80053a4:	4602      	mov	r2, r0
 80053a6:	460b      	mov	r3, r1
 80053a8:	4613      	mov	r3, r2
 80053aa:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80053ac:	4b0b      	ldr	r3, [pc, #44]	@ (80053dc <HAL_RCC_GetSysClockFreq+0x200>)
 80053ae:	685b      	ldr	r3, [r3, #4]
 80053b0:	0c1b      	lsrs	r3, r3, #16
 80053b2:	f003 0303 	and.w	r3, r3, #3
 80053b6:	3301      	adds	r3, #1
 80053b8:	005b      	lsls	r3, r3, #1
 80053ba:	643b      	str	r3, [r7, #64]	@ 0x40
 80053bc:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80053be:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80053c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80053c4:	64bb      	str	r3, [r7, #72]	@ 0x48
 80053c6:	e002      	b.n	80053ce <HAL_RCC_GetSysClockFreq+0x1f2>
 80053c8:	4b05      	ldr	r3, [pc, #20]	@ (80053e0 <HAL_RCC_GetSysClockFreq+0x204>)
 80053ca:	64bb      	str	r3, [r7, #72]	@ 0x48
 80053cc:	bf00      	nop
 80053ce:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80053d0:	4618      	mov	r0, r3
 80053d2:	3750      	adds	r7, #80	@ 0x50
 80053d4:	46bd      	mov	sp, r7
 80053d6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80053da:	bf00      	nop
 80053dc:	40023800 	.word	0x40023800
 80053e0:	00f42400 	.word	0x00f42400
 80053e4:	007a1200 	.word	0x007a1200

080053e8 <HAL_RCC_GetHCLKFreq>:
 80053e8:	b480      	push	{r7}
 80053ea:	af00      	add	r7, sp, #0
 80053ec:	4b03      	ldr	r3, [pc, #12]	@ (80053fc <HAL_RCC_GetHCLKFreq+0x14>)
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	4618      	mov	r0, r3
 80053f2:	46bd      	mov	sp, r7
 80053f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053f8:	4770      	bx	lr
 80053fa:	bf00      	nop
 80053fc:	2000000c 	.word	0x2000000c

08005400 <HAL_RCC_GetPCLK1Freq>:
 8005400:	b580      	push	{r7, lr}
 8005402:	af00      	add	r7, sp, #0
 8005404:	f7ff fff0 	bl	80053e8 <HAL_RCC_GetHCLKFreq>
 8005408:	4602      	mov	r2, r0
 800540a:	4b05      	ldr	r3, [pc, #20]	@ (8005420 <HAL_RCC_GetPCLK1Freq+0x20>)
 800540c:	689b      	ldr	r3, [r3, #8]
 800540e:	0a9b      	lsrs	r3, r3, #10
 8005410:	f003 0307 	and.w	r3, r3, #7
 8005414:	4903      	ldr	r1, [pc, #12]	@ (8005424 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005416:	5ccb      	ldrb	r3, [r1, r3]
 8005418:	fa22 f303 	lsr.w	r3, r2, r3
 800541c:	4618      	mov	r0, r3
 800541e:	bd80      	pop	{r7, pc}
 8005420:	40023800 	.word	0x40023800
 8005424:	0800ca74 	.word	0x0800ca74

08005428 <HAL_RCC_GetPCLK2Freq>:
 8005428:	b580      	push	{r7, lr}
 800542a:	af00      	add	r7, sp, #0
 800542c:	f7ff ffdc 	bl	80053e8 <HAL_RCC_GetHCLKFreq>
 8005430:	4602      	mov	r2, r0
 8005432:	4b05      	ldr	r3, [pc, #20]	@ (8005448 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005434:	689b      	ldr	r3, [r3, #8]
 8005436:	0b5b      	lsrs	r3, r3, #13
 8005438:	f003 0307 	and.w	r3, r3, #7
 800543c:	4903      	ldr	r1, [pc, #12]	@ (800544c <HAL_RCC_GetPCLK2Freq+0x24>)
 800543e:	5ccb      	ldrb	r3, [r1, r3]
 8005440:	fa22 f303 	lsr.w	r3, r2, r3
 8005444:	4618      	mov	r0, r3
 8005446:	bd80      	pop	{r7, pc}
 8005448:	40023800 	.word	0x40023800
 800544c:	0800ca74 	.word	0x0800ca74

08005450 <HAL_TIM_Base_Init>:
 8005450:	b580      	push	{r7, lr}
 8005452:	b082      	sub	sp, #8
 8005454:	af00      	add	r7, sp, #0
 8005456:	6078      	str	r0, [r7, #4]
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	2b00      	cmp	r3, #0
 800545c:	d101      	bne.n	8005462 <HAL_TIM_Base_Init+0x12>
 800545e:	2301      	movs	r3, #1
 8005460:	e041      	b.n	80054e6 <HAL_TIM_Base_Init+0x96>
 8005462:	687b      	ldr	r3, [r7, #4]
 8005464:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005468:	b2db      	uxtb	r3, r3
 800546a:	2b00      	cmp	r3, #0
 800546c:	d106      	bne.n	800547c <HAL_TIM_Base_Init+0x2c>
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	2200      	movs	r2, #0
 8005472:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005476:	6878      	ldr	r0, [r7, #4]
 8005478:	f7fb fe36 	bl	80010e8 <HAL_TIM_Base_MspInit>
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	2202      	movs	r2, #2
 8005480:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005484:	687b      	ldr	r3, [r7, #4]
 8005486:	681a      	ldr	r2, [r3, #0]
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	3304      	adds	r3, #4
 800548c:	4619      	mov	r1, r3
 800548e:	4610      	mov	r0, r2
 8005490:	f000 fb3c 	bl	8005b0c <TIM_Base_SetConfig>
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	2201      	movs	r2, #1
 8005498:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800549c:	687b      	ldr	r3, [r7, #4]
 800549e:	2201      	movs	r2, #1
 80054a0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	2201      	movs	r2, #1
 80054a8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	2201      	movs	r2, #1
 80054b0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	2201      	movs	r2, #1
 80054b8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	2201      	movs	r2, #1
 80054c0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	2201      	movs	r2, #1
 80054c8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	2201      	movs	r2, #1
 80054d0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	2201      	movs	r2, #1
 80054d8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	2201      	movs	r2, #1
 80054e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80054e4:	2300      	movs	r3, #0
 80054e6:	4618      	mov	r0, r3
 80054e8:	3708      	adds	r7, #8
 80054ea:	46bd      	mov	sp, r7
 80054ec:	bd80      	pop	{r7, pc}
	...

080054f0 <HAL_TIM_Base_Start>:
 80054f0:	b480      	push	{r7}
 80054f2:	b085      	sub	sp, #20
 80054f4:	af00      	add	r7, sp, #0
 80054f6:	6078      	str	r0, [r7, #4]
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80054fe:	b2db      	uxtb	r3, r3
 8005500:	2b01      	cmp	r3, #1
 8005502:	d001      	beq.n	8005508 <HAL_TIM_Base_Start+0x18>
 8005504:	2301      	movs	r3, #1
 8005506:	e046      	b.n	8005596 <HAL_TIM_Base_Start+0xa6>
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	2202      	movs	r2, #2
 800550c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	681b      	ldr	r3, [r3, #0]
 8005514:	4a23      	ldr	r2, [pc, #140]	@ (80055a4 <HAL_TIM_Base_Start+0xb4>)
 8005516:	4293      	cmp	r3, r2
 8005518:	d022      	beq.n	8005560 <HAL_TIM_Base_Start+0x70>
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	681b      	ldr	r3, [r3, #0]
 800551e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005522:	d01d      	beq.n	8005560 <HAL_TIM_Base_Start+0x70>
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	681b      	ldr	r3, [r3, #0]
 8005528:	4a1f      	ldr	r2, [pc, #124]	@ (80055a8 <HAL_TIM_Base_Start+0xb8>)
 800552a:	4293      	cmp	r3, r2
 800552c:	d018      	beq.n	8005560 <HAL_TIM_Base_Start+0x70>
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	681b      	ldr	r3, [r3, #0]
 8005532:	4a1e      	ldr	r2, [pc, #120]	@ (80055ac <HAL_TIM_Base_Start+0xbc>)
 8005534:	4293      	cmp	r3, r2
 8005536:	d013      	beq.n	8005560 <HAL_TIM_Base_Start+0x70>
 8005538:	687b      	ldr	r3, [r7, #4]
 800553a:	681b      	ldr	r3, [r3, #0]
 800553c:	4a1c      	ldr	r2, [pc, #112]	@ (80055b0 <HAL_TIM_Base_Start+0xc0>)
 800553e:	4293      	cmp	r3, r2
 8005540:	d00e      	beq.n	8005560 <HAL_TIM_Base_Start+0x70>
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	681b      	ldr	r3, [r3, #0]
 8005546:	4a1b      	ldr	r2, [pc, #108]	@ (80055b4 <HAL_TIM_Base_Start+0xc4>)
 8005548:	4293      	cmp	r3, r2
 800554a:	d009      	beq.n	8005560 <HAL_TIM_Base_Start+0x70>
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	4a19      	ldr	r2, [pc, #100]	@ (80055b8 <HAL_TIM_Base_Start+0xc8>)
 8005552:	4293      	cmp	r3, r2
 8005554:	d004      	beq.n	8005560 <HAL_TIM_Base_Start+0x70>
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	681b      	ldr	r3, [r3, #0]
 800555a:	4a18      	ldr	r2, [pc, #96]	@ (80055bc <HAL_TIM_Base_Start+0xcc>)
 800555c:	4293      	cmp	r3, r2
 800555e:	d111      	bne.n	8005584 <HAL_TIM_Base_Start+0x94>
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	689b      	ldr	r3, [r3, #8]
 8005566:	f003 0307 	and.w	r3, r3, #7
 800556a:	60fb      	str	r3, [r7, #12]
 800556c:	68fb      	ldr	r3, [r7, #12]
 800556e:	2b06      	cmp	r3, #6
 8005570:	d010      	beq.n	8005594 <HAL_TIM_Base_Start+0xa4>
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	681a      	ldr	r2, [r3, #0]
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	681b      	ldr	r3, [r3, #0]
 800557c:	f042 0201 	orr.w	r2, r2, #1
 8005580:	601a      	str	r2, [r3, #0]
 8005582:	e007      	b.n	8005594 <HAL_TIM_Base_Start+0xa4>
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	681b      	ldr	r3, [r3, #0]
 8005588:	681a      	ldr	r2, [r3, #0]
 800558a:	687b      	ldr	r3, [r7, #4]
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	f042 0201 	orr.w	r2, r2, #1
 8005592:	601a      	str	r2, [r3, #0]
 8005594:	2300      	movs	r3, #0
 8005596:	4618      	mov	r0, r3
 8005598:	3714      	adds	r7, #20
 800559a:	46bd      	mov	sp, r7
 800559c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055a0:	4770      	bx	lr
 80055a2:	bf00      	nop
 80055a4:	40010000 	.word	0x40010000
 80055a8:	40000400 	.word	0x40000400
 80055ac:	40000800 	.word	0x40000800
 80055b0:	40000c00 	.word	0x40000c00
 80055b4:	40010400 	.word	0x40010400
 80055b8:	40014000 	.word	0x40014000
 80055bc:	40001800 	.word	0x40001800

080055c0 <HAL_TIM_Base_Stop>:
 80055c0:	b480      	push	{r7}
 80055c2:	b083      	sub	sp, #12
 80055c4:	af00      	add	r7, sp, #0
 80055c6:	6078      	str	r0, [r7, #4]
 80055c8:	687b      	ldr	r3, [r7, #4]
 80055ca:	681b      	ldr	r3, [r3, #0]
 80055cc:	6a1a      	ldr	r2, [r3, #32]
 80055ce:	f241 1311 	movw	r3, #4369	@ 0x1111
 80055d2:	4013      	ands	r3, r2
 80055d4:	2b00      	cmp	r3, #0
 80055d6:	d10f      	bne.n	80055f8 <HAL_TIM_Base_Stop+0x38>
 80055d8:	687b      	ldr	r3, [r7, #4]
 80055da:	681b      	ldr	r3, [r3, #0]
 80055dc:	6a1a      	ldr	r2, [r3, #32]
 80055de:	f240 4344 	movw	r3, #1092	@ 0x444
 80055e2:	4013      	ands	r3, r2
 80055e4:	2b00      	cmp	r3, #0
 80055e6:	d107      	bne.n	80055f8 <HAL_TIM_Base_Stop+0x38>
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	681a      	ldr	r2, [r3, #0]
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	681b      	ldr	r3, [r3, #0]
 80055f2:	f022 0201 	bic.w	r2, r2, #1
 80055f6:	601a      	str	r2, [r3, #0]
 80055f8:	687b      	ldr	r3, [r7, #4]
 80055fa:	2201      	movs	r2, #1
 80055fc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005600:	2300      	movs	r3, #0
 8005602:	4618      	mov	r0, r3
 8005604:	370c      	adds	r7, #12
 8005606:	46bd      	mov	sp, r7
 8005608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800560c:	4770      	bx	lr
	...

08005610 <HAL_TIM_Base_Start_IT>:
 8005610:	b480      	push	{r7}
 8005612:	b085      	sub	sp, #20
 8005614:	af00      	add	r7, sp, #0
 8005616:	6078      	str	r0, [r7, #4]
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800561e:	b2db      	uxtb	r3, r3
 8005620:	2b01      	cmp	r3, #1
 8005622:	d001      	beq.n	8005628 <HAL_TIM_Base_Start_IT+0x18>
 8005624:	2301      	movs	r3, #1
 8005626:	e04e      	b.n	80056c6 <HAL_TIM_Base_Start_IT+0xb6>
 8005628:	687b      	ldr	r3, [r7, #4]
 800562a:	2202      	movs	r2, #2
 800562c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005630:	687b      	ldr	r3, [r7, #4]
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	68da      	ldr	r2, [r3, #12]
 8005636:	687b      	ldr	r3, [r7, #4]
 8005638:	681b      	ldr	r3, [r3, #0]
 800563a:	f042 0201 	orr.w	r2, r2, #1
 800563e:	60da      	str	r2, [r3, #12]
 8005640:	687b      	ldr	r3, [r7, #4]
 8005642:	681b      	ldr	r3, [r3, #0]
 8005644:	4a23      	ldr	r2, [pc, #140]	@ (80056d4 <HAL_TIM_Base_Start_IT+0xc4>)
 8005646:	4293      	cmp	r3, r2
 8005648:	d022      	beq.n	8005690 <HAL_TIM_Base_Start_IT+0x80>
 800564a:	687b      	ldr	r3, [r7, #4]
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005652:	d01d      	beq.n	8005690 <HAL_TIM_Base_Start_IT+0x80>
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	681b      	ldr	r3, [r3, #0]
 8005658:	4a1f      	ldr	r2, [pc, #124]	@ (80056d8 <HAL_TIM_Base_Start_IT+0xc8>)
 800565a:	4293      	cmp	r3, r2
 800565c:	d018      	beq.n	8005690 <HAL_TIM_Base_Start_IT+0x80>
 800565e:	687b      	ldr	r3, [r7, #4]
 8005660:	681b      	ldr	r3, [r3, #0]
 8005662:	4a1e      	ldr	r2, [pc, #120]	@ (80056dc <HAL_TIM_Base_Start_IT+0xcc>)
 8005664:	4293      	cmp	r3, r2
 8005666:	d013      	beq.n	8005690 <HAL_TIM_Base_Start_IT+0x80>
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	4a1c      	ldr	r2, [pc, #112]	@ (80056e0 <HAL_TIM_Base_Start_IT+0xd0>)
 800566e:	4293      	cmp	r3, r2
 8005670:	d00e      	beq.n	8005690 <HAL_TIM_Base_Start_IT+0x80>
 8005672:	687b      	ldr	r3, [r7, #4]
 8005674:	681b      	ldr	r3, [r3, #0]
 8005676:	4a1b      	ldr	r2, [pc, #108]	@ (80056e4 <HAL_TIM_Base_Start_IT+0xd4>)
 8005678:	4293      	cmp	r3, r2
 800567a:	d009      	beq.n	8005690 <HAL_TIM_Base_Start_IT+0x80>
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	681b      	ldr	r3, [r3, #0]
 8005680:	4a19      	ldr	r2, [pc, #100]	@ (80056e8 <HAL_TIM_Base_Start_IT+0xd8>)
 8005682:	4293      	cmp	r3, r2
 8005684:	d004      	beq.n	8005690 <HAL_TIM_Base_Start_IT+0x80>
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	681b      	ldr	r3, [r3, #0]
 800568a:	4a18      	ldr	r2, [pc, #96]	@ (80056ec <HAL_TIM_Base_Start_IT+0xdc>)
 800568c:	4293      	cmp	r3, r2
 800568e:	d111      	bne.n	80056b4 <HAL_TIM_Base_Start_IT+0xa4>
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	689b      	ldr	r3, [r3, #8]
 8005696:	f003 0307 	and.w	r3, r3, #7
 800569a:	60fb      	str	r3, [r7, #12]
 800569c:	68fb      	ldr	r3, [r7, #12]
 800569e:	2b06      	cmp	r3, #6
 80056a0:	d010      	beq.n	80056c4 <HAL_TIM_Base_Start_IT+0xb4>
 80056a2:	687b      	ldr	r3, [r7, #4]
 80056a4:	681b      	ldr	r3, [r3, #0]
 80056a6:	681a      	ldr	r2, [r3, #0]
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	681b      	ldr	r3, [r3, #0]
 80056ac:	f042 0201 	orr.w	r2, r2, #1
 80056b0:	601a      	str	r2, [r3, #0]
 80056b2:	e007      	b.n	80056c4 <HAL_TIM_Base_Start_IT+0xb4>
 80056b4:	687b      	ldr	r3, [r7, #4]
 80056b6:	681b      	ldr	r3, [r3, #0]
 80056b8:	681a      	ldr	r2, [r3, #0]
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	681b      	ldr	r3, [r3, #0]
 80056be:	f042 0201 	orr.w	r2, r2, #1
 80056c2:	601a      	str	r2, [r3, #0]
 80056c4:	2300      	movs	r3, #0
 80056c6:	4618      	mov	r0, r3
 80056c8:	3714      	adds	r7, #20
 80056ca:	46bd      	mov	sp, r7
 80056cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056d0:	4770      	bx	lr
 80056d2:	bf00      	nop
 80056d4:	40010000 	.word	0x40010000
 80056d8:	40000400 	.word	0x40000400
 80056dc:	40000800 	.word	0x40000800
 80056e0:	40000c00 	.word	0x40000c00
 80056e4:	40010400 	.word	0x40010400
 80056e8:	40014000 	.word	0x40014000
 80056ec:	40001800 	.word	0x40001800

080056f0 <HAL_TIM_Base_Stop_IT>:
 80056f0:	b480      	push	{r7}
 80056f2:	b083      	sub	sp, #12
 80056f4:	af00      	add	r7, sp, #0
 80056f6:	6078      	str	r0, [r7, #4]
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	681b      	ldr	r3, [r3, #0]
 80056fc:	68da      	ldr	r2, [r3, #12]
 80056fe:	687b      	ldr	r3, [r7, #4]
 8005700:	681b      	ldr	r3, [r3, #0]
 8005702:	f022 0201 	bic.w	r2, r2, #1
 8005706:	60da      	str	r2, [r3, #12]
 8005708:	687b      	ldr	r3, [r7, #4]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	6a1a      	ldr	r2, [r3, #32]
 800570e:	f241 1311 	movw	r3, #4369	@ 0x1111
 8005712:	4013      	ands	r3, r2
 8005714:	2b00      	cmp	r3, #0
 8005716:	d10f      	bne.n	8005738 <HAL_TIM_Base_Stop_IT+0x48>
 8005718:	687b      	ldr	r3, [r7, #4]
 800571a:	681b      	ldr	r3, [r3, #0]
 800571c:	6a1a      	ldr	r2, [r3, #32]
 800571e:	f240 4344 	movw	r3, #1092	@ 0x444
 8005722:	4013      	ands	r3, r2
 8005724:	2b00      	cmp	r3, #0
 8005726:	d107      	bne.n	8005738 <HAL_TIM_Base_Stop_IT+0x48>
 8005728:	687b      	ldr	r3, [r7, #4]
 800572a:	681b      	ldr	r3, [r3, #0]
 800572c:	681a      	ldr	r2, [r3, #0]
 800572e:	687b      	ldr	r3, [r7, #4]
 8005730:	681b      	ldr	r3, [r3, #0]
 8005732:	f022 0201 	bic.w	r2, r2, #1
 8005736:	601a      	str	r2, [r3, #0]
 8005738:	687b      	ldr	r3, [r7, #4]
 800573a:	2201      	movs	r2, #1
 800573c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005740:	2300      	movs	r3, #0
 8005742:	4618      	mov	r0, r3
 8005744:	370c      	adds	r7, #12
 8005746:	46bd      	mov	sp, r7
 8005748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800574c:	4770      	bx	lr

0800574e <HAL_TIM_IRQHandler>:
 800574e:	b580      	push	{r7, lr}
 8005750:	b084      	sub	sp, #16
 8005752:	af00      	add	r7, sp, #0
 8005754:	6078      	str	r0, [r7, #4]
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	681b      	ldr	r3, [r3, #0]
 800575a:	68db      	ldr	r3, [r3, #12]
 800575c:	60fb      	str	r3, [r7, #12]
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	681b      	ldr	r3, [r3, #0]
 8005762:	691b      	ldr	r3, [r3, #16]
 8005764:	60bb      	str	r3, [r7, #8]
 8005766:	68bb      	ldr	r3, [r7, #8]
 8005768:	f003 0302 	and.w	r3, r3, #2
 800576c:	2b00      	cmp	r3, #0
 800576e:	d020      	beq.n	80057b2 <HAL_TIM_IRQHandler+0x64>
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	f003 0302 	and.w	r3, r3, #2
 8005776:	2b00      	cmp	r3, #0
 8005778:	d01b      	beq.n	80057b2 <HAL_TIM_IRQHandler+0x64>
 800577a:	687b      	ldr	r3, [r7, #4]
 800577c:	681b      	ldr	r3, [r3, #0]
 800577e:	f06f 0202 	mvn.w	r2, #2
 8005782:	611a      	str	r2, [r3, #16]
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	2201      	movs	r2, #1
 8005788:	771a      	strb	r2, [r3, #28]
 800578a:	687b      	ldr	r3, [r7, #4]
 800578c:	681b      	ldr	r3, [r3, #0]
 800578e:	699b      	ldr	r3, [r3, #24]
 8005790:	f003 0303 	and.w	r3, r3, #3
 8005794:	2b00      	cmp	r3, #0
 8005796:	d003      	beq.n	80057a0 <HAL_TIM_IRQHandler+0x52>
 8005798:	6878      	ldr	r0, [r7, #4]
 800579a:	f000 f999 	bl	8005ad0 <HAL_TIM_IC_CaptureCallback>
 800579e:	e005      	b.n	80057ac <HAL_TIM_IRQHandler+0x5e>
 80057a0:	6878      	ldr	r0, [r7, #4]
 80057a2:	f000 f98b 	bl	8005abc <HAL_TIM_OC_DelayElapsedCallback>
 80057a6:	6878      	ldr	r0, [r7, #4]
 80057a8:	f000 f99c 	bl	8005ae4 <HAL_TIM_PWM_PulseFinishedCallback>
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	2200      	movs	r2, #0
 80057b0:	771a      	strb	r2, [r3, #28]
 80057b2:	68bb      	ldr	r3, [r7, #8]
 80057b4:	f003 0304 	and.w	r3, r3, #4
 80057b8:	2b00      	cmp	r3, #0
 80057ba:	d020      	beq.n	80057fe <HAL_TIM_IRQHandler+0xb0>
 80057bc:	68fb      	ldr	r3, [r7, #12]
 80057be:	f003 0304 	and.w	r3, r3, #4
 80057c2:	2b00      	cmp	r3, #0
 80057c4:	d01b      	beq.n	80057fe <HAL_TIM_IRQHandler+0xb0>
 80057c6:	687b      	ldr	r3, [r7, #4]
 80057c8:	681b      	ldr	r3, [r3, #0]
 80057ca:	f06f 0204 	mvn.w	r2, #4
 80057ce:	611a      	str	r2, [r3, #16]
 80057d0:	687b      	ldr	r3, [r7, #4]
 80057d2:	2202      	movs	r2, #2
 80057d4:	771a      	strb	r2, [r3, #28]
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	699b      	ldr	r3, [r3, #24]
 80057dc:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80057e0:	2b00      	cmp	r3, #0
 80057e2:	d003      	beq.n	80057ec <HAL_TIM_IRQHandler+0x9e>
 80057e4:	6878      	ldr	r0, [r7, #4]
 80057e6:	f000 f973 	bl	8005ad0 <HAL_TIM_IC_CaptureCallback>
 80057ea:	e005      	b.n	80057f8 <HAL_TIM_IRQHandler+0xaa>
 80057ec:	6878      	ldr	r0, [r7, #4]
 80057ee:	f000 f965 	bl	8005abc <HAL_TIM_OC_DelayElapsedCallback>
 80057f2:	6878      	ldr	r0, [r7, #4]
 80057f4:	f000 f976 	bl	8005ae4 <HAL_TIM_PWM_PulseFinishedCallback>
 80057f8:	687b      	ldr	r3, [r7, #4]
 80057fa:	2200      	movs	r2, #0
 80057fc:	771a      	strb	r2, [r3, #28]
 80057fe:	68bb      	ldr	r3, [r7, #8]
 8005800:	f003 0308 	and.w	r3, r3, #8
 8005804:	2b00      	cmp	r3, #0
 8005806:	d020      	beq.n	800584a <HAL_TIM_IRQHandler+0xfc>
 8005808:	68fb      	ldr	r3, [r7, #12]
 800580a:	f003 0308 	and.w	r3, r3, #8
 800580e:	2b00      	cmp	r3, #0
 8005810:	d01b      	beq.n	800584a <HAL_TIM_IRQHandler+0xfc>
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	f06f 0208 	mvn.w	r2, #8
 800581a:	611a      	str	r2, [r3, #16]
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	2204      	movs	r2, #4
 8005820:	771a      	strb	r2, [r3, #28]
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	69db      	ldr	r3, [r3, #28]
 8005828:	f003 0303 	and.w	r3, r3, #3
 800582c:	2b00      	cmp	r3, #0
 800582e:	d003      	beq.n	8005838 <HAL_TIM_IRQHandler+0xea>
 8005830:	6878      	ldr	r0, [r7, #4]
 8005832:	f000 f94d 	bl	8005ad0 <HAL_TIM_IC_CaptureCallback>
 8005836:	e005      	b.n	8005844 <HAL_TIM_IRQHandler+0xf6>
 8005838:	6878      	ldr	r0, [r7, #4]
 800583a:	f000 f93f 	bl	8005abc <HAL_TIM_OC_DelayElapsedCallback>
 800583e:	6878      	ldr	r0, [r7, #4]
 8005840:	f000 f950 	bl	8005ae4 <HAL_TIM_PWM_PulseFinishedCallback>
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	2200      	movs	r2, #0
 8005848:	771a      	strb	r2, [r3, #28]
 800584a:	68bb      	ldr	r3, [r7, #8]
 800584c:	f003 0310 	and.w	r3, r3, #16
 8005850:	2b00      	cmp	r3, #0
 8005852:	d020      	beq.n	8005896 <HAL_TIM_IRQHandler+0x148>
 8005854:	68fb      	ldr	r3, [r7, #12]
 8005856:	f003 0310 	and.w	r3, r3, #16
 800585a:	2b00      	cmp	r3, #0
 800585c:	d01b      	beq.n	8005896 <HAL_TIM_IRQHandler+0x148>
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	681b      	ldr	r3, [r3, #0]
 8005862:	f06f 0210 	mvn.w	r2, #16
 8005866:	611a      	str	r2, [r3, #16]
 8005868:	687b      	ldr	r3, [r7, #4]
 800586a:	2208      	movs	r2, #8
 800586c:	771a      	strb	r2, [r3, #28]
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	69db      	ldr	r3, [r3, #28]
 8005874:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005878:	2b00      	cmp	r3, #0
 800587a:	d003      	beq.n	8005884 <HAL_TIM_IRQHandler+0x136>
 800587c:	6878      	ldr	r0, [r7, #4]
 800587e:	f000 f927 	bl	8005ad0 <HAL_TIM_IC_CaptureCallback>
 8005882:	e005      	b.n	8005890 <HAL_TIM_IRQHandler+0x142>
 8005884:	6878      	ldr	r0, [r7, #4]
 8005886:	f000 f919 	bl	8005abc <HAL_TIM_OC_DelayElapsedCallback>
 800588a:	6878      	ldr	r0, [r7, #4]
 800588c:	f000 f92a 	bl	8005ae4 <HAL_TIM_PWM_PulseFinishedCallback>
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	2200      	movs	r2, #0
 8005894:	771a      	strb	r2, [r3, #28]
 8005896:	68bb      	ldr	r3, [r7, #8]
 8005898:	f003 0301 	and.w	r3, r3, #1
 800589c:	2b00      	cmp	r3, #0
 800589e:	d00c      	beq.n	80058ba <HAL_TIM_IRQHandler+0x16c>
 80058a0:	68fb      	ldr	r3, [r7, #12]
 80058a2:	f003 0301 	and.w	r3, r3, #1
 80058a6:	2b00      	cmp	r3, #0
 80058a8:	d007      	beq.n	80058ba <HAL_TIM_IRQHandler+0x16c>
 80058aa:	687b      	ldr	r3, [r7, #4]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	f06f 0201 	mvn.w	r2, #1
 80058b2:	611a      	str	r2, [r3, #16]
 80058b4:	6878      	ldr	r0, [r7, #4]
 80058b6:	f003 faa5 	bl	8008e04 <HAL_TIM_PeriodElapsedCallback>
 80058ba:	68bb      	ldr	r3, [r7, #8]
 80058bc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	d00c      	beq.n	80058de <HAL_TIM_IRQHandler+0x190>
 80058c4:	68fb      	ldr	r3, [r7, #12]
 80058c6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80058ca:	2b00      	cmp	r3, #0
 80058cc:	d007      	beq.n	80058de <HAL_TIM_IRQHandler+0x190>
 80058ce:	687b      	ldr	r3, [r7, #4]
 80058d0:	681b      	ldr	r3, [r3, #0]
 80058d2:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80058d6:	611a      	str	r2, [r3, #16]
 80058d8:	6878      	ldr	r0, [r7, #4]
 80058da:	f000 fadd 	bl	8005e98 <HAL_TIMEx_BreakCallback>
 80058de:	68bb      	ldr	r3, [r7, #8]
 80058e0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80058e4:	2b00      	cmp	r3, #0
 80058e6:	d00c      	beq.n	8005902 <HAL_TIM_IRQHandler+0x1b4>
 80058e8:	68fb      	ldr	r3, [r7, #12]
 80058ea:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80058ee:	2b00      	cmp	r3, #0
 80058f0:	d007      	beq.n	8005902 <HAL_TIM_IRQHandler+0x1b4>
 80058f2:	687b      	ldr	r3, [r7, #4]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80058fa:	611a      	str	r2, [r3, #16]
 80058fc:	6878      	ldr	r0, [r7, #4]
 80058fe:	f000 f8fb 	bl	8005af8 <HAL_TIM_TriggerCallback>
 8005902:	68bb      	ldr	r3, [r7, #8]
 8005904:	f003 0320 	and.w	r3, r3, #32
 8005908:	2b00      	cmp	r3, #0
 800590a:	d00c      	beq.n	8005926 <HAL_TIM_IRQHandler+0x1d8>
 800590c:	68fb      	ldr	r3, [r7, #12]
 800590e:	f003 0320 	and.w	r3, r3, #32
 8005912:	2b00      	cmp	r3, #0
 8005914:	d007      	beq.n	8005926 <HAL_TIM_IRQHandler+0x1d8>
 8005916:	687b      	ldr	r3, [r7, #4]
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	f06f 0220 	mvn.w	r2, #32
 800591e:	611a      	str	r2, [r3, #16]
 8005920:	6878      	ldr	r0, [r7, #4]
 8005922:	f000 faaf 	bl	8005e84 <HAL_TIMEx_CommutCallback>
 8005926:	bf00      	nop
 8005928:	3710      	adds	r7, #16
 800592a:	46bd      	mov	sp, r7
 800592c:	bd80      	pop	{r7, pc}

0800592e <HAL_TIM_ConfigClockSource>:
 800592e:	b580      	push	{r7, lr}
 8005930:	b084      	sub	sp, #16
 8005932:	af00      	add	r7, sp, #0
 8005934:	6078      	str	r0, [r7, #4]
 8005936:	6039      	str	r1, [r7, #0]
 8005938:	2300      	movs	r3, #0
 800593a:	73fb      	strb	r3, [r7, #15]
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005942:	2b01      	cmp	r3, #1
 8005944:	d101      	bne.n	800594a <HAL_TIM_ConfigClockSource+0x1c>
 8005946:	2302      	movs	r3, #2
 8005948:	e0b4      	b.n	8005ab4 <HAL_TIM_ConfigClockSource+0x186>
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	2201      	movs	r2, #1
 800594e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	2202      	movs	r2, #2
 8005956:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	681b      	ldr	r3, [r3, #0]
 800595e:	689b      	ldr	r3, [r3, #8]
 8005960:	60bb      	str	r3, [r7, #8]
 8005962:	68bb      	ldr	r3, [r7, #8]
 8005964:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8005968:	60bb      	str	r3, [r7, #8]
 800596a:	68bb      	ldr	r3, [r7, #8]
 800596c:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005970:	60bb      	str	r3, [r7, #8]
 8005972:	687b      	ldr	r3, [r7, #4]
 8005974:	681b      	ldr	r3, [r3, #0]
 8005976:	68ba      	ldr	r2, [r7, #8]
 8005978:	609a      	str	r2, [r3, #8]
 800597a:	683b      	ldr	r3, [r7, #0]
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005982:	d03e      	beq.n	8005a02 <HAL_TIM_ConfigClockSource+0xd4>
 8005984:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005988:	f200 8087 	bhi.w	8005a9a <HAL_TIM_ConfigClockSource+0x16c>
 800598c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005990:	f000 8086 	beq.w	8005aa0 <HAL_TIM_ConfigClockSource+0x172>
 8005994:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005998:	d87f      	bhi.n	8005a9a <HAL_TIM_ConfigClockSource+0x16c>
 800599a:	2b70      	cmp	r3, #112	@ 0x70
 800599c:	d01a      	beq.n	80059d4 <HAL_TIM_ConfigClockSource+0xa6>
 800599e:	2b70      	cmp	r3, #112	@ 0x70
 80059a0:	d87b      	bhi.n	8005a9a <HAL_TIM_ConfigClockSource+0x16c>
 80059a2:	2b60      	cmp	r3, #96	@ 0x60
 80059a4:	d050      	beq.n	8005a48 <HAL_TIM_ConfigClockSource+0x11a>
 80059a6:	2b60      	cmp	r3, #96	@ 0x60
 80059a8:	d877      	bhi.n	8005a9a <HAL_TIM_ConfigClockSource+0x16c>
 80059aa:	2b50      	cmp	r3, #80	@ 0x50
 80059ac:	d03c      	beq.n	8005a28 <HAL_TIM_ConfigClockSource+0xfa>
 80059ae:	2b50      	cmp	r3, #80	@ 0x50
 80059b0:	d873      	bhi.n	8005a9a <HAL_TIM_ConfigClockSource+0x16c>
 80059b2:	2b40      	cmp	r3, #64	@ 0x40
 80059b4:	d058      	beq.n	8005a68 <HAL_TIM_ConfigClockSource+0x13a>
 80059b6:	2b40      	cmp	r3, #64	@ 0x40
 80059b8:	d86f      	bhi.n	8005a9a <HAL_TIM_ConfigClockSource+0x16c>
 80059ba:	2b30      	cmp	r3, #48	@ 0x30
 80059bc:	d064      	beq.n	8005a88 <HAL_TIM_ConfigClockSource+0x15a>
 80059be:	2b30      	cmp	r3, #48	@ 0x30
 80059c0:	d86b      	bhi.n	8005a9a <HAL_TIM_ConfigClockSource+0x16c>
 80059c2:	2b20      	cmp	r3, #32
 80059c4:	d060      	beq.n	8005a88 <HAL_TIM_ConfigClockSource+0x15a>
 80059c6:	2b20      	cmp	r3, #32
 80059c8:	d867      	bhi.n	8005a9a <HAL_TIM_ConfigClockSource+0x16c>
 80059ca:	2b00      	cmp	r3, #0
 80059cc:	d05c      	beq.n	8005a88 <HAL_TIM_ConfigClockSource+0x15a>
 80059ce:	2b10      	cmp	r3, #16
 80059d0:	d05a      	beq.n	8005a88 <HAL_TIM_ConfigClockSource+0x15a>
 80059d2:	e062      	b.n	8005a9a <HAL_TIM_ConfigClockSource+0x16c>
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	6818      	ldr	r0, [r3, #0]
 80059d8:	683b      	ldr	r3, [r7, #0]
 80059da:	6899      	ldr	r1, [r3, #8]
 80059dc:	683b      	ldr	r3, [r7, #0]
 80059de:	685a      	ldr	r2, [r3, #4]
 80059e0:	683b      	ldr	r3, [r7, #0]
 80059e2:	68db      	ldr	r3, [r3, #12]
 80059e4:	f000 f9b2 	bl	8005d4c <TIM_ETR_SetConfig>
 80059e8:	687b      	ldr	r3, [r7, #4]
 80059ea:	681b      	ldr	r3, [r3, #0]
 80059ec:	689b      	ldr	r3, [r3, #8]
 80059ee:	60bb      	str	r3, [r7, #8]
 80059f0:	68bb      	ldr	r3, [r7, #8]
 80059f2:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80059f6:	60bb      	str	r3, [r7, #8]
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	68ba      	ldr	r2, [r7, #8]
 80059fe:	609a      	str	r2, [r3, #8]
 8005a00:	e04f      	b.n	8005aa2 <HAL_TIM_ConfigClockSource+0x174>
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	6818      	ldr	r0, [r3, #0]
 8005a06:	683b      	ldr	r3, [r7, #0]
 8005a08:	6899      	ldr	r1, [r3, #8]
 8005a0a:	683b      	ldr	r3, [r7, #0]
 8005a0c:	685a      	ldr	r2, [r3, #4]
 8005a0e:	683b      	ldr	r3, [r7, #0]
 8005a10:	68db      	ldr	r3, [r3, #12]
 8005a12:	f000 f99b 	bl	8005d4c <TIM_ETR_SetConfig>
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	689a      	ldr	r2, [r3, #8]
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005a24:	609a      	str	r2, [r3, #8]
 8005a26:	e03c      	b.n	8005aa2 <HAL_TIM_ConfigClockSource+0x174>
 8005a28:	687b      	ldr	r3, [r7, #4]
 8005a2a:	6818      	ldr	r0, [r3, #0]
 8005a2c:	683b      	ldr	r3, [r7, #0]
 8005a2e:	6859      	ldr	r1, [r3, #4]
 8005a30:	683b      	ldr	r3, [r7, #0]
 8005a32:	68db      	ldr	r3, [r3, #12]
 8005a34:	461a      	mov	r2, r3
 8005a36:	f000 f90f 	bl	8005c58 <TIM_TI1_ConfigInputStage>
 8005a3a:	687b      	ldr	r3, [r7, #4]
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	2150      	movs	r1, #80	@ 0x50
 8005a40:	4618      	mov	r0, r3
 8005a42:	f000 f968 	bl	8005d16 <TIM_ITRx_SetConfig>
 8005a46:	e02c      	b.n	8005aa2 <HAL_TIM_ConfigClockSource+0x174>
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	6818      	ldr	r0, [r3, #0]
 8005a4c:	683b      	ldr	r3, [r7, #0]
 8005a4e:	6859      	ldr	r1, [r3, #4]
 8005a50:	683b      	ldr	r3, [r7, #0]
 8005a52:	68db      	ldr	r3, [r3, #12]
 8005a54:	461a      	mov	r2, r3
 8005a56:	f000 f92e 	bl	8005cb6 <TIM_TI2_ConfigInputStage>
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	2160      	movs	r1, #96	@ 0x60
 8005a60:	4618      	mov	r0, r3
 8005a62:	f000 f958 	bl	8005d16 <TIM_ITRx_SetConfig>
 8005a66:	e01c      	b.n	8005aa2 <HAL_TIM_ConfigClockSource+0x174>
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	6818      	ldr	r0, [r3, #0]
 8005a6c:	683b      	ldr	r3, [r7, #0]
 8005a6e:	6859      	ldr	r1, [r3, #4]
 8005a70:	683b      	ldr	r3, [r7, #0]
 8005a72:	68db      	ldr	r3, [r3, #12]
 8005a74:	461a      	mov	r2, r3
 8005a76:	f000 f8ef 	bl	8005c58 <TIM_TI1_ConfigInputStage>
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	2140      	movs	r1, #64	@ 0x40
 8005a80:	4618      	mov	r0, r3
 8005a82:	f000 f948 	bl	8005d16 <TIM_ITRx_SetConfig>
 8005a86:	e00c      	b.n	8005aa2 <HAL_TIM_ConfigClockSource+0x174>
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	681a      	ldr	r2, [r3, #0]
 8005a8c:	683b      	ldr	r3, [r7, #0]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	4619      	mov	r1, r3
 8005a92:	4610      	mov	r0, r2
 8005a94:	f000 f93f 	bl	8005d16 <TIM_ITRx_SetConfig>
 8005a98:	e003      	b.n	8005aa2 <HAL_TIM_ConfigClockSource+0x174>
 8005a9a:	2301      	movs	r3, #1
 8005a9c:	73fb      	strb	r3, [r7, #15]
 8005a9e:	e000      	b.n	8005aa2 <HAL_TIM_ConfigClockSource+0x174>
 8005aa0:	bf00      	nop
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	2201      	movs	r2, #1
 8005aa6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	2200      	movs	r2, #0
 8005aae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005ab2:	7bfb      	ldrb	r3, [r7, #15]
 8005ab4:	4618      	mov	r0, r3
 8005ab6:	3710      	adds	r7, #16
 8005ab8:	46bd      	mov	sp, r7
 8005aba:	bd80      	pop	{r7, pc}

08005abc <HAL_TIM_OC_DelayElapsedCallback>:
 8005abc:	b480      	push	{r7}
 8005abe:	b083      	sub	sp, #12
 8005ac0:	af00      	add	r7, sp, #0
 8005ac2:	6078      	str	r0, [r7, #4]
 8005ac4:	bf00      	nop
 8005ac6:	370c      	adds	r7, #12
 8005ac8:	46bd      	mov	sp, r7
 8005aca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ace:	4770      	bx	lr

08005ad0 <HAL_TIM_IC_CaptureCallback>:
 8005ad0:	b480      	push	{r7}
 8005ad2:	b083      	sub	sp, #12
 8005ad4:	af00      	add	r7, sp, #0
 8005ad6:	6078      	str	r0, [r7, #4]
 8005ad8:	bf00      	nop
 8005ada:	370c      	adds	r7, #12
 8005adc:	46bd      	mov	sp, r7
 8005ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ae2:	4770      	bx	lr

08005ae4 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005ae4:	b480      	push	{r7}
 8005ae6:	b083      	sub	sp, #12
 8005ae8:	af00      	add	r7, sp, #0
 8005aea:	6078      	str	r0, [r7, #4]
 8005aec:	bf00      	nop
 8005aee:	370c      	adds	r7, #12
 8005af0:	46bd      	mov	sp, r7
 8005af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005af6:	4770      	bx	lr

08005af8 <HAL_TIM_TriggerCallback>:
 8005af8:	b480      	push	{r7}
 8005afa:	b083      	sub	sp, #12
 8005afc:	af00      	add	r7, sp, #0
 8005afe:	6078      	str	r0, [r7, #4]
 8005b00:	bf00      	nop
 8005b02:	370c      	adds	r7, #12
 8005b04:	46bd      	mov	sp, r7
 8005b06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b0a:	4770      	bx	lr

08005b0c <TIM_Base_SetConfig>:
 8005b0c:	b480      	push	{r7}
 8005b0e:	b085      	sub	sp, #20
 8005b10:	af00      	add	r7, sp, #0
 8005b12:	6078      	str	r0, [r7, #4]
 8005b14:	6039      	str	r1, [r7, #0]
 8005b16:	687b      	ldr	r3, [r7, #4]
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	60fb      	str	r3, [r7, #12]
 8005b1c:	687b      	ldr	r3, [r7, #4]
 8005b1e:	4a43      	ldr	r2, [pc, #268]	@ (8005c2c <TIM_Base_SetConfig+0x120>)
 8005b20:	4293      	cmp	r3, r2
 8005b22:	d013      	beq.n	8005b4c <TIM_Base_SetConfig+0x40>
 8005b24:	687b      	ldr	r3, [r7, #4]
 8005b26:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005b2a:	d00f      	beq.n	8005b4c <TIM_Base_SetConfig+0x40>
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	4a40      	ldr	r2, [pc, #256]	@ (8005c30 <TIM_Base_SetConfig+0x124>)
 8005b30:	4293      	cmp	r3, r2
 8005b32:	d00b      	beq.n	8005b4c <TIM_Base_SetConfig+0x40>
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	4a3f      	ldr	r2, [pc, #252]	@ (8005c34 <TIM_Base_SetConfig+0x128>)
 8005b38:	4293      	cmp	r3, r2
 8005b3a:	d007      	beq.n	8005b4c <TIM_Base_SetConfig+0x40>
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	4a3e      	ldr	r2, [pc, #248]	@ (8005c38 <TIM_Base_SetConfig+0x12c>)
 8005b40:	4293      	cmp	r3, r2
 8005b42:	d003      	beq.n	8005b4c <TIM_Base_SetConfig+0x40>
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	4a3d      	ldr	r2, [pc, #244]	@ (8005c3c <TIM_Base_SetConfig+0x130>)
 8005b48:	4293      	cmp	r3, r2
 8005b4a:	d108      	bne.n	8005b5e <TIM_Base_SetConfig+0x52>
 8005b4c:	68fb      	ldr	r3, [r7, #12]
 8005b4e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005b52:	60fb      	str	r3, [r7, #12]
 8005b54:	683b      	ldr	r3, [r7, #0]
 8005b56:	685b      	ldr	r3, [r3, #4]
 8005b58:	68fa      	ldr	r2, [r7, #12]
 8005b5a:	4313      	orrs	r3, r2
 8005b5c:	60fb      	str	r3, [r7, #12]
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	4a32      	ldr	r2, [pc, #200]	@ (8005c2c <TIM_Base_SetConfig+0x120>)
 8005b62:	4293      	cmp	r3, r2
 8005b64:	d02b      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005b6c:	d027      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005b6e:	687b      	ldr	r3, [r7, #4]
 8005b70:	4a2f      	ldr	r2, [pc, #188]	@ (8005c30 <TIM_Base_SetConfig+0x124>)
 8005b72:	4293      	cmp	r3, r2
 8005b74:	d023      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	4a2e      	ldr	r2, [pc, #184]	@ (8005c34 <TIM_Base_SetConfig+0x128>)
 8005b7a:	4293      	cmp	r3, r2
 8005b7c:	d01f      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	4a2d      	ldr	r2, [pc, #180]	@ (8005c38 <TIM_Base_SetConfig+0x12c>)
 8005b82:	4293      	cmp	r3, r2
 8005b84:	d01b      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	4a2c      	ldr	r2, [pc, #176]	@ (8005c3c <TIM_Base_SetConfig+0x130>)
 8005b8a:	4293      	cmp	r3, r2
 8005b8c:	d017      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	4a2b      	ldr	r2, [pc, #172]	@ (8005c40 <TIM_Base_SetConfig+0x134>)
 8005b92:	4293      	cmp	r3, r2
 8005b94:	d013      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	4a2a      	ldr	r2, [pc, #168]	@ (8005c44 <TIM_Base_SetConfig+0x138>)
 8005b9a:	4293      	cmp	r3, r2
 8005b9c:	d00f      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005b9e:	687b      	ldr	r3, [r7, #4]
 8005ba0:	4a29      	ldr	r2, [pc, #164]	@ (8005c48 <TIM_Base_SetConfig+0x13c>)
 8005ba2:	4293      	cmp	r3, r2
 8005ba4:	d00b      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005ba6:	687b      	ldr	r3, [r7, #4]
 8005ba8:	4a28      	ldr	r2, [pc, #160]	@ (8005c4c <TIM_Base_SetConfig+0x140>)
 8005baa:	4293      	cmp	r3, r2
 8005bac:	d007      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	4a27      	ldr	r2, [pc, #156]	@ (8005c50 <TIM_Base_SetConfig+0x144>)
 8005bb2:	4293      	cmp	r3, r2
 8005bb4:	d003      	beq.n	8005bbe <TIM_Base_SetConfig+0xb2>
 8005bb6:	687b      	ldr	r3, [r7, #4]
 8005bb8:	4a26      	ldr	r2, [pc, #152]	@ (8005c54 <TIM_Base_SetConfig+0x148>)
 8005bba:	4293      	cmp	r3, r2
 8005bbc:	d108      	bne.n	8005bd0 <TIM_Base_SetConfig+0xc4>
 8005bbe:	68fb      	ldr	r3, [r7, #12]
 8005bc0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005bc4:	60fb      	str	r3, [r7, #12]
 8005bc6:	683b      	ldr	r3, [r7, #0]
 8005bc8:	68db      	ldr	r3, [r3, #12]
 8005bca:	68fa      	ldr	r2, [r7, #12]
 8005bcc:	4313      	orrs	r3, r2
 8005bce:	60fb      	str	r3, [r7, #12]
 8005bd0:	68fb      	ldr	r3, [r7, #12]
 8005bd2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8005bd6:	683b      	ldr	r3, [r7, #0]
 8005bd8:	695b      	ldr	r3, [r3, #20]
 8005bda:	4313      	orrs	r3, r2
 8005bdc:	60fb      	str	r3, [r7, #12]
 8005bde:	683b      	ldr	r3, [r7, #0]
 8005be0:	689a      	ldr	r2, [r3, #8]
 8005be2:	687b      	ldr	r3, [r7, #4]
 8005be4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005be6:	683b      	ldr	r3, [r7, #0]
 8005be8:	681a      	ldr	r2, [r3, #0]
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	629a      	str	r2, [r3, #40]	@ 0x28
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	4a0e      	ldr	r2, [pc, #56]	@ (8005c2c <TIM_Base_SetConfig+0x120>)
 8005bf2:	4293      	cmp	r3, r2
 8005bf4:	d003      	beq.n	8005bfe <TIM_Base_SetConfig+0xf2>
 8005bf6:	687b      	ldr	r3, [r7, #4]
 8005bf8:	4a10      	ldr	r2, [pc, #64]	@ (8005c3c <TIM_Base_SetConfig+0x130>)
 8005bfa:	4293      	cmp	r3, r2
 8005bfc:	d103      	bne.n	8005c06 <TIM_Base_SetConfig+0xfa>
 8005bfe:	683b      	ldr	r3, [r7, #0]
 8005c00:	691a      	ldr	r2, [r3, #16]
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	631a      	str	r2, [r3, #48]	@ 0x30
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	f043 0204 	orr.w	r2, r3, #4
 8005c0e:	687b      	ldr	r3, [r7, #4]
 8005c10:	601a      	str	r2, [r3, #0]
 8005c12:	687b      	ldr	r3, [r7, #4]
 8005c14:	2201      	movs	r2, #1
 8005c16:	615a      	str	r2, [r3, #20]
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	68fa      	ldr	r2, [r7, #12]
 8005c1c:	601a      	str	r2, [r3, #0]
 8005c1e:	bf00      	nop
 8005c20:	3714      	adds	r7, #20
 8005c22:	46bd      	mov	sp, r7
 8005c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c28:	4770      	bx	lr
 8005c2a:	bf00      	nop
 8005c2c:	40010000 	.word	0x40010000
 8005c30:	40000400 	.word	0x40000400
 8005c34:	40000800 	.word	0x40000800
 8005c38:	40000c00 	.word	0x40000c00
 8005c3c:	40010400 	.word	0x40010400
 8005c40:	40014000 	.word	0x40014000
 8005c44:	40014400 	.word	0x40014400
 8005c48:	40014800 	.word	0x40014800
 8005c4c:	40001800 	.word	0x40001800
 8005c50:	40001c00 	.word	0x40001c00
 8005c54:	40002000 	.word	0x40002000

08005c58 <TIM_TI1_ConfigInputStage>:
 8005c58:	b480      	push	{r7}
 8005c5a:	b087      	sub	sp, #28
 8005c5c:	af00      	add	r7, sp, #0
 8005c5e:	60f8      	str	r0, [r7, #12]
 8005c60:	60b9      	str	r1, [r7, #8]
 8005c62:	607a      	str	r2, [r7, #4]
 8005c64:	68fb      	ldr	r3, [r7, #12]
 8005c66:	6a1b      	ldr	r3, [r3, #32]
 8005c68:	617b      	str	r3, [r7, #20]
 8005c6a:	68fb      	ldr	r3, [r7, #12]
 8005c6c:	6a1b      	ldr	r3, [r3, #32]
 8005c6e:	f023 0201 	bic.w	r2, r3, #1
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	621a      	str	r2, [r3, #32]
 8005c76:	68fb      	ldr	r3, [r7, #12]
 8005c78:	699b      	ldr	r3, [r3, #24]
 8005c7a:	613b      	str	r3, [r7, #16]
 8005c7c:	693b      	ldr	r3, [r7, #16]
 8005c7e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005c82:	613b      	str	r3, [r7, #16]
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	011b      	lsls	r3, r3, #4
 8005c88:	693a      	ldr	r2, [r7, #16]
 8005c8a:	4313      	orrs	r3, r2
 8005c8c:	613b      	str	r3, [r7, #16]
 8005c8e:	697b      	ldr	r3, [r7, #20]
 8005c90:	f023 030a 	bic.w	r3, r3, #10
 8005c94:	617b      	str	r3, [r7, #20]
 8005c96:	697a      	ldr	r2, [r7, #20]
 8005c98:	68bb      	ldr	r3, [r7, #8]
 8005c9a:	4313      	orrs	r3, r2
 8005c9c:	617b      	str	r3, [r7, #20]
 8005c9e:	68fb      	ldr	r3, [r7, #12]
 8005ca0:	693a      	ldr	r2, [r7, #16]
 8005ca2:	619a      	str	r2, [r3, #24]
 8005ca4:	68fb      	ldr	r3, [r7, #12]
 8005ca6:	697a      	ldr	r2, [r7, #20]
 8005ca8:	621a      	str	r2, [r3, #32]
 8005caa:	bf00      	nop
 8005cac:	371c      	adds	r7, #28
 8005cae:	46bd      	mov	sp, r7
 8005cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cb4:	4770      	bx	lr

08005cb6 <TIM_TI2_ConfigInputStage>:
 8005cb6:	b480      	push	{r7}
 8005cb8:	b087      	sub	sp, #28
 8005cba:	af00      	add	r7, sp, #0
 8005cbc:	60f8      	str	r0, [r7, #12]
 8005cbe:	60b9      	str	r1, [r7, #8]
 8005cc0:	607a      	str	r2, [r7, #4]
 8005cc2:	68fb      	ldr	r3, [r7, #12]
 8005cc4:	6a1b      	ldr	r3, [r3, #32]
 8005cc6:	617b      	str	r3, [r7, #20]
 8005cc8:	68fb      	ldr	r3, [r7, #12]
 8005cca:	6a1b      	ldr	r3, [r3, #32]
 8005ccc:	f023 0210 	bic.w	r2, r3, #16
 8005cd0:	68fb      	ldr	r3, [r7, #12]
 8005cd2:	621a      	str	r2, [r3, #32]
 8005cd4:	68fb      	ldr	r3, [r7, #12]
 8005cd6:	699b      	ldr	r3, [r3, #24]
 8005cd8:	613b      	str	r3, [r7, #16]
 8005cda:	693b      	ldr	r3, [r7, #16]
 8005cdc:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005ce0:	613b      	str	r3, [r7, #16]
 8005ce2:	687b      	ldr	r3, [r7, #4]
 8005ce4:	031b      	lsls	r3, r3, #12
 8005ce6:	693a      	ldr	r2, [r7, #16]
 8005ce8:	4313      	orrs	r3, r2
 8005cea:	613b      	str	r3, [r7, #16]
 8005cec:	697b      	ldr	r3, [r7, #20]
 8005cee:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005cf2:	617b      	str	r3, [r7, #20]
 8005cf4:	68bb      	ldr	r3, [r7, #8]
 8005cf6:	011b      	lsls	r3, r3, #4
 8005cf8:	697a      	ldr	r2, [r7, #20]
 8005cfa:	4313      	orrs	r3, r2
 8005cfc:	617b      	str	r3, [r7, #20]
 8005cfe:	68fb      	ldr	r3, [r7, #12]
 8005d00:	693a      	ldr	r2, [r7, #16]
 8005d02:	619a      	str	r2, [r3, #24]
 8005d04:	68fb      	ldr	r3, [r7, #12]
 8005d06:	697a      	ldr	r2, [r7, #20]
 8005d08:	621a      	str	r2, [r3, #32]
 8005d0a:	bf00      	nop
 8005d0c:	371c      	adds	r7, #28
 8005d0e:	46bd      	mov	sp, r7
 8005d10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d14:	4770      	bx	lr

08005d16 <TIM_ITRx_SetConfig>:
 8005d16:	b480      	push	{r7}
 8005d18:	b085      	sub	sp, #20
 8005d1a:	af00      	add	r7, sp, #0
 8005d1c:	6078      	str	r0, [r7, #4]
 8005d1e:	6039      	str	r1, [r7, #0]
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	689b      	ldr	r3, [r3, #8]
 8005d24:	60fb      	str	r3, [r7, #12]
 8005d26:	68fb      	ldr	r3, [r7, #12]
 8005d28:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005d2c:	60fb      	str	r3, [r7, #12]
 8005d2e:	683a      	ldr	r2, [r7, #0]
 8005d30:	68fb      	ldr	r3, [r7, #12]
 8005d32:	4313      	orrs	r3, r2
 8005d34:	f043 0307 	orr.w	r3, r3, #7
 8005d38:	60fb      	str	r3, [r7, #12]
 8005d3a:	687b      	ldr	r3, [r7, #4]
 8005d3c:	68fa      	ldr	r2, [r7, #12]
 8005d3e:	609a      	str	r2, [r3, #8]
 8005d40:	bf00      	nop
 8005d42:	3714      	adds	r7, #20
 8005d44:	46bd      	mov	sp, r7
 8005d46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d4a:	4770      	bx	lr

08005d4c <TIM_ETR_SetConfig>:
 8005d4c:	b480      	push	{r7}
 8005d4e:	b087      	sub	sp, #28
 8005d50:	af00      	add	r7, sp, #0
 8005d52:	60f8      	str	r0, [r7, #12]
 8005d54:	60b9      	str	r1, [r7, #8]
 8005d56:	607a      	str	r2, [r7, #4]
 8005d58:	603b      	str	r3, [r7, #0]
 8005d5a:	68fb      	ldr	r3, [r7, #12]
 8005d5c:	689b      	ldr	r3, [r3, #8]
 8005d5e:	617b      	str	r3, [r7, #20]
 8005d60:	697b      	ldr	r3, [r7, #20]
 8005d62:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005d66:	617b      	str	r3, [r7, #20]
 8005d68:	683b      	ldr	r3, [r7, #0]
 8005d6a:	021a      	lsls	r2, r3, #8
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	431a      	orrs	r2, r3
 8005d70:	68bb      	ldr	r3, [r7, #8]
 8005d72:	4313      	orrs	r3, r2
 8005d74:	697a      	ldr	r2, [r7, #20]
 8005d76:	4313      	orrs	r3, r2
 8005d78:	617b      	str	r3, [r7, #20]
 8005d7a:	68fb      	ldr	r3, [r7, #12]
 8005d7c:	697a      	ldr	r2, [r7, #20]
 8005d7e:	609a      	str	r2, [r3, #8]
 8005d80:	bf00      	nop
 8005d82:	371c      	adds	r7, #28
 8005d84:	46bd      	mov	sp, r7
 8005d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d8a:	4770      	bx	lr

08005d8c <HAL_TIMEx_MasterConfigSynchronization>:
 8005d8c:	b480      	push	{r7}
 8005d8e:	b085      	sub	sp, #20
 8005d90:	af00      	add	r7, sp, #0
 8005d92:	6078      	str	r0, [r7, #4]
 8005d94:	6039      	str	r1, [r7, #0]
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005d9c:	2b01      	cmp	r3, #1
 8005d9e:	d101      	bne.n	8005da4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005da0:	2302      	movs	r3, #2
 8005da2:	e05a      	b.n	8005e5a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005da4:	687b      	ldr	r3, [r7, #4]
 8005da6:	2201      	movs	r2, #1
 8005da8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005dac:	687b      	ldr	r3, [r7, #4]
 8005dae:	2202      	movs	r2, #2
 8005db0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	685b      	ldr	r3, [r3, #4]
 8005dba:	60fb      	str	r3, [r7, #12]
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	681b      	ldr	r3, [r3, #0]
 8005dc0:	689b      	ldr	r3, [r3, #8]
 8005dc2:	60bb      	str	r3, [r7, #8]
 8005dc4:	68fb      	ldr	r3, [r7, #12]
 8005dc6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005dca:	60fb      	str	r3, [r7, #12]
 8005dcc:	683b      	ldr	r3, [r7, #0]
 8005dce:	681b      	ldr	r3, [r3, #0]
 8005dd0:	68fa      	ldr	r2, [r7, #12]
 8005dd2:	4313      	orrs	r3, r2
 8005dd4:	60fb      	str	r3, [r7, #12]
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	681b      	ldr	r3, [r3, #0]
 8005dda:	68fa      	ldr	r2, [r7, #12]
 8005ddc:	605a      	str	r2, [r3, #4]
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	681b      	ldr	r3, [r3, #0]
 8005de2:	4a21      	ldr	r2, [pc, #132]	@ (8005e68 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005de4:	4293      	cmp	r3, r2
 8005de6:	d022      	beq.n	8005e2e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005df0:	d01d      	beq.n	8005e2e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	681b      	ldr	r3, [r3, #0]
 8005df6:	4a1d      	ldr	r2, [pc, #116]	@ (8005e6c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005df8:	4293      	cmp	r3, r2
 8005dfa:	d018      	beq.n	8005e2e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	4a1b      	ldr	r2, [pc, #108]	@ (8005e70 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8005e02:	4293      	cmp	r3, r2
 8005e04:	d013      	beq.n	8005e2e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	681b      	ldr	r3, [r3, #0]
 8005e0a:	4a1a      	ldr	r2, [pc, #104]	@ (8005e74 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005e0c:	4293      	cmp	r3, r2
 8005e0e:	d00e      	beq.n	8005e2e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	4a18      	ldr	r2, [pc, #96]	@ (8005e78 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8005e16:	4293      	cmp	r3, r2
 8005e18:	d009      	beq.n	8005e2e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	681b      	ldr	r3, [r3, #0]
 8005e1e:	4a17      	ldr	r2, [pc, #92]	@ (8005e7c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005e20:	4293      	cmp	r3, r2
 8005e22:	d004      	beq.n	8005e2e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005e24:	687b      	ldr	r3, [r7, #4]
 8005e26:	681b      	ldr	r3, [r3, #0]
 8005e28:	4a15      	ldr	r2, [pc, #84]	@ (8005e80 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005e2a:	4293      	cmp	r3, r2
 8005e2c:	d10c      	bne.n	8005e48 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005e2e:	68bb      	ldr	r3, [r7, #8]
 8005e30:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005e34:	60bb      	str	r3, [r7, #8]
 8005e36:	683b      	ldr	r3, [r7, #0]
 8005e38:	685b      	ldr	r3, [r3, #4]
 8005e3a:	68ba      	ldr	r2, [r7, #8]
 8005e3c:	4313      	orrs	r3, r2
 8005e3e:	60bb      	str	r3, [r7, #8]
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	681b      	ldr	r3, [r3, #0]
 8005e44:	68ba      	ldr	r2, [r7, #8]
 8005e46:	609a      	str	r2, [r3, #8]
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	2201      	movs	r2, #1
 8005e4c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	2200      	movs	r2, #0
 8005e54:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005e58:	2300      	movs	r3, #0
 8005e5a:	4618      	mov	r0, r3
 8005e5c:	3714      	adds	r7, #20
 8005e5e:	46bd      	mov	sp, r7
 8005e60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e64:	4770      	bx	lr
 8005e66:	bf00      	nop
 8005e68:	40010000 	.word	0x40010000
 8005e6c:	40000400 	.word	0x40000400
 8005e70:	40000800 	.word	0x40000800
 8005e74:	40000c00 	.word	0x40000c00
 8005e78:	40010400 	.word	0x40010400
 8005e7c:	40014000 	.word	0x40014000
 8005e80:	40001800 	.word	0x40001800

08005e84 <HAL_TIMEx_CommutCallback>:
 8005e84:	b480      	push	{r7}
 8005e86:	b083      	sub	sp, #12
 8005e88:	af00      	add	r7, sp, #0
 8005e8a:	6078      	str	r0, [r7, #4]
 8005e8c:	bf00      	nop
 8005e8e:	370c      	adds	r7, #12
 8005e90:	46bd      	mov	sp, r7
 8005e92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e96:	4770      	bx	lr

08005e98 <HAL_TIMEx_BreakCallback>:
 8005e98:	b480      	push	{r7}
 8005e9a:	b083      	sub	sp, #12
 8005e9c:	af00      	add	r7, sp, #0
 8005e9e:	6078      	str	r0, [r7, #4]
 8005ea0:	bf00      	nop
 8005ea2:	370c      	adds	r7, #12
 8005ea4:	46bd      	mov	sp, r7
 8005ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eaa:	4770      	bx	lr

08005eac <HAL_UART_Init>:
 8005eac:	b580      	push	{r7, lr}
 8005eae:	b082      	sub	sp, #8
 8005eb0:	af00      	add	r7, sp, #0
 8005eb2:	6078      	str	r0, [r7, #4]
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	2b00      	cmp	r3, #0
 8005eb8:	d101      	bne.n	8005ebe <HAL_UART_Init+0x12>
 8005eba:	2301      	movs	r3, #1
 8005ebc:	e042      	b.n	8005f44 <HAL_UART_Init+0x98>
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005ec4:	b2db      	uxtb	r3, r3
 8005ec6:	2b00      	cmp	r3, #0
 8005ec8:	d106      	bne.n	8005ed8 <HAL_UART_Init+0x2c>
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	2200      	movs	r2, #0
 8005ece:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005ed2:	6878      	ldr	r0, [r7, #4]
 8005ed4:	f7fb f9aa 	bl	800122c <HAL_UART_MspInit>
 8005ed8:	687b      	ldr	r3, [r7, #4]
 8005eda:	2224      	movs	r2, #36	@ 0x24
 8005edc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005ee0:	687b      	ldr	r3, [r7, #4]
 8005ee2:	681b      	ldr	r3, [r3, #0]
 8005ee4:	68da      	ldr	r2, [r3, #12]
 8005ee6:	687b      	ldr	r3, [r7, #4]
 8005ee8:	681b      	ldr	r3, [r3, #0]
 8005eea:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005eee:	60da      	str	r2, [r3, #12]
 8005ef0:	6878      	ldr	r0, [r7, #4]
 8005ef2:	f000 fdfb 	bl	8006aec <UART_SetConfig>
 8005ef6:	687b      	ldr	r3, [r7, #4]
 8005ef8:	681b      	ldr	r3, [r3, #0]
 8005efa:	691a      	ldr	r2, [r3, #16]
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	681b      	ldr	r3, [r3, #0]
 8005f00:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005f04:	611a      	str	r2, [r3, #16]
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	695a      	ldr	r2, [r3, #20]
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005f14:	615a      	str	r2, [r3, #20]
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	68da      	ldr	r2, [r3, #12]
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	681b      	ldr	r3, [r3, #0]
 8005f20:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005f24:	60da      	str	r2, [r3, #12]
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	2200      	movs	r2, #0
 8005f2a:	645a      	str	r2, [r3, #68]	@ 0x44
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	2220      	movs	r2, #32
 8005f30:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	2220      	movs	r2, #32
 8005f38:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	2200      	movs	r2, #0
 8005f40:	635a      	str	r2, [r3, #52]	@ 0x34
 8005f42:	2300      	movs	r3, #0
 8005f44:	4618      	mov	r0, r3
 8005f46:	3708      	adds	r7, #8
 8005f48:	46bd      	mov	sp, r7
 8005f4a:	bd80      	pop	{r7, pc}

08005f4c <HAL_UART_DeInit>:
 8005f4c:	b580      	push	{r7, lr}
 8005f4e:	b082      	sub	sp, #8
 8005f50:	af00      	add	r7, sp, #0
 8005f52:	6078      	str	r0, [r7, #4]
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	2b00      	cmp	r3, #0
 8005f58:	d101      	bne.n	8005f5e <HAL_UART_DeInit+0x12>
 8005f5a:	2301      	movs	r3, #1
 8005f5c:	e024      	b.n	8005fa8 <HAL_UART_DeInit+0x5c>
 8005f5e:	687b      	ldr	r3, [r7, #4]
 8005f60:	2224      	movs	r2, #36	@ 0x24
 8005f62:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005f66:	687b      	ldr	r3, [r7, #4]
 8005f68:	681b      	ldr	r3, [r3, #0]
 8005f6a:	68da      	ldr	r2, [r3, #12]
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	681b      	ldr	r3, [r3, #0]
 8005f70:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005f74:	60da      	str	r2, [r3, #12]
 8005f76:	6878      	ldr	r0, [r7, #4]
 8005f78:	f7fb fa30 	bl	80013dc <HAL_UART_MspDeInit>
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	2200      	movs	r2, #0
 8005f80:	645a      	str	r2, [r3, #68]	@ 0x44
 8005f82:	687b      	ldr	r3, [r7, #4]
 8005f84:	2200      	movs	r2, #0
 8005f86:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005f8a:	687b      	ldr	r3, [r7, #4]
 8005f8c:	2200      	movs	r2, #0
 8005f8e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005f92:	687b      	ldr	r3, [r7, #4]
 8005f94:	2200      	movs	r2, #0
 8005f96:	631a      	str	r2, [r3, #48]	@ 0x30
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	2200      	movs	r2, #0
 8005f9c:	635a      	str	r2, [r3, #52]	@ 0x34
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	2200      	movs	r2, #0
 8005fa2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005fa6:	2300      	movs	r3, #0
 8005fa8:	4618      	mov	r0, r3
 8005faa:	3708      	adds	r7, #8
 8005fac:	46bd      	mov	sp, r7
 8005fae:	bd80      	pop	{r7, pc}

08005fb0 <HAL_UART_Transmit>:
 8005fb0:	b580      	push	{r7, lr}
 8005fb2:	b08a      	sub	sp, #40	@ 0x28
 8005fb4:	af02      	add	r7, sp, #8
 8005fb6:	60f8      	str	r0, [r7, #12]
 8005fb8:	60b9      	str	r1, [r7, #8]
 8005fba:	603b      	str	r3, [r7, #0]
 8005fbc:	4613      	mov	r3, r2
 8005fbe:	80fb      	strh	r3, [r7, #6]
 8005fc0:	2300      	movs	r3, #0
 8005fc2:	617b      	str	r3, [r7, #20]
 8005fc4:	68fb      	ldr	r3, [r7, #12]
 8005fc6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005fca:	b2db      	uxtb	r3, r3
 8005fcc:	2b20      	cmp	r3, #32
 8005fce:	d175      	bne.n	80060bc <HAL_UART_Transmit+0x10c>
 8005fd0:	68bb      	ldr	r3, [r7, #8]
 8005fd2:	2b00      	cmp	r3, #0
 8005fd4:	d002      	beq.n	8005fdc <HAL_UART_Transmit+0x2c>
 8005fd6:	88fb      	ldrh	r3, [r7, #6]
 8005fd8:	2b00      	cmp	r3, #0
 8005fda:	d101      	bne.n	8005fe0 <HAL_UART_Transmit+0x30>
 8005fdc:	2301      	movs	r3, #1
 8005fde:	e06e      	b.n	80060be <HAL_UART_Transmit+0x10e>
 8005fe0:	68fb      	ldr	r3, [r7, #12]
 8005fe2:	2200      	movs	r2, #0
 8005fe4:	645a      	str	r2, [r3, #68]	@ 0x44
 8005fe6:	68fb      	ldr	r3, [r7, #12]
 8005fe8:	2221      	movs	r2, #33	@ 0x21
 8005fea:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005fee:	f7fb fb39 	bl	8001664 <HAL_GetTick>
 8005ff2:	6178      	str	r0, [r7, #20]
 8005ff4:	68fb      	ldr	r3, [r7, #12]
 8005ff6:	88fa      	ldrh	r2, [r7, #6]
 8005ff8:	849a      	strh	r2, [r3, #36]	@ 0x24
 8005ffa:	68fb      	ldr	r3, [r7, #12]
 8005ffc:	88fa      	ldrh	r2, [r7, #6]
 8005ffe:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006000:	68fb      	ldr	r3, [r7, #12]
 8006002:	689b      	ldr	r3, [r3, #8]
 8006004:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006008:	d108      	bne.n	800601c <HAL_UART_Transmit+0x6c>
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	691b      	ldr	r3, [r3, #16]
 800600e:	2b00      	cmp	r3, #0
 8006010:	d104      	bne.n	800601c <HAL_UART_Transmit+0x6c>
 8006012:	2300      	movs	r3, #0
 8006014:	61fb      	str	r3, [r7, #28]
 8006016:	68bb      	ldr	r3, [r7, #8]
 8006018:	61bb      	str	r3, [r7, #24]
 800601a:	e003      	b.n	8006024 <HAL_UART_Transmit+0x74>
 800601c:	68bb      	ldr	r3, [r7, #8]
 800601e:	61fb      	str	r3, [r7, #28]
 8006020:	2300      	movs	r3, #0
 8006022:	61bb      	str	r3, [r7, #24]
 8006024:	e02e      	b.n	8006084 <HAL_UART_Transmit+0xd4>
 8006026:	683b      	ldr	r3, [r7, #0]
 8006028:	9300      	str	r3, [sp, #0]
 800602a:	697b      	ldr	r3, [r7, #20]
 800602c:	2200      	movs	r2, #0
 800602e:	2180      	movs	r1, #128	@ 0x80
 8006030:	68f8      	ldr	r0, [r7, #12]
 8006032:	f000 fb2d 	bl	8006690 <UART_WaitOnFlagUntilTimeout>
 8006036:	4603      	mov	r3, r0
 8006038:	2b00      	cmp	r3, #0
 800603a:	d005      	beq.n	8006048 <HAL_UART_Transmit+0x98>
 800603c:	68fb      	ldr	r3, [r7, #12]
 800603e:	2220      	movs	r2, #32
 8006040:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006044:	2303      	movs	r3, #3
 8006046:	e03a      	b.n	80060be <HAL_UART_Transmit+0x10e>
 8006048:	69fb      	ldr	r3, [r7, #28]
 800604a:	2b00      	cmp	r3, #0
 800604c:	d10b      	bne.n	8006066 <HAL_UART_Transmit+0xb6>
 800604e:	69bb      	ldr	r3, [r7, #24]
 8006050:	881b      	ldrh	r3, [r3, #0]
 8006052:	461a      	mov	r2, r3
 8006054:	68fb      	ldr	r3, [r7, #12]
 8006056:	681b      	ldr	r3, [r3, #0]
 8006058:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800605c:	605a      	str	r2, [r3, #4]
 800605e:	69bb      	ldr	r3, [r7, #24]
 8006060:	3302      	adds	r3, #2
 8006062:	61bb      	str	r3, [r7, #24]
 8006064:	e007      	b.n	8006076 <HAL_UART_Transmit+0xc6>
 8006066:	69fb      	ldr	r3, [r7, #28]
 8006068:	781a      	ldrb	r2, [r3, #0]
 800606a:	68fb      	ldr	r3, [r7, #12]
 800606c:	681b      	ldr	r3, [r3, #0]
 800606e:	605a      	str	r2, [r3, #4]
 8006070:	69fb      	ldr	r3, [r7, #28]
 8006072:	3301      	adds	r3, #1
 8006074:	61fb      	str	r3, [r7, #28]
 8006076:	68fb      	ldr	r3, [r7, #12]
 8006078:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800607a:	b29b      	uxth	r3, r3
 800607c:	3b01      	subs	r3, #1
 800607e:	b29a      	uxth	r2, r3
 8006080:	68fb      	ldr	r3, [r7, #12]
 8006082:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006088:	b29b      	uxth	r3, r3
 800608a:	2b00      	cmp	r3, #0
 800608c:	d1cb      	bne.n	8006026 <HAL_UART_Transmit+0x76>
 800608e:	683b      	ldr	r3, [r7, #0]
 8006090:	9300      	str	r3, [sp, #0]
 8006092:	697b      	ldr	r3, [r7, #20]
 8006094:	2200      	movs	r2, #0
 8006096:	2140      	movs	r1, #64	@ 0x40
 8006098:	68f8      	ldr	r0, [r7, #12]
 800609a:	f000 faf9 	bl	8006690 <UART_WaitOnFlagUntilTimeout>
 800609e:	4603      	mov	r3, r0
 80060a0:	2b00      	cmp	r3, #0
 80060a2:	d005      	beq.n	80060b0 <HAL_UART_Transmit+0x100>
 80060a4:	68fb      	ldr	r3, [r7, #12]
 80060a6:	2220      	movs	r2, #32
 80060a8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80060ac:	2303      	movs	r3, #3
 80060ae:	e006      	b.n	80060be <HAL_UART_Transmit+0x10e>
 80060b0:	68fb      	ldr	r3, [r7, #12]
 80060b2:	2220      	movs	r2, #32
 80060b4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80060b8:	2300      	movs	r3, #0
 80060ba:	e000      	b.n	80060be <HAL_UART_Transmit+0x10e>
 80060bc:	2302      	movs	r3, #2
 80060be:	4618      	mov	r0, r3
 80060c0:	3720      	adds	r7, #32
 80060c2:	46bd      	mov	sp, r7
 80060c4:	bd80      	pop	{r7, pc}

080060c6 <HAL_UART_Receive_IT>:
 80060c6:	b580      	push	{r7, lr}
 80060c8:	b084      	sub	sp, #16
 80060ca:	af00      	add	r7, sp, #0
 80060cc:	60f8      	str	r0, [r7, #12]
 80060ce:	60b9      	str	r1, [r7, #8]
 80060d0:	4613      	mov	r3, r2
 80060d2:	80fb      	strh	r3, [r7, #6]
 80060d4:	68fb      	ldr	r3, [r7, #12]
 80060d6:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80060da:	b2db      	uxtb	r3, r3
 80060dc:	2b20      	cmp	r3, #32
 80060de:	d112      	bne.n	8006106 <HAL_UART_Receive_IT+0x40>
 80060e0:	68bb      	ldr	r3, [r7, #8]
 80060e2:	2b00      	cmp	r3, #0
 80060e4:	d002      	beq.n	80060ec <HAL_UART_Receive_IT+0x26>
 80060e6:	88fb      	ldrh	r3, [r7, #6]
 80060e8:	2b00      	cmp	r3, #0
 80060ea:	d101      	bne.n	80060f0 <HAL_UART_Receive_IT+0x2a>
 80060ec:	2301      	movs	r3, #1
 80060ee:	e00b      	b.n	8006108 <HAL_UART_Receive_IT+0x42>
 80060f0:	68fb      	ldr	r3, [r7, #12]
 80060f2:	2200      	movs	r2, #0
 80060f4:	631a      	str	r2, [r3, #48]	@ 0x30
 80060f6:	88fb      	ldrh	r3, [r7, #6]
 80060f8:	461a      	mov	r2, r3
 80060fa:	68b9      	ldr	r1, [r7, #8]
 80060fc:	68f8      	ldr	r0, [r7, #12]
 80060fe:	f000 fb20 	bl	8006742 <UART_Start_Receive_IT>
 8006102:	4603      	mov	r3, r0
 8006104:	e000      	b.n	8006108 <HAL_UART_Receive_IT+0x42>
 8006106:	2302      	movs	r3, #2
 8006108:	4618      	mov	r0, r3
 800610a:	3710      	adds	r7, #16
 800610c:	46bd      	mov	sp, r7
 800610e:	bd80      	pop	{r7, pc}

08006110 <HAL_UART_IRQHandler>:
 8006110:	b580      	push	{r7, lr}
 8006112:	b0ba      	sub	sp, #232	@ 0xe8
 8006114:	af00      	add	r7, sp, #0
 8006116:	6078      	str	r0, [r7, #4]
 8006118:	687b      	ldr	r3, [r7, #4]
 800611a:	681b      	ldr	r3, [r3, #0]
 800611c:	681b      	ldr	r3, [r3, #0]
 800611e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8006122:	687b      	ldr	r3, [r7, #4]
 8006124:	681b      	ldr	r3, [r3, #0]
 8006126:	68db      	ldr	r3, [r3, #12]
 8006128:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	681b      	ldr	r3, [r3, #0]
 8006130:	695b      	ldr	r3, [r3, #20]
 8006132:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8006136:	2300      	movs	r3, #0
 8006138:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800613c:	2300      	movs	r3, #0
 800613e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8006142:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006146:	f003 030f 	and.w	r3, r3, #15
 800614a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800614e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006152:	2b00      	cmp	r3, #0
 8006154:	d10f      	bne.n	8006176 <HAL_UART_IRQHandler+0x66>
 8006156:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800615a:	f003 0320 	and.w	r3, r3, #32
 800615e:	2b00      	cmp	r3, #0
 8006160:	d009      	beq.n	8006176 <HAL_UART_IRQHandler+0x66>
 8006162:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006166:	f003 0320 	and.w	r3, r3, #32
 800616a:	2b00      	cmp	r3, #0
 800616c:	d003      	beq.n	8006176 <HAL_UART_IRQHandler+0x66>
 800616e:	6878      	ldr	r0, [r7, #4]
 8006170:	f000 fbfd 	bl	800696e <UART_Receive_IT>
 8006174:	e273      	b.n	800665e <HAL_UART_IRQHandler+0x54e>
 8006176:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800617a:	2b00      	cmp	r3, #0
 800617c:	f000 80de 	beq.w	800633c <HAL_UART_IRQHandler+0x22c>
 8006180:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006184:	f003 0301 	and.w	r3, r3, #1
 8006188:	2b00      	cmp	r3, #0
 800618a:	d106      	bne.n	800619a <HAL_UART_IRQHandler+0x8a>
 800618c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006190:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8006194:	2b00      	cmp	r3, #0
 8006196:	f000 80d1 	beq.w	800633c <HAL_UART_IRQHandler+0x22c>
 800619a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800619e:	f003 0301 	and.w	r3, r3, #1
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d00b      	beq.n	80061be <HAL_UART_IRQHandler+0xae>
 80061a6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80061aa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80061ae:	2b00      	cmp	r3, #0
 80061b0:	d005      	beq.n	80061be <HAL_UART_IRQHandler+0xae>
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80061b6:	f043 0201 	orr.w	r2, r3, #1
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	645a      	str	r2, [r3, #68]	@ 0x44
 80061be:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80061c2:	f003 0304 	and.w	r3, r3, #4
 80061c6:	2b00      	cmp	r3, #0
 80061c8:	d00b      	beq.n	80061e2 <HAL_UART_IRQHandler+0xd2>
 80061ca:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80061ce:	f003 0301 	and.w	r3, r3, #1
 80061d2:	2b00      	cmp	r3, #0
 80061d4:	d005      	beq.n	80061e2 <HAL_UART_IRQHandler+0xd2>
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80061da:	f043 0202 	orr.w	r2, r3, #2
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	645a      	str	r2, [r3, #68]	@ 0x44
 80061e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80061e6:	f003 0302 	and.w	r3, r3, #2
 80061ea:	2b00      	cmp	r3, #0
 80061ec:	d00b      	beq.n	8006206 <HAL_UART_IRQHandler+0xf6>
 80061ee:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80061f2:	f003 0301 	and.w	r3, r3, #1
 80061f6:	2b00      	cmp	r3, #0
 80061f8:	d005      	beq.n	8006206 <HAL_UART_IRQHandler+0xf6>
 80061fa:	687b      	ldr	r3, [r7, #4]
 80061fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80061fe:	f043 0204 	orr.w	r2, r3, #4
 8006202:	687b      	ldr	r3, [r7, #4]
 8006204:	645a      	str	r2, [r3, #68]	@ 0x44
 8006206:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800620a:	f003 0308 	and.w	r3, r3, #8
 800620e:	2b00      	cmp	r3, #0
 8006210:	d011      	beq.n	8006236 <HAL_UART_IRQHandler+0x126>
 8006212:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006216:	f003 0320 	and.w	r3, r3, #32
 800621a:	2b00      	cmp	r3, #0
 800621c:	d105      	bne.n	800622a <HAL_UART_IRQHandler+0x11a>
 800621e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006222:	f003 0301 	and.w	r3, r3, #1
 8006226:	2b00      	cmp	r3, #0
 8006228:	d005      	beq.n	8006236 <HAL_UART_IRQHandler+0x126>
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800622e:	f043 0208 	orr.w	r2, r3, #8
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	645a      	str	r2, [r3, #68]	@ 0x44
 8006236:	687b      	ldr	r3, [r7, #4]
 8006238:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800623a:	2b00      	cmp	r3, #0
 800623c:	f000 820a 	beq.w	8006654 <HAL_UART_IRQHandler+0x544>
 8006240:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006244:	f003 0320 	and.w	r3, r3, #32
 8006248:	2b00      	cmp	r3, #0
 800624a:	d008      	beq.n	800625e <HAL_UART_IRQHandler+0x14e>
 800624c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006250:	f003 0320 	and.w	r3, r3, #32
 8006254:	2b00      	cmp	r3, #0
 8006256:	d002      	beq.n	800625e <HAL_UART_IRQHandler+0x14e>
 8006258:	6878      	ldr	r0, [r7, #4]
 800625a:	f000 fb88 	bl	800696e <UART_Receive_IT>
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	695b      	ldr	r3, [r3, #20]
 8006264:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006268:	2b40      	cmp	r3, #64	@ 0x40
 800626a:	bf0c      	ite	eq
 800626c:	2301      	moveq	r3, #1
 800626e:	2300      	movne	r3, #0
 8006270:	b2db      	uxtb	r3, r3
 8006272:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800627a:	f003 0308 	and.w	r3, r3, #8
 800627e:	2b00      	cmp	r3, #0
 8006280:	d103      	bne.n	800628a <HAL_UART_IRQHandler+0x17a>
 8006282:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8006286:	2b00      	cmp	r3, #0
 8006288:	d04f      	beq.n	800632a <HAL_UART_IRQHandler+0x21a>
 800628a:	6878      	ldr	r0, [r7, #4]
 800628c:	f000 fa93 	bl	80067b6 <UART_EndRxTransfer>
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	695b      	ldr	r3, [r3, #20]
 8006296:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800629a:	2b40      	cmp	r3, #64	@ 0x40
 800629c:	d141      	bne.n	8006322 <HAL_UART_IRQHandler+0x212>
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	681b      	ldr	r3, [r3, #0]
 80062a2:	3314      	adds	r3, #20
 80062a4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80062a8:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80062ac:	e853 3f00 	ldrex	r3, [r3]
 80062b0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80062b4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80062b8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80062bc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	3314      	adds	r3, #20
 80062c6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80062ca:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80062ce:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80062d2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80062d6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80062da:	e841 2300 	strex	r3, r2, [r1]
 80062de:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80062e2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80062e6:	2b00      	cmp	r3, #0
 80062e8:	d1d9      	bne.n	800629e <HAL_UART_IRQHandler+0x18e>
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80062ee:	2b00      	cmp	r3, #0
 80062f0:	d013      	beq.n	800631a <HAL_UART_IRQHandler+0x20a>
 80062f2:	687b      	ldr	r3, [r7, #4]
 80062f4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80062f6:	4a8a      	ldr	r2, [pc, #552]	@ (8006520 <HAL_UART_IRQHandler+0x410>)
 80062f8:	651a      	str	r2, [r3, #80]	@ 0x50
 80062fa:	687b      	ldr	r3, [r7, #4]
 80062fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80062fe:	4618      	mov	r0, r3
 8006300:	f7fc fb4e 	bl	80029a0 <HAL_DMA_Abort_IT>
 8006304:	4603      	mov	r3, r0
 8006306:	2b00      	cmp	r3, #0
 8006308:	d016      	beq.n	8006338 <HAL_UART_IRQHandler+0x228>
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800630e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006310:	687a      	ldr	r2, [r7, #4]
 8006312:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8006314:	4610      	mov	r0, r2
 8006316:	4798      	blx	r3
 8006318:	e00e      	b.n	8006338 <HAL_UART_IRQHandler+0x228>
 800631a:	6878      	ldr	r0, [r7, #4]
 800631c:	f000 f9a2 	bl	8006664 <HAL_UART_ErrorCallback>
 8006320:	e00a      	b.n	8006338 <HAL_UART_IRQHandler+0x228>
 8006322:	6878      	ldr	r0, [r7, #4]
 8006324:	f000 f99e 	bl	8006664 <HAL_UART_ErrorCallback>
 8006328:	e006      	b.n	8006338 <HAL_UART_IRQHandler+0x228>
 800632a:	6878      	ldr	r0, [r7, #4]
 800632c:	f000 f99a 	bl	8006664 <HAL_UART_ErrorCallback>
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	2200      	movs	r2, #0
 8006334:	645a      	str	r2, [r3, #68]	@ 0x44
 8006336:	e18d      	b.n	8006654 <HAL_UART_IRQHandler+0x544>
 8006338:	bf00      	nop
 800633a:	e18b      	b.n	8006654 <HAL_UART_IRQHandler+0x544>
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006340:	2b01      	cmp	r3, #1
 8006342:	f040 8167 	bne.w	8006614 <HAL_UART_IRQHandler+0x504>
 8006346:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800634a:	f003 0310 	and.w	r3, r3, #16
 800634e:	2b00      	cmp	r3, #0
 8006350:	f000 8160 	beq.w	8006614 <HAL_UART_IRQHandler+0x504>
 8006354:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006358:	f003 0310 	and.w	r3, r3, #16
 800635c:	2b00      	cmp	r3, #0
 800635e:	f000 8159 	beq.w	8006614 <HAL_UART_IRQHandler+0x504>
 8006362:	2300      	movs	r3, #0
 8006364:	60bb      	str	r3, [r7, #8]
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	681b      	ldr	r3, [r3, #0]
 800636a:	681b      	ldr	r3, [r3, #0]
 800636c:	60bb      	str	r3, [r7, #8]
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	685b      	ldr	r3, [r3, #4]
 8006374:	60bb      	str	r3, [r7, #8]
 8006376:	68bb      	ldr	r3, [r7, #8]
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	681b      	ldr	r3, [r3, #0]
 800637c:	695b      	ldr	r3, [r3, #20]
 800637e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006382:	2b40      	cmp	r3, #64	@ 0x40
 8006384:	f040 80ce 	bne.w	8006524 <HAL_UART_IRQHandler+0x414>
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800638c:	681b      	ldr	r3, [r3, #0]
 800638e:	685b      	ldr	r3, [r3, #4]
 8006390:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8006394:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8006398:	2b00      	cmp	r3, #0
 800639a:	f000 80a9 	beq.w	80064f0 <HAL_UART_IRQHandler+0x3e0>
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80063a2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80063a6:	429a      	cmp	r2, r3
 80063a8:	f080 80a2 	bcs.w	80064f0 <HAL_UART_IRQHandler+0x3e0>
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80063b2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80063b8:	69db      	ldr	r3, [r3, #28]
 80063ba:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80063be:	f000 8088 	beq.w	80064d2 <HAL_UART_IRQHandler+0x3c2>
 80063c2:	687b      	ldr	r3, [r7, #4]
 80063c4:	681b      	ldr	r3, [r3, #0]
 80063c6:	330c      	adds	r3, #12
 80063c8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80063cc:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80063d0:	e853 3f00 	ldrex	r3, [r3]
 80063d4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80063d8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80063dc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80063e0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	681b      	ldr	r3, [r3, #0]
 80063e8:	330c      	adds	r3, #12
 80063ea:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80063ee:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80063f2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80063f6:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80063fa:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80063fe:	e841 2300 	strex	r3, r2, [r1]
 8006402:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8006406:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800640a:	2b00      	cmp	r3, #0
 800640c:	d1d9      	bne.n	80063c2 <HAL_UART_IRQHandler+0x2b2>
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	681b      	ldr	r3, [r3, #0]
 8006412:	3314      	adds	r3, #20
 8006414:	677b      	str	r3, [r7, #116]	@ 0x74
 8006416:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8006418:	e853 3f00 	ldrex	r3, [r3]
 800641c:	673b      	str	r3, [r7, #112]	@ 0x70
 800641e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006420:	f023 0301 	bic.w	r3, r3, #1
 8006424:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006428:	687b      	ldr	r3, [r7, #4]
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	3314      	adds	r3, #20
 800642e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8006432:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8006436:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8006438:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800643a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800643e:	e841 2300 	strex	r3, r2, [r1]
 8006442:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006444:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8006446:	2b00      	cmp	r3, #0
 8006448:	d1e1      	bne.n	800640e <HAL_UART_IRQHandler+0x2fe>
 800644a:	687b      	ldr	r3, [r7, #4]
 800644c:	681b      	ldr	r3, [r3, #0]
 800644e:	3314      	adds	r3, #20
 8006450:	663b      	str	r3, [r7, #96]	@ 0x60
 8006452:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8006454:	e853 3f00 	ldrex	r3, [r3]
 8006458:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800645a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800645c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006460:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	681b      	ldr	r3, [r3, #0]
 8006468:	3314      	adds	r3, #20
 800646a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800646e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8006470:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006472:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8006474:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8006476:	e841 2300 	strex	r3, r2, [r1]
 800647a:	667b      	str	r3, [r7, #100]	@ 0x64
 800647c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800647e:	2b00      	cmp	r3, #0
 8006480:	d1e3      	bne.n	800644a <HAL_UART_IRQHandler+0x33a>
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	2220      	movs	r2, #32
 8006486:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800648a:	687b      	ldr	r3, [r7, #4]
 800648c:	2200      	movs	r2, #0
 800648e:	631a      	str	r2, [r3, #48]	@ 0x30
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	330c      	adds	r3, #12
 8006496:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006498:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800649a:	e853 3f00 	ldrex	r3, [r3]
 800649e:	64bb      	str	r3, [r7, #72]	@ 0x48
 80064a0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80064a2:	f023 0310 	bic.w	r3, r3, #16
 80064a6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	681b      	ldr	r3, [r3, #0]
 80064ae:	330c      	adds	r3, #12
 80064b0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80064b4:	65ba      	str	r2, [r7, #88]	@ 0x58
 80064b6:	657b      	str	r3, [r7, #84]	@ 0x54
 80064b8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80064ba:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80064bc:	e841 2300 	strex	r3, r2, [r1]
 80064c0:	653b      	str	r3, [r7, #80]	@ 0x50
 80064c2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80064c4:	2b00      	cmp	r3, #0
 80064c6:	d1e3      	bne.n	8006490 <HAL_UART_IRQHandler+0x380>
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80064cc:	4618      	mov	r0, r3
 80064ce:	f7fc f9f7 	bl	80028c0 <HAL_DMA_Abort>
 80064d2:	687b      	ldr	r3, [r7, #4]
 80064d4:	2202      	movs	r2, #2
 80064d6:	635a      	str	r2, [r3, #52]	@ 0x34
 80064d8:	687b      	ldr	r3, [r7, #4]
 80064da:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80064dc:	687b      	ldr	r3, [r7, #4]
 80064de:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80064e0:	b29b      	uxth	r3, r3
 80064e2:	1ad3      	subs	r3, r2, r3
 80064e4:	b29b      	uxth	r3, r3
 80064e6:	4619      	mov	r1, r3
 80064e8:	6878      	ldr	r0, [r7, #4]
 80064ea:	f000 f8c5 	bl	8006678 <HAL_UARTEx_RxEventCallback>
 80064ee:	e0b3      	b.n	8006658 <HAL_UART_IRQHandler+0x548>
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80064f4:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80064f8:	429a      	cmp	r2, r3
 80064fa:	f040 80ad 	bne.w	8006658 <HAL_UART_IRQHandler+0x548>
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006502:	69db      	ldr	r3, [r3, #28]
 8006504:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006508:	f040 80a6 	bne.w	8006658 <HAL_UART_IRQHandler+0x548>
 800650c:	687b      	ldr	r3, [r7, #4]
 800650e:	2202      	movs	r2, #2
 8006510:	635a      	str	r2, [r3, #52]	@ 0x34
 8006512:	687b      	ldr	r3, [r7, #4]
 8006514:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006516:	4619      	mov	r1, r3
 8006518:	6878      	ldr	r0, [r7, #4]
 800651a:	f000 f8ad 	bl	8006678 <HAL_UARTEx_RxEventCallback>
 800651e:	e09b      	b.n	8006658 <HAL_UART_IRQHandler+0x548>
 8006520:	0800687d 	.word	0x0800687d
 8006524:	687b      	ldr	r3, [r7, #4]
 8006526:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8006528:	687b      	ldr	r3, [r7, #4]
 800652a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800652c:	b29b      	uxth	r3, r3
 800652e:	1ad3      	subs	r3, r2, r3
 8006530:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8006534:	687b      	ldr	r3, [r7, #4]
 8006536:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006538:	b29b      	uxth	r3, r3
 800653a:	2b00      	cmp	r3, #0
 800653c:	f000 808e 	beq.w	800665c <HAL_UART_IRQHandler+0x54c>
 8006540:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006544:	2b00      	cmp	r3, #0
 8006546:	f000 8089 	beq.w	800665c <HAL_UART_IRQHandler+0x54c>
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	681b      	ldr	r3, [r3, #0]
 800654e:	330c      	adds	r3, #12
 8006550:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006552:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006554:	e853 3f00 	ldrex	r3, [r3]
 8006558:	637b      	str	r3, [r7, #52]	@ 0x34
 800655a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800655c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006560:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006564:	687b      	ldr	r3, [r7, #4]
 8006566:	681b      	ldr	r3, [r3, #0]
 8006568:	330c      	adds	r3, #12
 800656a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 800656e:	647a      	str	r2, [r7, #68]	@ 0x44
 8006570:	643b      	str	r3, [r7, #64]	@ 0x40
 8006572:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006574:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006576:	e841 2300 	strex	r3, r2, [r1]
 800657a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800657c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800657e:	2b00      	cmp	r3, #0
 8006580:	d1e3      	bne.n	800654a <HAL_UART_IRQHandler+0x43a>
 8006582:	687b      	ldr	r3, [r7, #4]
 8006584:	681b      	ldr	r3, [r3, #0]
 8006586:	3314      	adds	r3, #20
 8006588:	627b      	str	r3, [r7, #36]	@ 0x24
 800658a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800658c:	e853 3f00 	ldrex	r3, [r3]
 8006590:	623b      	str	r3, [r7, #32]
 8006592:	6a3b      	ldr	r3, [r7, #32]
 8006594:	f023 0301 	bic.w	r3, r3, #1
 8006598:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	3314      	adds	r3, #20
 80065a2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80065a6:	633a      	str	r2, [r7, #48]	@ 0x30
 80065a8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80065aa:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80065ac:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80065ae:	e841 2300 	strex	r3, r2, [r1]
 80065b2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80065b4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	d1e3      	bne.n	8006582 <HAL_UART_IRQHandler+0x472>
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	2220      	movs	r2, #32
 80065be:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80065c2:	687b      	ldr	r3, [r7, #4]
 80065c4:	2200      	movs	r2, #0
 80065c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80065c8:	687b      	ldr	r3, [r7, #4]
 80065ca:	681b      	ldr	r3, [r3, #0]
 80065cc:	330c      	adds	r3, #12
 80065ce:	613b      	str	r3, [r7, #16]
 80065d0:	693b      	ldr	r3, [r7, #16]
 80065d2:	e853 3f00 	ldrex	r3, [r3]
 80065d6:	60fb      	str	r3, [r7, #12]
 80065d8:	68fb      	ldr	r3, [r7, #12]
 80065da:	f023 0310 	bic.w	r3, r3, #16
 80065de:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80065e2:	687b      	ldr	r3, [r7, #4]
 80065e4:	681b      	ldr	r3, [r3, #0]
 80065e6:	330c      	adds	r3, #12
 80065e8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80065ec:	61fa      	str	r2, [r7, #28]
 80065ee:	61bb      	str	r3, [r7, #24]
 80065f0:	69b9      	ldr	r1, [r7, #24]
 80065f2:	69fa      	ldr	r2, [r7, #28]
 80065f4:	e841 2300 	strex	r3, r2, [r1]
 80065f8:	617b      	str	r3, [r7, #20]
 80065fa:	697b      	ldr	r3, [r7, #20]
 80065fc:	2b00      	cmp	r3, #0
 80065fe:	d1e3      	bne.n	80065c8 <HAL_UART_IRQHandler+0x4b8>
 8006600:	687b      	ldr	r3, [r7, #4]
 8006602:	2202      	movs	r2, #2
 8006604:	635a      	str	r2, [r3, #52]	@ 0x34
 8006606:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800660a:	4619      	mov	r1, r3
 800660c:	6878      	ldr	r0, [r7, #4]
 800660e:	f000 f833 	bl	8006678 <HAL_UARTEx_RxEventCallback>
 8006612:	e023      	b.n	800665c <HAL_UART_IRQHandler+0x54c>
 8006614:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006618:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800661c:	2b00      	cmp	r3, #0
 800661e:	d009      	beq.n	8006634 <HAL_UART_IRQHandler+0x524>
 8006620:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006624:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006628:	2b00      	cmp	r3, #0
 800662a:	d003      	beq.n	8006634 <HAL_UART_IRQHandler+0x524>
 800662c:	6878      	ldr	r0, [r7, #4]
 800662e:	f000 f936 	bl	800689e <UART_Transmit_IT>
 8006632:	e014      	b.n	800665e <HAL_UART_IRQHandler+0x54e>
 8006634:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006638:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800663c:	2b00      	cmp	r3, #0
 800663e:	d00e      	beq.n	800665e <HAL_UART_IRQHandler+0x54e>
 8006640:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006644:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006648:	2b00      	cmp	r3, #0
 800664a:	d008      	beq.n	800665e <HAL_UART_IRQHandler+0x54e>
 800664c:	6878      	ldr	r0, [r7, #4]
 800664e:	f000 f976 	bl	800693e <UART_EndTransmit_IT>
 8006652:	e004      	b.n	800665e <HAL_UART_IRQHandler+0x54e>
 8006654:	bf00      	nop
 8006656:	e002      	b.n	800665e <HAL_UART_IRQHandler+0x54e>
 8006658:	bf00      	nop
 800665a:	e000      	b.n	800665e <HAL_UART_IRQHandler+0x54e>
 800665c:	bf00      	nop
 800665e:	37e8      	adds	r7, #232	@ 0xe8
 8006660:	46bd      	mov	sp, r7
 8006662:	bd80      	pop	{r7, pc}

08006664 <HAL_UART_ErrorCallback>:
 8006664:	b480      	push	{r7}
 8006666:	b083      	sub	sp, #12
 8006668:	af00      	add	r7, sp, #0
 800666a:	6078      	str	r0, [r7, #4]
 800666c:	bf00      	nop
 800666e:	370c      	adds	r7, #12
 8006670:	46bd      	mov	sp, r7
 8006672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006676:	4770      	bx	lr

08006678 <HAL_UARTEx_RxEventCallback>:
 8006678:	b480      	push	{r7}
 800667a:	b083      	sub	sp, #12
 800667c:	af00      	add	r7, sp, #0
 800667e:	6078      	str	r0, [r7, #4]
 8006680:	460b      	mov	r3, r1
 8006682:	807b      	strh	r3, [r7, #2]
 8006684:	bf00      	nop
 8006686:	370c      	adds	r7, #12
 8006688:	46bd      	mov	sp, r7
 800668a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800668e:	4770      	bx	lr

08006690 <UART_WaitOnFlagUntilTimeout>:
 8006690:	b580      	push	{r7, lr}
 8006692:	b086      	sub	sp, #24
 8006694:	af00      	add	r7, sp, #0
 8006696:	60f8      	str	r0, [r7, #12]
 8006698:	60b9      	str	r1, [r7, #8]
 800669a:	603b      	str	r3, [r7, #0]
 800669c:	4613      	mov	r3, r2
 800669e:	71fb      	strb	r3, [r7, #7]
 80066a0:	e03b      	b.n	800671a <UART_WaitOnFlagUntilTimeout+0x8a>
 80066a2:	6a3b      	ldr	r3, [r7, #32]
 80066a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80066a8:	d037      	beq.n	800671a <UART_WaitOnFlagUntilTimeout+0x8a>
 80066aa:	f7fa ffdb 	bl	8001664 <HAL_GetTick>
 80066ae:	4602      	mov	r2, r0
 80066b0:	683b      	ldr	r3, [r7, #0]
 80066b2:	1ad3      	subs	r3, r2, r3
 80066b4:	6a3a      	ldr	r2, [r7, #32]
 80066b6:	429a      	cmp	r2, r3
 80066b8:	d302      	bcc.n	80066c0 <UART_WaitOnFlagUntilTimeout+0x30>
 80066ba:	6a3b      	ldr	r3, [r7, #32]
 80066bc:	2b00      	cmp	r3, #0
 80066be:	d101      	bne.n	80066c4 <UART_WaitOnFlagUntilTimeout+0x34>
 80066c0:	2303      	movs	r3, #3
 80066c2:	e03a      	b.n	800673a <UART_WaitOnFlagUntilTimeout+0xaa>
 80066c4:	68fb      	ldr	r3, [r7, #12]
 80066c6:	681b      	ldr	r3, [r3, #0]
 80066c8:	68db      	ldr	r3, [r3, #12]
 80066ca:	f003 0304 	and.w	r3, r3, #4
 80066ce:	2b00      	cmp	r3, #0
 80066d0:	d023      	beq.n	800671a <UART_WaitOnFlagUntilTimeout+0x8a>
 80066d2:	68bb      	ldr	r3, [r7, #8]
 80066d4:	2b80      	cmp	r3, #128	@ 0x80
 80066d6:	d020      	beq.n	800671a <UART_WaitOnFlagUntilTimeout+0x8a>
 80066d8:	68bb      	ldr	r3, [r7, #8]
 80066da:	2b40      	cmp	r3, #64	@ 0x40
 80066dc:	d01d      	beq.n	800671a <UART_WaitOnFlagUntilTimeout+0x8a>
 80066de:	68fb      	ldr	r3, [r7, #12]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	f003 0308 	and.w	r3, r3, #8
 80066e8:	2b08      	cmp	r3, #8
 80066ea:	d116      	bne.n	800671a <UART_WaitOnFlagUntilTimeout+0x8a>
 80066ec:	2300      	movs	r3, #0
 80066ee:	617b      	str	r3, [r7, #20]
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	681b      	ldr	r3, [r3, #0]
 80066f4:	681b      	ldr	r3, [r3, #0]
 80066f6:	617b      	str	r3, [r7, #20]
 80066f8:	68fb      	ldr	r3, [r7, #12]
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	685b      	ldr	r3, [r3, #4]
 80066fe:	617b      	str	r3, [r7, #20]
 8006700:	697b      	ldr	r3, [r7, #20]
 8006702:	68f8      	ldr	r0, [r7, #12]
 8006704:	f000 f857 	bl	80067b6 <UART_EndRxTransfer>
 8006708:	68fb      	ldr	r3, [r7, #12]
 800670a:	2208      	movs	r2, #8
 800670c:	645a      	str	r2, [r3, #68]	@ 0x44
 800670e:	68fb      	ldr	r3, [r7, #12]
 8006710:	2200      	movs	r2, #0
 8006712:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006716:	2301      	movs	r3, #1
 8006718:	e00f      	b.n	800673a <UART_WaitOnFlagUntilTimeout+0xaa>
 800671a:	68fb      	ldr	r3, [r7, #12]
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	681a      	ldr	r2, [r3, #0]
 8006720:	68bb      	ldr	r3, [r7, #8]
 8006722:	4013      	ands	r3, r2
 8006724:	68ba      	ldr	r2, [r7, #8]
 8006726:	429a      	cmp	r2, r3
 8006728:	bf0c      	ite	eq
 800672a:	2301      	moveq	r3, #1
 800672c:	2300      	movne	r3, #0
 800672e:	b2db      	uxtb	r3, r3
 8006730:	461a      	mov	r2, r3
 8006732:	79fb      	ldrb	r3, [r7, #7]
 8006734:	429a      	cmp	r2, r3
 8006736:	d0b4      	beq.n	80066a2 <UART_WaitOnFlagUntilTimeout+0x12>
 8006738:	2300      	movs	r3, #0
 800673a:	4618      	mov	r0, r3
 800673c:	3718      	adds	r7, #24
 800673e:	46bd      	mov	sp, r7
 8006740:	bd80      	pop	{r7, pc}

08006742 <UART_Start_Receive_IT>:
 8006742:	b480      	push	{r7}
 8006744:	b085      	sub	sp, #20
 8006746:	af00      	add	r7, sp, #0
 8006748:	60f8      	str	r0, [r7, #12]
 800674a:	60b9      	str	r1, [r7, #8]
 800674c:	4613      	mov	r3, r2
 800674e:	80fb      	strh	r3, [r7, #6]
 8006750:	68fb      	ldr	r3, [r7, #12]
 8006752:	68ba      	ldr	r2, [r7, #8]
 8006754:	629a      	str	r2, [r3, #40]	@ 0x28
 8006756:	68fb      	ldr	r3, [r7, #12]
 8006758:	88fa      	ldrh	r2, [r7, #6]
 800675a:	859a      	strh	r2, [r3, #44]	@ 0x2c
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	88fa      	ldrh	r2, [r7, #6]
 8006760:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006762:	68fb      	ldr	r3, [r7, #12]
 8006764:	2200      	movs	r2, #0
 8006766:	645a      	str	r2, [r3, #68]	@ 0x44
 8006768:	68fb      	ldr	r3, [r7, #12]
 800676a:	2222      	movs	r2, #34	@ 0x22
 800676c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006770:	68fb      	ldr	r3, [r7, #12]
 8006772:	691b      	ldr	r3, [r3, #16]
 8006774:	2b00      	cmp	r3, #0
 8006776:	d007      	beq.n	8006788 <UART_Start_Receive_IT+0x46>
 8006778:	68fb      	ldr	r3, [r7, #12]
 800677a:	681b      	ldr	r3, [r3, #0]
 800677c:	68da      	ldr	r2, [r3, #12]
 800677e:	68fb      	ldr	r3, [r7, #12]
 8006780:	681b      	ldr	r3, [r3, #0]
 8006782:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8006786:	60da      	str	r2, [r3, #12]
 8006788:	68fb      	ldr	r3, [r7, #12]
 800678a:	681b      	ldr	r3, [r3, #0]
 800678c:	695a      	ldr	r2, [r3, #20]
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	681b      	ldr	r3, [r3, #0]
 8006792:	f042 0201 	orr.w	r2, r2, #1
 8006796:	615a      	str	r2, [r3, #20]
 8006798:	68fb      	ldr	r3, [r7, #12]
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	68da      	ldr	r2, [r3, #12]
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	681b      	ldr	r3, [r3, #0]
 80067a2:	f042 0220 	orr.w	r2, r2, #32
 80067a6:	60da      	str	r2, [r3, #12]
 80067a8:	2300      	movs	r3, #0
 80067aa:	4618      	mov	r0, r3
 80067ac:	3714      	adds	r7, #20
 80067ae:	46bd      	mov	sp, r7
 80067b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067b4:	4770      	bx	lr

080067b6 <UART_EndRxTransfer>:
 80067b6:	b480      	push	{r7}
 80067b8:	b095      	sub	sp, #84	@ 0x54
 80067ba:	af00      	add	r7, sp, #0
 80067bc:	6078      	str	r0, [r7, #4]
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	681b      	ldr	r3, [r3, #0]
 80067c2:	330c      	adds	r3, #12
 80067c4:	637b      	str	r3, [r7, #52]	@ 0x34
 80067c6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80067c8:	e853 3f00 	ldrex	r3, [r3]
 80067cc:	633b      	str	r3, [r7, #48]	@ 0x30
 80067ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80067d0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80067d4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	681b      	ldr	r3, [r3, #0]
 80067da:	330c      	adds	r3, #12
 80067dc:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80067de:	643a      	str	r2, [r7, #64]	@ 0x40
 80067e0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80067e2:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80067e4:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80067e6:	e841 2300 	strex	r3, r2, [r1]
 80067ea:	63bb      	str	r3, [r7, #56]	@ 0x38
 80067ec:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80067ee:	2b00      	cmp	r3, #0
 80067f0:	d1e5      	bne.n	80067be <UART_EndRxTransfer+0x8>
 80067f2:	687b      	ldr	r3, [r7, #4]
 80067f4:	681b      	ldr	r3, [r3, #0]
 80067f6:	3314      	adds	r3, #20
 80067f8:	623b      	str	r3, [r7, #32]
 80067fa:	6a3b      	ldr	r3, [r7, #32]
 80067fc:	e853 3f00 	ldrex	r3, [r3]
 8006800:	61fb      	str	r3, [r7, #28]
 8006802:	69fb      	ldr	r3, [r7, #28]
 8006804:	f023 0301 	bic.w	r3, r3, #1
 8006808:	64bb      	str	r3, [r7, #72]	@ 0x48
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	681b      	ldr	r3, [r3, #0]
 800680e:	3314      	adds	r3, #20
 8006810:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8006812:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006814:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006816:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8006818:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800681a:	e841 2300 	strex	r3, r2, [r1]
 800681e:	627b      	str	r3, [r7, #36]	@ 0x24
 8006820:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006822:	2b00      	cmp	r3, #0
 8006824:	d1e5      	bne.n	80067f2 <UART_EndRxTransfer+0x3c>
 8006826:	687b      	ldr	r3, [r7, #4]
 8006828:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800682a:	2b01      	cmp	r3, #1
 800682c:	d119      	bne.n	8006862 <UART_EndRxTransfer+0xac>
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	330c      	adds	r3, #12
 8006834:	60fb      	str	r3, [r7, #12]
 8006836:	68fb      	ldr	r3, [r7, #12]
 8006838:	e853 3f00 	ldrex	r3, [r3]
 800683c:	60bb      	str	r3, [r7, #8]
 800683e:	68bb      	ldr	r3, [r7, #8]
 8006840:	f023 0310 	bic.w	r3, r3, #16
 8006844:	647b      	str	r3, [r7, #68]	@ 0x44
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	681b      	ldr	r3, [r3, #0]
 800684a:	330c      	adds	r3, #12
 800684c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800684e:	61ba      	str	r2, [r7, #24]
 8006850:	617b      	str	r3, [r7, #20]
 8006852:	6979      	ldr	r1, [r7, #20]
 8006854:	69ba      	ldr	r2, [r7, #24]
 8006856:	e841 2300 	strex	r3, r2, [r1]
 800685a:	613b      	str	r3, [r7, #16]
 800685c:	693b      	ldr	r3, [r7, #16]
 800685e:	2b00      	cmp	r3, #0
 8006860:	d1e5      	bne.n	800682e <UART_EndRxTransfer+0x78>
 8006862:	687b      	ldr	r3, [r7, #4]
 8006864:	2220      	movs	r2, #32
 8006866:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800686a:	687b      	ldr	r3, [r7, #4]
 800686c:	2200      	movs	r2, #0
 800686e:	631a      	str	r2, [r3, #48]	@ 0x30
 8006870:	bf00      	nop
 8006872:	3754      	adds	r7, #84	@ 0x54
 8006874:	46bd      	mov	sp, r7
 8006876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800687a:	4770      	bx	lr

0800687c <UART_DMAAbortOnError>:
 800687c:	b580      	push	{r7, lr}
 800687e:	b084      	sub	sp, #16
 8006880:	af00      	add	r7, sp, #0
 8006882:	6078      	str	r0, [r7, #4]
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006888:	60fb      	str	r3, [r7, #12]
 800688a:	68fb      	ldr	r3, [r7, #12]
 800688c:	2200      	movs	r2, #0
 800688e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006890:	68f8      	ldr	r0, [r7, #12]
 8006892:	f7ff fee7 	bl	8006664 <HAL_UART_ErrorCallback>
 8006896:	bf00      	nop
 8006898:	3710      	adds	r7, #16
 800689a:	46bd      	mov	sp, r7
 800689c:	bd80      	pop	{r7, pc}

0800689e <UART_Transmit_IT>:
 800689e:	b480      	push	{r7}
 80068a0:	b085      	sub	sp, #20
 80068a2:	af00      	add	r7, sp, #0
 80068a4:	6078      	str	r0, [r7, #4]
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80068ac:	b2db      	uxtb	r3, r3
 80068ae:	2b21      	cmp	r3, #33	@ 0x21
 80068b0:	d13e      	bne.n	8006930 <UART_Transmit_IT+0x92>
 80068b2:	687b      	ldr	r3, [r7, #4]
 80068b4:	689b      	ldr	r3, [r3, #8]
 80068b6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80068ba:	d114      	bne.n	80068e6 <UART_Transmit_IT+0x48>
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	691b      	ldr	r3, [r3, #16]
 80068c0:	2b00      	cmp	r3, #0
 80068c2:	d110      	bne.n	80068e6 <UART_Transmit_IT+0x48>
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	6a1b      	ldr	r3, [r3, #32]
 80068c8:	60fb      	str	r3, [r7, #12]
 80068ca:	68fb      	ldr	r3, [r7, #12]
 80068cc:	881b      	ldrh	r3, [r3, #0]
 80068ce:	461a      	mov	r2, r3
 80068d0:	687b      	ldr	r3, [r7, #4]
 80068d2:	681b      	ldr	r3, [r3, #0]
 80068d4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80068d8:	605a      	str	r2, [r3, #4]
 80068da:	687b      	ldr	r3, [r7, #4]
 80068dc:	6a1b      	ldr	r3, [r3, #32]
 80068de:	1c9a      	adds	r2, r3, #2
 80068e0:	687b      	ldr	r3, [r7, #4]
 80068e2:	621a      	str	r2, [r3, #32]
 80068e4:	e008      	b.n	80068f8 <UART_Transmit_IT+0x5a>
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	6a1b      	ldr	r3, [r3, #32]
 80068ea:	1c59      	adds	r1, r3, #1
 80068ec:	687a      	ldr	r2, [r7, #4]
 80068ee:	6211      	str	r1, [r2, #32]
 80068f0:	781a      	ldrb	r2, [r3, #0]
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	681b      	ldr	r3, [r3, #0]
 80068f6:	605a      	str	r2, [r3, #4]
 80068f8:	687b      	ldr	r3, [r7, #4]
 80068fa:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80068fc:	b29b      	uxth	r3, r3
 80068fe:	3b01      	subs	r3, #1
 8006900:	b29b      	uxth	r3, r3
 8006902:	687a      	ldr	r2, [r7, #4]
 8006904:	4619      	mov	r1, r3
 8006906:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8006908:	2b00      	cmp	r3, #0
 800690a:	d10f      	bne.n	800692c <UART_Transmit_IT+0x8e>
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	681b      	ldr	r3, [r3, #0]
 8006910:	68da      	ldr	r2, [r3, #12]
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800691a:	60da      	str	r2, [r3, #12]
 800691c:	687b      	ldr	r3, [r7, #4]
 800691e:	681b      	ldr	r3, [r3, #0]
 8006920:	68da      	ldr	r2, [r3, #12]
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800692a:	60da      	str	r2, [r3, #12]
 800692c:	2300      	movs	r3, #0
 800692e:	e000      	b.n	8006932 <UART_Transmit_IT+0x94>
 8006930:	2302      	movs	r3, #2
 8006932:	4618      	mov	r0, r3
 8006934:	3714      	adds	r7, #20
 8006936:	46bd      	mov	sp, r7
 8006938:	f85d 7b04 	ldr.w	r7, [sp], #4
 800693c:	4770      	bx	lr

0800693e <UART_EndTransmit_IT>:
 800693e:	b580      	push	{r7, lr}
 8006940:	b082      	sub	sp, #8
 8006942:	af00      	add	r7, sp, #0
 8006944:	6078      	str	r0, [r7, #4]
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	681b      	ldr	r3, [r3, #0]
 800694a:	68da      	ldr	r2, [r3, #12]
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	681b      	ldr	r3, [r3, #0]
 8006950:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006954:	60da      	str	r2, [r3, #12]
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	2220      	movs	r2, #32
 800695a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800695e:	6878      	ldr	r0, [r7, #4]
 8006960:	f002 f944 	bl	8008bec <HAL_UART_TxCpltCallback>
 8006964:	2300      	movs	r3, #0
 8006966:	4618      	mov	r0, r3
 8006968:	3708      	adds	r7, #8
 800696a:	46bd      	mov	sp, r7
 800696c:	bd80      	pop	{r7, pc}

0800696e <UART_Receive_IT>:
 800696e:	b580      	push	{r7, lr}
 8006970:	b08c      	sub	sp, #48	@ 0x30
 8006972:	af00      	add	r7, sp, #0
 8006974:	6078      	str	r0, [r7, #4]
 8006976:	2300      	movs	r3, #0
 8006978:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800697a:	2300      	movs	r3, #0
 800697c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800697e:	687b      	ldr	r3, [r7, #4]
 8006980:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006984:	b2db      	uxtb	r3, r3
 8006986:	2b22      	cmp	r3, #34	@ 0x22
 8006988:	f040 80aa 	bne.w	8006ae0 <UART_Receive_IT+0x172>
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	689b      	ldr	r3, [r3, #8]
 8006990:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006994:	d115      	bne.n	80069c2 <UART_Receive_IT+0x54>
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	691b      	ldr	r3, [r3, #16]
 800699a:	2b00      	cmp	r3, #0
 800699c:	d111      	bne.n	80069c2 <UART_Receive_IT+0x54>
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80069a2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	681b      	ldr	r3, [r3, #0]
 80069a8:	685b      	ldr	r3, [r3, #4]
 80069aa:	b29b      	uxth	r3, r3
 80069ac:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80069b0:	b29a      	uxth	r2, r3
 80069b2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80069b4:	801a      	strh	r2, [r3, #0]
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80069ba:	1c9a      	adds	r2, r3, #2
 80069bc:	687b      	ldr	r3, [r7, #4]
 80069be:	629a      	str	r2, [r3, #40]	@ 0x28
 80069c0:	e024      	b.n	8006a0c <UART_Receive_IT+0x9e>
 80069c2:	687b      	ldr	r3, [r7, #4]
 80069c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80069c6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	689b      	ldr	r3, [r3, #8]
 80069cc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80069d0:	d007      	beq.n	80069e2 <UART_Receive_IT+0x74>
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	689b      	ldr	r3, [r3, #8]
 80069d6:	2b00      	cmp	r3, #0
 80069d8:	d10a      	bne.n	80069f0 <UART_Receive_IT+0x82>
 80069da:	687b      	ldr	r3, [r7, #4]
 80069dc:	691b      	ldr	r3, [r3, #16]
 80069de:	2b00      	cmp	r3, #0
 80069e0:	d106      	bne.n	80069f0 <UART_Receive_IT+0x82>
 80069e2:	687b      	ldr	r3, [r7, #4]
 80069e4:	681b      	ldr	r3, [r3, #0]
 80069e6:	685b      	ldr	r3, [r3, #4]
 80069e8:	b2da      	uxtb	r2, r3
 80069ea:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80069ec:	701a      	strb	r2, [r3, #0]
 80069ee:	e008      	b.n	8006a02 <UART_Receive_IT+0x94>
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	685b      	ldr	r3, [r3, #4]
 80069f6:	b2db      	uxtb	r3, r3
 80069f8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80069fc:	b2da      	uxtb	r2, r3
 80069fe:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006a00:	701a      	strb	r2, [r3, #0]
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006a06:	1c5a      	adds	r2, r3, #1
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	629a      	str	r2, [r3, #40]	@ 0x28
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006a10:	b29b      	uxth	r3, r3
 8006a12:	3b01      	subs	r3, #1
 8006a14:	b29b      	uxth	r3, r3
 8006a16:	687a      	ldr	r2, [r7, #4]
 8006a18:	4619      	mov	r1, r3
 8006a1a:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8006a1c:	2b00      	cmp	r3, #0
 8006a1e:	d15d      	bne.n	8006adc <UART_Receive_IT+0x16e>
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	681b      	ldr	r3, [r3, #0]
 8006a24:	68da      	ldr	r2, [r3, #12]
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	681b      	ldr	r3, [r3, #0]
 8006a2a:	f022 0220 	bic.w	r2, r2, #32
 8006a2e:	60da      	str	r2, [r3, #12]
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	681b      	ldr	r3, [r3, #0]
 8006a34:	68da      	ldr	r2, [r3, #12]
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	681b      	ldr	r3, [r3, #0]
 8006a3a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8006a3e:	60da      	str	r2, [r3, #12]
 8006a40:	687b      	ldr	r3, [r7, #4]
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	695a      	ldr	r2, [r3, #20]
 8006a46:	687b      	ldr	r3, [r7, #4]
 8006a48:	681b      	ldr	r3, [r3, #0]
 8006a4a:	f022 0201 	bic.w	r2, r2, #1
 8006a4e:	615a      	str	r2, [r3, #20]
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	2220      	movs	r2, #32
 8006a54:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	2200      	movs	r2, #0
 8006a5c:	635a      	str	r2, [r3, #52]	@ 0x34
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006a62:	2b01      	cmp	r3, #1
 8006a64:	d135      	bne.n	8006ad2 <UART_Receive_IT+0x164>
 8006a66:	687b      	ldr	r3, [r7, #4]
 8006a68:	2200      	movs	r2, #0
 8006a6a:	631a      	str	r2, [r3, #48]	@ 0x30
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	681b      	ldr	r3, [r3, #0]
 8006a70:	330c      	adds	r3, #12
 8006a72:	617b      	str	r3, [r7, #20]
 8006a74:	697b      	ldr	r3, [r7, #20]
 8006a76:	e853 3f00 	ldrex	r3, [r3]
 8006a7a:	613b      	str	r3, [r7, #16]
 8006a7c:	693b      	ldr	r3, [r7, #16]
 8006a7e:	f023 0310 	bic.w	r3, r3, #16
 8006a82:	627b      	str	r3, [r7, #36]	@ 0x24
 8006a84:	687b      	ldr	r3, [r7, #4]
 8006a86:	681b      	ldr	r3, [r3, #0]
 8006a88:	330c      	adds	r3, #12
 8006a8a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006a8c:	623a      	str	r2, [r7, #32]
 8006a8e:	61fb      	str	r3, [r7, #28]
 8006a90:	69f9      	ldr	r1, [r7, #28]
 8006a92:	6a3a      	ldr	r2, [r7, #32]
 8006a94:	e841 2300 	strex	r3, r2, [r1]
 8006a98:	61bb      	str	r3, [r7, #24]
 8006a9a:	69bb      	ldr	r3, [r7, #24]
 8006a9c:	2b00      	cmp	r3, #0
 8006a9e:	d1e5      	bne.n	8006a6c <UART_Receive_IT+0xfe>
 8006aa0:	687b      	ldr	r3, [r7, #4]
 8006aa2:	681b      	ldr	r3, [r3, #0]
 8006aa4:	681b      	ldr	r3, [r3, #0]
 8006aa6:	f003 0310 	and.w	r3, r3, #16
 8006aaa:	2b10      	cmp	r3, #16
 8006aac:	d10a      	bne.n	8006ac4 <UART_Receive_IT+0x156>
 8006aae:	2300      	movs	r3, #0
 8006ab0:	60fb      	str	r3, [r7, #12]
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	681b      	ldr	r3, [r3, #0]
 8006ab6:	681b      	ldr	r3, [r3, #0]
 8006ab8:	60fb      	str	r3, [r7, #12]
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	681b      	ldr	r3, [r3, #0]
 8006abe:	685b      	ldr	r3, [r3, #4]
 8006ac0:	60fb      	str	r3, [r7, #12]
 8006ac2:	68fb      	ldr	r3, [r7, #12]
 8006ac4:	687b      	ldr	r3, [r7, #4]
 8006ac6:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006ac8:	4619      	mov	r1, r3
 8006aca:	6878      	ldr	r0, [r7, #4]
 8006acc:	f7ff fdd4 	bl	8006678 <HAL_UARTEx_RxEventCallback>
 8006ad0:	e002      	b.n	8006ad8 <UART_Receive_IT+0x16a>
 8006ad2:	6878      	ldr	r0, [r7, #4]
 8006ad4:	f002 f9ce 	bl	8008e74 <HAL_UART_RxCpltCallback>
 8006ad8:	2300      	movs	r3, #0
 8006ada:	e002      	b.n	8006ae2 <UART_Receive_IT+0x174>
 8006adc:	2300      	movs	r3, #0
 8006ade:	e000      	b.n	8006ae2 <UART_Receive_IT+0x174>
 8006ae0:	2302      	movs	r3, #2
 8006ae2:	4618      	mov	r0, r3
 8006ae4:	3730      	adds	r7, #48	@ 0x30
 8006ae6:	46bd      	mov	sp, r7
 8006ae8:	bd80      	pop	{r7, pc}
	...

08006aec <UART_SetConfig>:
 8006aec:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006af0:	b0c0      	sub	sp, #256	@ 0x100
 8006af2:	af00      	add	r7, sp, #0
 8006af4:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8006af8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	691b      	ldr	r3, [r3, #16]
 8006b00:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8006b04:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b08:	68d9      	ldr	r1, [r3, #12]
 8006b0a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b0e:	681a      	ldr	r2, [r3, #0]
 8006b10:	ea40 0301 	orr.w	r3, r0, r1
 8006b14:	6113      	str	r3, [r2, #16]
 8006b16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b1a:	689a      	ldr	r2, [r3, #8]
 8006b1c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b20:	691b      	ldr	r3, [r3, #16]
 8006b22:	431a      	orrs	r2, r3
 8006b24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b28:	695b      	ldr	r3, [r3, #20]
 8006b2a:	431a      	orrs	r2, r3
 8006b2c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b30:	69db      	ldr	r3, [r3, #28]
 8006b32:	4313      	orrs	r3, r2
 8006b34:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8006b38:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b3c:	681b      	ldr	r3, [r3, #0]
 8006b3e:	68db      	ldr	r3, [r3, #12]
 8006b40:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8006b44:	f021 010c 	bic.w	r1, r1, #12
 8006b48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b4c:	681a      	ldr	r2, [r3, #0]
 8006b4e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8006b52:	430b      	orrs	r3, r1
 8006b54:	60d3      	str	r3, [r2, #12]
 8006b56:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b5a:	681b      	ldr	r3, [r3, #0]
 8006b5c:	695b      	ldr	r3, [r3, #20]
 8006b5e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8006b62:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b66:	6999      	ldr	r1, [r3, #24]
 8006b68:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b6c:	681a      	ldr	r2, [r3, #0]
 8006b6e:	ea40 0301 	orr.w	r3, r0, r1
 8006b72:	6153      	str	r3, [r2, #20]
 8006b74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b78:	681a      	ldr	r2, [r3, #0]
 8006b7a:	4b8f      	ldr	r3, [pc, #572]	@ (8006db8 <UART_SetConfig+0x2cc>)
 8006b7c:	429a      	cmp	r2, r3
 8006b7e:	d005      	beq.n	8006b8c <UART_SetConfig+0xa0>
 8006b80:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006b84:	681a      	ldr	r2, [r3, #0]
 8006b86:	4b8d      	ldr	r3, [pc, #564]	@ (8006dbc <UART_SetConfig+0x2d0>)
 8006b88:	429a      	cmp	r2, r3
 8006b8a:	d104      	bne.n	8006b96 <UART_SetConfig+0xaa>
 8006b8c:	f7fe fc4c 	bl	8005428 <HAL_RCC_GetPCLK2Freq>
 8006b90:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8006b94:	e003      	b.n	8006b9e <UART_SetConfig+0xb2>
 8006b96:	f7fe fc33 	bl	8005400 <HAL_RCC_GetPCLK1Freq>
 8006b9a:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8006b9e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006ba2:	69db      	ldr	r3, [r3, #28]
 8006ba4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006ba8:	f040 810c 	bne.w	8006dc4 <UART_SetConfig+0x2d8>
 8006bac:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006bb0:	2200      	movs	r2, #0
 8006bb2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8006bb6:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8006bba:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8006bbe:	4622      	mov	r2, r4
 8006bc0:	462b      	mov	r3, r5
 8006bc2:	1891      	adds	r1, r2, r2
 8006bc4:	65b9      	str	r1, [r7, #88]	@ 0x58
 8006bc6:	415b      	adcs	r3, r3
 8006bc8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006bca:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8006bce:	4621      	mov	r1, r4
 8006bd0:	eb12 0801 	adds.w	r8, r2, r1
 8006bd4:	4629      	mov	r1, r5
 8006bd6:	eb43 0901 	adc.w	r9, r3, r1
 8006bda:	f04f 0200 	mov.w	r2, #0
 8006bde:	f04f 0300 	mov.w	r3, #0
 8006be2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006be6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006bea:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006bee:	4690      	mov	r8, r2
 8006bf0:	4699      	mov	r9, r3
 8006bf2:	4623      	mov	r3, r4
 8006bf4:	eb18 0303 	adds.w	r3, r8, r3
 8006bf8:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8006bfc:	462b      	mov	r3, r5
 8006bfe:	eb49 0303 	adc.w	r3, r9, r3
 8006c02:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8006c06:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006c0a:	685b      	ldr	r3, [r3, #4]
 8006c0c:	2200      	movs	r2, #0
 8006c0e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8006c12:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8006c16:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8006c1a:	460b      	mov	r3, r1
 8006c1c:	18db      	adds	r3, r3, r3
 8006c1e:	653b      	str	r3, [r7, #80]	@ 0x50
 8006c20:	4613      	mov	r3, r2
 8006c22:	eb42 0303 	adc.w	r3, r2, r3
 8006c26:	657b      	str	r3, [r7, #84]	@ 0x54
 8006c28:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8006c2c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8006c30:	f7f9 fb1e 	bl	8000270 <__aeabi_uldivmod>
 8006c34:	4602      	mov	r2, r0
 8006c36:	460b      	mov	r3, r1
 8006c38:	4b61      	ldr	r3, [pc, #388]	@ (8006dc0 <UART_SetConfig+0x2d4>)
 8006c3a:	fba3 2302 	umull	r2, r3, r3, r2
 8006c3e:	095b      	lsrs	r3, r3, #5
 8006c40:	011c      	lsls	r4, r3, #4
 8006c42:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006c46:	2200      	movs	r2, #0
 8006c48:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006c4c:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8006c50:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8006c54:	4642      	mov	r2, r8
 8006c56:	464b      	mov	r3, r9
 8006c58:	1891      	adds	r1, r2, r2
 8006c5a:	64b9      	str	r1, [r7, #72]	@ 0x48
 8006c5c:	415b      	adcs	r3, r3
 8006c5e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006c60:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8006c64:	4641      	mov	r1, r8
 8006c66:	eb12 0a01 	adds.w	sl, r2, r1
 8006c6a:	4649      	mov	r1, r9
 8006c6c:	eb43 0b01 	adc.w	fp, r3, r1
 8006c70:	f04f 0200 	mov.w	r2, #0
 8006c74:	f04f 0300 	mov.w	r3, #0
 8006c78:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006c7c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006c80:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006c84:	4692      	mov	sl, r2
 8006c86:	469b      	mov	fp, r3
 8006c88:	4643      	mov	r3, r8
 8006c8a:	eb1a 0303 	adds.w	r3, sl, r3
 8006c8e:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006c92:	464b      	mov	r3, r9
 8006c94:	eb4b 0303 	adc.w	r3, fp, r3
 8006c98:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8006c9c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006ca0:	685b      	ldr	r3, [r3, #4]
 8006ca2:	2200      	movs	r2, #0
 8006ca4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006ca8:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8006cac:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8006cb0:	460b      	mov	r3, r1
 8006cb2:	18db      	adds	r3, r3, r3
 8006cb4:	643b      	str	r3, [r7, #64]	@ 0x40
 8006cb6:	4613      	mov	r3, r2
 8006cb8:	eb42 0303 	adc.w	r3, r2, r3
 8006cbc:	647b      	str	r3, [r7, #68]	@ 0x44
 8006cbe:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8006cc2:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8006cc6:	f7f9 fad3 	bl	8000270 <__aeabi_uldivmod>
 8006cca:	4602      	mov	r2, r0
 8006ccc:	460b      	mov	r3, r1
 8006cce:	4611      	mov	r1, r2
 8006cd0:	4b3b      	ldr	r3, [pc, #236]	@ (8006dc0 <UART_SetConfig+0x2d4>)
 8006cd2:	fba3 2301 	umull	r2, r3, r3, r1
 8006cd6:	095b      	lsrs	r3, r3, #5
 8006cd8:	2264      	movs	r2, #100	@ 0x64
 8006cda:	fb02 f303 	mul.w	r3, r2, r3
 8006cde:	1acb      	subs	r3, r1, r3
 8006ce0:	00db      	lsls	r3, r3, #3
 8006ce2:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8006ce6:	4b36      	ldr	r3, [pc, #216]	@ (8006dc0 <UART_SetConfig+0x2d4>)
 8006ce8:	fba3 2302 	umull	r2, r3, r3, r2
 8006cec:	095b      	lsrs	r3, r3, #5
 8006cee:	005b      	lsls	r3, r3, #1
 8006cf0:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8006cf4:	441c      	add	r4, r3
 8006cf6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006cfa:	2200      	movs	r2, #0
 8006cfc:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006d00:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8006d04:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8006d08:	4642      	mov	r2, r8
 8006d0a:	464b      	mov	r3, r9
 8006d0c:	1891      	adds	r1, r2, r2
 8006d0e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8006d10:	415b      	adcs	r3, r3
 8006d12:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006d14:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8006d18:	4641      	mov	r1, r8
 8006d1a:	1851      	adds	r1, r2, r1
 8006d1c:	6339      	str	r1, [r7, #48]	@ 0x30
 8006d1e:	4649      	mov	r1, r9
 8006d20:	414b      	adcs	r3, r1
 8006d22:	637b      	str	r3, [r7, #52]	@ 0x34
 8006d24:	f04f 0200 	mov.w	r2, #0
 8006d28:	f04f 0300 	mov.w	r3, #0
 8006d2c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8006d30:	4659      	mov	r1, fp
 8006d32:	00cb      	lsls	r3, r1, #3
 8006d34:	4651      	mov	r1, sl
 8006d36:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006d3a:	4651      	mov	r1, sl
 8006d3c:	00ca      	lsls	r2, r1, #3
 8006d3e:	4610      	mov	r0, r2
 8006d40:	4619      	mov	r1, r3
 8006d42:	4603      	mov	r3, r0
 8006d44:	4642      	mov	r2, r8
 8006d46:	189b      	adds	r3, r3, r2
 8006d48:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006d4c:	464b      	mov	r3, r9
 8006d4e:	460a      	mov	r2, r1
 8006d50:	eb42 0303 	adc.w	r3, r2, r3
 8006d54:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006d58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006d5c:	685b      	ldr	r3, [r3, #4]
 8006d5e:	2200      	movs	r2, #0
 8006d60:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8006d64:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8006d68:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8006d6c:	460b      	mov	r3, r1
 8006d6e:	18db      	adds	r3, r3, r3
 8006d70:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006d72:	4613      	mov	r3, r2
 8006d74:	eb42 0303 	adc.w	r3, r2, r3
 8006d78:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006d7a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8006d7e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8006d82:	f7f9 fa75 	bl	8000270 <__aeabi_uldivmod>
 8006d86:	4602      	mov	r2, r0
 8006d88:	460b      	mov	r3, r1
 8006d8a:	4b0d      	ldr	r3, [pc, #52]	@ (8006dc0 <UART_SetConfig+0x2d4>)
 8006d8c:	fba3 1302 	umull	r1, r3, r3, r2
 8006d90:	095b      	lsrs	r3, r3, #5
 8006d92:	2164      	movs	r1, #100	@ 0x64
 8006d94:	fb01 f303 	mul.w	r3, r1, r3
 8006d98:	1ad3      	subs	r3, r2, r3
 8006d9a:	00db      	lsls	r3, r3, #3
 8006d9c:	3332      	adds	r3, #50	@ 0x32
 8006d9e:	4a08      	ldr	r2, [pc, #32]	@ (8006dc0 <UART_SetConfig+0x2d4>)
 8006da0:	fba2 2303 	umull	r2, r3, r2, r3
 8006da4:	095b      	lsrs	r3, r3, #5
 8006da6:	f003 0207 	and.w	r2, r3, #7
 8006daa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	4422      	add	r2, r4
 8006db2:	609a      	str	r2, [r3, #8]
 8006db4:	e106      	b.n	8006fc4 <UART_SetConfig+0x4d8>
 8006db6:	bf00      	nop
 8006db8:	40011000 	.word	0x40011000
 8006dbc:	40011400 	.word	0x40011400
 8006dc0:	51eb851f 	.word	0x51eb851f
 8006dc4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006dc8:	2200      	movs	r2, #0
 8006dca:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006dce:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8006dd2:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8006dd6:	4642      	mov	r2, r8
 8006dd8:	464b      	mov	r3, r9
 8006dda:	1891      	adds	r1, r2, r2
 8006ddc:	6239      	str	r1, [r7, #32]
 8006dde:	415b      	adcs	r3, r3
 8006de0:	627b      	str	r3, [r7, #36]	@ 0x24
 8006de2:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006de6:	4641      	mov	r1, r8
 8006de8:	1854      	adds	r4, r2, r1
 8006dea:	4649      	mov	r1, r9
 8006dec:	eb43 0501 	adc.w	r5, r3, r1
 8006df0:	f04f 0200 	mov.w	r2, #0
 8006df4:	f04f 0300 	mov.w	r3, #0
 8006df8:	00eb      	lsls	r3, r5, #3
 8006dfa:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006dfe:	00e2      	lsls	r2, r4, #3
 8006e00:	4614      	mov	r4, r2
 8006e02:	461d      	mov	r5, r3
 8006e04:	4643      	mov	r3, r8
 8006e06:	18e3      	adds	r3, r4, r3
 8006e08:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006e0c:	464b      	mov	r3, r9
 8006e0e:	eb45 0303 	adc.w	r3, r5, r3
 8006e12:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006e16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006e1a:	685b      	ldr	r3, [r3, #4]
 8006e1c:	2200      	movs	r2, #0
 8006e1e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006e22:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006e26:	f04f 0200 	mov.w	r2, #0
 8006e2a:	f04f 0300 	mov.w	r3, #0
 8006e2e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8006e32:	4629      	mov	r1, r5
 8006e34:	008b      	lsls	r3, r1, #2
 8006e36:	4621      	mov	r1, r4
 8006e38:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006e3c:	4621      	mov	r1, r4
 8006e3e:	008a      	lsls	r2, r1, #2
 8006e40:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8006e44:	f7f9 fa14 	bl	8000270 <__aeabi_uldivmod>
 8006e48:	4602      	mov	r2, r0
 8006e4a:	460b      	mov	r3, r1
 8006e4c:	4b60      	ldr	r3, [pc, #384]	@ (8006fd0 <UART_SetConfig+0x4e4>)
 8006e4e:	fba3 2302 	umull	r2, r3, r3, r2
 8006e52:	095b      	lsrs	r3, r3, #5
 8006e54:	011c      	lsls	r4, r3, #4
 8006e56:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006e5a:	2200      	movs	r2, #0
 8006e5c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006e60:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8006e64:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8006e68:	4642      	mov	r2, r8
 8006e6a:	464b      	mov	r3, r9
 8006e6c:	1891      	adds	r1, r2, r2
 8006e6e:	61b9      	str	r1, [r7, #24]
 8006e70:	415b      	adcs	r3, r3
 8006e72:	61fb      	str	r3, [r7, #28]
 8006e74:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006e78:	4641      	mov	r1, r8
 8006e7a:	1851      	adds	r1, r2, r1
 8006e7c:	6139      	str	r1, [r7, #16]
 8006e7e:	4649      	mov	r1, r9
 8006e80:	414b      	adcs	r3, r1
 8006e82:	617b      	str	r3, [r7, #20]
 8006e84:	f04f 0200 	mov.w	r2, #0
 8006e88:	f04f 0300 	mov.w	r3, #0
 8006e8c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8006e90:	4659      	mov	r1, fp
 8006e92:	00cb      	lsls	r3, r1, #3
 8006e94:	4651      	mov	r1, sl
 8006e96:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006e9a:	4651      	mov	r1, sl
 8006e9c:	00ca      	lsls	r2, r1, #3
 8006e9e:	4610      	mov	r0, r2
 8006ea0:	4619      	mov	r1, r3
 8006ea2:	4603      	mov	r3, r0
 8006ea4:	4642      	mov	r2, r8
 8006ea6:	189b      	adds	r3, r3, r2
 8006ea8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8006eac:	464b      	mov	r3, r9
 8006eae:	460a      	mov	r2, r1
 8006eb0:	eb42 0303 	adc.w	r3, r2, r3
 8006eb4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006eb8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006ebc:	685b      	ldr	r3, [r3, #4]
 8006ebe:	2200      	movs	r2, #0
 8006ec0:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006ec2:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8006ec4:	f04f 0200 	mov.w	r2, #0
 8006ec8:	f04f 0300 	mov.w	r3, #0
 8006ecc:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8006ed0:	4649      	mov	r1, r9
 8006ed2:	008b      	lsls	r3, r1, #2
 8006ed4:	4641      	mov	r1, r8
 8006ed6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006eda:	4641      	mov	r1, r8
 8006edc:	008a      	lsls	r2, r1, #2
 8006ede:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8006ee2:	f7f9 f9c5 	bl	8000270 <__aeabi_uldivmod>
 8006ee6:	4602      	mov	r2, r0
 8006ee8:	460b      	mov	r3, r1
 8006eea:	4611      	mov	r1, r2
 8006eec:	4b38      	ldr	r3, [pc, #224]	@ (8006fd0 <UART_SetConfig+0x4e4>)
 8006eee:	fba3 2301 	umull	r2, r3, r3, r1
 8006ef2:	095b      	lsrs	r3, r3, #5
 8006ef4:	2264      	movs	r2, #100	@ 0x64
 8006ef6:	fb02 f303 	mul.w	r3, r2, r3
 8006efa:	1acb      	subs	r3, r1, r3
 8006efc:	011b      	lsls	r3, r3, #4
 8006efe:	3332      	adds	r3, #50	@ 0x32
 8006f00:	4a33      	ldr	r2, [pc, #204]	@ (8006fd0 <UART_SetConfig+0x4e4>)
 8006f02:	fba2 2303 	umull	r2, r3, r2, r3
 8006f06:	095b      	lsrs	r3, r3, #5
 8006f08:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8006f0c:	441c      	add	r4, r3
 8006f0e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006f12:	2200      	movs	r2, #0
 8006f14:	673b      	str	r3, [r7, #112]	@ 0x70
 8006f16:	677a      	str	r2, [r7, #116]	@ 0x74
 8006f18:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8006f1c:	4642      	mov	r2, r8
 8006f1e:	464b      	mov	r3, r9
 8006f20:	1891      	adds	r1, r2, r2
 8006f22:	60b9      	str	r1, [r7, #8]
 8006f24:	415b      	adcs	r3, r3
 8006f26:	60fb      	str	r3, [r7, #12]
 8006f28:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006f2c:	4641      	mov	r1, r8
 8006f2e:	1851      	adds	r1, r2, r1
 8006f30:	6039      	str	r1, [r7, #0]
 8006f32:	4649      	mov	r1, r9
 8006f34:	414b      	adcs	r3, r1
 8006f36:	607b      	str	r3, [r7, #4]
 8006f38:	f04f 0200 	mov.w	r2, #0
 8006f3c:	f04f 0300 	mov.w	r3, #0
 8006f40:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8006f44:	4659      	mov	r1, fp
 8006f46:	00cb      	lsls	r3, r1, #3
 8006f48:	4651      	mov	r1, sl
 8006f4a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006f4e:	4651      	mov	r1, sl
 8006f50:	00ca      	lsls	r2, r1, #3
 8006f52:	4610      	mov	r0, r2
 8006f54:	4619      	mov	r1, r3
 8006f56:	4603      	mov	r3, r0
 8006f58:	4642      	mov	r2, r8
 8006f5a:	189b      	adds	r3, r3, r2
 8006f5c:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006f5e:	464b      	mov	r3, r9
 8006f60:	460a      	mov	r2, r1
 8006f62:	eb42 0303 	adc.w	r3, r2, r3
 8006f66:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006f68:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006f6c:	685b      	ldr	r3, [r3, #4]
 8006f6e:	2200      	movs	r2, #0
 8006f70:	663b      	str	r3, [r7, #96]	@ 0x60
 8006f72:	667a      	str	r2, [r7, #100]	@ 0x64
 8006f74:	f04f 0200 	mov.w	r2, #0
 8006f78:	f04f 0300 	mov.w	r3, #0
 8006f7c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8006f80:	4649      	mov	r1, r9
 8006f82:	008b      	lsls	r3, r1, #2
 8006f84:	4641      	mov	r1, r8
 8006f86:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006f8a:	4641      	mov	r1, r8
 8006f8c:	008a      	lsls	r2, r1, #2
 8006f8e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8006f92:	f7f9 f96d 	bl	8000270 <__aeabi_uldivmod>
 8006f96:	4602      	mov	r2, r0
 8006f98:	460b      	mov	r3, r1
 8006f9a:	4b0d      	ldr	r3, [pc, #52]	@ (8006fd0 <UART_SetConfig+0x4e4>)
 8006f9c:	fba3 1302 	umull	r1, r3, r3, r2
 8006fa0:	095b      	lsrs	r3, r3, #5
 8006fa2:	2164      	movs	r1, #100	@ 0x64
 8006fa4:	fb01 f303 	mul.w	r3, r1, r3
 8006fa8:	1ad3      	subs	r3, r2, r3
 8006faa:	011b      	lsls	r3, r3, #4
 8006fac:	3332      	adds	r3, #50	@ 0x32
 8006fae:	4a08      	ldr	r2, [pc, #32]	@ (8006fd0 <UART_SetConfig+0x4e4>)
 8006fb0:	fba2 2303 	umull	r2, r3, r2, r3
 8006fb4:	095b      	lsrs	r3, r3, #5
 8006fb6:	f003 020f 	and.w	r2, r3, #15
 8006fba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006fbe:	681b      	ldr	r3, [r3, #0]
 8006fc0:	4422      	add	r2, r4
 8006fc2:	609a      	str	r2, [r3, #8]
 8006fc4:	bf00      	nop
 8006fc6:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8006fca:	46bd      	mov	sp, r7
 8006fcc:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006fd0:	51eb851f 	.word	0x51eb851f

08006fd4 <USB_CoreInit>:
 8006fd4:	b084      	sub	sp, #16
 8006fd6:	b580      	push	{r7, lr}
 8006fd8:	b084      	sub	sp, #16
 8006fda:	af00      	add	r7, sp, #0
 8006fdc:	6078      	str	r0, [r7, #4]
 8006fde:	f107 001c 	add.w	r0, r7, #28
 8006fe2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8006fe6:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 8006fea:	2b01      	cmp	r3, #1
 8006fec:	d123      	bne.n	8007036 <USB_CoreInit+0x62>
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006ff2:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8006ff6:	687b      	ldr	r3, [r7, #4]
 8006ff8:	639a      	str	r2, [r3, #56]	@ 0x38
 8006ffa:	687b      	ldr	r3, [r7, #4]
 8006ffc:	68db      	ldr	r3, [r3, #12]
 8006ffe:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 8007002:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007006:	687a      	ldr	r2, [r7, #4]
 8007008:	60d3      	str	r3, [r2, #12]
 800700a:	687b      	ldr	r3, [r7, #4]
 800700c:	68db      	ldr	r3, [r3, #12]
 800700e:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8007012:	687b      	ldr	r3, [r7, #4]
 8007014:	60da      	str	r2, [r3, #12]
 8007016:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800701a:	2b01      	cmp	r3, #1
 800701c:	d105      	bne.n	800702a <USB_CoreInit+0x56>
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	68db      	ldr	r3, [r3, #12]
 8007022:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8007026:	687b      	ldr	r3, [r7, #4]
 8007028:	60da      	str	r2, [r3, #12]
 800702a:	6878      	ldr	r0, [r7, #4]
 800702c:	f001 fae8 	bl	8008600 <USB_CoreReset>
 8007030:	4603      	mov	r3, r0
 8007032:	73fb      	strb	r3, [r7, #15]
 8007034:	e01b      	b.n	800706e <USB_CoreInit+0x9a>
 8007036:	687b      	ldr	r3, [r7, #4]
 8007038:	68db      	ldr	r3, [r3, #12]
 800703a:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	60da      	str	r2, [r3, #12]
 8007042:	6878      	ldr	r0, [r7, #4]
 8007044:	f001 fadc 	bl	8008600 <USB_CoreReset>
 8007048:	4603      	mov	r3, r0
 800704a:	73fb      	strb	r3, [r7, #15]
 800704c:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8007050:	2b00      	cmp	r3, #0
 8007052:	d106      	bne.n	8007062 <USB_CoreInit+0x8e>
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007058:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	639a      	str	r2, [r3, #56]	@ 0x38
 8007060:	e005      	b.n	800706e <USB_CoreInit+0x9a>
 8007062:	687b      	ldr	r3, [r7, #4]
 8007064:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007066:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 800706a:	687b      	ldr	r3, [r7, #4]
 800706c:	639a      	str	r2, [r3, #56]	@ 0x38
 800706e:	7fbb      	ldrb	r3, [r7, #30]
 8007070:	2b01      	cmp	r3, #1
 8007072:	d10b      	bne.n	800708c <USB_CoreInit+0xb8>
 8007074:	687b      	ldr	r3, [r7, #4]
 8007076:	689b      	ldr	r3, [r3, #8]
 8007078:	f043 0206 	orr.w	r2, r3, #6
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	609a      	str	r2, [r3, #8]
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	689b      	ldr	r3, [r3, #8]
 8007084:	f043 0220 	orr.w	r2, r3, #32
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	609a      	str	r2, [r3, #8]
 800708c:	7bfb      	ldrb	r3, [r7, #15]
 800708e:	4618      	mov	r0, r3
 8007090:	3710      	adds	r7, #16
 8007092:	46bd      	mov	sp, r7
 8007094:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8007098:	b004      	add	sp, #16
 800709a:	4770      	bx	lr

0800709c <USB_SetTurnaroundTime>:
 800709c:	b480      	push	{r7}
 800709e:	b087      	sub	sp, #28
 80070a0:	af00      	add	r7, sp, #0
 80070a2:	60f8      	str	r0, [r7, #12]
 80070a4:	60b9      	str	r1, [r7, #8]
 80070a6:	4613      	mov	r3, r2
 80070a8:	71fb      	strb	r3, [r7, #7]
 80070aa:	79fb      	ldrb	r3, [r7, #7]
 80070ac:	2b02      	cmp	r3, #2
 80070ae:	d165      	bne.n	800717c <USB_SetTurnaroundTime+0xe0>
 80070b0:	68bb      	ldr	r3, [r7, #8]
 80070b2:	4a41      	ldr	r2, [pc, #260]	@ (80071b8 <USB_SetTurnaroundTime+0x11c>)
 80070b4:	4293      	cmp	r3, r2
 80070b6:	d906      	bls.n	80070c6 <USB_SetTurnaroundTime+0x2a>
 80070b8:	68bb      	ldr	r3, [r7, #8]
 80070ba:	4a40      	ldr	r2, [pc, #256]	@ (80071bc <USB_SetTurnaroundTime+0x120>)
 80070bc:	4293      	cmp	r3, r2
 80070be:	d202      	bcs.n	80070c6 <USB_SetTurnaroundTime+0x2a>
 80070c0:	230f      	movs	r3, #15
 80070c2:	617b      	str	r3, [r7, #20]
 80070c4:	e062      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 80070c6:	68bb      	ldr	r3, [r7, #8]
 80070c8:	4a3c      	ldr	r2, [pc, #240]	@ (80071bc <USB_SetTurnaroundTime+0x120>)
 80070ca:	4293      	cmp	r3, r2
 80070cc:	d306      	bcc.n	80070dc <USB_SetTurnaroundTime+0x40>
 80070ce:	68bb      	ldr	r3, [r7, #8]
 80070d0:	4a3b      	ldr	r2, [pc, #236]	@ (80071c0 <USB_SetTurnaroundTime+0x124>)
 80070d2:	4293      	cmp	r3, r2
 80070d4:	d202      	bcs.n	80070dc <USB_SetTurnaroundTime+0x40>
 80070d6:	230e      	movs	r3, #14
 80070d8:	617b      	str	r3, [r7, #20]
 80070da:	e057      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 80070dc:	68bb      	ldr	r3, [r7, #8]
 80070de:	4a38      	ldr	r2, [pc, #224]	@ (80071c0 <USB_SetTurnaroundTime+0x124>)
 80070e0:	4293      	cmp	r3, r2
 80070e2:	d306      	bcc.n	80070f2 <USB_SetTurnaroundTime+0x56>
 80070e4:	68bb      	ldr	r3, [r7, #8]
 80070e6:	4a37      	ldr	r2, [pc, #220]	@ (80071c4 <USB_SetTurnaroundTime+0x128>)
 80070e8:	4293      	cmp	r3, r2
 80070ea:	d202      	bcs.n	80070f2 <USB_SetTurnaroundTime+0x56>
 80070ec:	230d      	movs	r3, #13
 80070ee:	617b      	str	r3, [r7, #20]
 80070f0:	e04c      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 80070f2:	68bb      	ldr	r3, [r7, #8]
 80070f4:	4a33      	ldr	r2, [pc, #204]	@ (80071c4 <USB_SetTurnaroundTime+0x128>)
 80070f6:	4293      	cmp	r3, r2
 80070f8:	d306      	bcc.n	8007108 <USB_SetTurnaroundTime+0x6c>
 80070fa:	68bb      	ldr	r3, [r7, #8]
 80070fc:	4a32      	ldr	r2, [pc, #200]	@ (80071c8 <USB_SetTurnaroundTime+0x12c>)
 80070fe:	4293      	cmp	r3, r2
 8007100:	d802      	bhi.n	8007108 <USB_SetTurnaroundTime+0x6c>
 8007102:	230c      	movs	r3, #12
 8007104:	617b      	str	r3, [r7, #20]
 8007106:	e041      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 8007108:	68bb      	ldr	r3, [r7, #8]
 800710a:	4a2f      	ldr	r2, [pc, #188]	@ (80071c8 <USB_SetTurnaroundTime+0x12c>)
 800710c:	4293      	cmp	r3, r2
 800710e:	d906      	bls.n	800711e <USB_SetTurnaroundTime+0x82>
 8007110:	68bb      	ldr	r3, [r7, #8]
 8007112:	4a2e      	ldr	r2, [pc, #184]	@ (80071cc <USB_SetTurnaroundTime+0x130>)
 8007114:	4293      	cmp	r3, r2
 8007116:	d802      	bhi.n	800711e <USB_SetTurnaroundTime+0x82>
 8007118:	230b      	movs	r3, #11
 800711a:	617b      	str	r3, [r7, #20]
 800711c:	e036      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 800711e:	68bb      	ldr	r3, [r7, #8]
 8007120:	4a2a      	ldr	r2, [pc, #168]	@ (80071cc <USB_SetTurnaroundTime+0x130>)
 8007122:	4293      	cmp	r3, r2
 8007124:	d906      	bls.n	8007134 <USB_SetTurnaroundTime+0x98>
 8007126:	68bb      	ldr	r3, [r7, #8]
 8007128:	4a29      	ldr	r2, [pc, #164]	@ (80071d0 <USB_SetTurnaroundTime+0x134>)
 800712a:	4293      	cmp	r3, r2
 800712c:	d802      	bhi.n	8007134 <USB_SetTurnaroundTime+0x98>
 800712e:	230a      	movs	r3, #10
 8007130:	617b      	str	r3, [r7, #20]
 8007132:	e02b      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 8007134:	68bb      	ldr	r3, [r7, #8]
 8007136:	4a26      	ldr	r2, [pc, #152]	@ (80071d0 <USB_SetTurnaroundTime+0x134>)
 8007138:	4293      	cmp	r3, r2
 800713a:	d906      	bls.n	800714a <USB_SetTurnaroundTime+0xae>
 800713c:	68bb      	ldr	r3, [r7, #8]
 800713e:	4a25      	ldr	r2, [pc, #148]	@ (80071d4 <USB_SetTurnaroundTime+0x138>)
 8007140:	4293      	cmp	r3, r2
 8007142:	d202      	bcs.n	800714a <USB_SetTurnaroundTime+0xae>
 8007144:	2309      	movs	r3, #9
 8007146:	617b      	str	r3, [r7, #20]
 8007148:	e020      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 800714a:	68bb      	ldr	r3, [r7, #8]
 800714c:	4a21      	ldr	r2, [pc, #132]	@ (80071d4 <USB_SetTurnaroundTime+0x138>)
 800714e:	4293      	cmp	r3, r2
 8007150:	d306      	bcc.n	8007160 <USB_SetTurnaroundTime+0xc4>
 8007152:	68bb      	ldr	r3, [r7, #8]
 8007154:	4a20      	ldr	r2, [pc, #128]	@ (80071d8 <USB_SetTurnaroundTime+0x13c>)
 8007156:	4293      	cmp	r3, r2
 8007158:	d802      	bhi.n	8007160 <USB_SetTurnaroundTime+0xc4>
 800715a:	2308      	movs	r3, #8
 800715c:	617b      	str	r3, [r7, #20]
 800715e:	e015      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 8007160:	68bb      	ldr	r3, [r7, #8]
 8007162:	4a1d      	ldr	r2, [pc, #116]	@ (80071d8 <USB_SetTurnaroundTime+0x13c>)
 8007164:	4293      	cmp	r3, r2
 8007166:	d906      	bls.n	8007176 <USB_SetTurnaroundTime+0xda>
 8007168:	68bb      	ldr	r3, [r7, #8]
 800716a:	4a1c      	ldr	r2, [pc, #112]	@ (80071dc <USB_SetTurnaroundTime+0x140>)
 800716c:	4293      	cmp	r3, r2
 800716e:	d202      	bcs.n	8007176 <USB_SetTurnaroundTime+0xda>
 8007170:	2307      	movs	r3, #7
 8007172:	617b      	str	r3, [r7, #20]
 8007174:	e00a      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 8007176:	2306      	movs	r3, #6
 8007178:	617b      	str	r3, [r7, #20]
 800717a:	e007      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 800717c:	79fb      	ldrb	r3, [r7, #7]
 800717e:	2b00      	cmp	r3, #0
 8007180:	d102      	bne.n	8007188 <USB_SetTurnaroundTime+0xec>
 8007182:	2309      	movs	r3, #9
 8007184:	617b      	str	r3, [r7, #20]
 8007186:	e001      	b.n	800718c <USB_SetTurnaroundTime+0xf0>
 8007188:	2309      	movs	r3, #9
 800718a:	617b      	str	r3, [r7, #20]
 800718c:	68fb      	ldr	r3, [r7, #12]
 800718e:	68db      	ldr	r3, [r3, #12]
 8007190:	f423 5270 	bic.w	r2, r3, #15360	@ 0x3c00
 8007194:	68fb      	ldr	r3, [r7, #12]
 8007196:	60da      	str	r2, [r3, #12]
 8007198:	68fb      	ldr	r3, [r7, #12]
 800719a:	68da      	ldr	r2, [r3, #12]
 800719c:	697b      	ldr	r3, [r7, #20]
 800719e:	029b      	lsls	r3, r3, #10
 80071a0:	f403 5370 	and.w	r3, r3, #15360	@ 0x3c00
 80071a4:	431a      	orrs	r2, r3
 80071a6:	68fb      	ldr	r3, [r7, #12]
 80071a8:	60da      	str	r2, [r3, #12]
 80071aa:	2300      	movs	r3, #0
 80071ac:	4618      	mov	r0, r3
 80071ae:	371c      	adds	r7, #28
 80071b0:	46bd      	mov	sp, r7
 80071b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071b6:	4770      	bx	lr
 80071b8:	00d8acbf 	.word	0x00d8acbf
 80071bc:	00e4e1c0 	.word	0x00e4e1c0
 80071c0:	00f42400 	.word	0x00f42400
 80071c4:	01067380 	.word	0x01067380
 80071c8:	011a499f 	.word	0x011a499f
 80071cc:	01312cff 	.word	0x01312cff
 80071d0:	014ca43f 	.word	0x014ca43f
 80071d4:	016e3600 	.word	0x016e3600
 80071d8:	01a6ab1f 	.word	0x01a6ab1f
 80071dc:	01e84800 	.word	0x01e84800

080071e0 <USB_EnableGlobalInt>:
 80071e0:	b480      	push	{r7}
 80071e2:	b083      	sub	sp, #12
 80071e4:	af00      	add	r7, sp, #0
 80071e6:	6078      	str	r0, [r7, #4]
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	689b      	ldr	r3, [r3, #8]
 80071ec:	f043 0201 	orr.w	r2, r3, #1
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	609a      	str	r2, [r3, #8]
 80071f4:	2300      	movs	r3, #0
 80071f6:	4618      	mov	r0, r3
 80071f8:	370c      	adds	r7, #12
 80071fa:	46bd      	mov	sp, r7
 80071fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007200:	4770      	bx	lr

08007202 <USB_DisableGlobalInt>:
 8007202:	b480      	push	{r7}
 8007204:	b083      	sub	sp, #12
 8007206:	af00      	add	r7, sp, #0
 8007208:	6078      	str	r0, [r7, #4]
 800720a:	687b      	ldr	r3, [r7, #4]
 800720c:	689b      	ldr	r3, [r3, #8]
 800720e:	f023 0201 	bic.w	r2, r3, #1
 8007212:	687b      	ldr	r3, [r7, #4]
 8007214:	609a      	str	r2, [r3, #8]
 8007216:	2300      	movs	r3, #0
 8007218:	4618      	mov	r0, r3
 800721a:	370c      	adds	r7, #12
 800721c:	46bd      	mov	sp, r7
 800721e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007222:	4770      	bx	lr

08007224 <USB_SetCurrentMode>:
 8007224:	b580      	push	{r7, lr}
 8007226:	b084      	sub	sp, #16
 8007228:	af00      	add	r7, sp, #0
 800722a:	6078      	str	r0, [r7, #4]
 800722c:	460b      	mov	r3, r1
 800722e:	70fb      	strb	r3, [r7, #3]
 8007230:	2300      	movs	r3, #0
 8007232:	60fb      	str	r3, [r7, #12]
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	68db      	ldr	r3, [r3, #12]
 8007238:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 800723c:	687b      	ldr	r3, [r7, #4]
 800723e:	60da      	str	r2, [r3, #12]
 8007240:	78fb      	ldrb	r3, [r7, #3]
 8007242:	2b01      	cmp	r3, #1
 8007244:	d115      	bne.n	8007272 <USB_SetCurrentMode+0x4e>
 8007246:	687b      	ldr	r3, [r7, #4]
 8007248:	68db      	ldr	r3, [r3, #12]
 800724a:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	60da      	str	r2, [r3, #12]
 8007252:	200a      	movs	r0, #10
 8007254:	f7fa fa12 	bl	800167c <HAL_Delay>
 8007258:	68fb      	ldr	r3, [r7, #12]
 800725a:	330a      	adds	r3, #10
 800725c:	60fb      	str	r3, [r7, #12]
 800725e:	6878      	ldr	r0, [r7, #4]
 8007260:	f001 f93f 	bl	80084e2 <USB_GetMode>
 8007264:	4603      	mov	r3, r0
 8007266:	2b01      	cmp	r3, #1
 8007268:	d01e      	beq.n	80072a8 <USB_SetCurrentMode+0x84>
 800726a:	68fb      	ldr	r3, [r7, #12]
 800726c:	2bc7      	cmp	r3, #199	@ 0xc7
 800726e:	d9f0      	bls.n	8007252 <USB_SetCurrentMode+0x2e>
 8007270:	e01a      	b.n	80072a8 <USB_SetCurrentMode+0x84>
 8007272:	78fb      	ldrb	r3, [r7, #3]
 8007274:	2b00      	cmp	r3, #0
 8007276:	d115      	bne.n	80072a4 <USB_SetCurrentMode+0x80>
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	68db      	ldr	r3, [r3, #12]
 800727c:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	60da      	str	r2, [r3, #12]
 8007284:	200a      	movs	r0, #10
 8007286:	f7fa f9f9 	bl	800167c <HAL_Delay>
 800728a:	68fb      	ldr	r3, [r7, #12]
 800728c:	330a      	adds	r3, #10
 800728e:	60fb      	str	r3, [r7, #12]
 8007290:	6878      	ldr	r0, [r7, #4]
 8007292:	f001 f926 	bl	80084e2 <USB_GetMode>
 8007296:	4603      	mov	r3, r0
 8007298:	2b00      	cmp	r3, #0
 800729a:	d005      	beq.n	80072a8 <USB_SetCurrentMode+0x84>
 800729c:	68fb      	ldr	r3, [r7, #12]
 800729e:	2bc7      	cmp	r3, #199	@ 0xc7
 80072a0:	d9f0      	bls.n	8007284 <USB_SetCurrentMode+0x60>
 80072a2:	e001      	b.n	80072a8 <USB_SetCurrentMode+0x84>
 80072a4:	2301      	movs	r3, #1
 80072a6:	e005      	b.n	80072b4 <USB_SetCurrentMode+0x90>
 80072a8:	68fb      	ldr	r3, [r7, #12]
 80072aa:	2bc8      	cmp	r3, #200	@ 0xc8
 80072ac:	d101      	bne.n	80072b2 <USB_SetCurrentMode+0x8e>
 80072ae:	2301      	movs	r3, #1
 80072b0:	e000      	b.n	80072b4 <USB_SetCurrentMode+0x90>
 80072b2:	2300      	movs	r3, #0
 80072b4:	4618      	mov	r0, r3
 80072b6:	3710      	adds	r7, #16
 80072b8:	46bd      	mov	sp, r7
 80072ba:	bd80      	pop	{r7, pc}

080072bc <USB_DevInit>:
 80072bc:	b084      	sub	sp, #16
 80072be:	b580      	push	{r7, lr}
 80072c0:	b086      	sub	sp, #24
 80072c2:	af00      	add	r7, sp, #0
 80072c4:	6078      	str	r0, [r7, #4]
 80072c6:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 80072ca:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 80072ce:	2300      	movs	r3, #0
 80072d0:	75fb      	strb	r3, [r7, #23]
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	60fb      	str	r3, [r7, #12]
 80072d6:	2300      	movs	r3, #0
 80072d8:	613b      	str	r3, [r7, #16]
 80072da:	e009      	b.n	80072f0 <USB_DevInit+0x34>
 80072dc:	687a      	ldr	r2, [r7, #4]
 80072de:	693b      	ldr	r3, [r7, #16]
 80072e0:	3340      	adds	r3, #64	@ 0x40
 80072e2:	009b      	lsls	r3, r3, #2
 80072e4:	4413      	add	r3, r2
 80072e6:	2200      	movs	r2, #0
 80072e8:	605a      	str	r2, [r3, #4]
 80072ea:	693b      	ldr	r3, [r7, #16]
 80072ec:	3301      	adds	r3, #1
 80072ee:	613b      	str	r3, [r7, #16]
 80072f0:	693b      	ldr	r3, [r7, #16]
 80072f2:	2b0e      	cmp	r3, #14
 80072f4:	d9f2      	bls.n	80072dc <USB_DevInit+0x20>
 80072f6:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 80072fa:	2b00      	cmp	r3, #0
 80072fc:	d11c      	bne.n	8007338 <USB_DevInit+0x7c>
 80072fe:	68fb      	ldr	r3, [r7, #12]
 8007300:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8007304:	685b      	ldr	r3, [r3, #4]
 8007306:	68fa      	ldr	r2, [r7, #12]
 8007308:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800730c:	f043 0302 	orr.w	r3, r3, #2
 8007310:	6053      	str	r3, [r2, #4]
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007316:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	639a      	str	r2, [r3, #56]	@ 0x38
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007322:	f423 2200 	bic.w	r2, r3, #524288	@ 0x80000
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	639a      	str	r2, [r3, #56]	@ 0x38
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800732e:	f423 2280 	bic.w	r2, r3, #262144	@ 0x40000
 8007332:	687b      	ldr	r3, [r7, #4]
 8007334:	639a      	str	r2, [r3, #56]	@ 0x38
 8007336:	e00b      	b.n	8007350 <USB_DevInit+0x94>
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800733c:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	639a      	str	r2, [r3, #56]	@ 0x38
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007348:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	639a      	str	r2, [r3, #56]	@ 0x38
 8007350:	68fb      	ldr	r3, [r7, #12]
 8007352:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8007356:	461a      	mov	r2, r3
 8007358:	2300      	movs	r3, #0
 800735a:	6013      	str	r3, [r2, #0]
 800735c:	f897 3029 	ldrb.w	r3, [r7, #41]	@ 0x29
 8007360:	2b01      	cmp	r3, #1
 8007362:	d10d      	bne.n	8007380 <USB_DevInit+0xc4>
 8007364:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8007368:	2b00      	cmp	r3, #0
 800736a:	d104      	bne.n	8007376 <USB_DevInit+0xba>
 800736c:	2100      	movs	r1, #0
 800736e:	6878      	ldr	r0, [r7, #4]
 8007370:	f000 f968 	bl	8007644 <USB_SetDevSpeed>
 8007374:	e008      	b.n	8007388 <USB_DevInit+0xcc>
 8007376:	2101      	movs	r1, #1
 8007378:	6878      	ldr	r0, [r7, #4]
 800737a:	f000 f963 	bl	8007644 <USB_SetDevSpeed>
 800737e:	e003      	b.n	8007388 <USB_DevInit+0xcc>
 8007380:	2103      	movs	r1, #3
 8007382:	6878      	ldr	r0, [r7, #4]
 8007384:	f000 f95e 	bl	8007644 <USB_SetDevSpeed>
 8007388:	2110      	movs	r1, #16
 800738a:	6878      	ldr	r0, [r7, #4]
 800738c:	f000 f8fa 	bl	8007584 <USB_FlushTxFifo>
 8007390:	4603      	mov	r3, r0
 8007392:	2b00      	cmp	r3, #0
 8007394:	d001      	beq.n	800739a <USB_DevInit+0xde>
 8007396:	2301      	movs	r3, #1
 8007398:	75fb      	strb	r3, [r7, #23]
 800739a:	6878      	ldr	r0, [r7, #4]
 800739c:	f000 f924 	bl	80075e8 <USB_FlushRxFifo>
 80073a0:	4603      	mov	r3, r0
 80073a2:	2b00      	cmp	r3, #0
 80073a4:	d001      	beq.n	80073aa <USB_DevInit+0xee>
 80073a6:	2301      	movs	r3, #1
 80073a8:	75fb      	strb	r3, [r7, #23]
 80073aa:	68fb      	ldr	r3, [r7, #12]
 80073ac:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80073b0:	461a      	mov	r2, r3
 80073b2:	2300      	movs	r3, #0
 80073b4:	6113      	str	r3, [r2, #16]
 80073b6:	68fb      	ldr	r3, [r7, #12]
 80073b8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80073bc:	461a      	mov	r2, r3
 80073be:	2300      	movs	r3, #0
 80073c0:	6153      	str	r3, [r2, #20]
 80073c2:	68fb      	ldr	r3, [r7, #12]
 80073c4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80073c8:	461a      	mov	r2, r3
 80073ca:	2300      	movs	r3, #0
 80073cc:	61d3      	str	r3, [r2, #28]
 80073ce:	2300      	movs	r3, #0
 80073d0:	613b      	str	r3, [r7, #16]
 80073d2:	e043      	b.n	800745c <USB_DevInit+0x1a0>
 80073d4:	693b      	ldr	r3, [r7, #16]
 80073d6:	015a      	lsls	r2, r3, #5
 80073d8:	68fb      	ldr	r3, [r7, #12]
 80073da:	4413      	add	r3, r2
 80073dc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80073e0:	681b      	ldr	r3, [r3, #0]
 80073e2:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80073e6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80073ea:	d118      	bne.n	800741e <USB_DevInit+0x162>
 80073ec:	693b      	ldr	r3, [r7, #16]
 80073ee:	2b00      	cmp	r3, #0
 80073f0:	d10a      	bne.n	8007408 <USB_DevInit+0x14c>
 80073f2:	693b      	ldr	r3, [r7, #16]
 80073f4:	015a      	lsls	r2, r3, #5
 80073f6:	68fb      	ldr	r3, [r7, #12]
 80073f8:	4413      	add	r3, r2
 80073fa:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80073fe:	461a      	mov	r2, r3
 8007400:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8007404:	6013      	str	r3, [r2, #0]
 8007406:	e013      	b.n	8007430 <USB_DevInit+0x174>
 8007408:	693b      	ldr	r3, [r7, #16]
 800740a:	015a      	lsls	r2, r3, #5
 800740c:	68fb      	ldr	r3, [r7, #12]
 800740e:	4413      	add	r3, r2
 8007410:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007414:	461a      	mov	r2, r3
 8007416:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800741a:	6013      	str	r3, [r2, #0]
 800741c:	e008      	b.n	8007430 <USB_DevInit+0x174>
 800741e:	693b      	ldr	r3, [r7, #16]
 8007420:	015a      	lsls	r2, r3, #5
 8007422:	68fb      	ldr	r3, [r7, #12]
 8007424:	4413      	add	r3, r2
 8007426:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800742a:	461a      	mov	r2, r3
 800742c:	2300      	movs	r3, #0
 800742e:	6013      	str	r3, [r2, #0]
 8007430:	693b      	ldr	r3, [r7, #16]
 8007432:	015a      	lsls	r2, r3, #5
 8007434:	68fb      	ldr	r3, [r7, #12]
 8007436:	4413      	add	r3, r2
 8007438:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800743c:	461a      	mov	r2, r3
 800743e:	2300      	movs	r3, #0
 8007440:	6113      	str	r3, [r2, #16]
 8007442:	693b      	ldr	r3, [r7, #16]
 8007444:	015a      	lsls	r2, r3, #5
 8007446:	68fb      	ldr	r3, [r7, #12]
 8007448:	4413      	add	r3, r2
 800744a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800744e:	461a      	mov	r2, r3
 8007450:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8007454:	6093      	str	r3, [r2, #8]
 8007456:	693b      	ldr	r3, [r7, #16]
 8007458:	3301      	adds	r3, #1
 800745a:	613b      	str	r3, [r7, #16]
 800745c:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8007460:	461a      	mov	r2, r3
 8007462:	693b      	ldr	r3, [r7, #16]
 8007464:	4293      	cmp	r3, r2
 8007466:	d3b5      	bcc.n	80073d4 <USB_DevInit+0x118>
 8007468:	2300      	movs	r3, #0
 800746a:	613b      	str	r3, [r7, #16]
 800746c:	e043      	b.n	80074f6 <USB_DevInit+0x23a>
 800746e:	693b      	ldr	r3, [r7, #16]
 8007470:	015a      	lsls	r2, r3, #5
 8007472:	68fb      	ldr	r3, [r7, #12]
 8007474:	4413      	add	r3, r2
 8007476:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800747a:	681b      	ldr	r3, [r3, #0]
 800747c:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8007480:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8007484:	d118      	bne.n	80074b8 <USB_DevInit+0x1fc>
 8007486:	693b      	ldr	r3, [r7, #16]
 8007488:	2b00      	cmp	r3, #0
 800748a:	d10a      	bne.n	80074a2 <USB_DevInit+0x1e6>
 800748c:	693b      	ldr	r3, [r7, #16]
 800748e:	015a      	lsls	r2, r3, #5
 8007490:	68fb      	ldr	r3, [r7, #12]
 8007492:	4413      	add	r3, r2
 8007494:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007498:	461a      	mov	r2, r3
 800749a:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800749e:	6013      	str	r3, [r2, #0]
 80074a0:	e013      	b.n	80074ca <USB_DevInit+0x20e>
 80074a2:	693b      	ldr	r3, [r7, #16]
 80074a4:	015a      	lsls	r2, r3, #5
 80074a6:	68fb      	ldr	r3, [r7, #12]
 80074a8:	4413      	add	r3, r2
 80074aa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80074ae:	461a      	mov	r2, r3
 80074b0:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80074b4:	6013      	str	r3, [r2, #0]
 80074b6:	e008      	b.n	80074ca <USB_DevInit+0x20e>
 80074b8:	693b      	ldr	r3, [r7, #16]
 80074ba:	015a      	lsls	r2, r3, #5
 80074bc:	68fb      	ldr	r3, [r7, #12]
 80074be:	4413      	add	r3, r2
 80074c0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80074c4:	461a      	mov	r2, r3
 80074c6:	2300      	movs	r3, #0
 80074c8:	6013      	str	r3, [r2, #0]
 80074ca:	693b      	ldr	r3, [r7, #16]
 80074cc:	015a      	lsls	r2, r3, #5
 80074ce:	68fb      	ldr	r3, [r7, #12]
 80074d0:	4413      	add	r3, r2
 80074d2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80074d6:	461a      	mov	r2, r3
 80074d8:	2300      	movs	r3, #0
 80074da:	6113      	str	r3, [r2, #16]
 80074dc:	693b      	ldr	r3, [r7, #16]
 80074de:	015a      	lsls	r2, r3, #5
 80074e0:	68fb      	ldr	r3, [r7, #12]
 80074e2:	4413      	add	r3, r2
 80074e4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80074e8:	461a      	mov	r2, r3
 80074ea:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 80074ee:	6093      	str	r3, [r2, #8]
 80074f0:	693b      	ldr	r3, [r7, #16]
 80074f2:	3301      	adds	r3, #1
 80074f4:	613b      	str	r3, [r7, #16]
 80074f6:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 80074fa:	461a      	mov	r2, r3
 80074fc:	693b      	ldr	r3, [r7, #16]
 80074fe:	4293      	cmp	r3, r2
 8007500:	d3b5      	bcc.n	800746e <USB_DevInit+0x1b2>
 8007502:	68fb      	ldr	r3, [r7, #12]
 8007504:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8007508:	691b      	ldr	r3, [r3, #16]
 800750a:	68fa      	ldr	r2, [r7, #12]
 800750c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8007510:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007514:	6113      	str	r3, [r2, #16]
 8007516:	687b      	ldr	r3, [r7, #4]
 8007518:	2200      	movs	r2, #0
 800751a:	619a      	str	r2, [r3, #24]
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 8007522:	615a      	str	r2, [r3, #20]
 8007524:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8007528:	2b00      	cmp	r3, #0
 800752a:	d105      	bne.n	8007538 <USB_DevInit+0x27c>
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	699b      	ldr	r3, [r3, #24]
 8007530:	f043 0210 	orr.w	r2, r3, #16
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	619a      	str	r2, [r3, #24]
 8007538:	687b      	ldr	r3, [r7, #4]
 800753a:	699a      	ldr	r2, [r3, #24]
 800753c:	4b10      	ldr	r3, [pc, #64]	@ (8007580 <USB_DevInit+0x2c4>)
 800753e:	4313      	orrs	r3, r2
 8007540:	687a      	ldr	r2, [r7, #4]
 8007542:	6193      	str	r3, [r2, #24]
 8007544:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8007548:	2b00      	cmp	r3, #0
 800754a:	d005      	beq.n	8007558 <USB_DevInit+0x29c>
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	699b      	ldr	r3, [r3, #24]
 8007550:	f043 0208 	orr.w	r2, r3, #8
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	619a      	str	r2, [r3, #24]
 8007558:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 800755c:	2b01      	cmp	r3, #1
 800755e:	d107      	bne.n	8007570 <USB_DevInit+0x2b4>
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	699b      	ldr	r3, [r3, #24]
 8007564:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8007568:	f043 0304 	orr.w	r3, r3, #4
 800756c:	687a      	ldr	r2, [r7, #4]
 800756e:	6193      	str	r3, [r2, #24]
 8007570:	7dfb      	ldrb	r3, [r7, #23]
 8007572:	4618      	mov	r0, r3
 8007574:	3718      	adds	r7, #24
 8007576:	46bd      	mov	sp, r7
 8007578:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800757c:	b004      	add	sp, #16
 800757e:	4770      	bx	lr
 8007580:	803c3800 	.word	0x803c3800

08007584 <USB_FlushTxFifo>:
 8007584:	b480      	push	{r7}
 8007586:	b085      	sub	sp, #20
 8007588:	af00      	add	r7, sp, #0
 800758a:	6078      	str	r0, [r7, #4]
 800758c:	6039      	str	r1, [r7, #0]
 800758e:	2300      	movs	r3, #0
 8007590:	60fb      	str	r3, [r7, #12]
 8007592:	68fb      	ldr	r3, [r7, #12]
 8007594:	3301      	adds	r3, #1
 8007596:	60fb      	str	r3, [r7, #12]
 8007598:	68fb      	ldr	r3, [r7, #12]
 800759a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800759e:	d901      	bls.n	80075a4 <USB_FlushTxFifo+0x20>
 80075a0:	2303      	movs	r3, #3
 80075a2:	e01b      	b.n	80075dc <USB_FlushTxFifo+0x58>
 80075a4:	687b      	ldr	r3, [r7, #4]
 80075a6:	691b      	ldr	r3, [r3, #16]
 80075a8:	2b00      	cmp	r3, #0
 80075aa:	daf2      	bge.n	8007592 <USB_FlushTxFifo+0xe>
 80075ac:	2300      	movs	r3, #0
 80075ae:	60fb      	str	r3, [r7, #12]
 80075b0:	683b      	ldr	r3, [r7, #0]
 80075b2:	019b      	lsls	r3, r3, #6
 80075b4:	f043 0220 	orr.w	r2, r3, #32
 80075b8:	687b      	ldr	r3, [r7, #4]
 80075ba:	611a      	str	r2, [r3, #16]
 80075bc:	68fb      	ldr	r3, [r7, #12]
 80075be:	3301      	adds	r3, #1
 80075c0:	60fb      	str	r3, [r7, #12]
 80075c2:	68fb      	ldr	r3, [r7, #12]
 80075c4:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80075c8:	d901      	bls.n	80075ce <USB_FlushTxFifo+0x4a>
 80075ca:	2303      	movs	r3, #3
 80075cc:	e006      	b.n	80075dc <USB_FlushTxFifo+0x58>
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	691b      	ldr	r3, [r3, #16]
 80075d2:	f003 0320 	and.w	r3, r3, #32
 80075d6:	2b20      	cmp	r3, #32
 80075d8:	d0f0      	beq.n	80075bc <USB_FlushTxFifo+0x38>
 80075da:	2300      	movs	r3, #0
 80075dc:	4618      	mov	r0, r3
 80075de:	3714      	adds	r7, #20
 80075e0:	46bd      	mov	sp, r7
 80075e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e6:	4770      	bx	lr

080075e8 <USB_FlushRxFifo>:
 80075e8:	b480      	push	{r7}
 80075ea:	b085      	sub	sp, #20
 80075ec:	af00      	add	r7, sp, #0
 80075ee:	6078      	str	r0, [r7, #4]
 80075f0:	2300      	movs	r3, #0
 80075f2:	60fb      	str	r3, [r7, #12]
 80075f4:	68fb      	ldr	r3, [r7, #12]
 80075f6:	3301      	adds	r3, #1
 80075f8:	60fb      	str	r3, [r7, #12]
 80075fa:	68fb      	ldr	r3, [r7, #12]
 80075fc:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007600:	d901      	bls.n	8007606 <USB_FlushRxFifo+0x1e>
 8007602:	2303      	movs	r3, #3
 8007604:	e018      	b.n	8007638 <USB_FlushRxFifo+0x50>
 8007606:	687b      	ldr	r3, [r7, #4]
 8007608:	691b      	ldr	r3, [r3, #16]
 800760a:	2b00      	cmp	r3, #0
 800760c:	daf2      	bge.n	80075f4 <USB_FlushRxFifo+0xc>
 800760e:	2300      	movs	r3, #0
 8007610:	60fb      	str	r3, [r7, #12]
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	2210      	movs	r2, #16
 8007616:	611a      	str	r2, [r3, #16]
 8007618:	68fb      	ldr	r3, [r7, #12]
 800761a:	3301      	adds	r3, #1
 800761c:	60fb      	str	r3, [r7, #12]
 800761e:	68fb      	ldr	r3, [r7, #12]
 8007620:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007624:	d901      	bls.n	800762a <USB_FlushRxFifo+0x42>
 8007626:	2303      	movs	r3, #3
 8007628:	e006      	b.n	8007638 <USB_FlushRxFifo+0x50>
 800762a:	687b      	ldr	r3, [r7, #4]
 800762c:	691b      	ldr	r3, [r3, #16]
 800762e:	f003 0310 	and.w	r3, r3, #16
 8007632:	2b10      	cmp	r3, #16
 8007634:	d0f0      	beq.n	8007618 <USB_FlushRxFifo+0x30>
 8007636:	2300      	movs	r3, #0
 8007638:	4618      	mov	r0, r3
 800763a:	3714      	adds	r7, #20
 800763c:	46bd      	mov	sp, r7
 800763e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007642:	4770      	bx	lr

08007644 <USB_SetDevSpeed>:
 8007644:	b480      	push	{r7}
 8007646:	b085      	sub	sp, #20
 8007648:	af00      	add	r7, sp, #0
 800764a:	6078      	str	r0, [r7, #4]
 800764c:	460b      	mov	r3, r1
 800764e:	70fb      	strb	r3, [r7, #3]
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	60fb      	str	r3, [r7, #12]
 8007654:	68fb      	ldr	r3, [r7, #12]
 8007656:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800765a:	681a      	ldr	r2, [r3, #0]
 800765c:	78fb      	ldrb	r3, [r7, #3]
 800765e:	68f9      	ldr	r1, [r7, #12]
 8007660:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8007664:	4313      	orrs	r3, r2
 8007666:	600b      	str	r3, [r1, #0]
 8007668:	2300      	movs	r3, #0
 800766a:	4618      	mov	r0, r3
 800766c:	3714      	adds	r7, #20
 800766e:	46bd      	mov	sp, r7
 8007670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007674:	4770      	bx	lr

08007676 <USB_GetDevSpeed>:
 8007676:	b480      	push	{r7}
 8007678:	b087      	sub	sp, #28
 800767a:	af00      	add	r7, sp, #0
 800767c:	6078      	str	r0, [r7, #4]
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	613b      	str	r3, [r7, #16]
 8007682:	693b      	ldr	r3, [r7, #16]
 8007684:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8007688:	689b      	ldr	r3, [r3, #8]
 800768a:	f003 0306 	and.w	r3, r3, #6
 800768e:	60fb      	str	r3, [r7, #12]
 8007690:	68fb      	ldr	r3, [r7, #12]
 8007692:	2b00      	cmp	r3, #0
 8007694:	d102      	bne.n	800769c <USB_GetDevSpeed+0x26>
 8007696:	2300      	movs	r3, #0
 8007698:	75fb      	strb	r3, [r7, #23]
 800769a:	e00a      	b.n	80076b2 <USB_GetDevSpeed+0x3c>
 800769c:	68fb      	ldr	r3, [r7, #12]
 800769e:	2b02      	cmp	r3, #2
 80076a0:	d002      	beq.n	80076a8 <USB_GetDevSpeed+0x32>
 80076a2:	68fb      	ldr	r3, [r7, #12]
 80076a4:	2b06      	cmp	r3, #6
 80076a6:	d102      	bne.n	80076ae <USB_GetDevSpeed+0x38>
 80076a8:	2302      	movs	r3, #2
 80076aa:	75fb      	strb	r3, [r7, #23]
 80076ac:	e001      	b.n	80076b2 <USB_GetDevSpeed+0x3c>
 80076ae:	230f      	movs	r3, #15
 80076b0:	75fb      	strb	r3, [r7, #23]
 80076b2:	7dfb      	ldrb	r3, [r7, #23]
 80076b4:	4618      	mov	r0, r3
 80076b6:	371c      	adds	r7, #28
 80076b8:	46bd      	mov	sp, r7
 80076ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076be:	4770      	bx	lr

080076c0 <USB_ActivateEndpoint>:
 80076c0:	b480      	push	{r7}
 80076c2:	b085      	sub	sp, #20
 80076c4:	af00      	add	r7, sp, #0
 80076c6:	6078      	str	r0, [r7, #4]
 80076c8:	6039      	str	r1, [r7, #0]
 80076ca:	687b      	ldr	r3, [r7, #4]
 80076cc:	60fb      	str	r3, [r7, #12]
 80076ce:	683b      	ldr	r3, [r7, #0]
 80076d0:	781b      	ldrb	r3, [r3, #0]
 80076d2:	60bb      	str	r3, [r7, #8]
 80076d4:	683b      	ldr	r3, [r7, #0]
 80076d6:	785b      	ldrb	r3, [r3, #1]
 80076d8:	2b01      	cmp	r3, #1
 80076da:	d13a      	bne.n	8007752 <USB_ActivateEndpoint+0x92>
 80076dc:	68fb      	ldr	r3, [r7, #12]
 80076de:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80076e2:	69da      	ldr	r2, [r3, #28]
 80076e4:	683b      	ldr	r3, [r7, #0]
 80076e6:	781b      	ldrb	r3, [r3, #0]
 80076e8:	f003 030f 	and.w	r3, r3, #15
 80076ec:	2101      	movs	r1, #1
 80076ee:	fa01 f303 	lsl.w	r3, r1, r3
 80076f2:	b29b      	uxth	r3, r3
 80076f4:	68f9      	ldr	r1, [r7, #12]
 80076f6:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80076fa:	4313      	orrs	r3, r2
 80076fc:	61cb      	str	r3, [r1, #28]
 80076fe:	68bb      	ldr	r3, [r7, #8]
 8007700:	015a      	lsls	r2, r3, #5
 8007702:	68fb      	ldr	r3, [r7, #12]
 8007704:	4413      	add	r3, r2
 8007706:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800770a:	681b      	ldr	r3, [r3, #0]
 800770c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8007710:	2b00      	cmp	r3, #0
 8007712:	d155      	bne.n	80077c0 <USB_ActivateEndpoint+0x100>
 8007714:	68bb      	ldr	r3, [r7, #8]
 8007716:	015a      	lsls	r2, r3, #5
 8007718:	68fb      	ldr	r3, [r7, #12]
 800771a:	4413      	add	r3, r2
 800771c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007720:	681a      	ldr	r2, [r3, #0]
 8007722:	683b      	ldr	r3, [r7, #0]
 8007724:	689b      	ldr	r3, [r3, #8]
 8007726:	f3c3 010a 	ubfx	r1, r3, #0, #11
 800772a:	683b      	ldr	r3, [r7, #0]
 800772c:	791b      	ldrb	r3, [r3, #4]
 800772e:	049b      	lsls	r3, r3, #18
 8007730:	4319      	orrs	r1, r3
 8007732:	68bb      	ldr	r3, [r7, #8]
 8007734:	059b      	lsls	r3, r3, #22
 8007736:	430b      	orrs	r3, r1
 8007738:	4313      	orrs	r3, r2
 800773a:	68ba      	ldr	r2, [r7, #8]
 800773c:	0151      	lsls	r1, r2, #5
 800773e:	68fa      	ldr	r2, [r7, #12]
 8007740:	440a      	add	r2, r1
 8007742:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007746:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800774a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800774e:	6013      	str	r3, [r2, #0]
 8007750:	e036      	b.n	80077c0 <USB_ActivateEndpoint+0x100>
 8007752:	68fb      	ldr	r3, [r7, #12]
 8007754:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8007758:	69da      	ldr	r2, [r3, #28]
 800775a:	683b      	ldr	r3, [r7, #0]
 800775c:	781b      	ldrb	r3, [r3, #0]
 800775e:	f003 030f 	and.w	r3, r3, #15
 8007762:	2101      	movs	r1, #1
 8007764:	fa01 f303 	lsl.w	r3, r1, r3
 8007768:	041b      	lsls	r3, r3, #16
 800776a:	68f9      	ldr	r1, [r7, #12]
 800776c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8007770:	4313      	orrs	r3, r2
 8007772:	61cb      	str	r3, [r1, #28]
 8007774:	68bb      	ldr	r3, [r7, #8]
 8007776:	015a      	lsls	r2, r3, #5
 8007778:	68fb      	ldr	r3, [r7, #12]
 800777a:	4413      	add	r3, r2
 800777c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007780:	681b      	ldr	r3, [r3, #0]
 8007782:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8007786:	2b00      	cmp	r3, #0
 8007788:	d11a      	bne.n	80077c0 <USB_ActivateEndpoint+0x100>
 800778a:	68bb      	ldr	r3, [r7, #8]
 800778c:	015a      	lsls	r2, r3, #5
 800778e:	68fb      	ldr	r3, [r7, #12]
 8007790:	4413      	add	r3, r2
 8007792:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007796:	681a      	ldr	r2, [r3, #0]
 8007798:	683b      	ldr	r3, [r7, #0]
 800779a:	689b      	ldr	r3, [r3, #8]
 800779c:	f3c3 010a 	ubfx	r1, r3, #0, #11
 80077a0:	683b      	ldr	r3, [r7, #0]
 80077a2:	791b      	ldrb	r3, [r3, #4]
 80077a4:	049b      	lsls	r3, r3, #18
 80077a6:	430b      	orrs	r3, r1
 80077a8:	4313      	orrs	r3, r2
 80077aa:	68ba      	ldr	r2, [r7, #8]
 80077ac:	0151      	lsls	r1, r2, #5
 80077ae:	68fa      	ldr	r2, [r7, #12]
 80077b0:	440a      	add	r2, r1
 80077b2:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80077b6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80077ba:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80077be:	6013      	str	r3, [r2, #0]
 80077c0:	2300      	movs	r3, #0
 80077c2:	4618      	mov	r0, r3
 80077c4:	3714      	adds	r7, #20
 80077c6:	46bd      	mov	sp, r7
 80077c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077cc:	4770      	bx	lr
	...

080077d0 <USB_DeactivateEndpoint>:
 80077d0:	b480      	push	{r7}
 80077d2:	b085      	sub	sp, #20
 80077d4:	af00      	add	r7, sp, #0
 80077d6:	6078      	str	r0, [r7, #4]
 80077d8:	6039      	str	r1, [r7, #0]
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	60fb      	str	r3, [r7, #12]
 80077de:	683b      	ldr	r3, [r7, #0]
 80077e0:	781b      	ldrb	r3, [r3, #0]
 80077e2:	60bb      	str	r3, [r7, #8]
 80077e4:	683b      	ldr	r3, [r7, #0]
 80077e6:	785b      	ldrb	r3, [r3, #1]
 80077e8:	2b01      	cmp	r3, #1
 80077ea:	d161      	bne.n	80078b0 <USB_DeactivateEndpoint+0xe0>
 80077ec:	68bb      	ldr	r3, [r7, #8]
 80077ee:	015a      	lsls	r2, r3, #5
 80077f0:	68fb      	ldr	r3, [r7, #12]
 80077f2:	4413      	add	r3, r2
 80077f4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80077f8:	681b      	ldr	r3, [r3, #0]
 80077fa:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80077fe:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8007802:	d11f      	bne.n	8007844 <USB_DeactivateEndpoint+0x74>
 8007804:	68bb      	ldr	r3, [r7, #8]
 8007806:	015a      	lsls	r2, r3, #5
 8007808:	68fb      	ldr	r3, [r7, #12]
 800780a:	4413      	add	r3, r2
 800780c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007810:	681b      	ldr	r3, [r3, #0]
 8007812:	68ba      	ldr	r2, [r7, #8]
 8007814:	0151      	lsls	r1, r2, #5
 8007816:	68fa      	ldr	r2, [r7, #12]
 8007818:	440a      	add	r2, r1
 800781a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800781e:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8007822:	6013      	str	r3, [r2, #0]
 8007824:	68bb      	ldr	r3, [r7, #8]
 8007826:	015a      	lsls	r2, r3, #5
 8007828:	68fb      	ldr	r3, [r7, #12]
 800782a:	4413      	add	r3, r2
 800782c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007830:	681b      	ldr	r3, [r3, #0]
 8007832:	68ba      	ldr	r2, [r7, #8]
 8007834:	0151      	lsls	r1, r2, #5
 8007836:	68fa      	ldr	r2, [r7, #12]
 8007838:	440a      	add	r2, r1
 800783a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800783e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8007842:	6013      	str	r3, [r2, #0]
 8007844:	68fb      	ldr	r3, [r7, #12]
 8007846:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800784a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800784c:	683b      	ldr	r3, [r7, #0]
 800784e:	781b      	ldrb	r3, [r3, #0]
 8007850:	f003 030f 	and.w	r3, r3, #15
 8007854:	2101      	movs	r1, #1
 8007856:	fa01 f303 	lsl.w	r3, r1, r3
 800785a:	b29b      	uxth	r3, r3
 800785c:	43db      	mvns	r3, r3
 800785e:	68f9      	ldr	r1, [r7, #12]
 8007860:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8007864:	4013      	ands	r3, r2
 8007866:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8007868:	68fb      	ldr	r3, [r7, #12]
 800786a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800786e:	69da      	ldr	r2, [r3, #28]
 8007870:	683b      	ldr	r3, [r7, #0]
 8007872:	781b      	ldrb	r3, [r3, #0]
 8007874:	f003 030f 	and.w	r3, r3, #15
 8007878:	2101      	movs	r1, #1
 800787a:	fa01 f303 	lsl.w	r3, r1, r3
 800787e:	b29b      	uxth	r3, r3
 8007880:	43db      	mvns	r3, r3
 8007882:	68f9      	ldr	r1, [r7, #12]
 8007884:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8007888:	4013      	ands	r3, r2
 800788a:	61cb      	str	r3, [r1, #28]
 800788c:	68bb      	ldr	r3, [r7, #8]
 800788e:	015a      	lsls	r2, r3, #5
 8007890:	68fb      	ldr	r3, [r7, #12]
 8007892:	4413      	add	r3, r2
 8007894:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007898:	681a      	ldr	r2, [r3, #0]
 800789a:	68bb      	ldr	r3, [r7, #8]
 800789c:	0159      	lsls	r1, r3, #5
 800789e:	68fb      	ldr	r3, [r7, #12]
 80078a0:	440b      	add	r3, r1
 80078a2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80078a6:	4619      	mov	r1, r3
 80078a8:	4b35      	ldr	r3, [pc, #212]	@ (8007980 <USB_DeactivateEndpoint+0x1b0>)
 80078aa:	4013      	ands	r3, r2
 80078ac:	600b      	str	r3, [r1, #0]
 80078ae:	e060      	b.n	8007972 <USB_DeactivateEndpoint+0x1a2>
 80078b0:	68bb      	ldr	r3, [r7, #8]
 80078b2:	015a      	lsls	r2, r3, #5
 80078b4:	68fb      	ldr	r3, [r7, #12]
 80078b6:	4413      	add	r3, r2
 80078b8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80078bc:	681b      	ldr	r3, [r3, #0]
 80078be:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80078c2:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80078c6:	d11f      	bne.n	8007908 <USB_DeactivateEndpoint+0x138>
 80078c8:	68bb      	ldr	r3, [r7, #8]
 80078ca:	015a      	lsls	r2, r3, #5
 80078cc:	68fb      	ldr	r3, [r7, #12]
 80078ce:	4413      	add	r3, r2
 80078d0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80078d4:	681b      	ldr	r3, [r3, #0]
 80078d6:	68ba      	ldr	r2, [r7, #8]
 80078d8:	0151      	lsls	r1, r2, #5
 80078da:	68fa      	ldr	r2, [r7, #12]
 80078dc:	440a      	add	r2, r1
 80078de:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80078e2:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80078e6:	6013      	str	r3, [r2, #0]
 80078e8:	68bb      	ldr	r3, [r7, #8]
 80078ea:	015a      	lsls	r2, r3, #5
 80078ec:	68fb      	ldr	r3, [r7, #12]
 80078ee:	4413      	add	r3, r2
 80078f0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80078f4:	681b      	ldr	r3, [r3, #0]
 80078f6:	68ba      	ldr	r2, [r7, #8]
 80078f8:	0151      	lsls	r1, r2, #5
 80078fa:	68fa      	ldr	r2, [r7, #12]
 80078fc:	440a      	add	r2, r1
 80078fe:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007902:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8007906:	6013      	str	r3, [r2, #0]
 8007908:	68fb      	ldr	r3, [r7, #12]
 800790a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800790e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8007910:	683b      	ldr	r3, [r7, #0]
 8007912:	781b      	ldrb	r3, [r3, #0]
 8007914:	f003 030f 	and.w	r3, r3, #15
 8007918:	2101      	movs	r1, #1
 800791a:	fa01 f303 	lsl.w	r3, r1, r3
 800791e:	041b      	lsls	r3, r3, #16
 8007920:	43db      	mvns	r3, r3
 8007922:	68f9      	ldr	r1, [r7, #12]
 8007924:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8007928:	4013      	ands	r3, r2
 800792a:	63cb      	str	r3, [r1, #60]	@ 0x3c
 800792c:	68fb      	ldr	r3, [r7, #12]
 800792e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8007932:	69da      	ldr	r2, [r3, #28]
 8007934:	683b      	ldr	r3, [r7, #0]
 8007936:	781b      	ldrb	r3, [r3, #0]
 8007938:	f003 030f 	and.w	r3, r3, #15
 800793c:	2101      	movs	r1, #1
 800793e:	fa01 f303 	lsl.w	r3, r1, r3
 8007942:	041b      	lsls	r3, r3, #16
 8007944:	43db      	mvns	r3, r3
 8007946:	68f9      	ldr	r1, [r7, #12]
 8007948:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800794c:	4013      	ands	r3, r2
 800794e:	61cb      	str	r3, [r1, #28]
 8007950:	68bb      	ldr	r3, [r7, #8]
 8007952:	015a      	lsls	r2, r3, #5
 8007954:	68fb      	ldr	r3, [r7, #12]
 8007956:	4413      	add	r3, r2
 8007958:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800795c:	681a      	ldr	r2, [r3, #0]
 800795e:	68bb      	ldr	r3, [r7, #8]
 8007960:	0159      	lsls	r1, r3, #5
 8007962:	68fb      	ldr	r3, [r7, #12]
 8007964:	440b      	add	r3, r1
 8007966:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800796a:	4619      	mov	r1, r3
 800796c:	4b05      	ldr	r3, [pc, #20]	@ (8007984 <USB_DeactivateEndpoint+0x1b4>)
 800796e:	4013      	ands	r3, r2
 8007970:	600b      	str	r3, [r1, #0]
 8007972:	2300      	movs	r3, #0
 8007974:	4618      	mov	r0, r3
 8007976:	3714      	adds	r7, #20
 8007978:	46bd      	mov	sp, r7
 800797a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800797e:	4770      	bx	lr
 8007980:	ec337800 	.word	0xec337800
 8007984:	eff37800 	.word	0xeff37800

08007988 <USB_EPStartXfer>:
 8007988:	b580      	push	{r7, lr}
 800798a:	b08a      	sub	sp, #40	@ 0x28
 800798c:	af02      	add	r7, sp, #8
 800798e:	60f8      	str	r0, [r7, #12]
 8007990:	60b9      	str	r1, [r7, #8]
 8007992:	4613      	mov	r3, r2
 8007994:	71fb      	strb	r3, [r7, #7]
 8007996:	68fb      	ldr	r3, [r7, #12]
 8007998:	61fb      	str	r3, [r7, #28]
 800799a:	68bb      	ldr	r3, [r7, #8]
 800799c:	781b      	ldrb	r3, [r3, #0]
 800799e:	61bb      	str	r3, [r7, #24]
 80079a0:	68bb      	ldr	r3, [r7, #8]
 80079a2:	785b      	ldrb	r3, [r3, #1]
 80079a4:	2b01      	cmp	r3, #1
 80079a6:	f040 817f 	bne.w	8007ca8 <USB_EPStartXfer+0x320>
 80079aa:	68bb      	ldr	r3, [r7, #8]
 80079ac:	691b      	ldr	r3, [r3, #16]
 80079ae:	2b00      	cmp	r3, #0
 80079b0:	d132      	bne.n	8007a18 <USB_EPStartXfer+0x90>
 80079b2:	69bb      	ldr	r3, [r7, #24]
 80079b4:	015a      	lsls	r2, r3, #5
 80079b6:	69fb      	ldr	r3, [r7, #28]
 80079b8:	4413      	add	r3, r2
 80079ba:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80079be:	691b      	ldr	r3, [r3, #16]
 80079c0:	69ba      	ldr	r2, [r7, #24]
 80079c2:	0151      	lsls	r1, r2, #5
 80079c4:	69fa      	ldr	r2, [r7, #28]
 80079c6:	440a      	add	r2, r1
 80079c8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80079cc:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 80079d0:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80079d4:	6113      	str	r3, [r2, #16]
 80079d6:	69bb      	ldr	r3, [r7, #24]
 80079d8:	015a      	lsls	r2, r3, #5
 80079da:	69fb      	ldr	r3, [r7, #28]
 80079dc:	4413      	add	r3, r2
 80079de:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80079e2:	691b      	ldr	r3, [r3, #16]
 80079e4:	69ba      	ldr	r2, [r7, #24]
 80079e6:	0151      	lsls	r1, r2, #5
 80079e8:	69fa      	ldr	r2, [r7, #28]
 80079ea:	440a      	add	r2, r1
 80079ec:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80079f0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80079f4:	6113      	str	r3, [r2, #16]
 80079f6:	69bb      	ldr	r3, [r7, #24]
 80079f8:	015a      	lsls	r2, r3, #5
 80079fa:	69fb      	ldr	r3, [r7, #28]
 80079fc:	4413      	add	r3, r2
 80079fe:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007a02:	691b      	ldr	r3, [r3, #16]
 8007a04:	69ba      	ldr	r2, [r7, #24]
 8007a06:	0151      	lsls	r1, r2, #5
 8007a08:	69fa      	ldr	r2, [r7, #28]
 8007a0a:	440a      	add	r2, r1
 8007a0c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007a10:	0cdb      	lsrs	r3, r3, #19
 8007a12:	04db      	lsls	r3, r3, #19
 8007a14:	6113      	str	r3, [r2, #16]
 8007a16:	e097      	b.n	8007b48 <USB_EPStartXfer+0x1c0>
 8007a18:	69bb      	ldr	r3, [r7, #24]
 8007a1a:	015a      	lsls	r2, r3, #5
 8007a1c:	69fb      	ldr	r3, [r7, #28]
 8007a1e:	4413      	add	r3, r2
 8007a20:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007a24:	691b      	ldr	r3, [r3, #16]
 8007a26:	69ba      	ldr	r2, [r7, #24]
 8007a28:	0151      	lsls	r1, r2, #5
 8007a2a:	69fa      	ldr	r2, [r7, #28]
 8007a2c:	440a      	add	r2, r1
 8007a2e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007a32:	0cdb      	lsrs	r3, r3, #19
 8007a34:	04db      	lsls	r3, r3, #19
 8007a36:	6113      	str	r3, [r2, #16]
 8007a38:	69bb      	ldr	r3, [r7, #24]
 8007a3a:	015a      	lsls	r2, r3, #5
 8007a3c:	69fb      	ldr	r3, [r7, #28]
 8007a3e:	4413      	add	r3, r2
 8007a40:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007a44:	691b      	ldr	r3, [r3, #16]
 8007a46:	69ba      	ldr	r2, [r7, #24]
 8007a48:	0151      	lsls	r1, r2, #5
 8007a4a:	69fa      	ldr	r2, [r7, #28]
 8007a4c:	440a      	add	r2, r1
 8007a4e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007a52:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8007a56:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8007a5a:	6113      	str	r3, [r2, #16]
 8007a5c:	69bb      	ldr	r3, [r7, #24]
 8007a5e:	2b00      	cmp	r3, #0
 8007a60:	d11a      	bne.n	8007a98 <USB_EPStartXfer+0x110>
 8007a62:	68bb      	ldr	r3, [r7, #8]
 8007a64:	691a      	ldr	r2, [r3, #16]
 8007a66:	68bb      	ldr	r3, [r7, #8]
 8007a68:	689b      	ldr	r3, [r3, #8]
 8007a6a:	429a      	cmp	r2, r3
 8007a6c:	d903      	bls.n	8007a76 <USB_EPStartXfer+0xee>
 8007a6e:	68bb      	ldr	r3, [r7, #8]
 8007a70:	689a      	ldr	r2, [r3, #8]
 8007a72:	68bb      	ldr	r3, [r7, #8]
 8007a74:	611a      	str	r2, [r3, #16]
 8007a76:	69bb      	ldr	r3, [r7, #24]
 8007a78:	015a      	lsls	r2, r3, #5
 8007a7a:	69fb      	ldr	r3, [r7, #28]
 8007a7c:	4413      	add	r3, r2
 8007a7e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007a82:	691b      	ldr	r3, [r3, #16]
 8007a84:	69ba      	ldr	r2, [r7, #24]
 8007a86:	0151      	lsls	r1, r2, #5
 8007a88:	69fa      	ldr	r2, [r7, #28]
 8007a8a:	440a      	add	r2, r1
 8007a8c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007a90:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8007a94:	6113      	str	r3, [r2, #16]
 8007a96:	e044      	b.n	8007b22 <USB_EPStartXfer+0x19a>
 8007a98:	68bb      	ldr	r3, [r7, #8]
 8007a9a:	691a      	ldr	r2, [r3, #16]
 8007a9c:	68bb      	ldr	r3, [r7, #8]
 8007a9e:	689b      	ldr	r3, [r3, #8]
 8007aa0:	4413      	add	r3, r2
 8007aa2:	1e5a      	subs	r2, r3, #1
 8007aa4:	68bb      	ldr	r3, [r7, #8]
 8007aa6:	689b      	ldr	r3, [r3, #8]
 8007aa8:	fbb2 f3f3 	udiv	r3, r2, r3
 8007aac:	82fb      	strh	r3, [r7, #22]
 8007aae:	69bb      	ldr	r3, [r7, #24]
 8007ab0:	015a      	lsls	r2, r3, #5
 8007ab2:	69fb      	ldr	r3, [r7, #28]
 8007ab4:	4413      	add	r3, r2
 8007ab6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007aba:	691a      	ldr	r2, [r3, #16]
 8007abc:	8afb      	ldrh	r3, [r7, #22]
 8007abe:	04d9      	lsls	r1, r3, #19
 8007ac0:	4ba4      	ldr	r3, [pc, #656]	@ (8007d54 <USB_EPStartXfer+0x3cc>)
 8007ac2:	400b      	ands	r3, r1
 8007ac4:	69b9      	ldr	r1, [r7, #24]
 8007ac6:	0148      	lsls	r0, r1, #5
 8007ac8:	69f9      	ldr	r1, [r7, #28]
 8007aca:	4401      	add	r1, r0
 8007acc:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 8007ad0:	4313      	orrs	r3, r2
 8007ad2:	610b      	str	r3, [r1, #16]
 8007ad4:	68bb      	ldr	r3, [r7, #8]
 8007ad6:	791b      	ldrb	r3, [r3, #4]
 8007ad8:	2b01      	cmp	r3, #1
 8007ada:	d122      	bne.n	8007b22 <USB_EPStartXfer+0x19a>
 8007adc:	69bb      	ldr	r3, [r7, #24]
 8007ade:	015a      	lsls	r2, r3, #5
 8007ae0:	69fb      	ldr	r3, [r7, #28]
 8007ae2:	4413      	add	r3, r2
 8007ae4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007ae8:	691b      	ldr	r3, [r3, #16]
 8007aea:	69ba      	ldr	r2, [r7, #24]
 8007aec:	0151      	lsls	r1, r2, #5
 8007aee:	69fa      	ldr	r2, [r7, #28]
 8007af0:	440a      	add	r2, r1
 8007af2:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007af6:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 8007afa:	6113      	str	r3, [r2, #16]
 8007afc:	69bb      	ldr	r3, [r7, #24]
 8007afe:	015a      	lsls	r2, r3, #5
 8007b00:	69fb      	ldr	r3, [r7, #28]
 8007b02:	4413      	add	r3, r2
 8007b04:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007b08:	691a      	ldr	r2, [r3, #16]
 8007b0a:	8afb      	ldrh	r3, [r7, #22]
 8007b0c:	075b      	lsls	r3, r3, #29
 8007b0e:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 8007b12:	69b9      	ldr	r1, [r7, #24]
 8007b14:	0148      	lsls	r0, r1, #5
 8007b16:	69f9      	ldr	r1, [r7, #28]
 8007b18:	4401      	add	r1, r0
 8007b1a:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 8007b1e:	4313      	orrs	r3, r2
 8007b20:	610b      	str	r3, [r1, #16]
 8007b22:	69bb      	ldr	r3, [r7, #24]
 8007b24:	015a      	lsls	r2, r3, #5
 8007b26:	69fb      	ldr	r3, [r7, #28]
 8007b28:	4413      	add	r3, r2
 8007b2a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007b2e:	691a      	ldr	r2, [r3, #16]
 8007b30:	68bb      	ldr	r3, [r7, #8]
 8007b32:	691b      	ldr	r3, [r3, #16]
 8007b34:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007b38:	69b9      	ldr	r1, [r7, #24]
 8007b3a:	0148      	lsls	r0, r1, #5
 8007b3c:	69f9      	ldr	r1, [r7, #28]
 8007b3e:	4401      	add	r1, r0
 8007b40:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 8007b44:	4313      	orrs	r3, r2
 8007b46:	610b      	str	r3, [r1, #16]
 8007b48:	79fb      	ldrb	r3, [r7, #7]
 8007b4a:	2b01      	cmp	r3, #1
 8007b4c:	d14b      	bne.n	8007be6 <USB_EPStartXfer+0x25e>
 8007b4e:	68bb      	ldr	r3, [r7, #8]
 8007b50:	69db      	ldr	r3, [r3, #28]
 8007b52:	2b00      	cmp	r3, #0
 8007b54:	d009      	beq.n	8007b6a <USB_EPStartXfer+0x1e2>
 8007b56:	69bb      	ldr	r3, [r7, #24]
 8007b58:	015a      	lsls	r2, r3, #5
 8007b5a:	69fb      	ldr	r3, [r7, #28]
 8007b5c:	4413      	add	r3, r2
 8007b5e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007b62:	461a      	mov	r2, r3
 8007b64:	68bb      	ldr	r3, [r7, #8]
 8007b66:	69db      	ldr	r3, [r3, #28]
 8007b68:	6153      	str	r3, [r2, #20]
 8007b6a:	68bb      	ldr	r3, [r7, #8]
 8007b6c:	791b      	ldrb	r3, [r3, #4]
 8007b6e:	2b01      	cmp	r3, #1
 8007b70:	d128      	bne.n	8007bc4 <USB_EPStartXfer+0x23c>
 8007b72:	69fb      	ldr	r3, [r7, #28]
 8007b74:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8007b78:	689b      	ldr	r3, [r3, #8]
 8007b7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007b7e:	2b00      	cmp	r3, #0
 8007b80:	d110      	bne.n	8007ba4 <USB_EPStartXfer+0x21c>
 8007b82:	69bb      	ldr	r3, [r7, #24]
 8007b84:	015a      	lsls	r2, r3, #5
 8007b86:	69fb      	ldr	r3, [r7, #28]
 8007b88:	4413      	add	r3, r2
 8007b8a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007b8e:	681b      	ldr	r3, [r3, #0]
 8007b90:	69ba      	ldr	r2, [r7, #24]
 8007b92:	0151      	lsls	r1, r2, #5
 8007b94:	69fa      	ldr	r2, [r7, #28]
 8007b96:	440a      	add	r2, r1
 8007b98:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007b9c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8007ba0:	6013      	str	r3, [r2, #0]
 8007ba2:	e00f      	b.n	8007bc4 <USB_EPStartXfer+0x23c>
 8007ba4:	69bb      	ldr	r3, [r7, #24]
 8007ba6:	015a      	lsls	r2, r3, #5
 8007ba8:	69fb      	ldr	r3, [r7, #28]
 8007baa:	4413      	add	r3, r2
 8007bac:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007bb0:	681b      	ldr	r3, [r3, #0]
 8007bb2:	69ba      	ldr	r2, [r7, #24]
 8007bb4:	0151      	lsls	r1, r2, #5
 8007bb6:	69fa      	ldr	r2, [r7, #28]
 8007bb8:	440a      	add	r2, r1
 8007bba:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007bbe:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007bc2:	6013      	str	r3, [r2, #0]
 8007bc4:	69bb      	ldr	r3, [r7, #24]
 8007bc6:	015a      	lsls	r2, r3, #5
 8007bc8:	69fb      	ldr	r3, [r7, #28]
 8007bca:	4413      	add	r3, r2
 8007bcc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007bd0:	681b      	ldr	r3, [r3, #0]
 8007bd2:	69ba      	ldr	r2, [r7, #24]
 8007bd4:	0151      	lsls	r1, r2, #5
 8007bd6:	69fa      	ldr	r2, [r7, #28]
 8007bd8:	440a      	add	r2, r1
 8007bda:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007bde:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007be2:	6013      	str	r3, [r2, #0]
 8007be4:	e166      	b.n	8007eb4 <USB_EPStartXfer+0x52c>
 8007be6:	69bb      	ldr	r3, [r7, #24]
 8007be8:	015a      	lsls	r2, r3, #5
 8007bea:	69fb      	ldr	r3, [r7, #28]
 8007bec:	4413      	add	r3, r2
 8007bee:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007bf2:	681b      	ldr	r3, [r3, #0]
 8007bf4:	69ba      	ldr	r2, [r7, #24]
 8007bf6:	0151      	lsls	r1, r2, #5
 8007bf8:	69fa      	ldr	r2, [r7, #28]
 8007bfa:	440a      	add	r2, r1
 8007bfc:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007c00:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007c04:	6013      	str	r3, [r2, #0]
 8007c06:	68bb      	ldr	r3, [r7, #8]
 8007c08:	791b      	ldrb	r3, [r3, #4]
 8007c0a:	2b01      	cmp	r3, #1
 8007c0c:	d015      	beq.n	8007c3a <USB_EPStartXfer+0x2b2>
 8007c0e:	68bb      	ldr	r3, [r7, #8]
 8007c10:	691b      	ldr	r3, [r3, #16]
 8007c12:	2b00      	cmp	r3, #0
 8007c14:	f000 814e 	beq.w	8007eb4 <USB_EPStartXfer+0x52c>
 8007c18:	69fb      	ldr	r3, [r7, #28]
 8007c1a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8007c1e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8007c20:	68bb      	ldr	r3, [r7, #8]
 8007c22:	781b      	ldrb	r3, [r3, #0]
 8007c24:	f003 030f 	and.w	r3, r3, #15
 8007c28:	2101      	movs	r1, #1
 8007c2a:	fa01 f303 	lsl.w	r3, r1, r3
 8007c2e:	69f9      	ldr	r1, [r7, #28]
 8007c30:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8007c34:	4313      	orrs	r3, r2
 8007c36:	634b      	str	r3, [r1, #52]	@ 0x34
 8007c38:	e13c      	b.n	8007eb4 <USB_EPStartXfer+0x52c>
 8007c3a:	69fb      	ldr	r3, [r7, #28]
 8007c3c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8007c40:	689b      	ldr	r3, [r3, #8]
 8007c42:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007c46:	2b00      	cmp	r3, #0
 8007c48:	d110      	bne.n	8007c6c <USB_EPStartXfer+0x2e4>
 8007c4a:	69bb      	ldr	r3, [r7, #24]
 8007c4c:	015a      	lsls	r2, r3, #5
 8007c4e:	69fb      	ldr	r3, [r7, #28]
 8007c50:	4413      	add	r3, r2
 8007c52:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007c56:	681b      	ldr	r3, [r3, #0]
 8007c58:	69ba      	ldr	r2, [r7, #24]
 8007c5a:	0151      	lsls	r1, r2, #5
 8007c5c:	69fa      	ldr	r2, [r7, #28]
 8007c5e:	440a      	add	r2, r1
 8007c60:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007c64:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8007c68:	6013      	str	r3, [r2, #0]
 8007c6a:	e00f      	b.n	8007c8c <USB_EPStartXfer+0x304>
 8007c6c:	69bb      	ldr	r3, [r7, #24]
 8007c6e:	015a      	lsls	r2, r3, #5
 8007c70:	69fb      	ldr	r3, [r7, #28]
 8007c72:	4413      	add	r3, r2
 8007c74:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007c78:	681b      	ldr	r3, [r3, #0]
 8007c7a:	69ba      	ldr	r2, [r7, #24]
 8007c7c:	0151      	lsls	r1, r2, #5
 8007c7e:	69fa      	ldr	r2, [r7, #28]
 8007c80:	440a      	add	r2, r1
 8007c82:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007c86:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007c8a:	6013      	str	r3, [r2, #0]
 8007c8c:	68bb      	ldr	r3, [r7, #8]
 8007c8e:	68d9      	ldr	r1, [r3, #12]
 8007c90:	68bb      	ldr	r3, [r7, #8]
 8007c92:	781a      	ldrb	r2, [r3, #0]
 8007c94:	68bb      	ldr	r3, [r7, #8]
 8007c96:	691b      	ldr	r3, [r3, #16]
 8007c98:	b298      	uxth	r0, r3
 8007c9a:	79fb      	ldrb	r3, [r7, #7]
 8007c9c:	9300      	str	r3, [sp, #0]
 8007c9e:	4603      	mov	r3, r0
 8007ca0:	68f8      	ldr	r0, [r7, #12]
 8007ca2:	f000 f9b9 	bl	8008018 <USB_WritePacket>
 8007ca6:	e105      	b.n	8007eb4 <USB_EPStartXfer+0x52c>
 8007ca8:	69bb      	ldr	r3, [r7, #24]
 8007caa:	015a      	lsls	r2, r3, #5
 8007cac:	69fb      	ldr	r3, [r7, #28]
 8007cae:	4413      	add	r3, r2
 8007cb0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007cb4:	691b      	ldr	r3, [r3, #16]
 8007cb6:	69ba      	ldr	r2, [r7, #24]
 8007cb8:	0151      	lsls	r1, r2, #5
 8007cba:	69fa      	ldr	r2, [r7, #28]
 8007cbc:	440a      	add	r2, r1
 8007cbe:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007cc2:	0cdb      	lsrs	r3, r3, #19
 8007cc4:	04db      	lsls	r3, r3, #19
 8007cc6:	6113      	str	r3, [r2, #16]
 8007cc8:	69bb      	ldr	r3, [r7, #24]
 8007cca:	015a      	lsls	r2, r3, #5
 8007ccc:	69fb      	ldr	r3, [r7, #28]
 8007cce:	4413      	add	r3, r2
 8007cd0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007cd4:	691b      	ldr	r3, [r3, #16]
 8007cd6:	69ba      	ldr	r2, [r7, #24]
 8007cd8:	0151      	lsls	r1, r2, #5
 8007cda:	69fa      	ldr	r2, [r7, #28]
 8007cdc:	440a      	add	r2, r1
 8007cde:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007ce2:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8007ce6:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8007cea:	6113      	str	r3, [r2, #16]
 8007cec:	69bb      	ldr	r3, [r7, #24]
 8007cee:	2b00      	cmp	r3, #0
 8007cf0:	d132      	bne.n	8007d58 <USB_EPStartXfer+0x3d0>
 8007cf2:	68bb      	ldr	r3, [r7, #8]
 8007cf4:	691b      	ldr	r3, [r3, #16]
 8007cf6:	2b00      	cmp	r3, #0
 8007cf8:	d003      	beq.n	8007d02 <USB_EPStartXfer+0x37a>
 8007cfa:	68bb      	ldr	r3, [r7, #8]
 8007cfc:	689a      	ldr	r2, [r3, #8]
 8007cfe:	68bb      	ldr	r3, [r7, #8]
 8007d00:	611a      	str	r2, [r3, #16]
 8007d02:	68bb      	ldr	r3, [r7, #8]
 8007d04:	689a      	ldr	r2, [r3, #8]
 8007d06:	68bb      	ldr	r3, [r7, #8]
 8007d08:	621a      	str	r2, [r3, #32]
 8007d0a:	69bb      	ldr	r3, [r7, #24]
 8007d0c:	015a      	lsls	r2, r3, #5
 8007d0e:	69fb      	ldr	r3, [r7, #28]
 8007d10:	4413      	add	r3, r2
 8007d12:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007d16:	691a      	ldr	r2, [r3, #16]
 8007d18:	68bb      	ldr	r3, [r7, #8]
 8007d1a:	6a1b      	ldr	r3, [r3, #32]
 8007d1c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007d20:	69b9      	ldr	r1, [r7, #24]
 8007d22:	0148      	lsls	r0, r1, #5
 8007d24:	69f9      	ldr	r1, [r7, #28]
 8007d26:	4401      	add	r1, r0
 8007d28:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8007d2c:	4313      	orrs	r3, r2
 8007d2e:	610b      	str	r3, [r1, #16]
 8007d30:	69bb      	ldr	r3, [r7, #24]
 8007d32:	015a      	lsls	r2, r3, #5
 8007d34:	69fb      	ldr	r3, [r7, #28]
 8007d36:	4413      	add	r3, r2
 8007d38:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007d3c:	691b      	ldr	r3, [r3, #16]
 8007d3e:	69ba      	ldr	r2, [r7, #24]
 8007d40:	0151      	lsls	r1, r2, #5
 8007d42:	69fa      	ldr	r2, [r7, #28]
 8007d44:	440a      	add	r2, r1
 8007d46:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007d4a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8007d4e:	6113      	str	r3, [r2, #16]
 8007d50:	e062      	b.n	8007e18 <USB_EPStartXfer+0x490>
 8007d52:	bf00      	nop
 8007d54:	1ff80000 	.word	0x1ff80000
 8007d58:	68bb      	ldr	r3, [r7, #8]
 8007d5a:	691b      	ldr	r3, [r3, #16]
 8007d5c:	2b00      	cmp	r3, #0
 8007d5e:	d123      	bne.n	8007da8 <USB_EPStartXfer+0x420>
 8007d60:	69bb      	ldr	r3, [r7, #24]
 8007d62:	015a      	lsls	r2, r3, #5
 8007d64:	69fb      	ldr	r3, [r7, #28]
 8007d66:	4413      	add	r3, r2
 8007d68:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007d6c:	691a      	ldr	r2, [r3, #16]
 8007d6e:	68bb      	ldr	r3, [r7, #8]
 8007d70:	689b      	ldr	r3, [r3, #8]
 8007d72:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007d76:	69b9      	ldr	r1, [r7, #24]
 8007d78:	0148      	lsls	r0, r1, #5
 8007d7a:	69f9      	ldr	r1, [r7, #28]
 8007d7c:	4401      	add	r1, r0
 8007d7e:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8007d82:	4313      	orrs	r3, r2
 8007d84:	610b      	str	r3, [r1, #16]
 8007d86:	69bb      	ldr	r3, [r7, #24]
 8007d88:	015a      	lsls	r2, r3, #5
 8007d8a:	69fb      	ldr	r3, [r7, #28]
 8007d8c:	4413      	add	r3, r2
 8007d8e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007d92:	691b      	ldr	r3, [r3, #16]
 8007d94:	69ba      	ldr	r2, [r7, #24]
 8007d96:	0151      	lsls	r1, r2, #5
 8007d98:	69fa      	ldr	r2, [r7, #28]
 8007d9a:	440a      	add	r2, r1
 8007d9c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007da0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8007da4:	6113      	str	r3, [r2, #16]
 8007da6:	e037      	b.n	8007e18 <USB_EPStartXfer+0x490>
 8007da8:	68bb      	ldr	r3, [r7, #8]
 8007daa:	691a      	ldr	r2, [r3, #16]
 8007dac:	68bb      	ldr	r3, [r7, #8]
 8007dae:	689b      	ldr	r3, [r3, #8]
 8007db0:	4413      	add	r3, r2
 8007db2:	1e5a      	subs	r2, r3, #1
 8007db4:	68bb      	ldr	r3, [r7, #8]
 8007db6:	689b      	ldr	r3, [r3, #8]
 8007db8:	fbb2 f3f3 	udiv	r3, r2, r3
 8007dbc:	82fb      	strh	r3, [r7, #22]
 8007dbe:	68bb      	ldr	r3, [r7, #8]
 8007dc0:	689b      	ldr	r3, [r3, #8]
 8007dc2:	8afa      	ldrh	r2, [r7, #22]
 8007dc4:	fb03 f202 	mul.w	r2, r3, r2
 8007dc8:	68bb      	ldr	r3, [r7, #8]
 8007dca:	621a      	str	r2, [r3, #32]
 8007dcc:	69bb      	ldr	r3, [r7, #24]
 8007dce:	015a      	lsls	r2, r3, #5
 8007dd0:	69fb      	ldr	r3, [r7, #28]
 8007dd2:	4413      	add	r3, r2
 8007dd4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007dd8:	691a      	ldr	r2, [r3, #16]
 8007dda:	8afb      	ldrh	r3, [r7, #22]
 8007ddc:	04d9      	lsls	r1, r3, #19
 8007dde:	4b38      	ldr	r3, [pc, #224]	@ (8007ec0 <USB_EPStartXfer+0x538>)
 8007de0:	400b      	ands	r3, r1
 8007de2:	69b9      	ldr	r1, [r7, #24]
 8007de4:	0148      	lsls	r0, r1, #5
 8007de6:	69f9      	ldr	r1, [r7, #28]
 8007de8:	4401      	add	r1, r0
 8007dea:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8007dee:	4313      	orrs	r3, r2
 8007df0:	610b      	str	r3, [r1, #16]
 8007df2:	69bb      	ldr	r3, [r7, #24]
 8007df4:	015a      	lsls	r2, r3, #5
 8007df6:	69fb      	ldr	r3, [r7, #28]
 8007df8:	4413      	add	r3, r2
 8007dfa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007dfe:	691a      	ldr	r2, [r3, #16]
 8007e00:	68bb      	ldr	r3, [r7, #8]
 8007e02:	6a1b      	ldr	r3, [r3, #32]
 8007e04:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007e08:	69b9      	ldr	r1, [r7, #24]
 8007e0a:	0148      	lsls	r0, r1, #5
 8007e0c:	69f9      	ldr	r1, [r7, #28]
 8007e0e:	4401      	add	r1, r0
 8007e10:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8007e14:	4313      	orrs	r3, r2
 8007e16:	610b      	str	r3, [r1, #16]
 8007e18:	79fb      	ldrb	r3, [r7, #7]
 8007e1a:	2b01      	cmp	r3, #1
 8007e1c:	d10d      	bne.n	8007e3a <USB_EPStartXfer+0x4b2>
 8007e1e:	68bb      	ldr	r3, [r7, #8]
 8007e20:	68db      	ldr	r3, [r3, #12]
 8007e22:	2b00      	cmp	r3, #0
 8007e24:	d009      	beq.n	8007e3a <USB_EPStartXfer+0x4b2>
 8007e26:	68bb      	ldr	r3, [r7, #8]
 8007e28:	68d9      	ldr	r1, [r3, #12]
 8007e2a:	69bb      	ldr	r3, [r7, #24]
 8007e2c:	015a      	lsls	r2, r3, #5
 8007e2e:	69fb      	ldr	r3, [r7, #28]
 8007e30:	4413      	add	r3, r2
 8007e32:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007e36:	460a      	mov	r2, r1
 8007e38:	615a      	str	r2, [r3, #20]
 8007e3a:	68bb      	ldr	r3, [r7, #8]
 8007e3c:	791b      	ldrb	r3, [r3, #4]
 8007e3e:	2b01      	cmp	r3, #1
 8007e40:	d128      	bne.n	8007e94 <USB_EPStartXfer+0x50c>
 8007e42:	69fb      	ldr	r3, [r7, #28]
 8007e44:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8007e48:	689b      	ldr	r3, [r3, #8]
 8007e4a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007e4e:	2b00      	cmp	r3, #0
 8007e50:	d110      	bne.n	8007e74 <USB_EPStartXfer+0x4ec>
 8007e52:	69bb      	ldr	r3, [r7, #24]
 8007e54:	015a      	lsls	r2, r3, #5
 8007e56:	69fb      	ldr	r3, [r7, #28]
 8007e58:	4413      	add	r3, r2
 8007e5a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	69ba      	ldr	r2, [r7, #24]
 8007e62:	0151      	lsls	r1, r2, #5
 8007e64:	69fa      	ldr	r2, [r7, #28]
 8007e66:	440a      	add	r2, r1
 8007e68:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007e6c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8007e70:	6013      	str	r3, [r2, #0]
 8007e72:	e00f      	b.n	8007e94 <USB_EPStartXfer+0x50c>
 8007e74:	69bb      	ldr	r3, [r7, #24]
 8007e76:	015a      	lsls	r2, r3, #5
 8007e78:	69fb      	ldr	r3, [r7, #28]
 8007e7a:	4413      	add	r3, r2
 8007e7c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007e80:	681b      	ldr	r3, [r3, #0]
 8007e82:	69ba      	ldr	r2, [r7, #24]
 8007e84:	0151      	lsls	r1, r2, #5
 8007e86:	69fa      	ldr	r2, [r7, #28]
 8007e88:	440a      	add	r2, r1
 8007e8a:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007e8e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007e92:	6013      	str	r3, [r2, #0]
 8007e94:	69bb      	ldr	r3, [r7, #24]
 8007e96:	015a      	lsls	r2, r3, #5
 8007e98:	69fb      	ldr	r3, [r7, #28]
 8007e9a:	4413      	add	r3, r2
 8007e9c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007ea0:	681b      	ldr	r3, [r3, #0]
 8007ea2:	69ba      	ldr	r2, [r7, #24]
 8007ea4:	0151      	lsls	r1, r2, #5
 8007ea6:	69fa      	ldr	r2, [r7, #28]
 8007ea8:	440a      	add	r2, r1
 8007eaa:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007eae:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007eb2:	6013      	str	r3, [r2, #0]
 8007eb4:	2300      	movs	r3, #0
 8007eb6:	4618      	mov	r0, r3
 8007eb8:	3720      	adds	r7, #32
 8007eba:	46bd      	mov	sp, r7
 8007ebc:	bd80      	pop	{r7, pc}
 8007ebe:	bf00      	nop
 8007ec0:	1ff80000 	.word	0x1ff80000

08007ec4 <USB_EPStopXfer>:
 8007ec4:	b480      	push	{r7}
 8007ec6:	b087      	sub	sp, #28
 8007ec8:	af00      	add	r7, sp, #0
 8007eca:	6078      	str	r0, [r7, #4]
 8007ecc:	6039      	str	r1, [r7, #0]
 8007ece:	2300      	movs	r3, #0
 8007ed0:	60fb      	str	r3, [r7, #12]
 8007ed2:	2300      	movs	r3, #0
 8007ed4:	75fb      	strb	r3, [r7, #23]
 8007ed6:	687b      	ldr	r3, [r7, #4]
 8007ed8:	613b      	str	r3, [r7, #16]
 8007eda:	683b      	ldr	r3, [r7, #0]
 8007edc:	785b      	ldrb	r3, [r3, #1]
 8007ede:	2b01      	cmp	r3, #1
 8007ee0:	d14a      	bne.n	8007f78 <USB_EPStopXfer+0xb4>
 8007ee2:	683b      	ldr	r3, [r7, #0]
 8007ee4:	781b      	ldrb	r3, [r3, #0]
 8007ee6:	015a      	lsls	r2, r3, #5
 8007ee8:	693b      	ldr	r3, [r7, #16]
 8007eea:	4413      	add	r3, r2
 8007eec:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007ef0:	681b      	ldr	r3, [r3, #0]
 8007ef2:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8007ef6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8007efa:	f040 8086 	bne.w	800800a <USB_EPStopXfer+0x146>
 8007efe:	683b      	ldr	r3, [r7, #0]
 8007f00:	781b      	ldrb	r3, [r3, #0]
 8007f02:	015a      	lsls	r2, r3, #5
 8007f04:	693b      	ldr	r3, [r7, #16]
 8007f06:	4413      	add	r3, r2
 8007f08:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007f0c:	681b      	ldr	r3, [r3, #0]
 8007f0e:	683a      	ldr	r2, [r7, #0]
 8007f10:	7812      	ldrb	r2, [r2, #0]
 8007f12:	0151      	lsls	r1, r2, #5
 8007f14:	693a      	ldr	r2, [r7, #16]
 8007f16:	440a      	add	r2, r1
 8007f18:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007f1c:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8007f20:	6013      	str	r3, [r2, #0]
 8007f22:	683b      	ldr	r3, [r7, #0]
 8007f24:	781b      	ldrb	r3, [r3, #0]
 8007f26:	015a      	lsls	r2, r3, #5
 8007f28:	693b      	ldr	r3, [r7, #16]
 8007f2a:	4413      	add	r3, r2
 8007f2c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007f30:	681b      	ldr	r3, [r3, #0]
 8007f32:	683a      	ldr	r2, [r7, #0]
 8007f34:	7812      	ldrb	r2, [r2, #0]
 8007f36:	0151      	lsls	r1, r2, #5
 8007f38:	693a      	ldr	r2, [r7, #16]
 8007f3a:	440a      	add	r2, r1
 8007f3c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8007f40:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8007f44:	6013      	str	r3, [r2, #0]
 8007f46:	68fb      	ldr	r3, [r7, #12]
 8007f48:	3301      	adds	r3, #1
 8007f4a:	60fb      	str	r3, [r7, #12]
 8007f4c:	68fb      	ldr	r3, [r7, #12]
 8007f4e:	f242 7210 	movw	r2, #10000	@ 0x2710
 8007f52:	4293      	cmp	r3, r2
 8007f54:	d902      	bls.n	8007f5c <USB_EPStopXfer+0x98>
 8007f56:	2301      	movs	r3, #1
 8007f58:	75fb      	strb	r3, [r7, #23]
 8007f5a:	e056      	b.n	800800a <USB_EPStopXfer+0x146>
 8007f5c:	683b      	ldr	r3, [r7, #0]
 8007f5e:	781b      	ldrb	r3, [r3, #0]
 8007f60:	015a      	lsls	r2, r3, #5
 8007f62:	693b      	ldr	r3, [r7, #16]
 8007f64:	4413      	add	r3, r2
 8007f66:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8007f6a:	681b      	ldr	r3, [r3, #0]
 8007f6c:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8007f70:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8007f74:	d0e7      	beq.n	8007f46 <USB_EPStopXfer+0x82>
 8007f76:	e048      	b.n	800800a <USB_EPStopXfer+0x146>
 8007f78:	683b      	ldr	r3, [r7, #0]
 8007f7a:	781b      	ldrb	r3, [r3, #0]
 8007f7c:	015a      	lsls	r2, r3, #5
 8007f7e:	693b      	ldr	r3, [r7, #16]
 8007f80:	4413      	add	r3, r2
 8007f82:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8007f8c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8007f90:	d13b      	bne.n	800800a <USB_EPStopXfer+0x146>
 8007f92:	683b      	ldr	r3, [r7, #0]
 8007f94:	781b      	ldrb	r3, [r3, #0]
 8007f96:	015a      	lsls	r2, r3, #5
 8007f98:	693b      	ldr	r3, [r7, #16]
 8007f9a:	4413      	add	r3, r2
 8007f9c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007fa0:	681b      	ldr	r3, [r3, #0]
 8007fa2:	683a      	ldr	r2, [r7, #0]
 8007fa4:	7812      	ldrb	r2, [r2, #0]
 8007fa6:	0151      	lsls	r1, r2, #5
 8007fa8:	693a      	ldr	r2, [r7, #16]
 8007faa:	440a      	add	r2, r1
 8007fac:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007fb0:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8007fb4:	6013      	str	r3, [r2, #0]
 8007fb6:	683b      	ldr	r3, [r7, #0]
 8007fb8:	781b      	ldrb	r3, [r3, #0]
 8007fba:	015a      	lsls	r2, r3, #5
 8007fbc:	693b      	ldr	r3, [r7, #16]
 8007fbe:	4413      	add	r3, r2
 8007fc0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007fc4:	681b      	ldr	r3, [r3, #0]
 8007fc6:	683a      	ldr	r2, [r7, #0]
 8007fc8:	7812      	ldrb	r2, [r2, #0]
 8007fca:	0151      	lsls	r1, r2, #5
 8007fcc:	693a      	ldr	r2, [r7, #16]
 8007fce:	440a      	add	r2, r1
 8007fd0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8007fd4:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8007fd8:	6013      	str	r3, [r2, #0]
 8007fda:	68fb      	ldr	r3, [r7, #12]
 8007fdc:	3301      	adds	r3, #1
 8007fde:	60fb      	str	r3, [r7, #12]
 8007fe0:	68fb      	ldr	r3, [r7, #12]
 8007fe2:	f242 7210 	movw	r2, #10000	@ 0x2710
 8007fe6:	4293      	cmp	r3, r2
 8007fe8:	d902      	bls.n	8007ff0 <USB_EPStopXfer+0x12c>
 8007fea:	2301      	movs	r3, #1
 8007fec:	75fb      	strb	r3, [r7, #23]
 8007fee:	e00c      	b.n	800800a <USB_EPStopXfer+0x146>
 8007ff0:	683b      	ldr	r3, [r7, #0]
 8007ff2:	781b      	ldrb	r3, [r3, #0]
 8007ff4:	015a      	lsls	r2, r3, #5
 8007ff6:	693b      	ldr	r3, [r7, #16]
 8007ff8:	4413      	add	r3, r2
 8007ffa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8007ffe:	681b      	ldr	r3, [r3, #0]
 8008000:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8008004:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8008008:	d0e7      	beq.n	8007fda <USB_EPStopXfer+0x116>
 800800a:	7dfb      	ldrb	r3, [r7, #23]
 800800c:	4618      	mov	r0, r3
 800800e:	371c      	adds	r7, #28
 8008010:	46bd      	mov	sp, r7
 8008012:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008016:	4770      	bx	lr

08008018 <USB_WritePacket>:
 8008018:	b480      	push	{r7}
 800801a:	b089      	sub	sp, #36	@ 0x24
 800801c:	af00      	add	r7, sp, #0
 800801e:	60f8      	str	r0, [r7, #12]
 8008020:	60b9      	str	r1, [r7, #8]
 8008022:	4611      	mov	r1, r2
 8008024:	461a      	mov	r2, r3
 8008026:	460b      	mov	r3, r1
 8008028:	71fb      	strb	r3, [r7, #7]
 800802a:	4613      	mov	r3, r2
 800802c:	80bb      	strh	r3, [r7, #4]
 800802e:	68fb      	ldr	r3, [r7, #12]
 8008030:	617b      	str	r3, [r7, #20]
 8008032:	68bb      	ldr	r3, [r7, #8]
 8008034:	61fb      	str	r3, [r7, #28]
 8008036:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800803a:	2b00      	cmp	r3, #0
 800803c:	d123      	bne.n	8008086 <USB_WritePacket+0x6e>
 800803e:	88bb      	ldrh	r3, [r7, #4]
 8008040:	3303      	adds	r3, #3
 8008042:	089b      	lsrs	r3, r3, #2
 8008044:	613b      	str	r3, [r7, #16]
 8008046:	2300      	movs	r3, #0
 8008048:	61bb      	str	r3, [r7, #24]
 800804a:	e018      	b.n	800807e <USB_WritePacket+0x66>
 800804c:	79fb      	ldrb	r3, [r7, #7]
 800804e:	031a      	lsls	r2, r3, #12
 8008050:	697b      	ldr	r3, [r7, #20]
 8008052:	4413      	add	r3, r2
 8008054:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008058:	461a      	mov	r2, r3
 800805a:	69fb      	ldr	r3, [r7, #28]
 800805c:	681b      	ldr	r3, [r3, #0]
 800805e:	6013      	str	r3, [r2, #0]
 8008060:	69fb      	ldr	r3, [r7, #28]
 8008062:	3301      	adds	r3, #1
 8008064:	61fb      	str	r3, [r7, #28]
 8008066:	69fb      	ldr	r3, [r7, #28]
 8008068:	3301      	adds	r3, #1
 800806a:	61fb      	str	r3, [r7, #28]
 800806c:	69fb      	ldr	r3, [r7, #28]
 800806e:	3301      	adds	r3, #1
 8008070:	61fb      	str	r3, [r7, #28]
 8008072:	69fb      	ldr	r3, [r7, #28]
 8008074:	3301      	adds	r3, #1
 8008076:	61fb      	str	r3, [r7, #28]
 8008078:	69bb      	ldr	r3, [r7, #24]
 800807a:	3301      	adds	r3, #1
 800807c:	61bb      	str	r3, [r7, #24]
 800807e:	69ba      	ldr	r2, [r7, #24]
 8008080:	693b      	ldr	r3, [r7, #16]
 8008082:	429a      	cmp	r2, r3
 8008084:	d3e2      	bcc.n	800804c <USB_WritePacket+0x34>
 8008086:	2300      	movs	r3, #0
 8008088:	4618      	mov	r0, r3
 800808a:	3724      	adds	r7, #36	@ 0x24
 800808c:	46bd      	mov	sp, r7
 800808e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008092:	4770      	bx	lr

08008094 <USB_ReadPacket>:
 8008094:	b480      	push	{r7}
 8008096:	b08b      	sub	sp, #44	@ 0x2c
 8008098:	af00      	add	r7, sp, #0
 800809a:	60f8      	str	r0, [r7, #12]
 800809c:	60b9      	str	r1, [r7, #8]
 800809e:	4613      	mov	r3, r2
 80080a0:	80fb      	strh	r3, [r7, #6]
 80080a2:	68fb      	ldr	r3, [r7, #12]
 80080a4:	61bb      	str	r3, [r7, #24]
 80080a6:	68bb      	ldr	r3, [r7, #8]
 80080a8:	627b      	str	r3, [r7, #36]	@ 0x24
 80080aa:	88fb      	ldrh	r3, [r7, #6]
 80080ac:	089b      	lsrs	r3, r3, #2
 80080ae:	b29b      	uxth	r3, r3
 80080b0:	617b      	str	r3, [r7, #20]
 80080b2:	88fb      	ldrh	r3, [r7, #6]
 80080b4:	f003 0303 	and.w	r3, r3, #3
 80080b8:	83fb      	strh	r3, [r7, #30]
 80080ba:	2300      	movs	r3, #0
 80080bc:	623b      	str	r3, [r7, #32]
 80080be:	e014      	b.n	80080ea <USB_ReadPacket+0x56>
 80080c0:	69bb      	ldr	r3, [r7, #24]
 80080c2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80080c6:	681a      	ldr	r2, [r3, #0]
 80080c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80080ca:	601a      	str	r2, [r3, #0]
 80080cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80080ce:	3301      	adds	r3, #1
 80080d0:	627b      	str	r3, [r7, #36]	@ 0x24
 80080d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80080d4:	3301      	adds	r3, #1
 80080d6:	627b      	str	r3, [r7, #36]	@ 0x24
 80080d8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80080da:	3301      	adds	r3, #1
 80080dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80080de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80080e0:	3301      	adds	r3, #1
 80080e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80080e4:	6a3b      	ldr	r3, [r7, #32]
 80080e6:	3301      	adds	r3, #1
 80080e8:	623b      	str	r3, [r7, #32]
 80080ea:	6a3a      	ldr	r2, [r7, #32]
 80080ec:	697b      	ldr	r3, [r7, #20]
 80080ee:	429a      	cmp	r2, r3
 80080f0:	d3e6      	bcc.n	80080c0 <USB_ReadPacket+0x2c>
 80080f2:	8bfb      	ldrh	r3, [r7, #30]
 80080f4:	2b00      	cmp	r3, #0
 80080f6:	d01e      	beq.n	8008136 <USB_ReadPacket+0xa2>
 80080f8:	2300      	movs	r3, #0
 80080fa:	623b      	str	r3, [r7, #32]
 80080fc:	69bb      	ldr	r3, [r7, #24]
 80080fe:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008102:	461a      	mov	r2, r3
 8008104:	f107 0310 	add.w	r3, r7, #16
 8008108:	6812      	ldr	r2, [r2, #0]
 800810a:	601a      	str	r2, [r3, #0]
 800810c:	693a      	ldr	r2, [r7, #16]
 800810e:	6a3b      	ldr	r3, [r7, #32]
 8008110:	b2db      	uxtb	r3, r3
 8008112:	00db      	lsls	r3, r3, #3
 8008114:	fa22 f303 	lsr.w	r3, r2, r3
 8008118:	b2da      	uxtb	r2, r3
 800811a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800811c:	701a      	strb	r2, [r3, #0]
 800811e:	6a3b      	ldr	r3, [r7, #32]
 8008120:	3301      	adds	r3, #1
 8008122:	623b      	str	r3, [r7, #32]
 8008124:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008126:	3301      	adds	r3, #1
 8008128:	627b      	str	r3, [r7, #36]	@ 0x24
 800812a:	8bfb      	ldrh	r3, [r7, #30]
 800812c:	3b01      	subs	r3, #1
 800812e:	83fb      	strh	r3, [r7, #30]
 8008130:	8bfb      	ldrh	r3, [r7, #30]
 8008132:	2b00      	cmp	r3, #0
 8008134:	d1ea      	bne.n	800810c <USB_ReadPacket+0x78>
 8008136:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008138:	4618      	mov	r0, r3
 800813a:	372c      	adds	r7, #44	@ 0x2c
 800813c:	46bd      	mov	sp, r7
 800813e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008142:	4770      	bx	lr

08008144 <USB_EPSetStall>:
 8008144:	b480      	push	{r7}
 8008146:	b085      	sub	sp, #20
 8008148:	af00      	add	r7, sp, #0
 800814a:	6078      	str	r0, [r7, #4]
 800814c:	6039      	str	r1, [r7, #0]
 800814e:	687b      	ldr	r3, [r7, #4]
 8008150:	60fb      	str	r3, [r7, #12]
 8008152:	683b      	ldr	r3, [r7, #0]
 8008154:	781b      	ldrb	r3, [r3, #0]
 8008156:	60bb      	str	r3, [r7, #8]
 8008158:	683b      	ldr	r3, [r7, #0]
 800815a:	785b      	ldrb	r3, [r3, #1]
 800815c:	2b01      	cmp	r3, #1
 800815e:	d12c      	bne.n	80081ba <USB_EPSetStall+0x76>
 8008160:	68bb      	ldr	r3, [r7, #8]
 8008162:	015a      	lsls	r2, r3, #5
 8008164:	68fb      	ldr	r3, [r7, #12]
 8008166:	4413      	add	r3, r2
 8008168:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800816c:	681b      	ldr	r3, [r3, #0]
 800816e:	2b00      	cmp	r3, #0
 8008170:	db12      	blt.n	8008198 <USB_EPSetStall+0x54>
 8008172:	68bb      	ldr	r3, [r7, #8]
 8008174:	2b00      	cmp	r3, #0
 8008176:	d00f      	beq.n	8008198 <USB_EPSetStall+0x54>
 8008178:	68bb      	ldr	r3, [r7, #8]
 800817a:	015a      	lsls	r2, r3, #5
 800817c:	68fb      	ldr	r3, [r7, #12]
 800817e:	4413      	add	r3, r2
 8008180:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8008184:	681b      	ldr	r3, [r3, #0]
 8008186:	68ba      	ldr	r2, [r7, #8]
 8008188:	0151      	lsls	r1, r2, #5
 800818a:	68fa      	ldr	r2, [r7, #12]
 800818c:	440a      	add	r2, r1
 800818e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8008192:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8008196:	6013      	str	r3, [r2, #0]
 8008198:	68bb      	ldr	r3, [r7, #8]
 800819a:	015a      	lsls	r2, r3, #5
 800819c:	68fb      	ldr	r3, [r7, #12]
 800819e:	4413      	add	r3, r2
 80081a0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80081a4:	681b      	ldr	r3, [r3, #0]
 80081a6:	68ba      	ldr	r2, [r7, #8]
 80081a8:	0151      	lsls	r1, r2, #5
 80081aa:	68fa      	ldr	r2, [r7, #12]
 80081ac:	440a      	add	r2, r1
 80081ae:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80081b2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80081b6:	6013      	str	r3, [r2, #0]
 80081b8:	e02b      	b.n	8008212 <USB_EPSetStall+0xce>
 80081ba:	68bb      	ldr	r3, [r7, #8]
 80081bc:	015a      	lsls	r2, r3, #5
 80081be:	68fb      	ldr	r3, [r7, #12]
 80081c0:	4413      	add	r3, r2
 80081c2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80081c6:	681b      	ldr	r3, [r3, #0]
 80081c8:	2b00      	cmp	r3, #0
 80081ca:	db12      	blt.n	80081f2 <USB_EPSetStall+0xae>
 80081cc:	68bb      	ldr	r3, [r7, #8]
 80081ce:	2b00      	cmp	r3, #0
 80081d0:	d00f      	beq.n	80081f2 <USB_EPSetStall+0xae>
 80081d2:	68bb      	ldr	r3, [r7, #8]
 80081d4:	015a      	lsls	r2, r3, #5
 80081d6:	68fb      	ldr	r3, [r7, #12]
 80081d8:	4413      	add	r3, r2
 80081da:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80081de:	681b      	ldr	r3, [r3, #0]
 80081e0:	68ba      	ldr	r2, [r7, #8]
 80081e2:	0151      	lsls	r1, r2, #5
 80081e4:	68fa      	ldr	r2, [r7, #12]
 80081e6:	440a      	add	r2, r1
 80081e8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80081ec:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80081f0:	6013      	str	r3, [r2, #0]
 80081f2:	68bb      	ldr	r3, [r7, #8]
 80081f4:	015a      	lsls	r2, r3, #5
 80081f6:	68fb      	ldr	r3, [r7, #12]
 80081f8:	4413      	add	r3, r2
 80081fa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80081fe:	681b      	ldr	r3, [r3, #0]
 8008200:	68ba      	ldr	r2, [r7, #8]
 8008202:	0151      	lsls	r1, r2, #5
 8008204:	68fa      	ldr	r2, [r7, #12]
 8008206:	440a      	add	r2, r1
 8008208:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800820c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8008210:	6013      	str	r3, [r2, #0]
 8008212:	2300      	movs	r3, #0
 8008214:	4618      	mov	r0, r3
 8008216:	3714      	adds	r7, #20
 8008218:	46bd      	mov	sp, r7
 800821a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800821e:	4770      	bx	lr

08008220 <USB_EPClearStall>:
 8008220:	b480      	push	{r7}
 8008222:	b085      	sub	sp, #20
 8008224:	af00      	add	r7, sp, #0
 8008226:	6078      	str	r0, [r7, #4]
 8008228:	6039      	str	r1, [r7, #0]
 800822a:	687b      	ldr	r3, [r7, #4]
 800822c:	60fb      	str	r3, [r7, #12]
 800822e:	683b      	ldr	r3, [r7, #0]
 8008230:	781b      	ldrb	r3, [r3, #0]
 8008232:	60bb      	str	r3, [r7, #8]
 8008234:	683b      	ldr	r3, [r7, #0]
 8008236:	785b      	ldrb	r3, [r3, #1]
 8008238:	2b01      	cmp	r3, #1
 800823a:	d128      	bne.n	800828e <USB_EPClearStall+0x6e>
 800823c:	68bb      	ldr	r3, [r7, #8]
 800823e:	015a      	lsls	r2, r3, #5
 8008240:	68fb      	ldr	r3, [r7, #12]
 8008242:	4413      	add	r3, r2
 8008244:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8008248:	681b      	ldr	r3, [r3, #0]
 800824a:	68ba      	ldr	r2, [r7, #8]
 800824c:	0151      	lsls	r1, r2, #5
 800824e:	68fa      	ldr	r2, [r7, #12]
 8008250:	440a      	add	r2, r1
 8008252:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8008256:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800825a:	6013      	str	r3, [r2, #0]
 800825c:	683b      	ldr	r3, [r7, #0]
 800825e:	791b      	ldrb	r3, [r3, #4]
 8008260:	2b03      	cmp	r3, #3
 8008262:	d003      	beq.n	800826c <USB_EPClearStall+0x4c>
 8008264:	683b      	ldr	r3, [r7, #0]
 8008266:	791b      	ldrb	r3, [r3, #4]
 8008268:	2b02      	cmp	r3, #2
 800826a:	d138      	bne.n	80082de <USB_EPClearStall+0xbe>
 800826c:	68bb      	ldr	r3, [r7, #8]
 800826e:	015a      	lsls	r2, r3, #5
 8008270:	68fb      	ldr	r3, [r7, #12]
 8008272:	4413      	add	r3, r2
 8008274:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8008278:	681b      	ldr	r3, [r3, #0]
 800827a:	68ba      	ldr	r2, [r7, #8]
 800827c:	0151      	lsls	r1, r2, #5
 800827e:	68fa      	ldr	r2, [r7, #12]
 8008280:	440a      	add	r2, r1
 8008282:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8008286:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800828a:	6013      	str	r3, [r2, #0]
 800828c:	e027      	b.n	80082de <USB_EPClearStall+0xbe>
 800828e:	68bb      	ldr	r3, [r7, #8]
 8008290:	015a      	lsls	r2, r3, #5
 8008292:	68fb      	ldr	r3, [r7, #12]
 8008294:	4413      	add	r3, r2
 8008296:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800829a:	681b      	ldr	r3, [r3, #0]
 800829c:	68ba      	ldr	r2, [r7, #8]
 800829e:	0151      	lsls	r1, r2, #5
 80082a0:	68fa      	ldr	r2, [r7, #12]
 80082a2:	440a      	add	r2, r1
 80082a4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80082a8:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80082ac:	6013      	str	r3, [r2, #0]
 80082ae:	683b      	ldr	r3, [r7, #0]
 80082b0:	791b      	ldrb	r3, [r3, #4]
 80082b2:	2b03      	cmp	r3, #3
 80082b4:	d003      	beq.n	80082be <USB_EPClearStall+0x9e>
 80082b6:	683b      	ldr	r3, [r7, #0]
 80082b8:	791b      	ldrb	r3, [r3, #4]
 80082ba:	2b02      	cmp	r3, #2
 80082bc:	d10f      	bne.n	80082de <USB_EPClearStall+0xbe>
 80082be:	68bb      	ldr	r3, [r7, #8]
 80082c0:	015a      	lsls	r2, r3, #5
 80082c2:	68fb      	ldr	r3, [r7, #12]
 80082c4:	4413      	add	r3, r2
 80082c6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80082ca:	681b      	ldr	r3, [r3, #0]
 80082cc:	68ba      	ldr	r2, [r7, #8]
 80082ce:	0151      	lsls	r1, r2, #5
 80082d0:	68fa      	ldr	r2, [r7, #12]
 80082d2:	440a      	add	r2, r1
 80082d4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80082d8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80082dc:	6013      	str	r3, [r2, #0]
 80082de:	2300      	movs	r3, #0
 80082e0:	4618      	mov	r0, r3
 80082e2:	3714      	adds	r7, #20
 80082e4:	46bd      	mov	sp, r7
 80082e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082ea:	4770      	bx	lr

080082ec <USB_SetDevAddress>:
 80082ec:	b480      	push	{r7}
 80082ee:	b085      	sub	sp, #20
 80082f0:	af00      	add	r7, sp, #0
 80082f2:	6078      	str	r0, [r7, #4]
 80082f4:	460b      	mov	r3, r1
 80082f6:	70fb      	strb	r3, [r7, #3]
 80082f8:	687b      	ldr	r3, [r7, #4]
 80082fa:	60fb      	str	r3, [r7, #12]
 80082fc:	68fb      	ldr	r3, [r7, #12]
 80082fe:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8008302:	681b      	ldr	r3, [r3, #0]
 8008304:	68fa      	ldr	r2, [r7, #12]
 8008306:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800830a:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800830e:	6013      	str	r3, [r2, #0]
 8008310:	68fb      	ldr	r3, [r7, #12]
 8008312:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8008316:	681a      	ldr	r2, [r3, #0]
 8008318:	78fb      	ldrb	r3, [r7, #3]
 800831a:	011b      	lsls	r3, r3, #4
 800831c:	f403 63fe 	and.w	r3, r3, #2032	@ 0x7f0
 8008320:	68f9      	ldr	r1, [r7, #12]
 8008322:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8008326:	4313      	orrs	r3, r2
 8008328:	600b      	str	r3, [r1, #0]
 800832a:	2300      	movs	r3, #0
 800832c:	4618      	mov	r0, r3
 800832e:	3714      	adds	r7, #20
 8008330:	46bd      	mov	sp, r7
 8008332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008336:	4770      	bx	lr

08008338 <USB_DevConnect>:
 8008338:	b480      	push	{r7}
 800833a:	b085      	sub	sp, #20
 800833c:	af00      	add	r7, sp, #0
 800833e:	6078      	str	r0, [r7, #4]
 8008340:	687b      	ldr	r3, [r7, #4]
 8008342:	60fb      	str	r3, [r7, #12]
 8008344:	68fb      	ldr	r3, [r7, #12]
 8008346:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800834a:	681b      	ldr	r3, [r3, #0]
 800834c:	68fa      	ldr	r2, [r7, #12]
 800834e:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8008352:	f023 0303 	bic.w	r3, r3, #3
 8008356:	6013      	str	r3, [r2, #0]
 8008358:	68fb      	ldr	r3, [r7, #12]
 800835a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800835e:	685b      	ldr	r3, [r3, #4]
 8008360:	68fa      	ldr	r2, [r7, #12]
 8008362:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8008366:	f023 0302 	bic.w	r3, r3, #2
 800836a:	6053      	str	r3, [r2, #4]
 800836c:	2300      	movs	r3, #0
 800836e:	4618      	mov	r0, r3
 8008370:	3714      	adds	r7, #20
 8008372:	46bd      	mov	sp, r7
 8008374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008378:	4770      	bx	lr

0800837a <USB_DevDisconnect>:
 800837a:	b480      	push	{r7}
 800837c:	b085      	sub	sp, #20
 800837e:	af00      	add	r7, sp, #0
 8008380:	6078      	str	r0, [r7, #4]
 8008382:	687b      	ldr	r3, [r7, #4]
 8008384:	60fb      	str	r3, [r7, #12]
 8008386:	68fb      	ldr	r3, [r7, #12]
 8008388:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800838c:	681b      	ldr	r3, [r3, #0]
 800838e:	68fa      	ldr	r2, [r7, #12]
 8008390:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8008394:	f023 0303 	bic.w	r3, r3, #3
 8008398:	6013      	str	r3, [r2, #0]
 800839a:	68fb      	ldr	r3, [r7, #12]
 800839c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80083a0:	685b      	ldr	r3, [r3, #4]
 80083a2:	68fa      	ldr	r2, [r7, #12]
 80083a4:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 80083a8:	f043 0302 	orr.w	r3, r3, #2
 80083ac:	6053      	str	r3, [r2, #4]
 80083ae:	2300      	movs	r3, #0
 80083b0:	4618      	mov	r0, r3
 80083b2:	3714      	adds	r7, #20
 80083b4:	46bd      	mov	sp, r7
 80083b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083ba:	4770      	bx	lr

080083bc <USB_ReadInterrupts>:
 80083bc:	b480      	push	{r7}
 80083be:	b085      	sub	sp, #20
 80083c0:	af00      	add	r7, sp, #0
 80083c2:	6078      	str	r0, [r7, #4]
 80083c4:	687b      	ldr	r3, [r7, #4]
 80083c6:	695b      	ldr	r3, [r3, #20]
 80083c8:	60fb      	str	r3, [r7, #12]
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	699b      	ldr	r3, [r3, #24]
 80083ce:	68fa      	ldr	r2, [r7, #12]
 80083d0:	4013      	ands	r3, r2
 80083d2:	60fb      	str	r3, [r7, #12]
 80083d4:	68fb      	ldr	r3, [r7, #12]
 80083d6:	4618      	mov	r0, r3
 80083d8:	3714      	adds	r7, #20
 80083da:	46bd      	mov	sp, r7
 80083dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083e0:	4770      	bx	lr

080083e2 <USB_ReadDevAllOutEpInterrupt>:
 80083e2:	b480      	push	{r7}
 80083e4:	b085      	sub	sp, #20
 80083e6:	af00      	add	r7, sp, #0
 80083e8:	6078      	str	r0, [r7, #4]
 80083ea:	687b      	ldr	r3, [r7, #4]
 80083ec:	60fb      	str	r3, [r7, #12]
 80083ee:	68fb      	ldr	r3, [r7, #12]
 80083f0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80083f4:	699b      	ldr	r3, [r3, #24]
 80083f6:	60bb      	str	r3, [r7, #8]
 80083f8:	68fb      	ldr	r3, [r7, #12]
 80083fa:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80083fe:	69db      	ldr	r3, [r3, #28]
 8008400:	68ba      	ldr	r2, [r7, #8]
 8008402:	4013      	ands	r3, r2
 8008404:	60bb      	str	r3, [r7, #8]
 8008406:	68bb      	ldr	r3, [r7, #8]
 8008408:	0c1b      	lsrs	r3, r3, #16
 800840a:	4618      	mov	r0, r3
 800840c:	3714      	adds	r7, #20
 800840e:	46bd      	mov	sp, r7
 8008410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008414:	4770      	bx	lr

08008416 <USB_ReadDevAllInEpInterrupt>:
 8008416:	b480      	push	{r7}
 8008418:	b085      	sub	sp, #20
 800841a:	af00      	add	r7, sp, #0
 800841c:	6078      	str	r0, [r7, #4]
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	60fb      	str	r3, [r7, #12]
 8008422:	68fb      	ldr	r3, [r7, #12]
 8008424:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8008428:	699b      	ldr	r3, [r3, #24]
 800842a:	60bb      	str	r3, [r7, #8]
 800842c:	68fb      	ldr	r3, [r7, #12]
 800842e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8008432:	69db      	ldr	r3, [r3, #28]
 8008434:	68ba      	ldr	r2, [r7, #8]
 8008436:	4013      	ands	r3, r2
 8008438:	60bb      	str	r3, [r7, #8]
 800843a:	68bb      	ldr	r3, [r7, #8]
 800843c:	b29b      	uxth	r3, r3
 800843e:	4618      	mov	r0, r3
 8008440:	3714      	adds	r7, #20
 8008442:	46bd      	mov	sp, r7
 8008444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008448:	4770      	bx	lr

0800844a <USB_ReadDevOutEPInterrupt>:
 800844a:	b480      	push	{r7}
 800844c:	b085      	sub	sp, #20
 800844e:	af00      	add	r7, sp, #0
 8008450:	6078      	str	r0, [r7, #4]
 8008452:	460b      	mov	r3, r1
 8008454:	70fb      	strb	r3, [r7, #3]
 8008456:	687b      	ldr	r3, [r7, #4]
 8008458:	60fb      	str	r3, [r7, #12]
 800845a:	78fb      	ldrb	r3, [r7, #3]
 800845c:	015a      	lsls	r2, r3, #5
 800845e:	68fb      	ldr	r3, [r7, #12]
 8008460:	4413      	add	r3, r2
 8008462:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8008466:	689b      	ldr	r3, [r3, #8]
 8008468:	60bb      	str	r3, [r7, #8]
 800846a:	68fb      	ldr	r3, [r7, #12]
 800846c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8008470:	695b      	ldr	r3, [r3, #20]
 8008472:	68ba      	ldr	r2, [r7, #8]
 8008474:	4013      	ands	r3, r2
 8008476:	60bb      	str	r3, [r7, #8]
 8008478:	68bb      	ldr	r3, [r7, #8]
 800847a:	4618      	mov	r0, r3
 800847c:	3714      	adds	r7, #20
 800847e:	46bd      	mov	sp, r7
 8008480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008484:	4770      	bx	lr

08008486 <USB_ReadDevInEPInterrupt>:
 8008486:	b480      	push	{r7}
 8008488:	b087      	sub	sp, #28
 800848a:	af00      	add	r7, sp, #0
 800848c:	6078      	str	r0, [r7, #4]
 800848e:	460b      	mov	r3, r1
 8008490:	70fb      	strb	r3, [r7, #3]
 8008492:	687b      	ldr	r3, [r7, #4]
 8008494:	617b      	str	r3, [r7, #20]
 8008496:	697b      	ldr	r3, [r7, #20]
 8008498:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800849c:	691b      	ldr	r3, [r3, #16]
 800849e:	613b      	str	r3, [r7, #16]
 80084a0:	697b      	ldr	r3, [r7, #20]
 80084a2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80084a6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80084a8:	60fb      	str	r3, [r7, #12]
 80084aa:	78fb      	ldrb	r3, [r7, #3]
 80084ac:	f003 030f 	and.w	r3, r3, #15
 80084b0:	68fa      	ldr	r2, [r7, #12]
 80084b2:	fa22 f303 	lsr.w	r3, r2, r3
 80084b6:	01db      	lsls	r3, r3, #7
 80084b8:	b2db      	uxtb	r3, r3
 80084ba:	693a      	ldr	r2, [r7, #16]
 80084bc:	4313      	orrs	r3, r2
 80084be:	613b      	str	r3, [r7, #16]
 80084c0:	78fb      	ldrb	r3, [r7, #3]
 80084c2:	015a      	lsls	r2, r3, #5
 80084c4:	697b      	ldr	r3, [r7, #20]
 80084c6:	4413      	add	r3, r2
 80084c8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80084cc:	689b      	ldr	r3, [r3, #8]
 80084ce:	693a      	ldr	r2, [r7, #16]
 80084d0:	4013      	ands	r3, r2
 80084d2:	60bb      	str	r3, [r7, #8]
 80084d4:	68bb      	ldr	r3, [r7, #8]
 80084d6:	4618      	mov	r0, r3
 80084d8:	371c      	adds	r7, #28
 80084da:	46bd      	mov	sp, r7
 80084dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084e0:	4770      	bx	lr

080084e2 <USB_GetMode>:
 80084e2:	b480      	push	{r7}
 80084e4:	b083      	sub	sp, #12
 80084e6:	af00      	add	r7, sp, #0
 80084e8:	6078      	str	r0, [r7, #4]
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	695b      	ldr	r3, [r3, #20]
 80084ee:	f003 0301 	and.w	r3, r3, #1
 80084f2:	4618      	mov	r0, r3
 80084f4:	370c      	adds	r7, #12
 80084f6:	46bd      	mov	sp, r7
 80084f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084fc:	4770      	bx	lr

080084fe <USB_ActivateSetup>:
 80084fe:	b480      	push	{r7}
 8008500:	b085      	sub	sp, #20
 8008502:	af00      	add	r7, sp, #0
 8008504:	6078      	str	r0, [r7, #4]
 8008506:	687b      	ldr	r3, [r7, #4]
 8008508:	60fb      	str	r3, [r7, #12]
 800850a:	68fb      	ldr	r3, [r7, #12]
 800850c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8008510:	681b      	ldr	r3, [r3, #0]
 8008512:	68fa      	ldr	r2, [r7, #12]
 8008514:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8008518:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800851c:	f023 0307 	bic.w	r3, r3, #7
 8008520:	6013      	str	r3, [r2, #0]
 8008522:	68fb      	ldr	r3, [r7, #12]
 8008524:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8008528:	685b      	ldr	r3, [r3, #4]
 800852a:	68fa      	ldr	r2, [r7, #12]
 800852c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8008530:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8008534:	6053      	str	r3, [r2, #4]
 8008536:	2300      	movs	r3, #0
 8008538:	4618      	mov	r0, r3
 800853a:	3714      	adds	r7, #20
 800853c:	46bd      	mov	sp, r7
 800853e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008542:	4770      	bx	lr

08008544 <USB_EP0_OutStart>:
 8008544:	b480      	push	{r7}
 8008546:	b087      	sub	sp, #28
 8008548:	af00      	add	r7, sp, #0
 800854a:	60f8      	str	r0, [r7, #12]
 800854c:	460b      	mov	r3, r1
 800854e:	607a      	str	r2, [r7, #4]
 8008550:	72fb      	strb	r3, [r7, #11]
 8008552:	68fb      	ldr	r3, [r7, #12]
 8008554:	617b      	str	r3, [r7, #20]
 8008556:	68fb      	ldr	r3, [r7, #12]
 8008558:	333c      	adds	r3, #60	@ 0x3c
 800855a:	3304      	adds	r3, #4
 800855c:	681b      	ldr	r3, [r3, #0]
 800855e:	613b      	str	r3, [r7, #16]
 8008560:	693b      	ldr	r3, [r7, #16]
 8008562:	4a26      	ldr	r2, [pc, #152]	@ (80085fc <USB_EP0_OutStart+0xb8>)
 8008564:	4293      	cmp	r3, r2
 8008566:	d90a      	bls.n	800857e <USB_EP0_OutStart+0x3a>
 8008568:	697b      	ldr	r3, [r7, #20]
 800856a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800856e:	681b      	ldr	r3, [r3, #0]
 8008570:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8008574:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8008578:	d101      	bne.n	800857e <USB_EP0_OutStart+0x3a>
 800857a:	2300      	movs	r3, #0
 800857c:	e037      	b.n	80085ee <USB_EP0_OutStart+0xaa>
 800857e:	697b      	ldr	r3, [r7, #20]
 8008580:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8008584:	461a      	mov	r2, r3
 8008586:	2300      	movs	r3, #0
 8008588:	6113      	str	r3, [r2, #16]
 800858a:	697b      	ldr	r3, [r7, #20]
 800858c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8008590:	691b      	ldr	r3, [r3, #16]
 8008592:	697a      	ldr	r2, [r7, #20]
 8008594:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8008598:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800859c:	6113      	str	r3, [r2, #16]
 800859e:	697b      	ldr	r3, [r7, #20]
 80085a0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80085a4:	691b      	ldr	r3, [r3, #16]
 80085a6:	697a      	ldr	r2, [r7, #20]
 80085a8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80085ac:	f043 0318 	orr.w	r3, r3, #24
 80085b0:	6113      	str	r3, [r2, #16]
 80085b2:	697b      	ldr	r3, [r7, #20]
 80085b4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80085b8:	691b      	ldr	r3, [r3, #16]
 80085ba:	697a      	ldr	r2, [r7, #20]
 80085bc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80085c0:	f043 43c0 	orr.w	r3, r3, #1610612736	@ 0x60000000
 80085c4:	6113      	str	r3, [r2, #16]
 80085c6:	7afb      	ldrb	r3, [r7, #11]
 80085c8:	2b01      	cmp	r3, #1
 80085ca:	d10f      	bne.n	80085ec <USB_EP0_OutStart+0xa8>
 80085cc:	697b      	ldr	r3, [r7, #20]
 80085ce:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80085d2:	461a      	mov	r2, r3
 80085d4:	687b      	ldr	r3, [r7, #4]
 80085d6:	6153      	str	r3, [r2, #20]
 80085d8:	697b      	ldr	r3, [r7, #20]
 80085da:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80085de:	681b      	ldr	r3, [r3, #0]
 80085e0:	697a      	ldr	r2, [r7, #20]
 80085e2:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80085e6:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
 80085ea:	6013      	str	r3, [r2, #0]
 80085ec:	2300      	movs	r3, #0
 80085ee:	4618      	mov	r0, r3
 80085f0:	371c      	adds	r7, #28
 80085f2:	46bd      	mov	sp, r7
 80085f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085f8:	4770      	bx	lr
 80085fa:	bf00      	nop
 80085fc:	4f54300a 	.word	0x4f54300a

08008600 <USB_CoreReset>:
 8008600:	b480      	push	{r7}
 8008602:	b085      	sub	sp, #20
 8008604:	af00      	add	r7, sp, #0
 8008606:	6078      	str	r0, [r7, #4]
 8008608:	2300      	movs	r3, #0
 800860a:	60fb      	str	r3, [r7, #12]
 800860c:	68fb      	ldr	r3, [r7, #12]
 800860e:	3301      	adds	r3, #1
 8008610:	60fb      	str	r3, [r7, #12]
 8008612:	68fb      	ldr	r3, [r7, #12]
 8008614:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8008618:	d901      	bls.n	800861e <USB_CoreReset+0x1e>
 800861a:	2303      	movs	r3, #3
 800861c:	e022      	b.n	8008664 <USB_CoreReset+0x64>
 800861e:	687b      	ldr	r3, [r7, #4]
 8008620:	691b      	ldr	r3, [r3, #16]
 8008622:	2b00      	cmp	r3, #0
 8008624:	daf2      	bge.n	800860c <USB_CoreReset+0xc>
 8008626:	230a      	movs	r3, #10
 8008628:	60fb      	str	r3, [r7, #12]
 800862a:	e002      	b.n	8008632 <USB_CoreReset+0x32>
 800862c:	68fb      	ldr	r3, [r7, #12]
 800862e:	3b01      	subs	r3, #1
 8008630:	60fb      	str	r3, [r7, #12]
 8008632:	68fb      	ldr	r3, [r7, #12]
 8008634:	2b00      	cmp	r3, #0
 8008636:	d1f9      	bne.n	800862c <USB_CoreReset+0x2c>
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	691b      	ldr	r3, [r3, #16]
 800863c:	f043 0201 	orr.w	r2, r3, #1
 8008640:	687b      	ldr	r3, [r7, #4]
 8008642:	611a      	str	r2, [r3, #16]
 8008644:	68fb      	ldr	r3, [r7, #12]
 8008646:	3301      	adds	r3, #1
 8008648:	60fb      	str	r3, [r7, #12]
 800864a:	68fb      	ldr	r3, [r7, #12]
 800864c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8008650:	d901      	bls.n	8008656 <USB_CoreReset+0x56>
 8008652:	2303      	movs	r3, #3
 8008654:	e006      	b.n	8008664 <USB_CoreReset+0x64>
 8008656:	687b      	ldr	r3, [r7, #4]
 8008658:	691b      	ldr	r3, [r3, #16]
 800865a:	f003 0301 	and.w	r3, r3, #1
 800865e:	2b01      	cmp	r3, #1
 8008660:	d0f0      	beq.n	8008644 <USB_CoreReset+0x44>
 8008662:	2300      	movs	r3, #0
 8008664:	4618      	mov	r0, r3
 8008666:	3714      	adds	r7, #20
 8008668:	46bd      	mov	sp, r7
 800866a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800866e:	4770      	bx	lr

08008670 <MX_USB_DEVICE_Init>:
 8008670:	b580      	push	{r7, lr}
 8008672:	af00      	add	r7, sp, #0
 8008674:	f001 fc7a 	bl	8009f6c <USBD_COMPOSITE_Mount_Class>
 8008678:	2200      	movs	r2, #0
 800867a:	4917      	ldr	r1, [pc, #92]	@ (80086d8 <MX_USB_DEVICE_Init+0x68>)
 800867c:	4817      	ldr	r0, [pc, #92]	@ (80086dc <MX_USB_DEVICE_Init+0x6c>)
 800867e:	f002 f899 	bl	800a7b4 <USBD_Init>
 8008682:	4603      	mov	r3, r0
 8008684:	2b00      	cmp	r3, #0
 8008686:	d001      	beq.n	800868c <MX_USB_DEVICE_Init+0x1c>
 8008688:	f7f8 faf6 	bl	8000c78 <Error_Handler>
 800868c:	4914      	ldr	r1, [pc, #80]	@ (80086e0 <MX_USB_DEVICE_Init+0x70>)
 800868e:	4813      	ldr	r0, [pc, #76]	@ (80086dc <MX_USB_DEVICE_Init+0x6c>)
 8008690:	f002 f8bc 	bl	800a80c <USBD_RegisterClass>
 8008694:	4603      	mov	r3, r0
 8008696:	2b00      	cmp	r3, #0
 8008698:	d001      	beq.n	800869e <MX_USB_DEVICE_Init+0x2e>
 800869a:	f7f8 faed 	bl	8000c78 <Error_Handler>
 800869e:	4911      	ldr	r1, [pc, #68]	@ (80086e4 <MX_USB_DEVICE_Init+0x74>)
 80086a0:	480e      	ldr	r0, [pc, #56]	@ (80086dc <MX_USB_DEVICE_Init+0x6c>)
 80086a2:	f001 f93d 	bl	8009920 <USBD_CDC_ACM_RegisterInterface>
 80086a6:	4603      	mov	r3, r0
 80086a8:	2b00      	cmp	r3, #0
 80086aa:	d001      	beq.n	80086b0 <MX_USB_DEVICE_Init+0x40>
 80086ac:	f7f8 fae4 	bl	8000c78 <Error_Handler>
 80086b0:	490d      	ldr	r1, [pc, #52]	@ (80086e8 <MX_USB_DEVICE_Init+0x78>)
 80086b2:	480a      	ldr	r0, [pc, #40]	@ (80086dc <MX_USB_DEVICE_Init+0x6c>)
 80086b4:	f002 f830 	bl	800a718 <USBD_CUSTOM_HID_RegisterInterface>
 80086b8:	4603      	mov	r3, r0
 80086ba:	2b00      	cmp	r3, #0
 80086bc:	d001      	beq.n	80086c2 <MX_USB_DEVICE_Init+0x52>
 80086be:	f7f8 fadb 	bl	8000c78 <Error_Handler>
 80086c2:	4806      	ldr	r0, [pc, #24]	@ (80086dc <MX_USB_DEVICE_Init+0x6c>)
 80086c4:	f002 f8e0 	bl	800a888 <USBD_Start>
 80086c8:	4603      	mov	r3, r0
 80086ca:	2b00      	cmp	r3, #0
 80086cc:	d001      	beq.n	80086d2 <MX_USB_DEVICE_Init+0x62>
 80086ce:	f7f8 fad3 	bl	8000c78 <Error_Handler>
 80086d2:	bf00      	nop
 80086d4:	bd80      	pop	{r7, pc}
 80086d6:	bf00      	nop
 80086d8:	2000002c 	.word	0x2000002c
 80086dc:	20000d50 	.word	0x20000d50
 80086e0:	20000190 	.word	0x20000190
 80086e4:	20000018 	.word	0x20000018
 80086e8:	200000a0 	.word	0x200000a0

080086ec <CDC_CH_To_UART_Handle>:
 80086ec:	b480      	push	{r7}
 80086ee:	b085      	sub	sp, #20
 80086f0:	af00      	add	r7, sp, #0
 80086f2:	4603      	mov	r3, r0
 80086f4:	71fb      	strb	r3, [r7, #7]
 80086f6:	2300      	movs	r3, #0
 80086f8:	60fb      	str	r3, [r7, #12]
 80086fa:	79fb      	ldrb	r3, [r7, #7]
 80086fc:	2b00      	cmp	r3, #0
 80086fe:	d101      	bne.n	8008704 <CDC_CH_To_UART_Handle+0x18>
 8008700:	4b04      	ldr	r3, [pc, #16]	@ (8008714 <CDC_CH_To_UART_Handle+0x28>)
 8008702:	60fb      	str	r3, [r7, #12]
 8008704:	68fb      	ldr	r3, [r7, #12]
 8008706:	4618      	mov	r0, r3
 8008708:	3714      	adds	r7, #20
 800870a:	46bd      	mov	sp, r7
 800870c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008710:	4770      	bx	lr
 8008712:	bf00      	nop
 8008714:	20000760 	.word	0x20000760

08008718 <UART_Handle_TO_CDC_CH>:
 8008718:	b480      	push	{r7}
 800871a:	b085      	sub	sp, #20
 800871c:	af00      	add	r7, sp, #0
 800871e:	6078      	str	r0, [r7, #4]
 8008720:	2300      	movs	r3, #0
 8008722:	73fb      	strb	r3, [r7, #15]
 8008724:	687b      	ldr	r3, [r7, #4]
 8008726:	4a06      	ldr	r2, [pc, #24]	@ (8008740 <UART_Handle_TO_CDC_CH+0x28>)
 8008728:	4293      	cmp	r3, r2
 800872a:	d101      	bne.n	8008730 <UART_Handle_TO_CDC_CH+0x18>
 800872c:	2300      	movs	r3, #0
 800872e:	73fb      	strb	r3, [r7, #15]
 8008730:	7bfb      	ldrb	r3, [r7, #15]
 8008732:	4618      	mov	r0, r3
 8008734:	3714      	adds	r7, #20
 8008736:	46bd      	mov	sp, r7
 8008738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800873c:	4770      	bx	lr
 800873e:	bf00      	nop
 8008740:	20000760 	.word	0x20000760

08008744 <Change_UART_Setting>:
 8008744:	b580      	push	{r7, lr}
 8008746:	b086      	sub	sp, #24
 8008748:	af00      	add	r7, sp, #0
 800874a:	4603      	mov	r3, r0
 800874c:	71fb      	strb	r3, [r7, #7]
 800874e:	79fb      	ldrb	r3, [r7, #7]
 8008750:	4618      	mov	r0, r3
 8008752:	f7ff ffcb 	bl	80086ec <CDC_CH_To_UART_Handle>
 8008756:	6178      	str	r0, [r7, #20]
 8008758:	6978      	ldr	r0, [r7, #20]
 800875a:	f7fd fbf7 	bl	8005f4c <HAL_UART_DeInit>
 800875e:	4603      	mov	r3, r0
 8008760:	2b00      	cmp	r3, #0
 8008762:	d001      	beq.n	8008768 <Change_UART_Setting+0x24>
 8008764:	f7f8 fa88 	bl	8000c78 <Error_Handler>
 8008768:	79fb      	ldrb	r3, [r7, #7]
 800876a:	4a5c      	ldr	r2, [pc, #368]	@ (80088dc <Change_UART_Setting+0x198>)
 800876c:	00db      	lsls	r3, r3, #3
 800876e:	4413      	add	r3, r2
 8008770:	791b      	ldrb	r3, [r3, #4]
 8008772:	2b00      	cmp	r3, #0
 8008774:	d002      	beq.n	800877c <Change_UART_Setting+0x38>
 8008776:	2b02      	cmp	r3, #2
 8008778:	d004      	beq.n	8008784 <Change_UART_Setting+0x40>
 800877a:	e008      	b.n	800878e <Change_UART_Setting+0x4a>
 800877c:	697b      	ldr	r3, [r7, #20]
 800877e:	2200      	movs	r2, #0
 8008780:	60da      	str	r2, [r3, #12]
 8008782:	e008      	b.n	8008796 <Change_UART_Setting+0x52>
 8008784:	697b      	ldr	r3, [r7, #20]
 8008786:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800878a:	60da      	str	r2, [r3, #12]
 800878c:	e003      	b.n	8008796 <Change_UART_Setting+0x52>
 800878e:	697b      	ldr	r3, [r7, #20]
 8008790:	2200      	movs	r2, #0
 8008792:	60da      	str	r2, [r3, #12]
 8008794:	bf00      	nop
 8008796:	79fb      	ldrb	r3, [r7, #7]
 8008798:	4a50      	ldr	r2, [pc, #320]	@ (80088dc <Change_UART_Setting+0x198>)
 800879a:	00db      	lsls	r3, r3, #3
 800879c:	4413      	add	r3, r2
 800879e:	795b      	ldrb	r3, [r3, #5]
 80087a0:	2b02      	cmp	r3, #2
 80087a2:	d00f      	beq.n	80087c4 <Change_UART_Setting+0x80>
 80087a4:	2b02      	cmp	r3, #2
 80087a6:	dc12      	bgt.n	80087ce <Change_UART_Setting+0x8a>
 80087a8:	2b00      	cmp	r3, #0
 80087aa:	d002      	beq.n	80087b2 <Change_UART_Setting+0x6e>
 80087ac:	2b01      	cmp	r3, #1
 80087ae:	d004      	beq.n	80087ba <Change_UART_Setting+0x76>
 80087b0:	e00d      	b.n	80087ce <Change_UART_Setting+0x8a>
 80087b2:	697b      	ldr	r3, [r7, #20]
 80087b4:	2200      	movs	r2, #0
 80087b6:	611a      	str	r2, [r3, #16]
 80087b8:	e00d      	b.n	80087d6 <Change_UART_Setting+0x92>
 80087ba:	697b      	ldr	r3, [r7, #20]
 80087bc:	f44f 62c0 	mov.w	r2, #1536	@ 0x600
 80087c0:	611a      	str	r2, [r3, #16]
 80087c2:	e008      	b.n	80087d6 <Change_UART_Setting+0x92>
 80087c4:	697b      	ldr	r3, [r7, #20]
 80087c6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80087ca:	611a      	str	r2, [r3, #16]
 80087cc:	e003      	b.n	80087d6 <Change_UART_Setting+0x92>
 80087ce:	697b      	ldr	r3, [r7, #20]
 80087d0:	2200      	movs	r2, #0
 80087d2:	611a      	str	r2, [r3, #16]
 80087d4:	bf00      	nop
 80087d6:	79fb      	ldrb	r3, [r7, #7]
 80087d8:	4a40      	ldr	r2, [pc, #256]	@ (80088dc <Change_UART_Setting+0x198>)
 80087da:	00db      	lsls	r3, r3, #3
 80087dc:	4413      	add	r3, r2
 80087de:	799b      	ldrb	r3, [r3, #6]
 80087e0:	2b07      	cmp	r3, #7
 80087e2:	d002      	beq.n	80087ea <Change_UART_Setting+0xa6>
 80087e4:	2b08      	cmp	r3, #8
 80087e6:	d004      	beq.n	80087f2 <Change_UART_Setting+0xae>
 80087e8:	e010      	b.n	800880c <Change_UART_Setting+0xc8>
 80087ea:	697b      	ldr	r3, [r7, #20]
 80087ec:	2200      	movs	r2, #0
 80087ee:	609a      	str	r2, [r3, #8]
 80087f0:	e010      	b.n	8008814 <Change_UART_Setting+0xd0>
 80087f2:	697b      	ldr	r3, [r7, #20]
 80087f4:	691b      	ldr	r3, [r3, #16]
 80087f6:	2b00      	cmp	r3, #0
 80087f8:	d103      	bne.n	8008802 <Change_UART_Setting+0xbe>
 80087fa:	697b      	ldr	r3, [r7, #20]
 80087fc:	2200      	movs	r2, #0
 80087fe:	609a      	str	r2, [r3, #8]
 8008800:	e008      	b.n	8008814 <Change_UART_Setting+0xd0>
 8008802:	697b      	ldr	r3, [r7, #20]
 8008804:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8008808:	609a      	str	r2, [r3, #8]
 800880a:	e003      	b.n	8008814 <Change_UART_Setting+0xd0>
 800880c:	697b      	ldr	r3, [r7, #20]
 800880e:	2200      	movs	r2, #0
 8008810:	609a      	str	r2, [r3, #8]
 8008812:	bf00      	nop
 8008814:	79fb      	ldrb	r3, [r7, #7]
 8008816:	4a31      	ldr	r2, [pc, #196]	@ (80088dc <Change_UART_Setting+0x198>)
 8008818:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800881c:	2b00      	cmp	r3, #0
 800881e:	d105      	bne.n	800882c <Change_UART_Setting+0xe8>
 8008820:	79fb      	ldrb	r3, [r7, #7]
 8008822:	4a2e      	ldr	r2, [pc, #184]	@ (80088dc <Change_UART_Setting+0x198>)
 8008824:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8008828:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 800882c:	79fb      	ldrb	r3, [r7, #7]
 800882e:	4a2b      	ldr	r2, [pc, #172]	@ (80088dc <Change_UART_Setting+0x198>)
 8008830:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8008834:	697b      	ldr	r3, [r7, #20]
 8008836:	605a      	str	r2, [r3, #4]
 8008838:	697b      	ldr	r3, [r7, #20]
 800883a:	2200      	movs	r2, #0
 800883c:	619a      	str	r2, [r3, #24]
 800883e:	697b      	ldr	r3, [r7, #20]
 8008840:	220c      	movs	r2, #12
 8008842:	615a      	str	r2, [r3, #20]
 8008844:	697b      	ldr	r3, [r7, #20]
 8008846:	2200      	movs	r2, #0
 8008848:	61da      	str	r2, [r3, #28]
 800884a:	6978      	ldr	r0, [r7, #20]
 800884c:	f7fd fb2e 	bl	8005eac <HAL_UART_Init>
 8008850:	4603      	mov	r3, r0
 8008852:	2b00      	cmp	r3, #0
 8008854:	d001      	beq.n	800885a <Change_UART_Setting+0x116>
 8008856:	f7f8 fa0f 	bl	8000c78 <Error_Handler>
 800885a:	79fb      	ldrb	r3, [r7, #7]
 800885c:	019b      	lsls	r3, r3, #6
 800885e:	4a20      	ldr	r2, [pc, #128]	@ (80088e0 <Change_UART_Setting+0x19c>)
 8008860:	4413      	add	r3, r2
 8008862:	2201      	movs	r2, #1
 8008864:	4619      	mov	r1, r3
 8008866:	6978      	ldr	r0, [r7, #20]
 8008868:	f7fd fc2d 	bl	80060c6 <HAL_UART_Receive_IT>
 800886c:	4603      	mov	r3, r0
 800886e:	2b00      	cmp	r3, #0
 8008870:	d001      	beq.n	8008876 <Change_UART_Setting+0x132>
 8008872:	f7f8 fa01 	bl	8000c78 <Error_Handler>
 8008876:	2300      	movs	r3, #0
 8008878:	613b      	str	r3, [r7, #16]
 800887a:	697b      	ldr	r3, [r7, #20]
 800887c:	681b      	ldr	r3, [r3, #0]
 800887e:	681b      	ldr	r3, [r3, #0]
 8008880:	613b      	str	r3, [r7, #16]
 8008882:	697b      	ldr	r3, [r7, #20]
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	685b      	ldr	r3, [r3, #4]
 8008888:	613b      	str	r3, [r7, #16]
 800888a:	693b      	ldr	r3, [r7, #16]
 800888c:	2300      	movs	r3, #0
 800888e:	60fb      	str	r3, [r7, #12]
 8008890:	697b      	ldr	r3, [r7, #20]
 8008892:	681b      	ldr	r3, [r3, #0]
 8008894:	681b      	ldr	r3, [r3, #0]
 8008896:	60fb      	str	r3, [r7, #12]
 8008898:	697b      	ldr	r3, [r7, #20]
 800889a:	681b      	ldr	r3, [r3, #0]
 800889c:	685b      	ldr	r3, [r3, #4]
 800889e:	60fb      	str	r3, [r7, #12]
 80088a0:	68fb      	ldr	r3, [r7, #12]
 80088a2:	2300      	movs	r3, #0
 80088a4:	60bb      	str	r3, [r7, #8]
 80088a6:	697b      	ldr	r3, [r7, #20]
 80088a8:	681b      	ldr	r3, [r3, #0]
 80088aa:	681b      	ldr	r3, [r3, #0]
 80088ac:	60bb      	str	r3, [r7, #8]
 80088ae:	697b      	ldr	r3, [r7, #20]
 80088b0:	681b      	ldr	r3, [r3, #0]
 80088b2:	685b      	ldr	r3, [r3, #4]
 80088b4:	60bb      	str	r3, [r7, #8]
 80088b6:	68bb      	ldr	r3, [r7, #8]
 80088b8:	f3bf 8f4f 	dsb	sy
 80088bc:	bf00      	nop
 80088be:	79fb      	ldrb	r3, [r7, #7]
 80088c0:	4a08      	ldr	r2, [pc, #32]	@ (80088e4 <Change_UART_Setting+0x1a0>)
 80088c2:	2100      	movs	r1, #0
 80088c4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80088c8:	79fb      	ldrb	r3, [r7, #7]
 80088ca:	4a07      	ldr	r2, [pc, #28]	@ (80088e8 <Change_UART_Setting+0x1a4>)
 80088cc:	2100      	movs	r1, #0
 80088ce:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80088d2:	bf00      	nop
 80088d4:	3718      	adds	r7, #24
 80088d6:	46bd      	mov	sp, r7
 80088d8:	bd80      	pop	{r7, pc}
 80088da:	bf00      	nop
 80088dc:	200010ec 	.word	0x200010ec
 80088e0:	200010ac 	.word	0x200010ac
 80088e4:	200010f4 	.word	0x200010f4
 80088e8:	200010f8 	.word	0x200010f8

080088ec <CDC_Init>:
 80088ec:	b580      	push	{r7, lr}
 80088ee:	b082      	sub	sp, #8
 80088f0:	af00      	add	r7, sp, #0
 80088f2:	4603      	mov	r3, r0
 80088f4:	71fb      	strb	r3, [r7, #7]
 80088f6:	79fb      	ldrb	r3, [r7, #7]
 80088f8:	019b      	lsls	r3, r3, #6
 80088fa:	4a0d      	ldr	r2, [pc, #52]	@ (8008930 <CDC_Init+0x44>)
 80088fc:	441a      	add	r2, r3
 80088fe:	79fb      	ldrb	r3, [r7, #7]
 8008900:	490c      	ldr	r1, [pc, #48]	@ (8008934 <CDC_Init+0x48>)
 8008902:	4618      	mov	r0, r3
 8008904:	f001 f846 	bl	8009994 <USBD_CDC_SetRxBuffer>
 8008908:	480b      	ldr	r0, [pc, #44]	@ (8008938 <CDC_Init+0x4c>)
 800890a:	f7fc fe81 	bl	8005610 <HAL_TIM_Base_Start_IT>
 800890e:	4603      	mov	r3, r0
 8008910:	2b00      	cmp	r3, #0
 8008912:	d105      	bne.n	8008920 <CDC_Init+0x34>
 8008914:	4809      	ldr	r0, [pc, #36]	@ (800893c <CDC_Init+0x50>)
 8008916:	f7fc fe7b 	bl	8005610 <HAL_TIM_Base_Start_IT>
 800891a:	4603      	mov	r3, r0
 800891c:	2b00      	cmp	r3, #0
 800891e:	d001      	beq.n	8008924 <CDC_Init+0x38>
 8008920:	f7f8 f9aa 	bl	8000c78 <Error_Handler>
 8008924:	2300      	movs	r3, #0
 8008926:	4618      	mov	r0, r3
 8008928:	3708      	adds	r7, #8
 800892a:	46bd      	mov	sp, r7
 800892c:	bd80      	pop	{r7, pc}
 800892e:	bf00      	nop
 8008930:	2000106c 	.word	0x2000106c
 8008934:	20000d50 	.word	0x20000d50
 8008938:	20000640 	.word	0x20000640
 800893c:	20000688 	.word	0x20000688

08008940 <CDC_DeInit>:
 8008940:	b580      	push	{r7, lr}
 8008942:	b082      	sub	sp, #8
 8008944:	af00      	add	r7, sp, #0
 8008946:	4603      	mov	r3, r0
 8008948:	71fb      	strb	r3, [r7, #7]
 800894a:	79fb      	ldrb	r3, [r7, #7]
 800894c:	4618      	mov	r0, r3
 800894e:	f7ff fecd 	bl	80086ec <CDC_CH_To_UART_Handle>
 8008952:	4603      	mov	r3, r0
 8008954:	4618      	mov	r0, r3
 8008956:	f7fd faf9 	bl	8005f4c <HAL_UART_DeInit>
 800895a:	4603      	mov	r3, r0
 800895c:	2b00      	cmp	r3, #0
 800895e:	d001      	beq.n	8008964 <CDC_DeInit+0x24>
 8008960:	f7f8 f98a 	bl	8000c78 <Error_Handler>
 8008964:	4809      	ldr	r0, [pc, #36]	@ (800898c <CDC_DeInit+0x4c>)
 8008966:	f7fc fec3 	bl	80056f0 <HAL_TIM_Base_Stop_IT>
 800896a:	4603      	mov	r3, r0
 800896c:	2b00      	cmp	r3, #0
 800896e:	d105      	bne.n	800897c <CDC_DeInit+0x3c>
 8008970:	4807      	ldr	r0, [pc, #28]	@ (8008990 <CDC_DeInit+0x50>)
 8008972:	f7fc febd 	bl	80056f0 <HAL_TIM_Base_Stop_IT>
 8008976:	4603      	mov	r3, r0
 8008978:	2b00      	cmp	r3, #0
 800897a:	d001      	beq.n	8008980 <CDC_DeInit+0x40>
 800897c:	f7f8 f97c 	bl	8000c78 <Error_Handler>
 8008980:	2300      	movs	r3, #0
 8008982:	4618      	mov	r0, r3
 8008984:	3708      	adds	r7, #8
 8008986:	46bd      	mov	sp, r7
 8008988:	bd80      	pop	{r7, pc}
 800898a:	bf00      	nop
 800898c:	20000640 	.word	0x20000640
 8008990:	20000688 	.word	0x20000688

08008994 <CDC_Control>:
 8008994:	b580      	push	{r7, lr}
 8008996:	b082      	sub	sp, #8
 8008998:	af00      	add	r7, sp, #0
 800899a:	603a      	str	r2, [r7, #0]
 800899c:	461a      	mov	r2, r3
 800899e:	4603      	mov	r3, r0
 80089a0:	71fb      	strb	r3, [r7, #7]
 80089a2:	460b      	mov	r3, r1
 80089a4:	71bb      	strb	r3, [r7, #6]
 80089a6:	4613      	mov	r3, r2
 80089a8:	80bb      	strh	r3, [r7, #4]
 80089aa:	79bb      	ldrb	r3, [r7, #6]
 80089ac:	2b23      	cmp	r3, #35	@ 0x23
 80089ae:	f200 80ba 	bhi.w	8008b26 <CDC_Control+0x192>
 80089b2:	a201      	add	r2, pc, #4	@ (adr r2, 80089b8 <CDC_Control+0x24>)
 80089b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80089b8:	08008b27 	.word	0x08008b27
 80089bc:	08008b27 	.word	0x08008b27
 80089c0:	08008b27 	.word	0x08008b27
 80089c4:	08008b27 	.word	0x08008b27
 80089c8:	08008b27 	.word	0x08008b27
 80089cc:	08008b27 	.word	0x08008b27
 80089d0:	08008b27 	.word	0x08008b27
 80089d4:	08008b27 	.word	0x08008b27
 80089d8:	08008b27 	.word	0x08008b27
 80089dc:	08008b27 	.word	0x08008b27
 80089e0:	08008b27 	.word	0x08008b27
 80089e4:	08008b27 	.word	0x08008b27
 80089e8:	08008b27 	.word	0x08008b27
 80089ec:	08008b27 	.word	0x08008b27
 80089f0:	08008b27 	.word	0x08008b27
 80089f4:	08008b27 	.word	0x08008b27
 80089f8:	08008b27 	.word	0x08008b27
 80089fc:	08008b27 	.word	0x08008b27
 8008a00:	08008b27 	.word	0x08008b27
 8008a04:	08008b27 	.word	0x08008b27
 8008a08:	08008b27 	.word	0x08008b27
 8008a0c:	08008b27 	.word	0x08008b27
 8008a10:	08008b27 	.word	0x08008b27
 8008a14:	08008b27 	.word	0x08008b27
 8008a18:	08008b27 	.word	0x08008b27
 8008a1c:	08008b27 	.word	0x08008b27
 8008a20:	08008b27 	.word	0x08008b27
 8008a24:	08008b27 	.word	0x08008b27
 8008a28:	08008b27 	.word	0x08008b27
 8008a2c:	08008b27 	.word	0x08008b27
 8008a30:	08008b27 	.word	0x08008b27
 8008a34:	08008b27 	.word	0x08008b27
 8008a38:	08008a49 	.word	0x08008a49
 8008a3c:	08008ab1 	.word	0x08008ab1
 8008a40:	08008b27 	.word	0x08008b27
 8008a44:	08008b27 	.word	0x08008b27
 8008a48:	683b      	ldr	r3, [r7, #0]
 8008a4a:	781b      	ldrb	r3, [r3, #0]
 8008a4c:	461a      	mov	r2, r3
 8008a4e:	683b      	ldr	r3, [r7, #0]
 8008a50:	3301      	adds	r3, #1
 8008a52:	781b      	ldrb	r3, [r3, #0]
 8008a54:	021b      	lsls	r3, r3, #8
 8008a56:	431a      	orrs	r2, r3
 8008a58:	683b      	ldr	r3, [r7, #0]
 8008a5a:	3302      	adds	r3, #2
 8008a5c:	781b      	ldrb	r3, [r3, #0]
 8008a5e:	041b      	lsls	r3, r3, #16
 8008a60:	431a      	orrs	r2, r3
 8008a62:	683b      	ldr	r3, [r7, #0]
 8008a64:	3303      	adds	r3, #3
 8008a66:	781b      	ldrb	r3, [r3, #0]
 8008a68:	061b      	lsls	r3, r3, #24
 8008a6a:	431a      	orrs	r2, r3
 8008a6c:	79fb      	ldrb	r3, [r7, #7]
 8008a6e:	4611      	mov	r1, r2
 8008a70:	4a30      	ldr	r2, [pc, #192]	@ (8008b34 <CDC_Control+0x1a0>)
 8008a72:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8008a76:	79fb      	ldrb	r3, [r7, #7]
 8008a78:	683a      	ldr	r2, [r7, #0]
 8008a7a:	7911      	ldrb	r1, [r2, #4]
 8008a7c:	4a2d      	ldr	r2, [pc, #180]	@ (8008b34 <CDC_Control+0x1a0>)
 8008a7e:	00db      	lsls	r3, r3, #3
 8008a80:	4413      	add	r3, r2
 8008a82:	460a      	mov	r2, r1
 8008a84:	711a      	strb	r2, [r3, #4]
 8008a86:	79fb      	ldrb	r3, [r7, #7]
 8008a88:	683a      	ldr	r2, [r7, #0]
 8008a8a:	7951      	ldrb	r1, [r2, #5]
 8008a8c:	4a29      	ldr	r2, [pc, #164]	@ (8008b34 <CDC_Control+0x1a0>)
 8008a8e:	00db      	lsls	r3, r3, #3
 8008a90:	4413      	add	r3, r2
 8008a92:	460a      	mov	r2, r1
 8008a94:	715a      	strb	r2, [r3, #5]
 8008a96:	79fb      	ldrb	r3, [r7, #7]
 8008a98:	683a      	ldr	r2, [r7, #0]
 8008a9a:	7991      	ldrb	r1, [r2, #6]
 8008a9c:	4a25      	ldr	r2, [pc, #148]	@ (8008b34 <CDC_Control+0x1a0>)
 8008a9e:	00db      	lsls	r3, r3, #3
 8008aa0:	4413      	add	r3, r2
 8008aa2:	460a      	mov	r2, r1
 8008aa4:	719a      	strb	r2, [r3, #6]
 8008aa6:	79fb      	ldrb	r3, [r7, #7]
 8008aa8:	4618      	mov	r0, r3
 8008aaa:	f7ff fe4b 	bl	8008744 <Change_UART_Setting>
 8008aae:	e03b      	b.n	8008b28 <CDC_Control+0x194>
 8008ab0:	79fb      	ldrb	r3, [r7, #7]
 8008ab2:	4a20      	ldr	r2, [pc, #128]	@ (8008b34 <CDC_Control+0x1a0>)
 8008ab4:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8008ab8:	b2da      	uxtb	r2, r3
 8008aba:	683b      	ldr	r3, [r7, #0]
 8008abc:	701a      	strb	r2, [r3, #0]
 8008abe:	79fb      	ldrb	r3, [r7, #7]
 8008ac0:	4a1c      	ldr	r2, [pc, #112]	@ (8008b34 <CDC_Control+0x1a0>)
 8008ac2:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8008ac6:	0a1a      	lsrs	r2, r3, #8
 8008ac8:	683b      	ldr	r3, [r7, #0]
 8008aca:	3301      	adds	r3, #1
 8008acc:	b2d2      	uxtb	r2, r2
 8008ace:	701a      	strb	r2, [r3, #0]
 8008ad0:	79fb      	ldrb	r3, [r7, #7]
 8008ad2:	4a18      	ldr	r2, [pc, #96]	@ (8008b34 <CDC_Control+0x1a0>)
 8008ad4:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8008ad8:	0c1a      	lsrs	r2, r3, #16
 8008ada:	683b      	ldr	r3, [r7, #0]
 8008adc:	3302      	adds	r3, #2
 8008ade:	b2d2      	uxtb	r2, r2
 8008ae0:	701a      	strb	r2, [r3, #0]
 8008ae2:	79fb      	ldrb	r3, [r7, #7]
 8008ae4:	4a13      	ldr	r2, [pc, #76]	@ (8008b34 <CDC_Control+0x1a0>)
 8008ae6:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8008aea:	0e1a      	lsrs	r2, r3, #24
 8008aec:	683b      	ldr	r3, [r7, #0]
 8008aee:	3303      	adds	r3, #3
 8008af0:	b2d2      	uxtb	r2, r2
 8008af2:	701a      	strb	r2, [r3, #0]
 8008af4:	79fb      	ldrb	r3, [r7, #7]
 8008af6:	683a      	ldr	r2, [r7, #0]
 8008af8:	3204      	adds	r2, #4
 8008afa:	490e      	ldr	r1, [pc, #56]	@ (8008b34 <CDC_Control+0x1a0>)
 8008afc:	00db      	lsls	r3, r3, #3
 8008afe:	440b      	add	r3, r1
 8008b00:	791b      	ldrb	r3, [r3, #4]
 8008b02:	7013      	strb	r3, [r2, #0]
 8008b04:	79fb      	ldrb	r3, [r7, #7]
 8008b06:	683a      	ldr	r2, [r7, #0]
 8008b08:	3205      	adds	r2, #5
 8008b0a:	490a      	ldr	r1, [pc, #40]	@ (8008b34 <CDC_Control+0x1a0>)
 8008b0c:	00db      	lsls	r3, r3, #3
 8008b0e:	440b      	add	r3, r1
 8008b10:	795b      	ldrb	r3, [r3, #5]
 8008b12:	7013      	strb	r3, [r2, #0]
 8008b14:	79fb      	ldrb	r3, [r7, #7]
 8008b16:	683a      	ldr	r2, [r7, #0]
 8008b18:	3206      	adds	r2, #6
 8008b1a:	4906      	ldr	r1, [pc, #24]	@ (8008b34 <CDC_Control+0x1a0>)
 8008b1c:	00db      	lsls	r3, r3, #3
 8008b1e:	440b      	add	r3, r1
 8008b20:	799b      	ldrb	r3, [r3, #6]
 8008b22:	7013      	strb	r3, [r2, #0]
 8008b24:	e000      	b.n	8008b28 <CDC_Control+0x194>
 8008b26:	bf00      	nop
 8008b28:	2300      	movs	r3, #0
 8008b2a:	4618      	mov	r0, r3
 8008b2c:	3708      	adds	r7, #8
 8008b2e:	46bd      	mov	sp, r7
 8008b30:	bd80      	pop	{r7, pc}
 8008b32:	bf00      	nop
 8008b34:	200010ec 	.word	0x200010ec

08008b38 <CDC_Receive>:
 8008b38:	b5b0      	push	{r4, r5, r7, lr}
 8008b3a:	b086      	sub	sp, #24
 8008b3c:	af00      	add	r7, sp, #0
 8008b3e:	4603      	mov	r3, r0
 8008b40:	60b9      	str	r1, [r7, #8]
 8008b42:	607a      	str	r2, [r7, #4]
 8008b44:	73fb      	strb	r3, [r7, #15]
 8008b46:	2300      	movs	r3, #0
 8008b48:	617b      	str	r3, [r7, #20]
 8008b4a:	e021      	b.n	8008b90 <CDC_Receive+0x58>
 8008b4c:	68ba      	ldr	r2, [r7, #8]
 8008b4e:	697b      	ldr	r3, [r7, #20]
 8008b50:	18d0      	adds	r0, r2, r3
 8008b52:	7bf9      	ldrb	r1, [r7, #15]
 8008b54:	7bfa      	ldrb	r2, [r7, #15]
 8008b56:	4b19      	ldr	r3, [pc, #100]	@ (8008bbc <CDC_Receive+0x84>)
 8008b58:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008b5c:	1c5c      	adds	r4, r3, #1
 8008b5e:	4d17      	ldr	r5, [pc, #92]	@ (8008bbc <CDC_Receive+0x84>)
 8008b60:	f845 4022 	str.w	r4, [r5, r2, lsl #2]
 8008b64:	7804      	ldrb	r4, [r0, #0]
 8008b66:	4816      	ldr	r0, [pc, #88]	@ (8008bc0 <CDC_Receive+0x88>)
 8008b68:	030a      	lsls	r2, r1, #12
 8008b6a:	4402      	add	r2, r0
 8008b6c:	4413      	add	r3, r2
 8008b6e:	4622      	mov	r2, r4
 8008b70:	701a      	strb	r2, [r3, #0]
 8008b72:	7bfb      	ldrb	r3, [r7, #15]
 8008b74:	4a11      	ldr	r2, [pc, #68]	@ (8008bbc <CDC_Receive+0x84>)
 8008b76:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008b7a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008b7e:	d304      	bcc.n	8008b8a <CDC_Receive+0x52>
 8008b80:	7bfb      	ldrb	r3, [r7, #15]
 8008b82:	4a0e      	ldr	r2, [pc, #56]	@ (8008bbc <CDC_Receive+0x84>)
 8008b84:	2100      	movs	r1, #0
 8008b86:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8008b8a:	697b      	ldr	r3, [r7, #20]
 8008b8c:	3301      	adds	r3, #1
 8008b8e:	617b      	str	r3, [r7, #20]
 8008b90:	687b      	ldr	r3, [r7, #4]
 8008b92:	681b      	ldr	r3, [r3, #0]
 8008b94:	697a      	ldr	r2, [r7, #20]
 8008b96:	429a      	cmp	r2, r3
 8008b98:	d3d8      	bcc.n	8008b4c <CDC_Receive+0x14>
 8008b9a:	7bfb      	ldrb	r3, [r7, #15]
 8008b9c:	68ba      	ldr	r2, [r7, #8]
 8008b9e:	4909      	ldr	r1, [pc, #36]	@ (8008bc4 <CDC_Receive+0x8c>)
 8008ba0:	4618      	mov	r0, r3
 8008ba2:	f000 fef7 	bl	8009994 <USBD_CDC_SetRxBuffer>
 8008ba6:	7bfb      	ldrb	r3, [r7, #15]
 8008ba8:	4906      	ldr	r1, [pc, #24]	@ (8008bc4 <CDC_Receive+0x8c>)
 8008baa:	4618      	mov	r0, r3
 8008bac:	f000 ff52 	bl	8009a54 <USBD_CDC_ReceivePacket>
 8008bb0:	2300      	movs	r3, #0
 8008bb2:	4618      	mov	r0, r3
 8008bb4:	3718      	adds	r7, #24
 8008bb6:	46bd      	mov	sp, r7
 8008bb8:	bdb0      	pop	{r4, r5, r7, pc}
 8008bba:	bf00      	nop
 8008bbc:	200020fc 	.word	0x200020fc
 8008bc0:	200010fc 	.word	0x200010fc
 8008bc4:	20000d50 	.word	0x20000d50

08008bc8 <CDC_TransmitCplt>:
 8008bc8:	b480      	push	{r7}
 8008bca:	b085      	sub	sp, #20
 8008bcc:	af00      	add	r7, sp, #0
 8008bce:	60b9      	str	r1, [r7, #8]
 8008bd0:	607a      	str	r2, [r7, #4]
 8008bd2:	461a      	mov	r2, r3
 8008bd4:	4603      	mov	r3, r0
 8008bd6:	73fb      	strb	r3, [r7, #15]
 8008bd8:	4613      	mov	r3, r2
 8008bda:	73bb      	strb	r3, [r7, #14]
 8008bdc:	2300      	movs	r3, #0
 8008bde:	4618      	mov	r0, r3
 8008be0:	3714      	adds	r7, #20
 8008be2:	46bd      	mov	sp, r7
 8008be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008be8:	4770      	bx	lr
	...

08008bec <HAL_UART_TxCpltCallback>:
 8008bec:	b580      	push	{r7, lr}
 8008bee:	b084      	sub	sp, #16
 8008bf0:	af00      	add	r7, sp, #0
 8008bf2:	6078      	str	r0, [r7, #4]
 8008bf4:	6878      	ldr	r0, [r7, #4]
 8008bf6:	f7ff fd8f 	bl	8008718 <UART_Handle_TO_CDC_CH>
 8008bfa:	4603      	mov	r3, r0
 8008bfc:	73fb      	strb	r3, [r7, #15]
 8008bfe:	7bfb      	ldrb	r3, [r7, #15]
 8008c00:	2b00      	cmp	r3, #0
 8008c02:	d11c      	bne.n	8008c3e <HAL_UART_TxCpltCallback+0x52>
 8008c04:	7bfb      	ldrb	r3, [r7, #15]
 8008c06:	4a10      	ldr	r2, [pc, #64]	@ (8008c48 <HAL_UART_TxCpltCallback+0x5c>)
 8008c08:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008c0c:	7bfb      	ldrb	r3, [r7, #15]
 8008c0e:	490f      	ldr	r1, [pc, #60]	@ (8008c4c <HAL_UART_TxCpltCallback+0x60>)
 8008c10:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008c14:	429a      	cmp	r2, r3
 8008c16:	d905      	bls.n	8008c24 <HAL_UART_TxCpltCallback+0x38>
 8008c18:	7bfb      	ldrb	r3, [r7, #15]
 8008c1a:	4a0b      	ldr	r2, [pc, #44]	@ (8008c48 <HAL_UART_TxCpltCallback+0x5c>)
 8008c1c:	2100      	movs	r1, #0
 8008c1e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8008c22:	e007      	b.n	8008c34 <HAL_UART_TxCpltCallback+0x48>
 8008c24:	7bfa      	ldrb	r2, [r7, #15]
 8008c26:	7bfb      	ldrb	r3, [r7, #15]
 8008c28:	4908      	ldr	r1, [pc, #32]	@ (8008c4c <HAL_UART_TxCpltCallback+0x60>)
 8008c2a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8008c2e:	4906      	ldr	r1, [pc, #24]	@ (8008c48 <HAL_UART_TxCpltCallback+0x5c>)
 8008c30:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008c34:	7bfb      	ldrb	r3, [r7, #15]
 8008c36:	4a06      	ldr	r2, [pc, #24]	@ (8008c50 <HAL_UART_TxCpltCallback+0x64>)
 8008c38:	2100      	movs	r1, #0
 8008c3a:	54d1      	strb	r1, [r2, r3]
 8008c3c:	e000      	b.n	8008c40 <HAL_UART_TxCpltCallback+0x54>
 8008c3e:	bf00      	nop
 8008c40:	3710      	adds	r7, #16
 8008c42:	46bd      	mov	sp, r7
 8008c44:	bd80      	pop	{r7, pc}
 8008c46:	bf00      	nop
 8008c48:	20002100 	.word	0x20002100
 8008c4c:	200020fc 	.word	0x200020fc
 8008c50:	20002104 	.word	0x20002104

08008c54 <ProcessCDC_RX>:
 8008c54:	b580      	push	{r7, lr}
 8008c56:	b084      	sub	sp, #16
 8008c58:	af00      	add	r7, sp, #0
 8008c5a:	2300      	movs	r3, #0
 8008c5c:	73fb      	strb	r3, [r7, #15]
 8008c5e:	e057      	b.n	8008d10 <ProcessCDC_RX+0xbc>
 8008c60:	7bfb      	ldrb	r3, [r7, #15]
 8008c62:	4a2f      	ldr	r2, [pc, #188]	@ (8008d20 <ProcessCDC_RX+0xcc>)
 8008c64:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008c68:	7bfb      	ldrb	r3, [r7, #15]
 8008c6a:	492e      	ldr	r1, [pc, #184]	@ (8008d24 <ProcessCDC_RX+0xd0>)
 8008c6c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008c70:	429a      	cmp	r2, r3
 8008c72:	d04a      	beq.n	8008d0a <ProcessCDC_RX+0xb6>
 8008c74:	7bfb      	ldrb	r3, [r7, #15]
 8008c76:	4a2a      	ldr	r2, [pc, #168]	@ (8008d20 <ProcessCDC_RX+0xcc>)
 8008c78:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008c7c:	607b      	str	r3, [r7, #4]
 8008c7e:	7bfb      	ldrb	r3, [r7, #15]
 8008c80:	4a27      	ldr	r2, [pc, #156]	@ (8008d20 <ProcessCDC_RX+0xcc>)
 8008c82:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008c86:	7bfb      	ldrb	r3, [r7, #15]
 8008c88:	4926      	ldr	r1, [pc, #152]	@ (8008d24 <ProcessCDC_RX+0xd0>)
 8008c8a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008c8e:	429a      	cmp	r2, r3
 8008c90:	d906      	bls.n	8008ca0 <ProcessCDC_RX+0x4c>
 8008c92:	7bfb      	ldrb	r3, [r7, #15]
 8008c94:	4a22      	ldr	r2, [pc, #136]	@ (8008d20 <ProcessCDC_RX+0xcc>)
 8008c96:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008c9a:	f5c3 5380 	rsb	r3, r3, #4096	@ 0x1000
 8008c9e:	e008      	b.n	8008cb2 <ProcessCDC_RX+0x5e>
 8008ca0:	7bfb      	ldrb	r3, [r7, #15]
 8008ca2:	4a20      	ldr	r2, [pc, #128]	@ (8008d24 <ProcessCDC_RX+0xd0>)
 8008ca4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008ca8:	7bfb      	ldrb	r3, [r7, #15]
 8008caa:	491d      	ldr	r1, [pc, #116]	@ (8008d20 <ProcessCDC_RX+0xcc>)
 8008cac:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008cb0:	1ad3      	subs	r3, r2, r3
 8008cb2:	60bb      	str	r3, [r7, #8]
 8008cb4:	68bb      	ldr	r3, [r7, #8]
 8008cb6:	2b40      	cmp	r3, #64	@ 0x40
 8008cb8:	d901      	bls.n	8008cbe <ProcessCDC_RX+0x6a>
 8008cba:	2340      	movs	r3, #64	@ 0x40
 8008cbc:	60bb      	str	r3, [r7, #8]
 8008cbe:	7bfb      	ldrb	r3, [r7, #15]
 8008cc0:	4618      	mov	r0, r3
 8008cc2:	f7ff fd13 	bl	80086ec <CDC_CH_To_UART_Handle>
 8008cc6:	7bfb      	ldrb	r3, [r7, #15]
 8008cc8:	031a      	lsls	r2, r3, #12
 8008cca:	687b      	ldr	r3, [r7, #4]
 8008ccc:	4413      	add	r3, r2
 8008cce:	4a16      	ldr	r2, [pc, #88]	@ (8008d28 <ProcessCDC_RX+0xd4>)
 8008cd0:	1899      	adds	r1, r3, r2
 8008cd2:	68bb      	ldr	r3, [r7, #8]
 8008cd4:	b29a      	uxth	r2, r3
 8008cd6:	f04f 33ff 	mov.w	r3, #4294967295
 8008cda:	f7fd f969 	bl	8005fb0 <HAL_UART_Transmit>
 8008cde:	7bfb      	ldrb	r3, [r7, #15]
 8008ce0:	4a0f      	ldr	r2, [pc, #60]	@ (8008d20 <ProcessCDC_RX+0xcc>)
 8008ce2:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8008ce6:	7bfb      	ldrb	r3, [r7, #15]
 8008ce8:	68ba      	ldr	r2, [r7, #8]
 8008cea:	440a      	add	r2, r1
 8008cec:	490c      	ldr	r1, [pc, #48]	@ (8008d20 <ProcessCDC_RX+0xcc>)
 8008cee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008cf2:	7bfb      	ldrb	r3, [r7, #15]
 8008cf4:	4a0a      	ldr	r2, [pc, #40]	@ (8008d20 <ProcessCDC_RX+0xcc>)
 8008cf6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008cfa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008cfe:	d304      	bcc.n	8008d0a <ProcessCDC_RX+0xb6>
 8008d00:	7bfb      	ldrb	r3, [r7, #15]
 8008d02:	4a07      	ldr	r2, [pc, #28]	@ (8008d20 <ProcessCDC_RX+0xcc>)
 8008d04:	2100      	movs	r1, #0
 8008d06:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8008d0a:	7bfb      	ldrb	r3, [r7, #15]
 8008d0c:	3301      	adds	r3, #1
 8008d0e:	73fb      	strb	r3, [r7, #15]
 8008d10:	7bfb      	ldrb	r3, [r7, #15]
 8008d12:	2b00      	cmp	r3, #0
 8008d14:	d0a4      	beq.n	8008c60 <ProcessCDC_RX+0xc>
 8008d16:	bf00      	nop
 8008d18:	bf00      	nop
 8008d1a:	3710      	adds	r7, #16
 8008d1c:	46bd      	mov	sp, r7
 8008d1e:	bd80      	pop	{r7, pc}
 8008d20:	20002100 	.word	0x20002100
 8008d24:	200020fc 	.word	0x200020fc
 8008d28:	200010fc 	.word	0x200010fc

08008d2c <ProcessCDC_TX>:
 8008d2c:	b580      	push	{r7, lr}
 8008d2e:	b084      	sub	sp, #16
 8008d30:	af00      	add	r7, sp, #0
 8008d32:	2300      	movs	r3, #0
 8008d34:	73fb      	strb	r3, [r7, #15]
 8008d36:	e054      	b.n	8008de2 <ProcessCDC_TX+0xb6>
 8008d38:	7bfb      	ldrb	r3, [r7, #15]
 8008d3a:	4a2e      	ldr	r2, [pc, #184]	@ (8008df4 <ProcessCDC_TX+0xc8>)
 8008d3c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008d40:	7bfb      	ldrb	r3, [r7, #15]
 8008d42:	492d      	ldr	r1, [pc, #180]	@ (8008df8 <ProcessCDC_TX+0xcc>)
 8008d44:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008d48:	429a      	cmp	r2, r3
 8008d4a:	d047      	beq.n	8008ddc <ProcessCDC_TX+0xb0>
 8008d4c:	7bfb      	ldrb	r3, [r7, #15]
 8008d4e:	4a29      	ldr	r2, [pc, #164]	@ (8008df4 <ProcessCDC_TX+0xc8>)
 8008d50:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008d54:	60bb      	str	r3, [r7, #8]
 8008d56:	7bfb      	ldrb	r3, [r7, #15]
 8008d58:	4a26      	ldr	r2, [pc, #152]	@ (8008df4 <ProcessCDC_TX+0xc8>)
 8008d5a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008d5e:	7bfb      	ldrb	r3, [r7, #15]
 8008d60:	4925      	ldr	r1, [pc, #148]	@ (8008df8 <ProcessCDC_TX+0xcc>)
 8008d62:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008d66:	429a      	cmp	r2, r3
 8008d68:	d906      	bls.n	8008d78 <ProcessCDC_TX+0x4c>
 8008d6a:	7bfb      	ldrb	r3, [r7, #15]
 8008d6c:	4a21      	ldr	r2, [pc, #132]	@ (8008df4 <ProcessCDC_TX+0xc8>)
 8008d6e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008d72:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
 8008d76:	e008      	b.n	8008d8a <ProcessCDC_TX+0x5e>
 8008d78:	7bfb      	ldrb	r3, [r7, #15]
 8008d7a:	4a1f      	ldr	r2, [pc, #124]	@ (8008df8 <ProcessCDC_TX+0xcc>)
 8008d7c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008d80:	7bfb      	ldrb	r3, [r7, #15]
 8008d82:	491c      	ldr	r1, [pc, #112]	@ (8008df4 <ProcessCDC_TX+0xc8>)
 8008d84:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008d88:	1ad3      	subs	r3, r2, r3
 8008d8a:	607b      	str	r3, [r7, #4]
 8008d8c:	7bfb      	ldrb	r3, [r7, #15]
 8008d8e:	019a      	lsls	r2, r3, #6
 8008d90:	68bb      	ldr	r3, [r7, #8]
 8008d92:	4413      	add	r3, r2
 8008d94:	4a19      	ldr	r2, [pc, #100]	@ (8008dfc <ProcessCDC_TX+0xd0>)
 8008d96:	441a      	add	r2, r3
 8008d98:	7bf8      	ldrb	r0, [r7, #15]
 8008d9a:	687b      	ldr	r3, [r7, #4]
 8008d9c:	4918      	ldr	r1, [pc, #96]	@ (8008e00 <ProcessCDC_TX+0xd4>)
 8008d9e:	f000 fdd5 	bl	800994c <USBD_CDC_SetTxBuffer>
 8008da2:	7bfb      	ldrb	r3, [r7, #15]
 8008da4:	4916      	ldr	r1, [pc, #88]	@ (8008e00 <ProcessCDC_TX+0xd4>)
 8008da6:	4618      	mov	r0, r3
 8008da8:	f000 fe12 	bl	80099d0 <USBD_CDC_TransmitPacket>
 8008dac:	4603      	mov	r3, r0
 8008dae:	2b00      	cmp	r3, #0
 8008db0:	d114      	bne.n	8008ddc <ProcessCDC_TX+0xb0>
 8008db2:	7bfb      	ldrb	r3, [r7, #15]
 8008db4:	4a0f      	ldr	r2, [pc, #60]	@ (8008df4 <ProcessCDC_TX+0xc8>)
 8008db6:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8008dba:	7bfb      	ldrb	r3, [r7, #15]
 8008dbc:	687a      	ldr	r2, [r7, #4]
 8008dbe:	440a      	add	r2, r1
 8008dc0:	490c      	ldr	r1, [pc, #48]	@ (8008df4 <ProcessCDC_TX+0xc8>)
 8008dc2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008dc6:	7bfb      	ldrb	r3, [r7, #15]
 8008dc8:	4a0a      	ldr	r2, [pc, #40]	@ (8008df4 <ProcessCDC_TX+0xc8>)
 8008dca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008dce:	2b40      	cmp	r3, #64	@ 0x40
 8008dd0:	d104      	bne.n	8008ddc <ProcessCDC_TX+0xb0>
 8008dd2:	7bfb      	ldrb	r3, [r7, #15]
 8008dd4:	4a07      	ldr	r2, [pc, #28]	@ (8008df4 <ProcessCDC_TX+0xc8>)
 8008dd6:	2100      	movs	r1, #0
 8008dd8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8008ddc:	7bfb      	ldrb	r3, [r7, #15]
 8008dde:	3301      	adds	r3, #1
 8008de0:	73fb      	strb	r3, [r7, #15]
 8008de2:	7bfb      	ldrb	r3, [r7, #15]
 8008de4:	2b00      	cmp	r3, #0
 8008de6:	d0a7      	beq.n	8008d38 <ProcessCDC_TX+0xc>
 8008de8:	bf00      	nop
 8008dea:	bf00      	nop
 8008dec:	3710      	adds	r7, #16
 8008dee:	46bd      	mov	sp, r7
 8008df0:	bd80      	pop	{r7, pc}
 8008df2:	bf00      	nop
 8008df4:	200010f8 	.word	0x200010f8
 8008df8:	200010f4 	.word	0x200010f4
 8008dfc:	200010ac 	.word	0x200010ac
 8008e00:	20000d50 	.word	0x20000d50

08008e04 <HAL_TIM_PeriodElapsedCallback>:
 8008e04:	b580      	push	{r7, lr}
 8008e06:	b082      	sub	sp, #8
 8008e08:	af00      	add	r7, sp, #0
 8008e0a:	6078      	str	r0, [r7, #4]
 8008e0c:	687b      	ldr	r3, [r7, #4]
 8008e0e:	4a12      	ldr	r2, [pc, #72]	@ (8008e58 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8008e10:	4293      	cmp	r3, r2
 8008e12:	d102      	bne.n	8008e1a <HAL_TIM_PeriodElapsedCallback+0x16>
 8008e14:	f7ff ff1e 	bl	8008c54 <ProcessCDC_RX>
 8008e18:	e01a      	b.n	8008e50 <HAL_TIM_PeriodElapsedCallback+0x4c>
 8008e1a:	687b      	ldr	r3, [r7, #4]
 8008e1c:	4a0f      	ldr	r2, [pc, #60]	@ (8008e5c <HAL_TIM_PeriodElapsedCallback+0x58>)
 8008e1e:	4293      	cmp	r3, r2
 8008e20:	d102      	bne.n	8008e28 <HAL_TIM_PeriodElapsedCallback+0x24>
 8008e22:	f7ff ff83 	bl	8008d2c <ProcessCDC_TX>
 8008e26:	e013      	b.n	8008e50 <HAL_TIM_PeriodElapsedCallback+0x4c>
 8008e28:	687b      	ldr	r3, [r7, #4]
 8008e2a:	4a0d      	ldr	r2, [pc, #52]	@ (8008e60 <HAL_TIM_PeriodElapsedCallback+0x5c>)
 8008e2c:	4293      	cmp	r3, r2
 8008e2e:	d10f      	bne.n	8008e50 <HAL_TIM_PeriodElapsedCallback+0x4c>
 8008e30:	490c      	ldr	r1, [pc, #48]	@ (8008e64 <HAL_TIM_PeriodElapsedCallback+0x60>)
 8008e32:	480d      	ldr	r0, [pc, #52]	@ (8008e68 <HAL_TIM_PeriodElapsedCallback+0x64>)
 8008e34:	f000 f9b2 	bl	800919c <HID_Frame_Read>
 8008e38:	4603      	mov	r3, r0
 8008e3a:	2b00      	cmp	r3, #0
 8008e3c:	d008      	beq.n	8008e50 <HAL_TIM_PeriodElapsedCallback+0x4c>
 8008e3e:	2140      	movs	r1, #64	@ 0x40
 8008e40:	480a      	ldr	r0, [pc, #40]	@ (8008e6c <HAL_TIM_PeriodElapsedCallback+0x68>)
 8008e42:	f7fa fabc 	bl	80033be <HAL_GPIO_TogglePin>
 8008e46:	2240      	movs	r2, #64	@ 0x40
 8008e48:	4906      	ldr	r1, [pc, #24]	@ (8008e64 <HAL_TIM_PeriodElapsedCallback+0x60>)
 8008e4a:	4809      	ldr	r0, [pc, #36]	@ (8008e70 <HAL_TIM_PeriodElapsedCallback+0x6c>)
 8008e4c:	f001 fb94 	bl	800a578 <USBD_CUSTOM_HID_SendReport>
 8008e50:	bf00      	nop
 8008e52:	3708      	adds	r7, #8
 8008e54:	46bd      	mov	sp, r7
 8008e56:	bd80      	pop	{r7, pc}
 8008e58:	20000688 	.word	0x20000688
 8008e5c:	20000640 	.word	0x20000640
 8008e60:	200006d0 	.word	0x200006d0
 8008e64:	20002108 	.word	0x20002108
 8008e68:	20000438 	.word	0x20000438
 8008e6c:	40020000 	.word	0x40020000
 8008e70:	20000d50 	.word	0x20000d50

08008e74 <HAL_UART_RxCpltCallback>:
 8008e74:	b580      	push	{r7, lr}
 8008e76:	b084      	sub	sp, #16
 8008e78:	af00      	add	r7, sp, #0
 8008e7a:	6078      	str	r0, [r7, #4]
 8008e7c:	6878      	ldr	r0, [r7, #4]
 8008e7e:	f7ff fc4b 	bl	8008718 <UART_Handle_TO_CDC_CH>
 8008e82:	4603      	mov	r3, r0
 8008e84:	73fb      	strb	r3, [r7, #15]
 8008e86:	7bfb      	ldrb	r3, [r7, #15]
 8008e88:	4a11      	ldr	r2, [pc, #68]	@ (8008ed0 <HAL_UART_RxCpltCallback+0x5c>)
 8008e8a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008e8e:	3201      	adds	r2, #1
 8008e90:	490f      	ldr	r1, [pc, #60]	@ (8008ed0 <HAL_UART_RxCpltCallback+0x5c>)
 8008e92:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008e96:	7bfb      	ldrb	r3, [r7, #15]
 8008e98:	4a0d      	ldr	r2, [pc, #52]	@ (8008ed0 <HAL_UART_RxCpltCallback+0x5c>)
 8008e9a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008e9e:	2b40      	cmp	r3, #64	@ 0x40
 8008ea0:	d104      	bne.n	8008eac <HAL_UART_RxCpltCallback+0x38>
 8008ea2:	7bfb      	ldrb	r3, [r7, #15]
 8008ea4:	4a0a      	ldr	r2, [pc, #40]	@ (8008ed0 <HAL_UART_RxCpltCallback+0x5c>)
 8008ea6:	2100      	movs	r1, #0
 8008ea8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8008eac:	7bfb      	ldrb	r3, [r7, #15]
 8008eae:	019b      	lsls	r3, r3, #6
 8008eb0:	4a08      	ldr	r2, [pc, #32]	@ (8008ed4 <HAL_UART_RxCpltCallback+0x60>)
 8008eb2:	441a      	add	r2, r3
 8008eb4:	7bfb      	ldrb	r3, [r7, #15]
 8008eb6:	4906      	ldr	r1, [pc, #24]	@ (8008ed0 <HAL_UART_RxCpltCallback+0x5c>)
 8008eb8:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008ebc:	4413      	add	r3, r2
 8008ebe:	2201      	movs	r2, #1
 8008ec0:	4619      	mov	r1, r3
 8008ec2:	6878      	ldr	r0, [r7, #4]
 8008ec4:	f7fd f8ff 	bl	80060c6 <HAL_UART_Receive_IT>
 8008ec8:	bf00      	nop
 8008eca:	3710      	adds	r7, #16
 8008ecc:	46bd      	mov	sp, r7
 8008ece:	bd80      	pop	{r7, pc}
 8008ed0:	200010f4 	.word	0x200010f4
 8008ed4:	200010ac 	.word	0x200010ac

08008ed8 <USBD_DeviceDescriptor>:
 8008ed8:	b480      	push	{r7}
 8008eda:	b083      	sub	sp, #12
 8008edc:	af00      	add	r7, sp, #0
 8008ede:	4603      	mov	r3, r0
 8008ee0:	6039      	str	r1, [r7, #0]
 8008ee2:	71fb      	strb	r3, [r7, #7]
 8008ee4:	683b      	ldr	r3, [r7, #0]
 8008ee6:	2212      	movs	r2, #18
 8008ee8:	801a      	strh	r2, [r3, #0]
 8008eea:	4b03      	ldr	r3, [pc, #12]	@ (8008ef8 <USBD_DeviceDescriptor+0x20>)
 8008eec:	4618      	mov	r0, r3
 8008eee:	370c      	adds	r7, #12
 8008ef0:	46bd      	mov	sp, r7
 8008ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ef6:	4770      	bx	lr
 8008ef8:	20000048 	.word	0x20000048

08008efc <USBD_LangIDStrDescriptor>:
 8008efc:	b480      	push	{r7}
 8008efe:	b083      	sub	sp, #12
 8008f00:	af00      	add	r7, sp, #0
 8008f02:	4603      	mov	r3, r0
 8008f04:	6039      	str	r1, [r7, #0]
 8008f06:	71fb      	strb	r3, [r7, #7]
 8008f08:	683b      	ldr	r3, [r7, #0]
 8008f0a:	2204      	movs	r2, #4
 8008f0c:	801a      	strh	r2, [r3, #0]
 8008f0e:	4b03      	ldr	r3, [pc, #12]	@ (8008f1c <USBD_LangIDStrDescriptor+0x20>)
 8008f10:	4618      	mov	r0, r3
 8008f12:	370c      	adds	r7, #12
 8008f14:	46bd      	mov	sp, r7
 8008f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f1a:	4770      	bx	lr
 8008f1c:	2000005c 	.word	0x2000005c

08008f20 <USBD_ProductStrDescriptor>:
 8008f20:	b580      	push	{r7, lr}
 8008f22:	b082      	sub	sp, #8
 8008f24:	af00      	add	r7, sp, #0
 8008f26:	4603      	mov	r3, r0
 8008f28:	6039      	str	r1, [r7, #0]
 8008f2a:	71fb      	strb	r3, [r7, #7]
 8008f2c:	79fb      	ldrb	r3, [r7, #7]
 8008f2e:	2b00      	cmp	r3, #0
 8008f30:	d105      	bne.n	8008f3e <USBD_ProductStrDescriptor+0x1e>
 8008f32:	683a      	ldr	r2, [r7, #0]
 8008f34:	4907      	ldr	r1, [pc, #28]	@ (8008f54 <USBD_ProductStrDescriptor+0x34>)
 8008f36:	4808      	ldr	r0, [pc, #32]	@ (8008f58 <USBD_ProductStrDescriptor+0x38>)
 8008f38:	f002 fce5 	bl	800b906 <USBD_GetString>
 8008f3c:	e004      	b.n	8008f48 <USBD_ProductStrDescriptor+0x28>
 8008f3e:	683a      	ldr	r2, [r7, #0]
 8008f40:	4904      	ldr	r1, [pc, #16]	@ (8008f54 <USBD_ProductStrDescriptor+0x34>)
 8008f42:	4805      	ldr	r0, [pc, #20]	@ (8008f58 <USBD_ProductStrDescriptor+0x38>)
 8008f44:	f002 fcdf 	bl	800b906 <USBD_GetString>
 8008f48:	4b02      	ldr	r3, [pc, #8]	@ (8008f54 <USBD_ProductStrDescriptor+0x34>)
 8008f4a:	4618      	mov	r0, r3
 8008f4c:	3708      	adds	r7, #8
 8008f4e:	46bd      	mov	sp, r7
 8008f50:	bd80      	pop	{r7, pc}
 8008f52:	bf00      	nop
 8008f54:	20002110 	.word	0x20002110
 8008f58:	0800ca08 	.word	0x0800ca08

08008f5c <USBD_ManufacturerStrDescriptor>:
 8008f5c:	b580      	push	{r7, lr}
 8008f5e:	b082      	sub	sp, #8
 8008f60:	af00      	add	r7, sp, #0
 8008f62:	4603      	mov	r3, r0
 8008f64:	6039      	str	r1, [r7, #0]
 8008f66:	71fb      	strb	r3, [r7, #7]
 8008f68:	683a      	ldr	r2, [r7, #0]
 8008f6a:	4904      	ldr	r1, [pc, #16]	@ (8008f7c <USBD_ManufacturerStrDescriptor+0x20>)
 8008f6c:	4804      	ldr	r0, [pc, #16]	@ (8008f80 <USBD_ManufacturerStrDescriptor+0x24>)
 8008f6e:	f002 fcca 	bl	800b906 <USBD_GetString>
 8008f72:	4b02      	ldr	r3, [pc, #8]	@ (8008f7c <USBD_ManufacturerStrDescriptor+0x20>)
 8008f74:	4618      	mov	r0, r3
 8008f76:	3708      	adds	r7, #8
 8008f78:	46bd      	mov	sp, r7
 8008f7a:	bd80      	pop	{r7, pc}
 8008f7c:	20002110 	.word	0x20002110
 8008f80:	0800ca18 	.word	0x0800ca18

08008f84 <USBD_SerialStrDescriptor>:
 8008f84:	b580      	push	{r7, lr}
 8008f86:	b082      	sub	sp, #8
 8008f88:	af00      	add	r7, sp, #0
 8008f8a:	4603      	mov	r3, r0
 8008f8c:	6039      	str	r1, [r7, #0]
 8008f8e:	71fb      	strb	r3, [r7, #7]
 8008f90:	683b      	ldr	r3, [r7, #0]
 8008f92:	221a      	movs	r2, #26
 8008f94:	801a      	strh	r2, [r3, #0]
 8008f96:	f000 f843 	bl	8009020 <Get_SerialNum>
 8008f9a:	4b02      	ldr	r3, [pc, #8]	@ (8008fa4 <USBD_SerialStrDescriptor+0x20>)
 8008f9c:	4618      	mov	r0, r3
 8008f9e:	3708      	adds	r7, #8
 8008fa0:	46bd      	mov	sp, r7
 8008fa2:	bd80      	pop	{r7, pc}
 8008fa4:	20000060 	.word	0x20000060

08008fa8 <USBD_ConfigStrDescriptor>:
 8008fa8:	b580      	push	{r7, lr}
 8008faa:	b082      	sub	sp, #8
 8008fac:	af00      	add	r7, sp, #0
 8008fae:	4603      	mov	r3, r0
 8008fb0:	6039      	str	r1, [r7, #0]
 8008fb2:	71fb      	strb	r3, [r7, #7]
 8008fb4:	79fb      	ldrb	r3, [r7, #7]
 8008fb6:	2b00      	cmp	r3, #0
 8008fb8:	d105      	bne.n	8008fc6 <USBD_ConfigStrDescriptor+0x1e>
 8008fba:	683a      	ldr	r2, [r7, #0]
 8008fbc:	4907      	ldr	r1, [pc, #28]	@ (8008fdc <USBD_ConfigStrDescriptor+0x34>)
 8008fbe:	4808      	ldr	r0, [pc, #32]	@ (8008fe0 <USBD_ConfigStrDescriptor+0x38>)
 8008fc0:	f002 fca1 	bl	800b906 <USBD_GetString>
 8008fc4:	e004      	b.n	8008fd0 <USBD_ConfigStrDescriptor+0x28>
 8008fc6:	683a      	ldr	r2, [r7, #0]
 8008fc8:	4904      	ldr	r1, [pc, #16]	@ (8008fdc <USBD_ConfigStrDescriptor+0x34>)
 8008fca:	4805      	ldr	r0, [pc, #20]	@ (8008fe0 <USBD_ConfigStrDescriptor+0x38>)
 8008fcc:	f002 fc9b 	bl	800b906 <USBD_GetString>
 8008fd0:	4b02      	ldr	r3, [pc, #8]	@ (8008fdc <USBD_ConfigStrDescriptor+0x34>)
 8008fd2:	4618      	mov	r0, r3
 8008fd4:	3708      	adds	r7, #8
 8008fd6:	46bd      	mov	sp, r7
 8008fd8:	bd80      	pop	{r7, pc}
 8008fda:	bf00      	nop
 8008fdc:	20002110 	.word	0x20002110
 8008fe0:	0800ca20 	.word	0x0800ca20

08008fe4 <USBD_InterfaceStrDescriptor>:
 8008fe4:	b580      	push	{r7, lr}
 8008fe6:	b082      	sub	sp, #8
 8008fe8:	af00      	add	r7, sp, #0
 8008fea:	4603      	mov	r3, r0
 8008fec:	6039      	str	r1, [r7, #0]
 8008fee:	71fb      	strb	r3, [r7, #7]
 8008ff0:	79fb      	ldrb	r3, [r7, #7]
 8008ff2:	2b00      	cmp	r3, #0
 8008ff4:	d105      	bne.n	8009002 <USBD_InterfaceStrDescriptor+0x1e>
 8008ff6:	683a      	ldr	r2, [r7, #0]
 8008ff8:	4907      	ldr	r1, [pc, #28]	@ (8009018 <USBD_InterfaceStrDescriptor+0x34>)
 8008ffa:	4808      	ldr	r0, [pc, #32]	@ (800901c <USBD_InterfaceStrDescriptor+0x38>)
 8008ffc:	f002 fc83 	bl	800b906 <USBD_GetString>
 8009000:	e004      	b.n	800900c <USBD_InterfaceStrDescriptor+0x28>
 8009002:	683a      	ldr	r2, [r7, #0]
 8009004:	4904      	ldr	r1, [pc, #16]	@ (8009018 <USBD_InterfaceStrDescriptor+0x34>)
 8009006:	4805      	ldr	r0, [pc, #20]	@ (800901c <USBD_InterfaceStrDescriptor+0x38>)
 8009008:	f002 fc7d 	bl	800b906 <USBD_GetString>
 800900c:	4b02      	ldr	r3, [pc, #8]	@ (8009018 <USBD_InterfaceStrDescriptor+0x34>)
 800900e:	4618      	mov	r0, r3
 8009010:	3708      	adds	r7, #8
 8009012:	46bd      	mov	sp, r7
 8009014:	bd80      	pop	{r7, pc}
 8009016:	bf00      	nop
 8009018:	20002110 	.word	0x20002110
 800901c:	0800ca30 	.word	0x0800ca30

08009020 <Get_SerialNum>:
 8009020:	b580      	push	{r7, lr}
 8009022:	b084      	sub	sp, #16
 8009024:	af00      	add	r7, sp, #0
 8009026:	4b0f      	ldr	r3, [pc, #60]	@ (8009064 <Get_SerialNum+0x44>)
 8009028:	681b      	ldr	r3, [r3, #0]
 800902a:	60fb      	str	r3, [r7, #12]
 800902c:	4b0e      	ldr	r3, [pc, #56]	@ (8009068 <Get_SerialNum+0x48>)
 800902e:	681b      	ldr	r3, [r3, #0]
 8009030:	60bb      	str	r3, [r7, #8]
 8009032:	4b0e      	ldr	r3, [pc, #56]	@ (800906c <Get_SerialNum+0x4c>)
 8009034:	681b      	ldr	r3, [r3, #0]
 8009036:	607b      	str	r3, [r7, #4]
 8009038:	68fa      	ldr	r2, [r7, #12]
 800903a:	687b      	ldr	r3, [r7, #4]
 800903c:	4413      	add	r3, r2
 800903e:	60fb      	str	r3, [r7, #12]
 8009040:	68fb      	ldr	r3, [r7, #12]
 8009042:	2b00      	cmp	r3, #0
 8009044:	d009      	beq.n	800905a <Get_SerialNum+0x3a>
 8009046:	2208      	movs	r2, #8
 8009048:	4909      	ldr	r1, [pc, #36]	@ (8009070 <Get_SerialNum+0x50>)
 800904a:	68f8      	ldr	r0, [r7, #12]
 800904c:	f000 f814 	bl	8009078 <IntToUnicode>
 8009050:	2204      	movs	r2, #4
 8009052:	4908      	ldr	r1, [pc, #32]	@ (8009074 <Get_SerialNum+0x54>)
 8009054:	68b8      	ldr	r0, [r7, #8]
 8009056:	f000 f80f 	bl	8009078 <IntToUnicode>
 800905a:	bf00      	nop
 800905c:	3710      	adds	r7, #16
 800905e:	46bd      	mov	sp, r7
 8009060:	bd80      	pop	{r7, pc}
 8009062:	bf00      	nop
 8009064:	1fff7a10 	.word	0x1fff7a10
 8009068:	1fff7a14 	.word	0x1fff7a14
 800906c:	1fff7a18 	.word	0x1fff7a18
 8009070:	20000062 	.word	0x20000062
 8009074:	20000072 	.word	0x20000072

08009078 <IntToUnicode>:
 8009078:	b480      	push	{r7}
 800907a:	b087      	sub	sp, #28
 800907c:	af00      	add	r7, sp, #0
 800907e:	60f8      	str	r0, [r7, #12]
 8009080:	60b9      	str	r1, [r7, #8]
 8009082:	4613      	mov	r3, r2
 8009084:	71fb      	strb	r3, [r7, #7]
 8009086:	2300      	movs	r3, #0
 8009088:	75fb      	strb	r3, [r7, #23]
 800908a:	2300      	movs	r3, #0
 800908c:	75fb      	strb	r3, [r7, #23]
 800908e:	e027      	b.n	80090e0 <IntToUnicode+0x68>
 8009090:	68fb      	ldr	r3, [r7, #12]
 8009092:	0f1b      	lsrs	r3, r3, #28
 8009094:	2b09      	cmp	r3, #9
 8009096:	d80b      	bhi.n	80090b0 <IntToUnicode+0x38>
 8009098:	68fb      	ldr	r3, [r7, #12]
 800909a:	0f1b      	lsrs	r3, r3, #28
 800909c:	b2da      	uxtb	r2, r3
 800909e:	7dfb      	ldrb	r3, [r7, #23]
 80090a0:	005b      	lsls	r3, r3, #1
 80090a2:	4619      	mov	r1, r3
 80090a4:	68bb      	ldr	r3, [r7, #8]
 80090a6:	440b      	add	r3, r1
 80090a8:	3230      	adds	r2, #48	@ 0x30
 80090aa:	b2d2      	uxtb	r2, r2
 80090ac:	701a      	strb	r2, [r3, #0]
 80090ae:	e00a      	b.n	80090c6 <IntToUnicode+0x4e>
 80090b0:	68fb      	ldr	r3, [r7, #12]
 80090b2:	0f1b      	lsrs	r3, r3, #28
 80090b4:	b2da      	uxtb	r2, r3
 80090b6:	7dfb      	ldrb	r3, [r7, #23]
 80090b8:	005b      	lsls	r3, r3, #1
 80090ba:	4619      	mov	r1, r3
 80090bc:	68bb      	ldr	r3, [r7, #8]
 80090be:	440b      	add	r3, r1
 80090c0:	3237      	adds	r2, #55	@ 0x37
 80090c2:	b2d2      	uxtb	r2, r2
 80090c4:	701a      	strb	r2, [r3, #0]
 80090c6:	68fb      	ldr	r3, [r7, #12]
 80090c8:	011b      	lsls	r3, r3, #4
 80090ca:	60fb      	str	r3, [r7, #12]
 80090cc:	7dfb      	ldrb	r3, [r7, #23]
 80090ce:	005b      	lsls	r3, r3, #1
 80090d0:	3301      	adds	r3, #1
 80090d2:	68ba      	ldr	r2, [r7, #8]
 80090d4:	4413      	add	r3, r2
 80090d6:	2200      	movs	r2, #0
 80090d8:	701a      	strb	r2, [r3, #0]
 80090da:	7dfb      	ldrb	r3, [r7, #23]
 80090dc:	3301      	adds	r3, #1
 80090de:	75fb      	strb	r3, [r7, #23]
 80090e0:	7dfa      	ldrb	r2, [r7, #23]
 80090e2:	79fb      	ldrb	r3, [r7, #7]
 80090e4:	429a      	cmp	r2, r3
 80090e6:	d3d3      	bcc.n	8009090 <IntToUnicode+0x18>
 80090e8:	bf00      	nop
 80090ea:	bf00      	nop
 80090ec:	371c      	adds	r7, #28
 80090ee:	46bd      	mov	sp, r7
 80090f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090f4:	4770      	bx	lr

080090f6 <CUSTOM_HID_Init>:
 80090f6:	b480      	push	{r7}
 80090f8:	af00      	add	r7, sp, #0
 80090fa:	2300      	movs	r3, #0
 80090fc:	4618      	mov	r0, r3
 80090fe:	46bd      	mov	sp, r7
 8009100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009104:	4770      	bx	lr

08009106 <CUSTOM_HID_DeInit>:
 8009106:	b480      	push	{r7}
 8009108:	af00      	add	r7, sp, #0
 800910a:	2300      	movs	r3, #0
 800910c:	4618      	mov	r0, r3
 800910e:	46bd      	mov	sp, r7
 8009110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009114:	4770      	bx	lr
	...

08009118 <CUSTOM_HID_OutEvent>:
 8009118:	b580      	push	{r7, lr}
 800911a:	b082      	sub	sp, #8
 800911c:	af00      	add	r7, sp, #0
 800911e:	6078      	str	r0, [r7, #4]
 8009120:	460b      	mov	r3, r1
 8009122:	807b      	strh	r3, [r7, #2]
 8009124:	6879      	ldr	r1, [r7, #4]
 8009126:	4804      	ldr	r0, [pc, #16]	@ (8009138 <CUSTOM_HID_OutEvent+0x20>)
 8009128:	f000 f808 	bl	800913c <HID_Frame_Write>
 800912c:	2300      	movs	r3, #0
 800912e:	4618      	mov	r0, r3
 8009130:	3708      	adds	r7, #8
 8009132:	46bd      	mov	sp, r7
 8009134:	bd80      	pop	{r7, pc}
 8009136:	bf00      	nop
 8009138:	20002310 	.word	0x20002310

0800913c <HID_Frame_Write>:
 800913c:	b580      	push	{r7, lr}
 800913e:	b084      	sub	sp, #16
 8009140:	af00      	add	r7, sp, #0
 8009142:	6078      	str	r0, [r7, #4]
 8009144:	6039      	str	r1, [r7, #0]
 8009146:	687b      	ldr	r3, [r7, #4]
 8009148:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 800914c:	b2db      	uxtb	r3, r3
 800914e:	3301      	adds	r3, #1
 8009150:	425a      	negs	r2, r3
 8009152:	f003 0307 	and.w	r3, r3, #7
 8009156:	f002 0207 	and.w	r2, r2, #7
 800915a:	bf58      	it	pl
 800915c:	4253      	negpl	r3, r2
 800915e:	73fb      	strb	r3, [r7, #15]
 8009160:	687b      	ldr	r3, [r7, #4]
 8009162:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 8009166:	b2db      	uxtb	r3, r3
 8009168:	7bfa      	ldrb	r2, [r7, #15]
 800916a:	429a      	cmp	r2, r3
 800916c:	d101      	bne.n	8009172 <HID_Frame_Write+0x36>
 800916e:	2300      	movs	r3, #0
 8009170:	e010      	b.n	8009194 <HID_Frame_Write+0x58>
 8009172:	687b      	ldr	r3, [r7, #4]
 8009174:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 8009178:	b2db      	uxtb	r3, r3
 800917a:	019b      	lsls	r3, r3, #6
 800917c:	687a      	ldr	r2, [r7, #4]
 800917e:	4413      	add	r3, r2
 8009180:	2240      	movs	r2, #64	@ 0x40
 8009182:	6839      	ldr	r1, [r7, #0]
 8009184:	4618      	mov	r0, r3
 8009186:	f002 ffe9 	bl	800c15c <memcpy>
 800918a:	687b      	ldr	r3, [r7, #4]
 800918c:	7bfa      	ldrb	r2, [r7, #15]
 800918e:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 8009192:	2301      	movs	r3, #1
 8009194:	4618      	mov	r0, r3
 8009196:	3710      	adds	r7, #16
 8009198:	46bd      	mov	sp, r7
 800919a:	bd80      	pop	{r7, pc}

0800919c <HID_Frame_Read>:
 800919c:	b580      	push	{r7, lr}
 800919e:	b082      	sub	sp, #8
 80091a0:	af00      	add	r7, sp, #0
 80091a2:	6078      	str	r0, [r7, #4]
 80091a4:	6039      	str	r1, [r7, #0]
 80091a6:	687b      	ldr	r3, [r7, #4]
 80091a8:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 80091ac:	b2da      	uxtb	r2, r3
 80091ae:	687b      	ldr	r3, [r7, #4]
 80091b0:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 80091b4:	b2db      	uxtb	r3, r3
 80091b6:	429a      	cmp	r2, r3
 80091b8:	d101      	bne.n	80091be <HID_Frame_Read+0x22>
 80091ba:	2300      	movs	r3, #0
 80091bc:	e01c      	b.n	80091f8 <HID_Frame_Read+0x5c>
 80091be:	687b      	ldr	r3, [r7, #4]
 80091c0:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 80091c4:	b2db      	uxtb	r3, r3
 80091c6:	019b      	lsls	r3, r3, #6
 80091c8:	687a      	ldr	r2, [r7, #4]
 80091ca:	4413      	add	r3, r2
 80091cc:	2240      	movs	r2, #64	@ 0x40
 80091ce:	4619      	mov	r1, r3
 80091d0:	6838      	ldr	r0, [r7, #0]
 80091d2:	f002 ffc3 	bl	800c15c <memcpy>
 80091d6:	687b      	ldr	r3, [r7, #4]
 80091d8:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 80091dc:	b2db      	uxtb	r3, r3
 80091de:	3301      	adds	r3, #1
 80091e0:	425a      	negs	r2, r3
 80091e2:	f003 0307 	and.w	r3, r3, #7
 80091e6:	f002 0207 	and.w	r2, r2, #7
 80091ea:	bf58      	it	pl
 80091ec:	4253      	negpl	r3, r2
 80091ee:	b2da      	uxtb	r2, r3
 80091f0:	687b      	ldr	r3, [r7, #4]
 80091f2:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
 80091f6:	2301      	movs	r3, #1
 80091f8:	4618      	mov	r0, r3
 80091fa:	3708      	adds	r7, #8
 80091fc:	46bd      	mov	sp, r7
 80091fe:	bd80      	pop	{r7, pc}

08009200 <USBD_CDC_Init>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t USBD_CDC_Init(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8009200:	b580      	push	{r7, lr}
 8009202:	b084      	sub	sp, #16
 8009204:	af00      	add	r7, sp, #0
 8009206:	6078      	str	r0, [r7, #4]
 8009208:	460b      	mov	r3, r1
 800920a:	70fb      	strb	r3, [r7, #3]
  UNUSED(cfgidx);
  USBD_CDC_ACM_HandleTypeDef *hcdc = NULL;
 800920c:	2300      	movs	r3, #0
 800920e:	60bb      	str	r3, [r7, #8]

  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 8009210:	2300      	movs	r3, #0
 8009212:	73fb      	strb	r3, [r7, #15]
 8009214:	e0c6      	b.n	80093a4 <USBD_CDC_Init+0x1a4>
  {
    hcdc = &CDC_ACM_Class_Data[i];
 8009216:	7bfb      	ldrb	r3, [r7, #15]
 8009218:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 800921c:	fb02 f303 	mul.w	r3, r2, r3
 8009220:	4a65      	ldr	r2, [pc, #404]	@ (80093b8 <USBD_CDC_Init+0x1b8>)
 8009222:	4413      	add	r3, r2
 8009224:	60bb      	str	r3, [r7, #8]

    if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009226:	687b      	ldr	r3, [r7, #4]
 8009228:	7c1b      	ldrb	r3, [r3, #16]
 800922a:	2b00      	cmp	r3, #0
 800922c:	d13d      	bne.n	80092aa <USBD_CDC_Init+0xaa>
    {
      /* Open EP IN */
      (void)USBD_LL_OpenEP(pdev, CDC_IN_EP[i], USBD_EP_TYPE_BULK,
 800922e:	7bfb      	ldrb	r3, [r7, #15]
 8009230:	4a62      	ldr	r2, [pc, #392]	@ (80093bc <USBD_CDC_Init+0x1bc>)
 8009232:	5cd1      	ldrb	r1, [r2, r3]
 8009234:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8009238:	2202      	movs	r2, #2
 800923a:	6878      	ldr	r0, [r7, #4]
 800923c:	f002 fdd5 	bl	800bdea <USBD_LL_OpenEP>
                           CDC_DATA_HS_IN_PACKET_SIZE);

      pdev->ep_in[CDC_IN_EP[i] & 0xFU].is_used = 1U;
 8009240:	7bfb      	ldrb	r3, [r7, #15]
 8009242:	4a5e      	ldr	r2, [pc, #376]	@ (80093bc <USBD_CDC_Init+0x1bc>)
 8009244:	5cd3      	ldrb	r3, [r2, r3]
 8009246:	f003 020f 	and.w	r2, r3, #15
 800924a:	6879      	ldr	r1, [r7, #4]
 800924c:	4613      	mov	r3, r2
 800924e:	009b      	lsls	r3, r3, #2
 8009250:	4413      	add	r3, r2
 8009252:	009b      	lsls	r3, r3, #2
 8009254:	440b      	add	r3, r1
 8009256:	3324      	adds	r3, #36	@ 0x24
 8009258:	2201      	movs	r2, #1
 800925a:	801a      	strh	r2, [r3, #0]

      /* Open EP OUT */
      (void)USBD_LL_OpenEP(pdev, CDC_OUT_EP[i], USBD_EP_TYPE_BULK,
 800925c:	7bfb      	ldrb	r3, [r7, #15]
 800925e:	4a58      	ldr	r2, [pc, #352]	@ (80093c0 <USBD_CDC_Init+0x1c0>)
 8009260:	5cd1      	ldrb	r1, [r2, r3]
 8009262:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8009266:	2202      	movs	r2, #2
 8009268:	6878      	ldr	r0, [r7, #4]
 800926a:	f002 fdbe 	bl	800bdea <USBD_LL_OpenEP>
                           CDC_DATA_HS_OUT_PACKET_SIZE);

      pdev->ep_out[CDC_OUT_EP[i] & 0xFU].is_used = 1U;
 800926e:	7bfb      	ldrb	r3, [r7, #15]
 8009270:	4a53      	ldr	r2, [pc, #332]	@ (80093c0 <USBD_CDC_Init+0x1c0>)
 8009272:	5cd3      	ldrb	r3, [r2, r3]
 8009274:	f003 020f 	and.w	r2, r3, #15
 8009278:	6879      	ldr	r1, [r7, #4]
 800927a:	4613      	mov	r3, r2
 800927c:	009b      	lsls	r3, r3, #2
 800927e:	4413      	add	r3, r2
 8009280:	009b      	lsls	r3, r3, #2
 8009282:	440b      	add	r3, r1
 8009284:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8009288:	2201      	movs	r2, #1
 800928a:	801a      	strh	r2, [r3, #0]

      /* Set bInterval for CDC CMD Endpoint */
      pdev->ep_in[CDC_CMD_EP[i] & 0xFU].bInterval = CDC_HS_BINTERVAL;
 800928c:	7bfb      	ldrb	r3, [r7, #15]
 800928e:	4a4d      	ldr	r2, [pc, #308]	@ (80093c4 <USBD_CDC_Init+0x1c4>)
 8009290:	5cd3      	ldrb	r3, [r2, r3]
 8009292:	f003 020f 	and.w	r2, r3, #15
 8009296:	6879      	ldr	r1, [r7, #4]
 8009298:	4613      	mov	r3, r2
 800929a:	009b      	lsls	r3, r3, #2
 800929c:	4413      	add	r3, r2
 800929e:	009b      	lsls	r3, r3, #2
 80092a0:	440b      	add	r3, r1
 80092a2:	3326      	adds	r3, #38	@ 0x26
 80092a4:	2210      	movs	r2, #16
 80092a6:	801a      	strh	r2, [r3, #0]
 80092a8:	e03a      	b.n	8009320 <USBD_CDC_Init+0x120>
    }
    else
    {
      /* Open EP IN */
      (void)USBD_LL_OpenEP(pdev, CDC_IN_EP[i], USBD_EP_TYPE_BULK,
 80092aa:	7bfb      	ldrb	r3, [r7, #15]
 80092ac:	4a43      	ldr	r2, [pc, #268]	@ (80093bc <USBD_CDC_Init+0x1bc>)
 80092ae:	5cd1      	ldrb	r1, [r2, r3]
 80092b0:	2340      	movs	r3, #64	@ 0x40
 80092b2:	2202      	movs	r2, #2
 80092b4:	6878      	ldr	r0, [r7, #4]
 80092b6:	f002 fd98 	bl	800bdea <USBD_LL_OpenEP>
                           CDC_DATA_FS_IN_PACKET_SIZE);

      pdev->ep_in[CDC_IN_EP[i] & 0xFU].is_used = 1U;
 80092ba:	7bfb      	ldrb	r3, [r7, #15]
 80092bc:	4a3f      	ldr	r2, [pc, #252]	@ (80093bc <USBD_CDC_Init+0x1bc>)
 80092be:	5cd3      	ldrb	r3, [r2, r3]
 80092c0:	f003 020f 	and.w	r2, r3, #15
 80092c4:	6879      	ldr	r1, [r7, #4]
 80092c6:	4613      	mov	r3, r2
 80092c8:	009b      	lsls	r3, r3, #2
 80092ca:	4413      	add	r3, r2
 80092cc:	009b      	lsls	r3, r3, #2
 80092ce:	440b      	add	r3, r1
 80092d0:	3324      	adds	r3, #36	@ 0x24
 80092d2:	2201      	movs	r2, #1
 80092d4:	801a      	strh	r2, [r3, #0]

      /* Open EP OUT */
      (void)USBD_LL_OpenEP(pdev, CDC_OUT_EP[i], USBD_EP_TYPE_BULK,
 80092d6:	7bfb      	ldrb	r3, [r7, #15]
 80092d8:	4a39      	ldr	r2, [pc, #228]	@ (80093c0 <USBD_CDC_Init+0x1c0>)
 80092da:	5cd1      	ldrb	r1, [r2, r3]
 80092dc:	2340      	movs	r3, #64	@ 0x40
 80092de:	2202      	movs	r2, #2
 80092e0:	6878      	ldr	r0, [r7, #4]
 80092e2:	f002 fd82 	bl	800bdea <USBD_LL_OpenEP>
                           CDC_DATA_FS_OUT_PACKET_SIZE);

      pdev->ep_out[CDC_OUT_EP[i] & 0xFU].is_used = 1U;
 80092e6:	7bfb      	ldrb	r3, [r7, #15]
 80092e8:	4a35      	ldr	r2, [pc, #212]	@ (80093c0 <USBD_CDC_Init+0x1c0>)
 80092ea:	5cd3      	ldrb	r3, [r2, r3]
 80092ec:	f003 020f 	and.w	r2, r3, #15
 80092f0:	6879      	ldr	r1, [r7, #4]
 80092f2:	4613      	mov	r3, r2
 80092f4:	009b      	lsls	r3, r3, #2
 80092f6:	4413      	add	r3, r2
 80092f8:	009b      	lsls	r3, r3, #2
 80092fa:	440b      	add	r3, r1
 80092fc:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8009300:	2201      	movs	r2, #1
 8009302:	801a      	strh	r2, [r3, #0]

      /* Set bInterval for CMD Endpoint */
      pdev->ep_in[CDC_CMD_EP[i] & 0xFU].bInterval = CDC_FS_BINTERVAL;
 8009304:	7bfb      	ldrb	r3, [r7, #15]
 8009306:	4a2f      	ldr	r2, [pc, #188]	@ (80093c4 <USBD_CDC_Init+0x1c4>)
 8009308:	5cd3      	ldrb	r3, [r2, r3]
 800930a:	f003 020f 	and.w	r2, r3, #15
 800930e:	6879      	ldr	r1, [r7, #4]
 8009310:	4613      	mov	r3, r2
 8009312:	009b      	lsls	r3, r3, #2
 8009314:	4413      	add	r3, r2
 8009316:	009b      	lsls	r3, r3, #2
 8009318:	440b      	add	r3, r1
 800931a:	3326      	adds	r3, #38	@ 0x26
 800931c:	2210      	movs	r2, #16
 800931e:	801a      	strh	r2, [r3, #0]
    }

    /* Open Command IN EP */
    (void)USBD_LL_OpenEP(pdev, CDC_CMD_EP[i], USBD_EP_TYPE_INTR, CDC_CMD_PACKET_SIZE);
 8009320:	7bfb      	ldrb	r3, [r7, #15]
 8009322:	4a28      	ldr	r2, [pc, #160]	@ (80093c4 <USBD_CDC_Init+0x1c4>)
 8009324:	5cd1      	ldrb	r1, [r2, r3]
 8009326:	2308      	movs	r3, #8
 8009328:	2203      	movs	r2, #3
 800932a:	6878      	ldr	r0, [r7, #4]
 800932c:	f002 fd5d 	bl	800bdea <USBD_LL_OpenEP>
    pdev->ep_in[CDC_CMD_EP[i] & 0xFU].is_used = 1U;
 8009330:	7bfb      	ldrb	r3, [r7, #15]
 8009332:	4a24      	ldr	r2, [pc, #144]	@ (80093c4 <USBD_CDC_Init+0x1c4>)
 8009334:	5cd3      	ldrb	r3, [r2, r3]
 8009336:	f003 020f 	and.w	r2, r3, #15
 800933a:	6879      	ldr	r1, [r7, #4]
 800933c:	4613      	mov	r3, r2
 800933e:	009b      	lsls	r3, r3, #2
 8009340:	4413      	add	r3, r2
 8009342:	009b      	lsls	r3, r3, #2
 8009344:	440b      	add	r3, r1
 8009346:	3324      	adds	r3, #36	@ 0x24
 8009348:	2201      	movs	r2, #1
 800934a:	801a      	strh	r2, [r3, #0]

    /* Init  physical Interface components */
    ((USBD_CDC_ACM_ItfTypeDef *)pdev->pUserData_CDC_ACM)->Init(i);
 800934c:	687b      	ldr	r3, [r7, #4]
 800934e:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 8009352:	681b      	ldr	r3, [r3, #0]
 8009354:	7bfa      	ldrb	r2, [r7, #15]
 8009356:	4610      	mov	r0, r2
 8009358:	4798      	blx	r3

    /* Init Xfer states */
    hcdc->TxState = 0U;
 800935a:	68bb      	ldr	r3, [r7, #8]
 800935c:	2200      	movs	r2, #0
 800935e:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
    hcdc->RxState = 0U;
 8009362:	68bb      	ldr	r3, [r7, #8]
 8009364:	2200      	movs	r2, #0
 8009366:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218

    if (pdev->dev_speed == USBD_SPEED_HIGH)
 800936a:	687b      	ldr	r3, [r7, #4]
 800936c:	7c1b      	ldrb	r3, [r3, #16]
 800936e:	2b00      	cmp	r3, #0
 8009370:	d10b      	bne.n	800938a <USBD_CDC_Init+0x18a>
    {
      /* Prepare Out endpoint to receive next packet */
      (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP[i], hcdc->RxBuffer,
 8009372:	7bfb      	ldrb	r3, [r7, #15]
 8009374:	4a12      	ldr	r2, [pc, #72]	@ (80093c0 <USBD_CDC_Init+0x1c0>)
 8009376:	5cd1      	ldrb	r1, [r2, r3]
 8009378:	68bb      	ldr	r3, [r7, #8]
 800937a:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800937e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8009382:	6878      	ldr	r0, [r7, #4]
 8009384:	f002 fe20 	bl	800bfc8 <USBD_LL_PrepareReceive>
 8009388:	e009      	b.n	800939e <USBD_CDC_Init+0x19e>
                                   CDC_DATA_HS_OUT_PACKET_SIZE);
    }
    else
    {
      /* Prepare Out endpoint to receive next packet */
      (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP[i], hcdc->RxBuffer,
 800938a:	7bfb      	ldrb	r3, [r7, #15]
 800938c:	4a0c      	ldr	r2, [pc, #48]	@ (80093c0 <USBD_CDC_Init+0x1c0>)
 800938e:	5cd1      	ldrb	r1, [r2, r3]
 8009390:	68bb      	ldr	r3, [r7, #8]
 8009392:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8009396:	2340      	movs	r3, #64	@ 0x40
 8009398:	6878      	ldr	r0, [r7, #4]
 800939a:	f002 fe15 	bl	800bfc8 <USBD_LL_PrepareReceive>
  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 800939e:	7bfb      	ldrb	r3, [r7, #15]
 80093a0:	3301      	adds	r3, #1
 80093a2:	73fb      	strb	r3, [r7, #15]
 80093a4:	7bfb      	ldrb	r3, [r7, #15]
 80093a6:	2b00      	cmp	r3, #0
 80093a8:	f43f af35 	beq.w	8009216 <USBD_CDC_Init+0x16>
                                   CDC_DATA_FS_OUT_PACKET_SIZE);
    }
  }
  return (uint8_t)USBD_OK;
 80093ac:	2300      	movs	r3, #0
}
 80093ae:	4618      	mov	r0, r3
 80093b0:	3710      	adds	r7, #16
 80093b2:	46bd      	mov	sp, r7
 80093b4:	bd80      	pop	{r7, pc}
 80093b6:	bf00      	nop
 80093b8:	2000252c 	.word	0x2000252c
 80093bc:	20002514 	.word	0x20002514
 80093c0:	20002518 	.word	0x20002518
 80093c4:	2000251c 	.word	0x2000251c

080093c8 <USBD_CDC_DeInit>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t USBD_CDC_DeInit(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 80093c8:	b580      	push	{r7, lr}
 80093ca:	b084      	sub	sp, #16
 80093cc:	af00      	add	r7, sp, #0
 80093ce:	6078      	str	r0, [r7, #4]
 80093d0:	460b      	mov	r3, r1
 80093d2:	70fb      	strb	r3, [r7, #3]
  UNUSED(cfgidx);
  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 80093d4:	2300      	movs	r3, #0
 80093d6:	73fb      	strb	r3, [r7, #15]
 80093d8:	e057      	b.n	800948a <USBD_CDC_DeInit+0xc2>
  {
    /* Close EP IN */
    (void)USBD_LL_CloseEP(pdev, CDC_IN_EP[i]);
 80093da:	7bfb      	ldrb	r3, [r7, #15]
 80093dc:	4a2f      	ldr	r2, [pc, #188]	@ (800949c <USBD_CDC_DeInit+0xd4>)
 80093de:	5cd3      	ldrb	r3, [r2, r3]
 80093e0:	4619      	mov	r1, r3
 80093e2:	6878      	ldr	r0, [r7, #4]
 80093e4:	f002 fd27 	bl	800be36 <USBD_LL_CloseEP>
    pdev->ep_in[CDC_IN_EP[i] & 0xFU].is_used = 0U;
 80093e8:	7bfb      	ldrb	r3, [r7, #15]
 80093ea:	4a2c      	ldr	r2, [pc, #176]	@ (800949c <USBD_CDC_DeInit+0xd4>)
 80093ec:	5cd3      	ldrb	r3, [r2, r3]
 80093ee:	f003 020f 	and.w	r2, r3, #15
 80093f2:	6879      	ldr	r1, [r7, #4]
 80093f4:	4613      	mov	r3, r2
 80093f6:	009b      	lsls	r3, r3, #2
 80093f8:	4413      	add	r3, r2
 80093fa:	009b      	lsls	r3, r3, #2
 80093fc:	440b      	add	r3, r1
 80093fe:	3324      	adds	r3, #36	@ 0x24
 8009400:	2200      	movs	r2, #0
 8009402:	801a      	strh	r2, [r3, #0]

    /* Close EP OUT */
    (void)USBD_LL_CloseEP(pdev, CDC_OUT_EP[i]);
 8009404:	7bfb      	ldrb	r3, [r7, #15]
 8009406:	4a26      	ldr	r2, [pc, #152]	@ (80094a0 <USBD_CDC_DeInit+0xd8>)
 8009408:	5cd3      	ldrb	r3, [r2, r3]
 800940a:	4619      	mov	r1, r3
 800940c:	6878      	ldr	r0, [r7, #4]
 800940e:	f002 fd12 	bl	800be36 <USBD_LL_CloseEP>
    pdev->ep_out[CDC_OUT_EP[i] & 0xFU].is_used = 0U;
 8009412:	7bfb      	ldrb	r3, [r7, #15]
 8009414:	4a22      	ldr	r2, [pc, #136]	@ (80094a0 <USBD_CDC_DeInit+0xd8>)
 8009416:	5cd3      	ldrb	r3, [r2, r3]
 8009418:	f003 020f 	and.w	r2, r3, #15
 800941c:	6879      	ldr	r1, [r7, #4]
 800941e:	4613      	mov	r3, r2
 8009420:	009b      	lsls	r3, r3, #2
 8009422:	4413      	add	r3, r2
 8009424:	009b      	lsls	r3, r3, #2
 8009426:	440b      	add	r3, r1
 8009428:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 800942c:	2200      	movs	r2, #0
 800942e:	801a      	strh	r2, [r3, #0]

    /* Close Command IN EP */
    (void)USBD_LL_CloseEP(pdev, CDC_CMD_EP[i]);
 8009430:	7bfb      	ldrb	r3, [r7, #15]
 8009432:	4a1c      	ldr	r2, [pc, #112]	@ (80094a4 <USBD_CDC_DeInit+0xdc>)
 8009434:	5cd3      	ldrb	r3, [r2, r3]
 8009436:	4619      	mov	r1, r3
 8009438:	6878      	ldr	r0, [r7, #4]
 800943a:	f002 fcfc 	bl	800be36 <USBD_LL_CloseEP>
    pdev->ep_in[CDC_CMD_EP[i] & 0xFU].is_used = 0U;
 800943e:	7bfb      	ldrb	r3, [r7, #15]
 8009440:	4a18      	ldr	r2, [pc, #96]	@ (80094a4 <USBD_CDC_DeInit+0xdc>)
 8009442:	5cd3      	ldrb	r3, [r2, r3]
 8009444:	f003 020f 	and.w	r2, r3, #15
 8009448:	6879      	ldr	r1, [r7, #4]
 800944a:	4613      	mov	r3, r2
 800944c:	009b      	lsls	r3, r3, #2
 800944e:	4413      	add	r3, r2
 8009450:	009b      	lsls	r3, r3, #2
 8009452:	440b      	add	r3, r1
 8009454:	3324      	adds	r3, #36	@ 0x24
 8009456:	2200      	movs	r2, #0
 8009458:	801a      	strh	r2, [r3, #0]
    pdev->ep_in[CDC_CMD_EP[i] & 0xFU].bInterval = 0U;
 800945a:	7bfb      	ldrb	r3, [r7, #15]
 800945c:	4a11      	ldr	r2, [pc, #68]	@ (80094a4 <USBD_CDC_DeInit+0xdc>)
 800945e:	5cd3      	ldrb	r3, [r2, r3]
 8009460:	f003 020f 	and.w	r2, r3, #15
 8009464:	6879      	ldr	r1, [r7, #4]
 8009466:	4613      	mov	r3, r2
 8009468:	009b      	lsls	r3, r3, #2
 800946a:	4413      	add	r3, r2
 800946c:	009b      	lsls	r3, r3, #2
 800946e:	440b      	add	r3, r1
 8009470:	3326      	adds	r3, #38	@ 0x26
 8009472:	2200      	movs	r2, #0
 8009474:	801a      	strh	r2, [r3, #0]

    /* DeInit  physical Interface components */
    ((USBD_CDC_ACM_ItfTypeDef *)pdev->pUserData_CDC_ACM)->DeInit(i);
 8009476:	687b      	ldr	r3, [r7, #4]
 8009478:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 800947c:	685b      	ldr	r3, [r3, #4]
 800947e:	7bfa      	ldrb	r2, [r7, #15]
 8009480:	4610      	mov	r0, r2
 8009482:	4798      	blx	r3
  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 8009484:	7bfb      	ldrb	r3, [r7, #15]
 8009486:	3301      	adds	r3, #1
 8009488:	73fb      	strb	r3, [r7, #15]
 800948a:	7bfb      	ldrb	r3, [r7, #15]
 800948c:	2b00      	cmp	r3, #0
 800948e:	d0a4      	beq.n	80093da <USBD_CDC_DeInit+0x12>
  }
  return (uint8_t)USBD_OK;
 8009490:	2300      	movs	r3, #0
}
 8009492:	4618      	mov	r0, r3
 8009494:	3710      	adds	r7, #16
 8009496:	46bd      	mov	sp, r7
 8009498:	bd80      	pop	{r7, pc}
 800949a:	bf00      	nop
 800949c:	20002514 	.word	0x20002514
 80094a0:	20002518 	.word	0x20002518
 80094a4:	2000251c 	.word	0x2000251c

080094a8 <USBD_CDC_Setup>:
  * @param  req: usb requests
  * @retval status
  */
static uint8_t USBD_CDC_Setup(USBD_HandleTypeDef *pdev,
                              USBD_SetupReqTypedef *req)
{
 80094a8:	b590      	push	{r4, r7, lr}
 80094aa:	b087      	sub	sp, #28
 80094ac:	af00      	add	r7, sp, #0
 80094ae:	6078      	str	r0, [r7, #4]
 80094b0:	6039      	str	r1, [r7, #0]
  USBD_CDC_ACM_HandleTypeDef *hcdc = NULL;
 80094b2:	2300      	movs	r3, #0
 80094b4:	613b      	str	r3, [r7, #16]
  uint16_t len;
  uint8_t ifalt = 0U;
 80094b6:	2300      	movs	r3, #0
 80094b8:	737b      	strb	r3, [r7, #13]
  uint16_t status_info = 0U;
 80094ba:	2300      	movs	r3, #0
 80094bc:	817b      	strh	r3, [r7, #10]
  USBD_StatusTypeDef ret = USBD_OK;
 80094be:	2300      	movs	r3, #0
 80094c0:	75fb      	strb	r3, [r7, #23]

  uint8_t windex_to_ch = 0;
 80094c2:	2300      	movs	r3, #0
 80094c4:	75bb      	strb	r3, [r7, #22]

  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 80094c6:	2300      	movs	r3, #0
 80094c8:	757b      	strb	r3, [r7, #21]
 80094ca:	e015      	b.n	80094f8 <USBD_CDC_Setup+0x50>
  {
    if (LOBYTE(req->wIndex) == CDC_CMD_ITF_NBR[i] || LOBYTE(req->wIndex) == CDC_COM_ITF_NBR[i])
 80094cc:	683b      	ldr	r3, [r7, #0]
 80094ce:	889b      	ldrh	r3, [r3, #4]
 80094d0:	b2da      	uxtb	r2, r3
 80094d2:	7d7b      	ldrb	r3, [r7, #21]
 80094d4:	496d      	ldr	r1, [pc, #436]	@ (800968c <USBD_CDC_Setup+0x1e4>)
 80094d6:	5ccb      	ldrb	r3, [r1, r3]
 80094d8:	429a      	cmp	r2, r3
 80094da:	d007      	beq.n	80094ec <USBD_CDC_Setup+0x44>
 80094dc:	683b      	ldr	r3, [r7, #0]
 80094de:	889b      	ldrh	r3, [r3, #4]
 80094e0:	b2da      	uxtb	r2, r3
 80094e2:	7d7b      	ldrb	r3, [r7, #21]
 80094e4:	496a      	ldr	r1, [pc, #424]	@ (8009690 <USBD_CDC_Setup+0x1e8>)
 80094e6:	5ccb      	ldrb	r3, [r1, r3]
 80094e8:	429a      	cmp	r2, r3
 80094ea:	d102      	bne.n	80094f2 <USBD_CDC_Setup+0x4a>
    {
      windex_to_ch = i;
 80094ec:	7d7b      	ldrb	r3, [r7, #21]
 80094ee:	75bb      	strb	r3, [r7, #22]
      break;
 80094f0:	e005      	b.n	80094fe <USBD_CDC_Setup+0x56>
  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 80094f2:	7d7b      	ldrb	r3, [r7, #21]
 80094f4:	3301      	adds	r3, #1
 80094f6:	757b      	strb	r3, [r7, #21]
 80094f8:	7d7b      	ldrb	r3, [r7, #21]
 80094fa:	2b00      	cmp	r3, #0
 80094fc:	d0e6      	beq.n	80094cc <USBD_CDC_Setup+0x24>
    }
  }

  hcdc = &CDC_ACM_Class_Data[windex_to_ch];
 80094fe:	7dbb      	ldrb	r3, [r7, #22]
 8009500:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 8009504:	fb02 f303 	mul.w	r3, r2, r3
 8009508:	4a62      	ldr	r2, [pc, #392]	@ (8009694 <USBD_CDC_Setup+0x1ec>)
 800950a:	4413      	add	r3, r2
 800950c:	613b      	str	r3, [r7, #16]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800950e:	683b      	ldr	r3, [r7, #0]
 8009510:	781b      	ldrb	r3, [r3, #0]
 8009512:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8009516:	2b00      	cmp	r3, #0
 8009518:	d04a      	beq.n	80095b0 <USBD_CDC_Setup+0x108>
 800951a:	2b20      	cmp	r3, #32
 800951c:	f040 80aa 	bne.w	8009674 <USBD_CDC_Setup+0x1cc>
  {
  case USB_REQ_TYPE_CLASS:
    if (req->wLength != 0U)
 8009520:	683b      	ldr	r3, [r7, #0]
 8009522:	88db      	ldrh	r3, [r3, #6]
 8009524:	2b00      	cmp	r3, #0
 8009526:	d038      	beq.n	800959a <USBD_CDC_Setup+0xf2>
    {
      if ((req->bmRequest & 0x80U) != 0U)
 8009528:	683b      	ldr	r3, [r7, #0]
 800952a:	781b      	ldrb	r3, [r3, #0]
 800952c:	b25b      	sxtb	r3, r3
 800952e:	2b00      	cmp	r3, #0
 8009530:	da1d      	bge.n	800956e <USBD_CDC_Setup+0xc6>
      {
        ((USBD_CDC_ACM_ItfTypeDef *)pdev->pUserData_CDC_ACM)->Control(windex_to_ch, req->bRequest, (uint8_t *)hcdc->data[windex_to_ch], req->wLength);
 8009532:	687b      	ldr	r3, [r7, #4]
 8009534:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 8009538:	689c      	ldr	r4, [r3, #8]
 800953a:	683b      	ldr	r3, [r7, #0]
 800953c:	7859      	ldrb	r1, [r3, #1]
 800953e:	7dbb      	ldrb	r3, [r7, #22]
 8009540:	025b      	lsls	r3, r3, #9
 8009542:	693a      	ldr	r2, [r7, #16]
 8009544:	441a      	add	r2, r3
 8009546:	683b      	ldr	r3, [r7, #0]
 8009548:	88db      	ldrh	r3, [r3, #6]
 800954a:	7db8      	ldrb	r0, [r7, #22]
 800954c:	47a0      	blx	r4

        len = MIN(CDC_REQ_MAX_DATA_SIZE, req->wLength);
 800954e:	683b      	ldr	r3, [r7, #0]
 8009550:	88db      	ldrh	r3, [r3, #6]
 8009552:	2b07      	cmp	r3, #7
 8009554:	bf28      	it	cs
 8009556:	2307      	movcs	r3, #7
 8009558:	81fb      	strh	r3, [r7, #14]
        (void)USBD_CtlSendData(pdev, (uint8_t *)hcdc->data[windex_to_ch], len);
 800955a:	7dbb      	ldrb	r3, [r7, #22]
 800955c:	025b      	lsls	r3, r3, #9
 800955e:	693a      	ldr	r2, [r7, #16]
 8009560:	4413      	add	r3, r2
 8009562:	89fa      	ldrh	r2, [r7, #14]
 8009564:	4619      	mov	r1, r3
 8009566:	6878      	ldr	r0, [r7, #4]
 8009568:	f002 fa2d 	bl	800b9c6 <USBD_CtlSendData>
    }
    else
    {
      ((USBD_CDC_ACM_ItfTypeDef *)pdev->pUserData_CDC_ACM)->Control(windex_to_ch, req->bRequest, (uint8_t *)req, 0U);
    }
    break;
 800956c:	e089      	b.n	8009682 <USBD_CDC_Setup+0x1da>
        hcdc->CmdOpCode = req->bRequest;
 800956e:	683b      	ldr	r3, [r7, #0]
 8009570:	785a      	ldrb	r2, [r3, #1]
 8009572:	693b      	ldr	r3, [r7, #16]
 8009574:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
        hcdc->CmdLength = (uint8_t)req->wLength;
 8009578:	683b      	ldr	r3, [r7, #0]
 800957a:	88db      	ldrh	r3, [r3, #6]
 800957c:	b2da      	uxtb	r2, r3
 800957e:	693b      	ldr	r3, [r7, #16]
 8009580:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
        (void)USBD_CtlPrepareRx(pdev, (uint8_t *)hcdc->data[windex_to_ch], req->wLength);
 8009584:	7dbb      	ldrb	r3, [r7, #22]
 8009586:	025b      	lsls	r3, r3, #9
 8009588:	693a      	ldr	r2, [r7, #16]
 800958a:	18d1      	adds	r1, r2, r3
 800958c:	683b      	ldr	r3, [r7, #0]
 800958e:	88db      	ldrh	r3, [r3, #6]
 8009590:	461a      	mov	r2, r3
 8009592:	6878      	ldr	r0, [r7, #4]
 8009594:	f002 fa43 	bl	800ba1e <USBD_CtlPrepareRx>
    break;
 8009598:	e073      	b.n	8009682 <USBD_CDC_Setup+0x1da>
      ((USBD_CDC_ACM_ItfTypeDef *)pdev->pUserData_CDC_ACM)->Control(windex_to_ch, req->bRequest, (uint8_t *)req, 0U);
 800959a:	687b      	ldr	r3, [r7, #4]
 800959c:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 80095a0:	689c      	ldr	r4, [r3, #8]
 80095a2:	683b      	ldr	r3, [r7, #0]
 80095a4:	7859      	ldrb	r1, [r3, #1]
 80095a6:	7db8      	ldrb	r0, [r7, #22]
 80095a8:	2300      	movs	r3, #0
 80095aa:	683a      	ldr	r2, [r7, #0]
 80095ac:	47a0      	blx	r4
    break;
 80095ae:	e068      	b.n	8009682 <USBD_CDC_Setup+0x1da>

  case USB_REQ_TYPE_STANDARD:
    switch (req->bRequest)
 80095b0:	683b      	ldr	r3, [r7, #0]
 80095b2:	785b      	ldrb	r3, [r3, #1]
 80095b4:	2b0b      	cmp	r3, #11
 80095b6:	d852      	bhi.n	800965e <USBD_CDC_Setup+0x1b6>
 80095b8:	a201      	add	r2, pc, #4	@ (adr r2, 80095c0 <USBD_CDC_Setup+0x118>)
 80095ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80095be:	bf00      	nop
 80095c0:	080095f1 	.word	0x080095f1
 80095c4:	0800966d 	.word	0x0800966d
 80095c8:	0800965f 	.word	0x0800965f
 80095cc:	0800965f 	.word	0x0800965f
 80095d0:	0800965f 	.word	0x0800965f
 80095d4:	0800965f 	.word	0x0800965f
 80095d8:	0800965f 	.word	0x0800965f
 80095dc:	0800965f 	.word	0x0800965f
 80095e0:	0800965f 	.word	0x0800965f
 80095e4:	0800965f 	.word	0x0800965f
 80095e8:	0800961b 	.word	0x0800961b
 80095ec:	08009645 	.word	0x08009645
    {
    case USB_REQ_GET_STATUS:
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80095f0:	687b      	ldr	r3, [r7, #4]
 80095f2:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80095f6:	b2db      	uxtb	r3, r3
 80095f8:	2b03      	cmp	r3, #3
 80095fa:	d107      	bne.n	800960c <USBD_CDC_Setup+0x164>
      {
        (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 80095fc:	f107 030a 	add.w	r3, r7, #10
 8009600:	2202      	movs	r2, #2
 8009602:	4619      	mov	r1, r3
 8009604:	6878      	ldr	r0, [r7, #4]
 8009606:	f002 f9de 	bl	800b9c6 <USBD_CtlSendData>
      else
      {
        USBD_CtlError(pdev, req);
        ret = USBD_FAIL;
      }
      break;
 800960a:	e032      	b.n	8009672 <USBD_CDC_Setup+0x1ca>
        USBD_CtlError(pdev, req);
 800960c:	6839      	ldr	r1, [r7, #0]
 800960e:	6878      	ldr	r0, [r7, #4]
 8009610:	f002 f968 	bl	800b8e4 <USBD_CtlError>
        ret = USBD_FAIL;
 8009614:	2303      	movs	r3, #3
 8009616:	75fb      	strb	r3, [r7, #23]
      break;
 8009618:	e02b      	b.n	8009672 <USBD_CDC_Setup+0x1ca>

    case USB_REQ_GET_INTERFACE:
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800961a:	687b      	ldr	r3, [r7, #4]
 800961c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8009620:	b2db      	uxtb	r3, r3
 8009622:	2b03      	cmp	r3, #3
 8009624:	d107      	bne.n	8009636 <USBD_CDC_Setup+0x18e>
      {
        (void)USBD_CtlSendData(pdev, &ifalt, 1U);
 8009626:	f107 030d 	add.w	r3, r7, #13
 800962a:	2201      	movs	r2, #1
 800962c:	4619      	mov	r1, r3
 800962e:	6878      	ldr	r0, [r7, #4]
 8009630:	f002 f9c9 	bl	800b9c6 <USBD_CtlSendData>
      else
      {
        USBD_CtlError(pdev, req);
        ret = USBD_FAIL;
      }
      break;
 8009634:	e01d      	b.n	8009672 <USBD_CDC_Setup+0x1ca>
        USBD_CtlError(pdev, req);
 8009636:	6839      	ldr	r1, [r7, #0]
 8009638:	6878      	ldr	r0, [r7, #4]
 800963a:	f002 f953 	bl	800b8e4 <USBD_CtlError>
        ret = USBD_FAIL;
 800963e:	2303      	movs	r3, #3
 8009640:	75fb      	strb	r3, [r7, #23]
      break;
 8009642:	e016      	b.n	8009672 <USBD_CDC_Setup+0x1ca>

    case USB_REQ_SET_INTERFACE:
      if (pdev->dev_state != USBD_STATE_CONFIGURED)
 8009644:	687b      	ldr	r3, [r7, #4]
 8009646:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800964a:	b2db      	uxtb	r3, r3
 800964c:	2b03      	cmp	r3, #3
 800964e:	d00f      	beq.n	8009670 <USBD_CDC_Setup+0x1c8>
      {
        USBD_CtlError(pdev, req);
 8009650:	6839      	ldr	r1, [r7, #0]
 8009652:	6878      	ldr	r0, [r7, #4]
 8009654:	f002 f946 	bl	800b8e4 <USBD_CtlError>
        ret = USBD_FAIL;
 8009658:	2303      	movs	r3, #3
 800965a:	75fb      	strb	r3, [r7, #23]
      }
      break;
 800965c:	e008      	b.n	8009670 <USBD_CDC_Setup+0x1c8>

    case USB_REQ_CLEAR_FEATURE:
      break;

    default:
      USBD_CtlError(pdev, req);
 800965e:	6839      	ldr	r1, [r7, #0]
 8009660:	6878      	ldr	r0, [r7, #4]
 8009662:	f002 f93f 	bl	800b8e4 <USBD_CtlError>
      ret = USBD_FAIL;
 8009666:	2303      	movs	r3, #3
 8009668:	75fb      	strb	r3, [r7, #23]
      break;
 800966a:	e002      	b.n	8009672 <USBD_CDC_Setup+0x1ca>
      break;
 800966c:	bf00      	nop
 800966e:	e008      	b.n	8009682 <USBD_CDC_Setup+0x1da>
      break;
 8009670:	bf00      	nop
    }
    break;
 8009672:	e006      	b.n	8009682 <USBD_CDC_Setup+0x1da>

  default:
    USBD_CtlError(pdev, req);
 8009674:	6839      	ldr	r1, [r7, #0]
 8009676:	6878      	ldr	r0, [r7, #4]
 8009678:	f002 f934 	bl	800b8e4 <USBD_CtlError>
    ret = USBD_FAIL;
 800967c:	2303      	movs	r3, #3
 800967e:	75fb      	strb	r3, [r7, #23]
    break;
 8009680:	bf00      	nop
  }

  return (uint8_t)ret;
 8009682:	7dfb      	ldrb	r3, [r7, #23]
}
 8009684:	4618      	mov	r0, r3
 8009686:	371c      	adds	r7, #28
 8009688:	46bd      	mov	sp, r7
 800968a:	bd90      	pop	{r4, r7, pc}
 800968c:	20002520 	.word	0x20002520
 8009690:	20002524 	.word	0x20002524
 8009694:	2000252c 	.word	0x2000252c

08009698 <USBD_CDC_DataIn>:
  * @param  pdev: device instance
  * @param  epnum: endpoint number
  * @retval status
  */
static uint8_t USBD_CDC_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
 8009698:	b590      	push	{r4, r7, lr}
 800969a:	b087      	sub	sp, #28
 800969c:	af00      	add	r7, sp, #0
 800969e:	6078      	str	r0, [r7, #4]
 80096a0:	460b      	mov	r3, r1
 80096a2:	70fb      	strb	r3, [r7, #3]
  USBD_CDC_ACM_HandleTypeDef *hcdc = NULL;
 80096a4:	2300      	movs	r3, #0
 80096a6:	613b      	str	r3, [r7, #16]
  PCD_HandleTypeDef *hpcd = pdev->pData;
 80096a8:	687b      	ldr	r3, [r7, #4]
 80096aa:	f8d3 3310 	ldr.w	r3, [r3, #784]	@ 0x310
 80096ae:	60fb      	str	r3, [r7, #12]
  uint8_t ep_to_ch = 0;
 80096b0:	2300      	movs	r3, #0
 80096b2:	75fb      	strb	r3, [r7, #23]

  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 80096b4:	2300      	movs	r3, #0
 80096b6:	75bb      	strb	r3, [r7, #22]
 80096b8:	e00d      	b.n	80096d6 <USBD_CDC_DataIn+0x3e>
  {
    if (epnum == (CDC_IN_EP[i] & 0x0F))
 80096ba:	78fa      	ldrb	r2, [r7, #3]
 80096bc:	7dbb      	ldrb	r3, [r7, #22]
 80096be:	4934      	ldr	r1, [pc, #208]	@ (8009790 <USBD_CDC_DataIn+0xf8>)
 80096c0:	5ccb      	ldrb	r3, [r1, r3]
 80096c2:	f003 030f 	and.w	r3, r3, #15
 80096c6:	429a      	cmp	r2, r3
 80096c8:	d102      	bne.n	80096d0 <USBD_CDC_DataIn+0x38>
    {
      ep_to_ch = i;
 80096ca:	7dbb      	ldrb	r3, [r7, #22]
 80096cc:	75fb      	strb	r3, [r7, #23]
      break;
 80096ce:	e005      	b.n	80096dc <USBD_CDC_DataIn+0x44>
  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 80096d0:	7dbb      	ldrb	r3, [r7, #22]
 80096d2:	3301      	adds	r3, #1
 80096d4:	75bb      	strb	r3, [r7, #22]
 80096d6:	7dbb      	ldrb	r3, [r7, #22]
 80096d8:	2b00      	cmp	r3, #0
 80096da:	d0ee      	beq.n	80096ba <USBD_CDC_DataIn+0x22>
    }
  }

  hcdc = &CDC_ACM_Class_Data[ep_to_ch];
 80096dc:	7dfb      	ldrb	r3, [r7, #23]
 80096de:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 80096e2:	fb02 f303 	mul.w	r3, r2, r3
 80096e6:	4a2b      	ldr	r2, [pc, #172]	@ (8009794 <USBD_CDC_DataIn+0xfc>)
 80096e8:	4413      	add	r3, r2
 80096ea:	613b      	str	r3, [r7, #16]

  if ((pdev->ep_in[epnum].total_length > 0U) &&
 80096ec:	78fa      	ldrb	r2, [r7, #3]
 80096ee:	6879      	ldr	r1, [r7, #4]
 80096f0:	4613      	mov	r3, r2
 80096f2:	009b      	lsls	r3, r3, #2
 80096f4:	4413      	add	r3, r2
 80096f6:	009b      	lsls	r3, r3, #2
 80096f8:	440b      	add	r3, r1
 80096fa:	3318      	adds	r3, #24
 80096fc:	681b      	ldr	r3, [r3, #0]
 80096fe:	2b00      	cmp	r3, #0
 8009700:	d029      	beq.n	8009756 <USBD_CDC_DataIn+0xbe>
      ((pdev->ep_in[epnum].total_length % hpcd->IN_ep[epnum].maxpacket) == 0U))
 8009702:	78fa      	ldrb	r2, [r7, #3]
 8009704:	6879      	ldr	r1, [r7, #4]
 8009706:	4613      	mov	r3, r2
 8009708:	009b      	lsls	r3, r3, #2
 800970a:	4413      	add	r3, r2
 800970c:	009b      	lsls	r3, r3, #2
 800970e:	440b      	add	r3, r1
 8009710:	3318      	adds	r3, #24
 8009712:	681a      	ldr	r2, [r3, #0]
 8009714:	78f9      	ldrb	r1, [r7, #3]
 8009716:	68f8      	ldr	r0, [r7, #12]
 8009718:	460b      	mov	r3, r1
 800971a:	00db      	lsls	r3, r3, #3
 800971c:	440b      	add	r3, r1
 800971e:	009b      	lsls	r3, r3, #2
 8009720:	4403      	add	r3, r0
 8009722:	331c      	adds	r3, #28
 8009724:	681b      	ldr	r3, [r3, #0]
 8009726:	fbb2 f1f3 	udiv	r1, r2, r3
 800972a:	fb01 f303 	mul.w	r3, r1, r3
 800972e:	1ad3      	subs	r3, r2, r3
  if ((pdev->ep_in[epnum].total_length > 0U) &&
 8009730:	2b00      	cmp	r3, #0
 8009732:	d110      	bne.n	8009756 <USBD_CDC_DataIn+0xbe>
  {
    /* Update the packet total length */
    pdev->ep_in[epnum].total_length = 0U;
 8009734:	78fa      	ldrb	r2, [r7, #3]
 8009736:	6879      	ldr	r1, [r7, #4]
 8009738:	4613      	mov	r3, r2
 800973a:	009b      	lsls	r3, r3, #2
 800973c:	4413      	add	r3, r2
 800973e:	009b      	lsls	r3, r3, #2
 8009740:	440b      	add	r3, r1
 8009742:	3318      	adds	r3, #24
 8009744:	2200      	movs	r2, #0
 8009746:	601a      	str	r2, [r3, #0]

    /* Send ZLP */
    (void)USBD_LL_Transmit(pdev, epnum, NULL, 0U);
 8009748:	78f9      	ldrb	r1, [r7, #3]
 800974a:	2300      	movs	r3, #0
 800974c:	2200      	movs	r2, #0
 800974e:	6878      	ldr	r0, [r7, #4]
 8009750:	f002 fc19 	bl	800bf86 <USBD_LL_Transmit>
 8009754:	e016      	b.n	8009784 <USBD_CDC_DataIn+0xec>
  }
  else
  {
    hcdc->TxState = 0U;
 8009756:	693b      	ldr	r3, [r7, #16]
 8009758:	2200      	movs	r2, #0
 800975a:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214

    if (((USBD_CDC_ACM_ItfTypeDef *)pdev->pUserData_CDC_ACM)->TransmitCplt != NULL)
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 8009764:	691b      	ldr	r3, [r3, #16]
 8009766:	2b00      	cmp	r3, #0
 8009768:	d00c      	beq.n	8009784 <USBD_CDC_DataIn+0xec>
    {
      ((USBD_CDC_ACM_ItfTypeDef *)pdev->pUserData_CDC_ACM)->TransmitCplt(ep_to_ch, hcdc->TxBuffer, &hcdc->TxLength, epnum);
 800976a:	687b      	ldr	r3, [r7, #4]
 800976c:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 8009770:	691c      	ldr	r4, [r3, #16]
 8009772:	693b      	ldr	r3, [r7, #16]
 8009774:	f8d3 1208 	ldr.w	r1, [r3, #520]	@ 0x208
 8009778:	693b      	ldr	r3, [r7, #16]
 800977a:	f503 7204 	add.w	r2, r3, #528	@ 0x210
 800977e:	78fb      	ldrb	r3, [r7, #3]
 8009780:	7df8      	ldrb	r0, [r7, #23]
 8009782:	47a0      	blx	r4
    }
  }

  return (uint8_t)USBD_OK;
 8009784:	2300      	movs	r3, #0
}
 8009786:	4618      	mov	r0, r3
 8009788:	371c      	adds	r7, #28
 800978a:	46bd      	mov	sp, r7
 800978c:	bd90      	pop	{r4, r7, pc}
 800978e:	bf00      	nop
 8009790:	20002514 	.word	0x20002514
 8009794:	2000252c 	.word	0x2000252c

08009798 <USBD_CDC_DataOut>:
  * @param  pdev: device instance
  * @param  epnum: endpoint number
  * @retval status
  */
static uint8_t USBD_CDC_DataOut(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
 8009798:	b580      	push	{r7, lr}
 800979a:	b084      	sub	sp, #16
 800979c:	af00      	add	r7, sp, #0
 800979e:	6078      	str	r0, [r7, #4]
 80097a0:	460b      	mov	r3, r1
 80097a2:	70fb      	strb	r3, [r7, #3]
  USBD_CDC_ACM_HandleTypeDef *hcdc = NULL;
 80097a4:	2300      	movs	r3, #0
 80097a6:	60bb      	str	r3, [r7, #8]
  uint8_t ep_to_ch = 0;
 80097a8:	2300      	movs	r3, #0
 80097aa:	73fb      	strb	r3, [r7, #15]

  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 80097ac:	2300      	movs	r3, #0
 80097ae:	73bb      	strb	r3, [r7, #14]
 80097b0:	e00b      	b.n	80097ca <USBD_CDC_DataOut+0x32>
  {
    if (epnum == CDC_OUT_EP[i])
 80097b2:	7bbb      	ldrb	r3, [r7, #14]
 80097b4:	4a17      	ldr	r2, [pc, #92]	@ (8009814 <USBD_CDC_DataOut+0x7c>)
 80097b6:	5cd3      	ldrb	r3, [r2, r3]
 80097b8:	78fa      	ldrb	r2, [r7, #3]
 80097ba:	429a      	cmp	r2, r3
 80097bc:	d102      	bne.n	80097c4 <USBD_CDC_DataOut+0x2c>
    {
      ep_to_ch = i;
 80097be:	7bbb      	ldrb	r3, [r7, #14]
 80097c0:	73fb      	strb	r3, [r7, #15]
      break;
 80097c2:	e005      	b.n	80097d0 <USBD_CDC_DataOut+0x38>
  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 80097c4:	7bbb      	ldrb	r3, [r7, #14]
 80097c6:	3301      	adds	r3, #1
 80097c8:	73bb      	strb	r3, [r7, #14]
 80097ca:	7bbb      	ldrb	r3, [r7, #14]
 80097cc:	2b00      	cmp	r3, #0
 80097ce:	d0f0      	beq.n	80097b2 <USBD_CDC_DataOut+0x1a>
    }
  }

  hcdc = &CDC_ACM_Class_Data[ep_to_ch];
 80097d0:	7bfb      	ldrb	r3, [r7, #15]
 80097d2:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 80097d6:	fb02 f303 	mul.w	r3, r2, r3
 80097da:	4a0f      	ldr	r2, [pc, #60]	@ (8009818 <USBD_CDC_DataOut+0x80>)
 80097dc:	4413      	add	r3, r2
 80097de:	60bb      	str	r3, [r7, #8]

  /* Get the received data length */
  hcdc->RxLength = USBD_LL_GetRxDataSize(pdev, epnum);
 80097e0:	78fb      	ldrb	r3, [r7, #3]
 80097e2:	4619      	mov	r1, r3
 80097e4:	6878      	ldr	r0, [r7, #4]
 80097e6:	f002 fc10 	bl	800c00a <USBD_LL_GetRxDataSize>
 80097ea:	4602      	mov	r2, r0
 80097ec:	68bb      	ldr	r3, [r7, #8]
 80097ee:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c

  /* USB data will be immediately processed, this allow next USB traffic being
  NAKed till the end of the application Xfer */

  ((USBD_CDC_ACM_ItfTypeDef *)pdev->pUserData_CDC_ACM)->Receive(ep_to_ch, hcdc->RxBuffer, &hcdc->RxLength);
 80097f2:	687b      	ldr	r3, [r7, #4]
 80097f4:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 80097f8:	68db      	ldr	r3, [r3, #12]
 80097fa:	68ba      	ldr	r2, [r7, #8]
 80097fc:	f8d2 1204 	ldr.w	r1, [r2, #516]	@ 0x204
 8009800:	68ba      	ldr	r2, [r7, #8]
 8009802:	f502 7203 	add.w	r2, r2, #524	@ 0x20c
 8009806:	7bf8      	ldrb	r0, [r7, #15]
 8009808:	4798      	blx	r3

  return (uint8_t)USBD_OK;
 800980a:	2300      	movs	r3, #0
}
 800980c:	4618      	mov	r0, r3
 800980e:	3710      	adds	r7, #16
 8009810:	46bd      	mov	sp, r7
 8009812:	bd80      	pop	{r7, pc}
 8009814:	20002518 	.word	0x20002518
 8009818:	2000252c 	.word	0x2000252c

0800981c <USBD_CDC_EP0_RxReady>:
  *         Handle EP0 Rx Ready event
  * @param  pdev: device instance
  * @retval status
  */
static uint8_t USBD_CDC_EP0_RxReady(USBD_HandleTypeDef *pdev)
{
 800981c:	b590      	push	{r4, r7, lr}
 800981e:	b085      	sub	sp, #20
 8009820:	af00      	add	r7, sp, #0
 8009822:	6078      	str	r0, [r7, #4]
  USBD_CDC_ACM_HandleTypeDef *hcdc = NULL;
 8009824:	2300      	movs	r3, #0
 8009826:	60bb      	str	r3, [r7, #8]

  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 8009828:	2300      	movs	r3, #0
 800982a:	73fb      	strb	r3, [r7, #15]
 800982c:	e02d      	b.n	800988a <USBD_CDC_EP0_RxReady+0x6e>
  {
    hcdc = &CDC_ACM_Class_Data[i];
 800982e:	7bfb      	ldrb	r3, [r7, #15]
 8009830:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 8009834:	fb02 f303 	mul.w	r3, r2, r3
 8009838:	4a18      	ldr	r2, [pc, #96]	@ (800989c <USBD_CDC_EP0_RxReady+0x80>)
 800983a:	4413      	add	r3, r2
 800983c:	60bb      	str	r3, [r7, #8]

    if (hcdc == NULL)
 800983e:	68bb      	ldr	r3, [r7, #8]
 8009840:	2b00      	cmp	r3, #0
 8009842:	d101      	bne.n	8009848 <USBD_CDC_EP0_RxReady+0x2c>
    {
      return (uint8_t)USBD_FAIL;
 8009844:	2303      	movs	r3, #3
 8009846:	e024      	b.n	8009892 <USBD_CDC_EP0_RxReady+0x76>
    }

    if ((pdev->pUserData_CDC_ACM != NULL) && (hcdc->CmdOpCode != 0xFFU))
 8009848:	687b      	ldr	r3, [r7, #4]
 800984a:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 800984e:	2b00      	cmp	r3, #0
 8009850:	d018      	beq.n	8009884 <USBD_CDC_EP0_RxReady+0x68>
 8009852:	68bb      	ldr	r3, [r7, #8]
 8009854:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 8009858:	2bff      	cmp	r3, #255	@ 0xff
 800985a:	d013      	beq.n	8009884 <USBD_CDC_EP0_RxReady+0x68>
    {
      ((USBD_CDC_ACM_ItfTypeDef *)pdev->pUserData_CDC_ACM)->Control(i, hcdc->CmdOpCode, (uint8_t *)hcdc->data[i], (uint16_t)hcdc->CmdLength);
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 8009862:	689c      	ldr	r4, [r3, #8]
 8009864:	68bb      	ldr	r3, [r7, #8]
 8009866:	f893 1200 	ldrb.w	r1, [r3, #512]	@ 0x200
 800986a:	7bfb      	ldrb	r3, [r7, #15]
 800986c:	025b      	lsls	r3, r3, #9
 800986e:	68ba      	ldr	r2, [r7, #8]
 8009870:	441a      	add	r2, r3
 8009872:	68bb      	ldr	r3, [r7, #8]
 8009874:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 8009878:	7bf8      	ldrb	r0, [r7, #15]
 800987a:	47a0      	blx	r4
      hcdc->CmdOpCode = 0xFFU;
 800987c:	68bb      	ldr	r3, [r7, #8]
 800987e:	22ff      	movs	r2, #255	@ 0xff
 8009880:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 8009884:	7bfb      	ldrb	r3, [r7, #15]
 8009886:	3301      	adds	r3, #1
 8009888:	73fb      	strb	r3, [r7, #15]
 800988a:	7bfb      	ldrb	r3, [r7, #15]
 800988c:	2b00      	cmp	r3, #0
 800988e:	d0ce      	beq.n	800982e <USBD_CDC_EP0_RxReady+0x12>
    }
  }

  return (uint8_t)USBD_OK;
 8009890:	2300      	movs	r3, #0
}
 8009892:	4618      	mov	r0, r3
 8009894:	3714      	adds	r7, #20
 8009896:	46bd      	mov	sp, r7
 8009898:	bd90      	pop	{r4, r7, pc}
 800989a:	bf00      	nop
 800989c:	2000252c 	.word	0x2000252c

080098a0 <USBD_CDC_GetFSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetFSCfgDesc(uint16_t *length)
{
 80098a0:	b480      	push	{r7}
 80098a2:	b083      	sub	sp, #12
 80098a4:	af00      	add	r7, sp, #0
 80098a6:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CDC_CfgFSDesc);
 80098a8:	687b      	ldr	r3, [r7, #4]
 80098aa:	224b      	movs	r2, #75	@ 0x4b
 80098ac:	801a      	strh	r2, [r3, #0]

  return USBD_CDC_CfgFSDesc;
 80098ae:	4b03      	ldr	r3, [pc, #12]	@ (80098bc <USBD_CDC_GetFSCfgDesc+0x1c>)
}
 80098b0:	4618      	mov	r0, r3
 80098b2:	370c      	adds	r7, #12
 80098b4:	46bd      	mov	sp, r7
 80098b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ba:	4770      	bx	lr
 80098bc:	20000144 	.word	0x20000144

080098c0 <USBD_CDC_GetHSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetHSCfgDesc(uint16_t *length)
{
 80098c0:	b480      	push	{r7}
 80098c2:	b083      	sub	sp, #12
 80098c4:	af00      	add	r7, sp, #0
 80098c6:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CDC_CfgHSDesc);
 80098c8:	687b      	ldr	r3, [r7, #4]
 80098ca:	224b      	movs	r2, #75	@ 0x4b
 80098cc:	801a      	strh	r2, [r3, #0]

  return USBD_CDC_CfgHSDesc;
 80098ce:	4b03      	ldr	r3, [pc, #12]	@ (80098dc <USBD_CDC_GetHSCfgDesc+0x1c>)
}
 80098d0:	4618      	mov	r0, r3
 80098d2:	370c      	adds	r7, #12
 80098d4:	46bd      	mov	sp, r7
 80098d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098da:	4770      	bx	lr
 80098dc:	200000f8 	.word	0x200000f8

080098e0 <USBD_CDC_GetOtherSpeedCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetOtherSpeedCfgDesc(uint16_t *length)
{
 80098e0:	b480      	push	{r7}
 80098e2:	b083      	sub	sp, #12
 80098e4:	af00      	add	r7, sp, #0
 80098e6:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CDC_CfgFSDesc);
 80098e8:	687b      	ldr	r3, [r7, #4]
 80098ea:	224b      	movs	r2, #75	@ 0x4b
 80098ec:	801a      	strh	r2, [r3, #0]

  return USBD_CDC_CfgFSDesc;
 80098ee:	4b03      	ldr	r3, [pc, #12]	@ (80098fc <USBD_CDC_GetOtherSpeedCfgDesc+0x1c>)
}
 80098f0:	4618      	mov	r0, r3
 80098f2:	370c      	adds	r7, #12
 80098f4:	46bd      	mov	sp, r7
 80098f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098fa:	4770      	bx	lr
 80098fc:	20000144 	.word	0x20000144

08009900 <USBD_CDC_GetDeviceQualifierDescriptor>:
  *         return Device Qualifier descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
uint8_t *USBD_CDC_GetDeviceQualifierDescriptor(uint16_t *length)
{
 8009900:	b480      	push	{r7}
 8009902:	b083      	sub	sp, #12
 8009904:	af00      	add	r7, sp, #0
 8009906:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CDC_DeviceQualifierDesc);
 8009908:	687b      	ldr	r3, [r7, #4]
 800990a:	220a      	movs	r2, #10
 800990c:	801a      	strh	r2, [r3, #0]

  return USBD_CDC_DeviceQualifierDesc;
 800990e:	4b03      	ldr	r3, [pc, #12]	@ (800991c <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
}
 8009910:	4618      	mov	r0, r3
 8009912:	370c      	adds	r7, #12
 8009914:	46bd      	mov	sp, r7
 8009916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800991a:	4770      	bx	lr
 800991c:	200000b0 	.word	0x200000b0

08009920 <USBD_CDC_ACM_RegisterInterface>:
  * @param  fops: CD  Interface callback
  * @retval status
  */
uint8_t USBD_CDC_ACM_RegisterInterface(USBD_HandleTypeDef *pdev,
                                       USBD_CDC_ACM_ItfTypeDef *fops)
{
 8009920:	b480      	push	{r7}
 8009922:	b083      	sub	sp, #12
 8009924:	af00      	add	r7, sp, #0
 8009926:	6078      	str	r0, [r7, #4]
 8009928:	6039      	str	r1, [r7, #0]
  if (fops == NULL)
 800992a:	683b      	ldr	r3, [r7, #0]
 800992c:	2b00      	cmp	r3, #0
 800992e:	d101      	bne.n	8009934 <USBD_CDC_ACM_RegisterInterface+0x14>
  {
    return (uint8_t)USBD_FAIL;
 8009930:	2303      	movs	r3, #3
 8009932:	e004      	b.n	800993e <USBD_CDC_ACM_RegisterInterface+0x1e>
  }

  pdev->pUserData_CDC_ACM = fops;
 8009934:	687b      	ldr	r3, [r7, #4]
 8009936:	683a      	ldr	r2, [r7, #0]
 8009938:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc

  return (uint8_t)USBD_OK;
 800993c:	2300      	movs	r3, #0
}
 800993e:	4618      	mov	r0, r3
 8009940:	370c      	adds	r7, #12
 8009942:	46bd      	mov	sp, r7
 8009944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009948:	4770      	bx	lr
	...

0800994c <USBD_CDC_SetTxBuffer>:
  * @param  pbuff: Tx Buffer
  * @retval status
  */
uint8_t USBD_CDC_SetTxBuffer(uint8_t ch, USBD_HandleTypeDef *pdev,
                             uint8_t *pbuff, uint32_t length)
{
 800994c:	b480      	push	{r7}
 800994e:	b087      	sub	sp, #28
 8009950:	af00      	add	r7, sp, #0
 8009952:	60b9      	str	r1, [r7, #8]
 8009954:	607a      	str	r2, [r7, #4]
 8009956:	603b      	str	r3, [r7, #0]
 8009958:	4603      	mov	r3, r0
 800995a:	73fb      	strb	r3, [r7, #15]
  USBD_CDC_ACM_HandleTypeDef *hcdc = NULL;
 800995c:	2300      	movs	r3, #0
 800995e:	617b      	str	r3, [r7, #20]

  hcdc = &CDC_ACM_Class_Data[ch];
 8009960:	7bfb      	ldrb	r3, [r7, #15]
 8009962:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 8009966:	fb02 f303 	mul.w	r3, r2, r3
 800996a:	4a09      	ldr	r2, [pc, #36]	@ (8009990 <USBD_CDC_SetTxBuffer+0x44>)
 800996c:	4413      	add	r3, r2
 800996e:	617b      	str	r3, [r7, #20]

  hcdc->TxBuffer = pbuff;
 8009970:	697b      	ldr	r3, [r7, #20]
 8009972:	687a      	ldr	r2, [r7, #4]
 8009974:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
  hcdc->TxLength = length;
 8009978:	697b      	ldr	r3, [r7, #20]
 800997a:	683a      	ldr	r2, [r7, #0]
 800997c:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210

  return (uint8_t)USBD_OK;
 8009980:	2300      	movs	r3, #0
}
 8009982:	4618      	mov	r0, r3
 8009984:	371c      	adds	r7, #28
 8009986:	46bd      	mov	sp, r7
 8009988:	f85d 7b04 	ldr.w	r7, [sp], #4
 800998c:	4770      	bx	lr
 800998e:	bf00      	nop
 8009990:	2000252c 	.word	0x2000252c

08009994 <USBD_CDC_SetRxBuffer>:
  * @param  pdev: device instance
  * @param  pbuff: Rx Buffer
  * @retval status
  */
uint8_t USBD_CDC_SetRxBuffer(uint8_t ch, USBD_HandleTypeDef *pdev, uint8_t *pbuff)
{
 8009994:	b480      	push	{r7}
 8009996:	b087      	sub	sp, #28
 8009998:	af00      	add	r7, sp, #0
 800999a:	4603      	mov	r3, r0
 800999c:	60b9      	str	r1, [r7, #8]
 800999e:	607a      	str	r2, [r7, #4]
 80099a0:	73fb      	strb	r3, [r7, #15]
  USBD_CDC_ACM_HandleTypeDef *hcdc = NULL;
 80099a2:	2300      	movs	r3, #0
 80099a4:	617b      	str	r3, [r7, #20]

  hcdc = &CDC_ACM_Class_Data[ch];
 80099a6:	7bfb      	ldrb	r3, [r7, #15]
 80099a8:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 80099ac:	fb02 f303 	mul.w	r3, r2, r3
 80099b0:	4a06      	ldr	r2, [pc, #24]	@ (80099cc <USBD_CDC_SetRxBuffer+0x38>)
 80099b2:	4413      	add	r3, r2
 80099b4:	617b      	str	r3, [r7, #20]

  hcdc->RxBuffer = pbuff;
 80099b6:	697b      	ldr	r3, [r7, #20]
 80099b8:	687a      	ldr	r2, [r7, #4]
 80099ba:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204

  return (uint8_t)USBD_OK;
 80099be:	2300      	movs	r3, #0
}
 80099c0:	4618      	mov	r0, r3
 80099c2:	371c      	adds	r7, #28
 80099c4:	46bd      	mov	sp, r7
 80099c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099ca:	4770      	bx	lr
 80099cc:	2000252c 	.word	0x2000252c

080099d0 <USBD_CDC_TransmitPacket>:
  *         Transmit packet on IN endpoint
  * @param  pdev: device instance
  * @retval status
  */
uint8_t USBD_CDC_TransmitPacket(uint8_t ch, USBD_HandleTypeDef *pdev)
{
 80099d0:	b580      	push	{r7, lr}
 80099d2:	b084      	sub	sp, #16
 80099d4:	af00      	add	r7, sp, #0
 80099d6:	4603      	mov	r3, r0
 80099d8:	6039      	str	r1, [r7, #0]
 80099da:	71fb      	strb	r3, [r7, #7]
  USBD_CDC_ACM_HandleTypeDef *hcdc = NULL;
 80099dc:	2300      	movs	r3, #0
 80099de:	60bb      	str	r3, [r7, #8]
  USBD_StatusTypeDef ret = USBD_BUSY;
 80099e0:	2301      	movs	r3, #1
 80099e2:	73fb      	strb	r3, [r7, #15]

  hcdc = &CDC_ACM_Class_Data[ch];
 80099e4:	79fb      	ldrb	r3, [r7, #7]
 80099e6:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 80099ea:	fb02 f303 	mul.w	r3, r2, r3
 80099ee:	4a17      	ldr	r2, [pc, #92]	@ (8009a4c <USBD_CDC_TransmitPacket+0x7c>)
 80099f0:	4413      	add	r3, r2
 80099f2:	60bb      	str	r3, [r7, #8]

  if (hcdc->TxState == 0U)
 80099f4:	68bb      	ldr	r3, [r7, #8]
 80099f6:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 80099fa:	2b00      	cmp	r3, #0
 80099fc:	d121      	bne.n	8009a42 <USBD_CDC_TransmitPacket+0x72>
  {
    /* Tx Transfer in progress */
    hcdc->TxState = 1U;
 80099fe:	68bb      	ldr	r3, [r7, #8]
 8009a00:	2201      	movs	r2, #1
 8009a02:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214

    /* Update the packet total length */
    pdev->ep_in[CDC_IN_EP[ch] & 0xFU].total_length = hcdc->TxLength;
 8009a06:	79fb      	ldrb	r3, [r7, #7]
 8009a08:	4a11      	ldr	r2, [pc, #68]	@ (8009a50 <USBD_CDC_TransmitPacket+0x80>)
 8009a0a:	5cd3      	ldrb	r3, [r2, r3]
 8009a0c:	f003 020f 	and.w	r2, r3, #15
 8009a10:	68bb      	ldr	r3, [r7, #8]
 8009a12:	f8d3 1210 	ldr.w	r1, [r3, #528]	@ 0x210
 8009a16:	6838      	ldr	r0, [r7, #0]
 8009a18:	4613      	mov	r3, r2
 8009a1a:	009b      	lsls	r3, r3, #2
 8009a1c:	4413      	add	r3, r2
 8009a1e:	009b      	lsls	r3, r3, #2
 8009a20:	4403      	add	r3, r0
 8009a22:	3318      	adds	r3, #24
 8009a24:	6019      	str	r1, [r3, #0]

    /* Transmit next packet */
    (void)USBD_LL_Transmit(pdev, CDC_IN_EP[ch], hcdc->TxBuffer, hcdc->TxLength);
 8009a26:	79fb      	ldrb	r3, [r7, #7]
 8009a28:	4a09      	ldr	r2, [pc, #36]	@ (8009a50 <USBD_CDC_TransmitPacket+0x80>)
 8009a2a:	5cd1      	ldrb	r1, [r2, r3]
 8009a2c:	68bb      	ldr	r3, [r7, #8]
 8009a2e:	f8d3 2208 	ldr.w	r2, [r3, #520]	@ 0x208
 8009a32:	68bb      	ldr	r3, [r7, #8]
 8009a34:	f8d3 3210 	ldr.w	r3, [r3, #528]	@ 0x210
 8009a38:	6838      	ldr	r0, [r7, #0]
 8009a3a:	f002 faa4 	bl	800bf86 <USBD_LL_Transmit>

    ret = USBD_OK;
 8009a3e:	2300      	movs	r3, #0
 8009a40:	73fb      	strb	r3, [r7, #15]
  }

  return (uint8_t)ret;
 8009a42:	7bfb      	ldrb	r3, [r7, #15]
}
 8009a44:	4618      	mov	r0, r3
 8009a46:	3710      	adds	r7, #16
 8009a48:	46bd      	mov	sp, r7
 8009a4a:	bd80      	pop	{r7, pc}
 8009a4c:	2000252c 	.word	0x2000252c
 8009a50:	20002514 	.word	0x20002514

08009a54 <USBD_CDC_ReceivePacket>:
  *         prepare OUT Endpoint for reception
  * @param  pdev: device instance
  * @retval status
  */
uint8_t USBD_CDC_ReceivePacket(uint8_t ch, USBD_HandleTypeDef *pdev)
{
 8009a54:	b580      	push	{r7, lr}
 8009a56:	b084      	sub	sp, #16
 8009a58:	af00      	add	r7, sp, #0
 8009a5a:	4603      	mov	r3, r0
 8009a5c:	6039      	str	r1, [r7, #0]
 8009a5e:	71fb      	strb	r3, [r7, #7]
  USBD_CDC_ACM_HandleTypeDef *hcdc = NULL;
 8009a60:	2300      	movs	r3, #0
 8009a62:	60fb      	str	r3, [r7, #12]

  hcdc = &CDC_ACM_Class_Data[ch];
 8009a64:	79fb      	ldrb	r3, [r7, #7]
 8009a66:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 8009a6a:	fb02 f303 	mul.w	r3, r2, r3
 8009a6e:	4a11      	ldr	r2, [pc, #68]	@ (8009ab4 <USBD_CDC_ReceivePacket+0x60>)
 8009a70:	4413      	add	r3, r2
 8009a72:	60fb      	str	r3, [r7, #12]

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009a74:	683b      	ldr	r3, [r7, #0]
 8009a76:	7c1b      	ldrb	r3, [r3, #16]
 8009a78:	2b00      	cmp	r3, #0
 8009a7a:	d10b      	bne.n	8009a94 <USBD_CDC_ReceivePacket+0x40>
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP[ch], hcdc->RxBuffer,
 8009a7c:	79fb      	ldrb	r3, [r7, #7]
 8009a7e:	4a0e      	ldr	r2, [pc, #56]	@ (8009ab8 <USBD_CDC_ReceivePacket+0x64>)
 8009a80:	5cd1      	ldrb	r1, [r2, r3]
 8009a82:	68fb      	ldr	r3, [r7, #12]
 8009a84:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8009a88:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8009a8c:	6838      	ldr	r0, [r7, #0]
 8009a8e:	f002 fa9b 	bl	800bfc8 <USBD_LL_PrepareReceive>
 8009a92:	e009      	b.n	8009aa8 <USBD_CDC_ReceivePacket+0x54>
                                 CDC_DATA_HS_OUT_PACKET_SIZE);
  }
  else
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP[ch], hcdc->RxBuffer,
 8009a94:	79fb      	ldrb	r3, [r7, #7]
 8009a96:	4a08      	ldr	r2, [pc, #32]	@ (8009ab8 <USBD_CDC_ReceivePacket+0x64>)
 8009a98:	5cd1      	ldrb	r1, [r2, r3]
 8009a9a:	68fb      	ldr	r3, [r7, #12]
 8009a9c:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8009aa0:	2340      	movs	r3, #64	@ 0x40
 8009aa2:	6838      	ldr	r0, [r7, #0]
 8009aa4:	f002 fa90 	bl	800bfc8 <USBD_LL_PrepareReceive>
                                 CDC_DATA_FS_OUT_PACKET_SIZE);
  }

  return (uint8_t)USBD_OK;
 8009aa8:	2300      	movs	r3, #0
}
 8009aaa:	4618      	mov	r0, r3
 8009aac:	3710      	adds	r7, #16
 8009aae:	46bd      	mov	sp, r7
 8009ab0:	bd80      	pop	{r7, pc}
 8009ab2:	bf00      	nop
 8009ab4:	2000252c 	.word	0x2000252c
 8009ab8:	20002518 	.word	0x20002518

08009abc <USBD_Update_CDC_ACM_DESC>:
                              uint8_t com_itf,
                              uint8_t in_ep,
                              uint8_t cmd_ep,
                              uint8_t out_ep,
                              uint8_t str_idx)
{
 8009abc:	b480      	push	{r7}
 8009abe:	b085      	sub	sp, #20
 8009ac0:	af00      	add	r7, sp, #0
 8009ac2:	6078      	str	r0, [r7, #4]
 8009ac4:	4608      	mov	r0, r1
 8009ac6:	4611      	mov	r1, r2
 8009ac8:	461a      	mov	r2, r3
 8009aca:	4603      	mov	r3, r0
 8009acc:	70fb      	strb	r3, [r7, #3]
 8009ace:	460b      	mov	r3, r1
 8009ad0:	70bb      	strb	r3, [r7, #2]
 8009ad2:	4613      	mov	r3, r2
 8009ad4:	707b      	strb	r3, [r7, #1]
  desc += 9;
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	3309      	adds	r3, #9
 8009ada:	607b      	str	r3, [r7, #4]
  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 8009adc:	2300      	movs	r3, #0
 8009ade:	73fb      	strb	r3, [r7, #15]
 8009ae0:	e05b      	b.n	8009b9a <USBD_Update_CDC_ACM_DESC+0xde>
  {
    desc[2] = cmd_itf;
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	3302      	adds	r3, #2
 8009ae6:	78fa      	ldrb	r2, [r7, #3]
 8009ae8:	701a      	strb	r2, [r3, #0]
    desc[16] = str_idx;
 8009aea:	687b      	ldr	r3, [r7, #4]
 8009aec:	3310      	adds	r3, #16
 8009aee:	f897 2020 	ldrb.w	r2, [r7, #32]
 8009af2:	701a      	strb	r2, [r3, #0]
    desc[10] = cmd_itf;
 8009af4:	687b      	ldr	r3, [r7, #4]
 8009af6:	330a      	adds	r3, #10
 8009af8:	78fa      	ldrb	r2, [r7, #3]
 8009afa:	701a      	strb	r2, [r3, #0]
    desc[26] = com_itf;
 8009afc:	687b      	ldr	r3, [r7, #4]
 8009afe:	331a      	adds	r3, #26
 8009b00:	78ba      	ldrb	r2, [r7, #2]
 8009b02:	701a      	strb	r2, [r3, #0]
    desc[34] = cmd_itf;
 8009b04:	687b      	ldr	r3, [r7, #4]
 8009b06:	3322      	adds	r3, #34	@ 0x22
 8009b08:	78fa      	ldrb	r2, [r7, #3]
 8009b0a:	701a      	strb	r2, [r3, #0]
    desc[35] = com_itf;
 8009b0c:	687b      	ldr	r3, [r7, #4]
 8009b0e:	3323      	adds	r3, #35	@ 0x23
 8009b10:	78ba      	ldrb	r2, [r7, #2]
 8009b12:	701a      	strb	r2, [r3, #0]
    desc[38] = cmd_ep;
 8009b14:	687b      	ldr	r3, [r7, #4]
 8009b16:	3326      	adds	r3, #38	@ 0x26
 8009b18:	7e3a      	ldrb	r2, [r7, #24]
 8009b1a:	701a      	strb	r2, [r3, #0]
    desc[45] = com_itf;
 8009b1c:	687b      	ldr	r3, [r7, #4]
 8009b1e:	332d      	adds	r3, #45	@ 0x2d
 8009b20:	78ba      	ldrb	r2, [r7, #2]
 8009b22:	701a      	strb	r2, [r3, #0]
    desc[54] = out_ep;
 8009b24:	687b      	ldr	r3, [r7, #4]
 8009b26:	3336      	adds	r3, #54	@ 0x36
 8009b28:	7f3a      	ldrb	r2, [r7, #28]
 8009b2a:	701a      	strb	r2, [r3, #0]
    desc[61] = in_ep;
 8009b2c:	687b      	ldr	r3, [r7, #4]
 8009b2e:	333d      	adds	r3, #61	@ 0x3d
 8009b30:	787a      	ldrb	r2, [r7, #1]
 8009b32:	701a      	strb	r2, [r3, #0]

    desc += 66;
 8009b34:	687b      	ldr	r3, [r7, #4]
 8009b36:	3342      	adds	r3, #66	@ 0x42
 8009b38:	607b      	str	r3, [r7, #4]
    CDC_IN_EP[i] = in_ep;
 8009b3a:	7bfb      	ldrb	r3, [r7, #15]
 8009b3c:	491c      	ldr	r1, [pc, #112]	@ (8009bb0 <USBD_Update_CDC_ACM_DESC+0xf4>)
 8009b3e:	787a      	ldrb	r2, [r7, #1]
 8009b40:	54ca      	strb	r2, [r1, r3]
    CDC_OUT_EP[i] = out_ep;
 8009b42:	7bfb      	ldrb	r3, [r7, #15]
 8009b44:	491b      	ldr	r1, [pc, #108]	@ (8009bb4 <USBD_Update_CDC_ACM_DESC+0xf8>)
 8009b46:	7f3a      	ldrb	r2, [r7, #28]
 8009b48:	54ca      	strb	r2, [r1, r3]
    CDC_CMD_EP[i] = cmd_ep;
 8009b4a:	7bfb      	ldrb	r3, [r7, #15]
 8009b4c:	491a      	ldr	r1, [pc, #104]	@ (8009bb8 <USBD_Update_CDC_ACM_DESC+0xfc>)
 8009b4e:	7e3a      	ldrb	r2, [r7, #24]
 8009b50:	54ca      	strb	r2, [r1, r3]
    CDC_CMD_ITF_NBR[i] = cmd_itf;
 8009b52:	7bfb      	ldrb	r3, [r7, #15]
 8009b54:	4919      	ldr	r1, [pc, #100]	@ (8009bbc <USBD_Update_CDC_ACM_DESC+0x100>)
 8009b56:	78fa      	ldrb	r2, [r7, #3]
 8009b58:	54ca      	strb	r2, [r1, r3]
    CDC_COM_ITF_NBR[i] = com_itf;
 8009b5a:	7bfb      	ldrb	r3, [r7, #15]
 8009b5c:	4918      	ldr	r1, [pc, #96]	@ (8009bc0 <USBD_Update_CDC_ACM_DESC+0x104>)
 8009b5e:	78ba      	ldrb	r2, [r7, #2]
 8009b60:	54ca      	strb	r2, [r1, r3]
    CDC_STR_DESC_IDX[i] = str_idx;
 8009b62:	7bfb      	ldrb	r3, [r7, #15]
 8009b64:	4917      	ldr	r1, [pc, #92]	@ (8009bc4 <USBD_Update_CDC_ACM_DESC+0x108>)
 8009b66:	f897 2020 	ldrb.w	r2, [r7, #32]
 8009b6a:	54ca      	strb	r2, [r1, r3]

    in_ep += 2;
 8009b6c:	787b      	ldrb	r3, [r7, #1]
 8009b6e:	3302      	adds	r3, #2
 8009b70:	707b      	strb	r3, [r7, #1]
    cmd_ep = in_ep + 1;
 8009b72:	787b      	ldrb	r3, [r7, #1]
 8009b74:	3301      	adds	r3, #1
 8009b76:	763b      	strb	r3, [r7, #24]
    out_ep++;
 8009b78:	7f3b      	ldrb	r3, [r7, #28]
 8009b7a:	3301      	adds	r3, #1
 8009b7c:	773b      	strb	r3, [r7, #28]
    str_idx++;
 8009b7e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8009b82:	3301      	adds	r3, #1
 8009b84:	f887 3020 	strb.w	r3, [r7, #32]

    cmd_itf += 2;
 8009b88:	78fb      	ldrb	r3, [r7, #3]
 8009b8a:	3302      	adds	r3, #2
 8009b8c:	70fb      	strb	r3, [r7, #3]
    com_itf = cmd_itf + 1;
 8009b8e:	78fb      	ldrb	r3, [r7, #3]
 8009b90:	3301      	adds	r3, #1
 8009b92:	70bb      	strb	r3, [r7, #2]
  for (uint8_t i = 0; i < NUMBER_OF_CDC; i++)
 8009b94:	7bfb      	ldrb	r3, [r7, #15]
 8009b96:	3301      	adds	r3, #1
 8009b98:	73fb      	strb	r3, [r7, #15]
 8009b9a:	7bfb      	ldrb	r3, [r7, #15]
 8009b9c:	2b00      	cmp	r3, #0
 8009b9e:	d0a0      	beq.n	8009ae2 <USBD_Update_CDC_ACM_DESC+0x26>
  }
}
 8009ba0:	bf00      	nop
 8009ba2:	bf00      	nop
 8009ba4:	3714      	adds	r7, #20
 8009ba6:	46bd      	mov	sp, r7
 8009ba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bac:	4770      	bx	lr
 8009bae:	bf00      	nop
 8009bb0:	20002514 	.word	0x20002514
 8009bb4:	20002518 	.word	0x20002518
 8009bb8:	2000251c 	.word	0x2000251c
 8009bbc:	20002520 	.word	0x20002520
 8009bc0:	20002524 	.word	0x20002524
 8009bc4:	20002528 	.word	0x20002528

08009bc8 <USBD_COMPOSITE_Init>:
 8009bc8:	b580      	push	{r7, lr}
 8009bca:	b082      	sub	sp, #8
 8009bcc:	af00      	add	r7, sp, #0
 8009bce:	6078      	str	r0, [r7, #4]
 8009bd0:	460b      	mov	r3, r1
 8009bd2:	70fb      	strb	r3, [r7, #3]
 8009bd4:	4b08      	ldr	r3, [pc, #32]	@ (8009bf8 <USBD_COMPOSITE_Init+0x30>)
 8009bd6:	681b      	ldr	r3, [r3, #0]
 8009bd8:	78fa      	ldrb	r2, [r7, #3]
 8009bda:	4611      	mov	r1, r2
 8009bdc:	6878      	ldr	r0, [r7, #4]
 8009bde:	4798      	blx	r3
 8009be0:	4b06      	ldr	r3, [pc, #24]	@ (8009bfc <USBD_COMPOSITE_Init+0x34>)
 8009be2:	681b      	ldr	r3, [r3, #0]
 8009be4:	78fa      	ldrb	r2, [r7, #3]
 8009be6:	4611      	mov	r1, r2
 8009be8:	6878      	ldr	r0, [r7, #4]
 8009bea:	4798      	blx	r3
 8009bec:	2300      	movs	r3, #0
 8009bee:	4618      	mov	r0, r3
 8009bf0:	3708      	adds	r7, #8
 8009bf2:	46bd      	mov	sp, r7
 8009bf4:	bd80      	pop	{r7, pc}
 8009bf6:	bf00      	nop
 8009bf8:	200000bc 	.word	0x200000bc
 8009bfc:	200001dc 	.word	0x200001dc

08009c00 <USBD_COMPOSITE_DeInit>:
 8009c00:	b580      	push	{r7, lr}
 8009c02:	b082      	sub	sp, #8
 8009c04:	af00      	add	r7, sp, #0
 8009c06:	6078      	str	r0, [r7, #4]
 8009c08:	460b      	mov	r3, r1
 8009c0a:	70fb      	strb	r3, [r7, #3]
 8009c0c:	4b08      	ldr	r3, [pc, #32]	@ (8009c30 <USBD_COMPOSITE_DeInit+0x30>)
 8009c0e:	685b      	ldr	r3, [r3, #4]
 8009c10:	78fa      	ldrb	r2, [r7, #3]
 8009c12:	4611      	mov	r1, r2
 8009c14:	6878      	ldr	r0, [r7, #4]
 8009c16:	4798      	blx	r3
 8009c18:	4b06      	ldr	r3, [pc, #24]	@ (8009c34 <USBD_COMPOSITE_DeInit+0x34>)
 8009c1a:	685b      	ldr	r3, [r3, #4]
 8009c1c:	78fa      	ldrb	r2, [r7, #3]
 8009c1e:	4611      	mov	r1, r2
 8009c20:	6878      	ldr	r0, [r7, #4]
 8009c22:	4798      	blx	r3
 8009c24:	2300      	movs	r3, #0
 8009c26:	4618      	mov	r0, r3
 8009c28:	3708      	adds	r7, #8
 8009c2a:	46bd      	mov	sp, r7
 8009c2c:	bd80      	pop	{r7, pc}
 8009c2e:	bf00      	nop
 8009c30:	200000bc 	.word	0x200000bc
 8009c34:	200001dc 	.word	0x200001dc

08009c38 <USBD_COMPOSITE_Setup>:
 8009c38:	b580      	push	{r7, lr}
 8009c3a:	b084      	sub	sp, #16
 8009c3c:	af00      	add	r7, sp, #0
 8009c3e:	6078      	str	r0, [r7, #4]
 8009c40:	6039      	str	r1, [r7, #0]
 8009c42:	2300      	movs	r3, #0
 8009c44:	73fb      	strb	r3, [r7, #15]
 8009c46:	e019      	b.n	8009c7c <USBD_COMPOSITE_Setup+0x44>
 8009c48:	683b      	ldr	r3, [r7, #0]
 8009c4a:	889b      	ldrh	r3, [r3, #4]
 8009c4c:	b2da      	uxtb	r2, r3
 8009c4e:	7bfb      	ldrb	r3, [r7, #15]
 8009c50:	4915      	ldr	r1, [pc, #84]	@ (8009ca8 <USBD_COMPOSITE_Setup+0x70>)
 8009c52:	5ccb      	ldrb	r3, [r1, r3]
 8009c54:	429a      	cmp	r2, r3
 8009c56:	d007      	beq.n	8009c68 <USBD_COMPOSITE_Setup+0x30>
 8009c58:	683b      	ldr	r3, [r7, #0]
 8009c5a:	889b      	ldrh	r3, [r3, #4]
 8009c5c:	b2da      	uxtb	r2, r3
 8009c5e:	7bfb      	ldrb	r3, [r7, #15]
 8009c60:	4912      	ldr	r1, [pc, #72]	@ (8009cac <USBD_COMPOSITE_Setup+0x74>)
 8009c62:	5ccb      	ldrb	r3, [r1, r3]
 8009c64:	429a      	cmp	r2, r3
 8009c66:	d106      	bne.n	8009c76 <USBD_COMPOSITE_Setup+0x3e>
 8009c68:	4b11      	ldr	r3, [pc, #68]	@ (8009cb0 <USBD_COMPOSITE_Setup+0x78>)
 8009c6a:	689b      	ldr	r3, [r3, #8]
 8009c6c:	6839      	ldr	r1, [r7, #0]
 8009c6e:	6878      	ldr	r0, [r7, #4]
 8009c70:	4798      	blx	r3
 8009c72:	4603      	mov	r3, r0
 8009c74:	e014      	b.n	8009ca0 <USBD_COMPOSITE_Setup+0x68>
 8009c76:	7bfb      	ldrb	r3, [r7, #15]
 8009c78:	3301      	adds	r3, #1
 8009c7a:	73fb      	strb	r3, [r7, #15]
 8009c7c:	7bfb      	ldrb	r3, [r7, #15]
 8009c7e:	2b00      	cmp	r3, #0
 8009c80:	d0e2      	beq.n	8009c48 <USBD_COMPOSITE_Setup+0x10>
 8009c82:	683b      	ldr	r3, [r7, #0]
 8009c84:	889b      	ldrh	r3, [r3, #4]
 8009c86:	b2da      	uxtb	r2, r3
 8009c88:	4b0a      	ldr	r3, [pc, #40]	@ (8009cb4 <USBD_COMPOSITE_Setup+0x7c>)
 8009c8a:	781b      	ldrb	r3, [r3, #0]
 8009c8c:	429a      	cmp	r2, r3
 8009c8e:	d106      	bne.n	8009c9e <USBD_COMPOSITE_Setup+0x66>
 8009c90:	4b09      	ldr	r3, [pc, #36]	@ (8009cb8 <USBD_COMPOSITE_Setup+0x80>)
 8009c92:	689b      	ldr	r3, [r3, #8]
 8009c94:	6839      	ldr	r1, [r7, #0]
 8009c96:	6878      	ldr	r0, [r7, #4]
 8009c98:	4798      	blx	r3
 8009c9a:	4603      	mov	r3, r0
 8009c9c:	e000      	b.n	8009ca0 <USBD_COMPOSITE_Setup+0x68>
 8009c9e:	2303      	movs	r3, #3
 8009ca0:	4618      	mov	r0, r3
 8009ca2:	3710      	adds	r7, #16
 8009ca4:	46bd      	mov	sp, r7
 8009ca6:	bd80      	pop	{r7, pc}
 8009ca8:	20002520 	.word	0x20002520
 8009cac:	20002524 	.word	0x20002524
 8009cb0:	200000bc 	.word	0x200000bc
 8009cb4:	20002860 	.word	0x20002860
 8009cb8:	200001dc 	.word	0x200001dc

08009cbc <USBD_COMPOSITE_DataIn>:
 8009cbc:	b580      	push	{r7, lr}
 8009cbe:	b084      	sub	sp, #16
 8009cc0:	af00      	add	r7, sp, #0
 8009cc2:	6078      	str	r0, [r7, #4]
 8009cc4:	460b      	mov	r3, r1
 8009cc6:	70fb      	strb	r3, [r7, #3]
 8009cc8:	2300      	movs	r3, #0
 8009cca:	73fb      	strb	r3, [r7, #15]
 8009ccc:	e01a      	b.n	8009d04 <USBD_COMPOSITE_DataIn+0x48>
 8009cce:	78fa      	ldrb	r2, [r7, #3]
 8009cd0:	7bfb      	ldrb	r3, [r7, #15]
 8009cd2:	4918      	ldr	r1, [pc, #96]	@ (8009d34 <USBD_COMPOSITE_DataIn+0x78>)
 8009cd4:	5ccb      	ldrb	r3, [r1, r3]
 8009cd6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8009cda:	429a      	cmp	r2, r3
 8009cdc:	d007      	beq.n	8009cee <USBD_COMPOSITE_DataIn+0x32>
 8009cde:	78fa      	ldrb	r2, [r7, #3]
 8009ce0:	7bfb      	ldrb	r3, [r7, #15]
 8009ce2:	4915      	ldr	r1, [pc, #84]	@ (8009d38 <USBD_COMPOSITE_DataIn+0x7c>)
 8009ce4:	5ccb      	ldrb	r3, [r1, r3]
 8009ce6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8009cea:	429a      	cmp	r2, r3
 8009cec:	d107      	bne.n	8009cfe <USBD_COMPOSITE_DataIn+0x42>
 8009cee:	4b13      	ldr	r3, [pc, #76]	@ (8009d3c <USBD_COMPOSITE_DataIn+0x80>)
 8009cf0:	695b      	ldr	r3, [r3, #20]
 8009cf2:	78fa      	ldrb	r2, [r7, #3]
 8009cf4:	4611      	mov	r1, r2
 8009cf6:	6878      	ldr	r0, [r7, #4]
 8009cf8:	4798      	blx	r3
 8009cfa:	4603      	mov	r3, r0
 8009cfc:	e015      	b.n	8009d2a <USBD_COMPOSITE_DataIn+0x6e>
 8009cfe:	7bfb      	ldrb	r3, [r7, #15]
 8009d00:	3301      	adds	r3, #1
 8009d02:	73fb      	strb	r3, [r7, #15]
 8009d04:	7bfb      	ldrb	r3, [r7, #15]
 8009d06:	2b00      	cmp	r3, #0
 8009d08:	d0e1      	beq.n	8009cce <USBD_COMPOSITE_DataIn+0x12>
 8009d0a:	78fa      	ldrb	r2, [r7, #3]
 8009d0c:	4b0c      	ldr	r3, [pc, #48]	@ (8009d40 <USBD_COMPOSITE_DataIn+0x84>)
 8009d0e:	781b      	ldrb	r3, [r3, #0]
 8009d10:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8009d14:	429a      	cmp	r2, r3
 8009d16:	d107      	bne.n	8009d28 <USBD_COMPOSITE_DataIn+0x6c>
 8009d18:	4b0a      	ldr	r3, [pc, #40]	@ (8009d44 <USBD_COMPOSITE_DataIn+0x88>)
 8009d1a:	695b      	ldr	r3, [r3, #20]
 8009d1c:	78fa      	ldrb	r2, [r7, #3]
 8009d1e:	4611      	mov	r1, r2
 8009d20:	6878      	ldr	r0, [r7, #4]
 8009d22:	4798      	blx	r3
 8009d24:	4603      	mov	r3, r0
 8009d26:	e000      	b.n	8009d2a <USBD_COMPOSITE_DataIn+0x6e>
 8009d28:	2303      	movs	r3, #3
 8009d2a:	4618      	mov	r0, r3
 8009d2c:	3710      	adds	r7, #16
 8009d2e:	46bd      	mov	sp, r7
 8009d30:	bd80      	pop	{r7, pc}
 8009d32:	bf00      	nop
 8009d34:	20002514 	.word	0x20002514
 8009d38:	2000251c 	.word	0x2000251c
 8009d3c:	200000bc 	.word	0x200000bc
 8009d40:	200001da 	.word	0x200001da
 8009d44:	200001dc 	.word	0x200001dc

08009d48 <USBD_COMPOSITE_EP0_RxReady>:
 8009d48:	b580      	push	{r7, lr}
 8009d4a:	b082      	sub	sp, #8
 8009d4c:	af00      	add	r7, sp, #0
 8009d4e:	6078      	str	r0, [r7, #4]
 8009d50:	4b06      	ldr	r3, [pc, #24]	@ (8009d6c <USBD_COMPOSITE_EP0_RxReady+0x24>)
 8009d52:	691b      	ldr	r3, [r3, #16]
 8009d54:	6878      	ldr	r0, [r7, #4]
 8009d56:	4798      	blx	r3
 8009d58:	4b05      	ldr	r3, [pc, #20]	@ (8009d70 <USBD_COMPOSITE_EP0_RxReady+0x28>)
 8009d5a:	691b      	ldr	r3, [r3, #16]
 8009d5c:	6878      	ldr	r0, [r7, #4]
 8009d5e:	4798      	blx	r3
 8009d60:	2300      	movs	r3, #0
 8009d62:	4618      	mov	r0, r3
 8009d64:	3708      	adds	r7, #8
 8009d66:	46bd      	mov	sp, r7
 8009d68:	bd80      	pop	{r7, pc}
 8009d6a:	bf00      	nop
 8009d6c:	200000bc 	.word	0x200000bc
 8009d70:	200001dc 	.word	0x200001dc

08009d74 <USBD_COMPOSITE_EP0_TxReady>:
 8009d74:	b480      	push	{r7}
 8009d76:	b083      	sub	sp, #12
 8009d78:	af00      	add	r7, sp, #0
 8009d7a:	6078      	str	r0, [r7, #4]
 8009d7c:	2300      	movs	r3, #0
 8009d7e:	4618      	mov	r0, r3
 8009d80:	370c      	adds	r7, #12
 8009d82:	46bd      	mov	sp, r7
 8009d84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d88:	4770      	bx	lr

08009d8a <USBD_COMPOSITE_SOF>:
 8009d8a:	b480      	push	{r7}
 8009d8c:	b083      	sub	sp, #12
 8009d8e:	af00      	add	r7, sp, #0
 8009d90:	6078      	str	r0, [r7, #4]
 8009d92:	2300      	movs	r3, #0
 8009d94:	4618      	mov	r0, r3
 8009d96:	370c      	adds	r7, #12
 8009d98:	46bd      	mov	sp, r7
 8009d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d9e:	4770      	bx	lr

08009da0 <USBD_COMPOSITE_IsoINIncomplete>:
 8009da0:	b480      	push	{r7}
 8009da2:	b083      	sub	sp, #12
 8009da4:	af00      	add	r7, sp, #0
 8009da6:	6078      	str	r0, [r7, #4]
 8009da8:	460b      	mov	r3, r1
 8009daa:	70fb      	strb	r3, [r7, #3]
 8009dac:	2300      	movs	r3, #0
 8009dae:	4618      	mov	r0, r3
 8009db0:	370c      	adds	r7, #12
 8009db2:	46bd      	mov	sp, r7
 8009db4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009db8:	4770      	bx	lr

08009dba <USBD_COMPOSITE_IsoOutIncomplete>:
 8009dba:	b480      	push	{r7}
 8009dbc:	b083      	sub	sp, #12
 8009dbe:	af00      	add	r7, sp, #0
 8009dc0:	6078      	str	r0, [r7, #4]
 8009dc2:	460b      	mov	r3, r1
 8009dc4:	70fb      	strb	r3, [r7, #3]
 8009dc6:	2300      	movs	r3, #0
 8009dc8:	4618      	mov	r0, r3
 8009dca:	370c      	adds	r7, #12
 8009dcc:	46bd      	mov	sp, r7
 8009dce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dd2:	4770      	bx	lr

08009dd4 <USBD_COMPOSITE_DataOut>:
 8009dd4:	b580      	push	{r7, lr}
 8009dd6:	b084      	sub	sp, #16
 8009dd8:	af00      	add	r7, sp, #0
 8009dda:	6078      	str	r0, [r7, #4]
 8009ddc:	460b      	mov	r3, r1
 8009dde:	70fb      	strb	r3, [r7, #3]
 8009de0:	2300      	movs	r3, #0
 8009de2:	73fb      	strb	r3, [r7, #15]
 8009de4:	e010      	b.n	8009e08 <USBD_COMPOSITE_DataOut+0x34>
 8009de6:	7bfb      	ldrb	r3, [r7, #15]
 8009de8:	4a12      	ldr	r2, [pc, #72]	@ (8009e34 <USBD_COMPOSITE_DataOut+0x60>)
 8009dea:	5cd3      	ldrb	r3, [r2, r3]
 8009dec:	78fa      	ldrb	r2, [r7, #3]
 8009dee:	429a      	cmp	r2, r3
 8009df0:	d107      	bne.n	8009e02 <USBD_COMPOSITE_DataOut+0x2e>
 8009df2:	4b11      	ldr	r3, [pc, #68]	@ (8009e38 <USBD_COMPOSITE_DataOut+0x64>)
 8009df4:	699b      	ldr	r3, [r3, #24]
 8009df6:	78fa      	ldrb	r2, [r7, #3]
 8009df8:	4611      	mov	r1, r2
 8009dfa:	6878      	ldr	r0, [r7, #4]
 8009dfc:	4798      	blx	r3
 8009dfe:	4603      	mov	r3, r0
 8009e00:	e013      	b.n	8009e2a <USBD_COMPOSITE_DataOut+0x56>
 8009e02:	7bfb      	ldrb	r3, [r7, #15]
 8009e04:	3301      	adds	r3, #1
 8009e06:	73fb      	strb	r3, [r7, #15]
 8009e08:	7bfb      	ldrb	r3, [r7, #15]
 8009e0a:	2b00      	cmp	r3, #0
 8009e0c:	d0eb      	beq.n	8009de6 <USBD_COMPOSITE_DataOut+0x12>
 8009e0e:	4b0b      	ldr	r3, [pc, #44]	@ (8009e3c <USBD_COMPOSITE_DataOut+0x68>)
 8009e10:	781b      	ldrb	r3, [r3, #0]
 8009e12:	78fa      	ldrb	r2, [r7, #3]
 8009e14:	429a      	cmp	r2, r3
 8009e16:	d107      	bne.n	8009e28 <USBD_COMPOSITE_DataOut+0x54>
 8009e18:	4b09      	ldr	r3, [pc, #36]	@ (8009e40 <USBD_COMPOSITE_DataOut+0x6c>)
 8009e1a:	699b      	ldr	r3, [r3, #24]
 8009e1c:	78fa      	ldrb	r2, [r7, #3]
 8009e1e:	4611      	mov	r1, r2
 8009e20:	6878      	ldr	r0, [r7, #4]
 8009e22:	4798      	blx	r3
 8009e24:	4603      	mov	r3, r0
 8009e26:	e000      	b.n	8009e2a <USBD_COMPOSITE_DataOut+0x56>
 8009e28:	2303      	movs	r3, #3
 8009e2a:	4618      	mov	r0, r3
 8009e2c:	3710      	adds	r7, #16
 8009e2e:	46bd      	mov	sp, r7
 8009e30:	bd80      	pop	{r7, pc}
 8009e32:	bf00      	nop
 8009e34:	20002518 	.word	0x20002518
 8009e38:	200000bc 	.word	0x200000bc
 8009e3c:	200001db 	.word	0x200001db
 8009e40:	200001dc 	.word	0x200001dc

08009e44 <USBD_COMPOSITE_GetHSCfgDesc>:
 8009e44:	b480      	push	{r7}
 8009e46:	b083      	sub	sp, #12
 8009e48:	af00      	add	r7, sp, #0
 8009e4a:	6078      	str	r0, [r7, #4]
 8009e4c:	687b      	ldr	r3, [r7, #4]
 8009e4e:	226b      	movs	r2, #107	@ 0x6b
 8009e50:	801a      	strh	r2, [r3, #0]
 8009e52:	4b03      	ldr	r3, [pc, #12]	@ (8009e60 <USBD_COMPOSITE_GetHSCfgDesc+0x1c>)
 8009e54:	4618      	mov	r0, r3
 8009e56:	370c      	adds	r7, #12
 8009e58:	46bd      	mov	sp, r7
 8009e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e5e:	4770      	bx	lr
 8009e60:	200027b4 	.word	0x200027b4

08009e64 <USBD_COMPOSITE_GetFSCfgDesc>:
 8009e64:	b480      	push	{r7}
 8009e66:	b083      	sub	sp, #12
 8009e68:	af00      	add	r7, sp, #0
 8009e6a:	6078      	str	r0, [r7, #4]
 8009e6c:	687b      	ldr	r3, [r7, #4]
 8009e6e:	226b      	movs	r2, #107	@ 0x6b
 8009e70:	801a      	strh	r2, [r3, #0]
 8009e72:	4b03      	ldr	r3, [pc, #12]	@ (8009e80 <USBD_COMPOSITE_GetFSCfgDesc+0x1c>)
 8009e74:	4618      	mov	r0, r3
 8009e76:	370c      	adds	r7, #12
 8009e78:	46bd      	mov	sp, r7
 8009e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e7e:	4770      	bx	lr
 8009e80:	20002748 	.word	0x20002748

08009e84 <USBD_COMPOSITE_GetOtherSpeedCfgDesc>:
 8009e84:	b480      	push	{r7}
 8009e86:	b083      	sub	sp, #12
 8009e88:	af00      	add	r7, sp, #0
 8009e8a:	6078      	str	r0, [r7, #4]
 8009e8c:	687b      	ldr	r3, [r7, #4]
 8009e8e:	226b      	movs	r2, #107	@ 0x6b
 8009e90:	801a      	strh	r2, [r3, #0]
 8009e92:	4b03      	ldr	r3, [pc, #12]	@ (8009ea0 <USBD_COMPOSITE_GetOtherSpeedCfgDesc+0x1c>)
 8009e94:	4618      	mov	r0, r3
 8009e96:	370c      	adds	r7, #12
 8009e98:	46bd      	mov	sp, r7
 8009e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e9e:	4770      	bx	lr
 8009ea0:	200027b4 	.word	0x200027b4

08009ea4 <USBD_COMPOSITE_GetDeviceQualifierDesc>:
 8009ea4:	b480      	push	{r7}
 8009ea6:	b083      	sub	sp, #12
 8009ea8:	af00      	add	r7, sp, #0
 8009eaa:	6078      	str	r0, [r7, #4]
 8009eac:	687b      	ldr	r3, [r7, #4]
 8009eae:	220a      	movs	r2, #10
 8009eb0:	801a      	strh	r2, [r3, #0]
 8009eb2:	4b03      	ldr	r3, [pc, #12]	@ (8009ec0 <USBD_COMPOSITE_GetDeviceQualifierDesc+0x1c>)
 8009eb4:	4618      	mov	r0, r3
 8009eb6:	370c      	adds	r7, #12
 8009eb8:	46bd      	mov	sp, r7
 8009eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ebe:	4770      	bx	lr
 8009ec0:	200001d0 	.word	0x200001d0

08009ec4 <USBD_COMPOSITE_GetUsrStringDesc>:
 8009ec4:	b580      	push	{r7, lr}
 8009ec6:	b08a      	sub	sp, #40	@ 0x28
 8009ec8:	af00      	add	r7, sp, #0
 8009eca:	60f8      	str	r0, [r7, #12]
 8009ecc:	460b      	mov	r3, r1
 8009ece:	607a      	str	r2, [r7, #4]
 8009ed0:	72fb      	strb	r3, [r7, #11]
 8009ed2:	4b20      	ldr	r3, [pc, #128]	@ (8009f54 <USBD_COMPOSITE_GetUsrStringDesc+0x90>)
 8009ed4:	781b      	ldrb	r3, [r3, #0]
 8009ed6:	7afa      	ldrb	r2, [r7, #11]
 8009ed8:	429a      	cmp	r2, r3
 8009eda:	d835      	bhi.n	8009f48 <USBD_COMPOSITE_GetUsrStringDesc+0x84>
 8009edc:	f107 0314 	add.w	r3, r7, #20
 8009ee0:	2200      	movs	r2, #0
 8009ee2:	601a      	str	r2, [r3, #0]
 8009ee4:	605a      	str	r2, [r3, #4]
 8009ee6:	609a      	str	r2, [r3, #8]
 8009ee8:	60da      	str	r2, [r3, #12]
 8009eea:	2300      	movs	r3, #0
 8009eec:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8009ef0:	e01a      	b.n	8009f28 <USBD_COMPOSITE_GetUsrStringDesc+0x64>
 8009ef2:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8009ef6:	4a18      	ldr	r2, [pc, #96]	@ (8009f58 <USBD_COMPOSITE_GetUsrStringDesc+0x94>)
 8009ef8:	5cd3      	ldrb	r3, [r2, r3]
 8009efa:	7afa      	ldrb	r2, [r7, #11]
 8009efc:	429a      	cmp	r2, r3
 8009efe:	d10e      	bne.n	8009f1e <USBD_COMPOSITE_GetUsrStringDesc+0x5a>
 8009f00:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8009f04:	f107 0014 	add.w	r0, r7, #20
 8009f08:	4a14      	ldr	r2, [pc, #80]	@ (8009f5c <USBD_COMPOSITE_GetUsrStringDesc+0x98>)
 8009f0a:	2110      	movs	r1, #16
 8009f0c:	f002 f8bc 	bl	800c088 <sniprintf>
 8009f10:	f107 0314 	add.w	r3, r7, #20
 8009f14:	687a      	ldr	r2, [r7, #4]
 8009f16:	4912      	ldr	r1, [pc, #72]	@ (8009f60 <USBD_COMPOSITE_GetUsrStringDesc+0x9c>)
 8009f18:	4618      	mov	r0, r3
 8009f1a:	f001 fcf4 	bl	800b906 <USBD_GetString>
 8009f1e:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8009f22:	3301      	adds	r3, #1
 8009f24:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8009f28:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8009f2c:	2b00      	cmp	r3, #0
 8009f2e:	d0e0      	beq.n	8009ef2 <USBD_COMPOSITE_GetUsrStringDesc+0x2e>
 8009f30:	4b0c      	ldr	r3, [pc, #48]	@ (8009f64 <USBD_COMPOSITE_GetUsrStringDesc+0xa0>)
 8009f32:	781b      	ldrb	r3, [r3, #0]
 8009f34:	7afa      	ldrb	r2, [r7, #11]
 8009f36:	429a      	cmp	r2, r3
 8009f38:	d104      	bne.n	8009f44 <USBD_COMPOSITE_GetUsrStringDesc+0x80>
 8009f3a:	687a      	ldr	r2, [r7, #4]
 8009f3c:	4908      	ldr	r1, [pc, #32]	@ (8009f60 <USBD_COMPOSITE_GetUsrStringDesc+0x9c>)
 8009f3e:	480a      	ldr	r0, [pc, #40]	@ (8009f68 <USBD_COMPOSITE_GetUsrStringDesc+0xa4>)
 8009f40:	f001 fce1 	bl	800b906 <USBD_GetString>
 8009f44:	4b06      	ldr	r3, [pc, #24]	@ (8009f60 <USBD_COMPOSITE_GetUsrStringDesc+0x9c>)
 8009f46:	e000      	b.n	8009f4a <USBD_COMPOSITE_GetUsrStringDesc+0x86>
 8009f48:	2300      	movs	r3, #0
 8009f4a:	4618      	mov	r0, r3
 8009f4c:	3728      	adds	r7, #40	@ 0x28
 8009f4e:	46bd      	mov	sp, r7
 8009f50:	bd80      	pop	{r7, pc}
 8009f52:	bf00      	nop
 8009f54:	200001cc 	.word	0x200001cc
 8009f58:	20002528 	.word	0x20002528
 8009f5c:	0800ca44 	.word	0x0800ca44
 8009f60:	20002820 	.word	0x20002820
 8009f64:	20002861 	.word	0x20002861
 8009f68:	0800ca54 	.word	0x0800ca54

08009f6c <USBD_COMPOSITE_Mount_Class>:
 8009f6c:	b590      	push	{r4, r7, lr}
 8009f6e:	b089      	sub	sp, #36	@ 0x24
 8009f70:	af04      	add	r7, sp, #16
 8009f72:	2300      	movs	r3, #0
 8009f74:	80bb      	strh	r3, [r7, #4]
 8009f76:	2300      	movs	r3, #0
 8009f78:	60fb      	str	r3, [r7, #12]
 8009f7a:	2381      	movs	r3, #129	@ 0x81
 8009f7c:	72fb      	strb	r3, [r7, #11]
 8009f7e:	2301      	movs	r3, #1
 8009f80:	72bb      	strb	r3, [r7, #10]
 8009f82:	2300      	movs	r3, #0
 8009f84:	727b      	strb	r3, [r7, #9]
 8009f86:	4b74      	ldr	r3, [pc, #464]	@ (800a158 <USBD_COMPOSITE_Mount_Class+0x1ec>)
 8009f88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009f8a:	1d3a      	adds	r2, r7, #4
 8009f8c:	4610      	mov	r0, r2
 8009f8e:	4798      	blx	r3
 8009f90:	60f8      	str	r0, [r7, #12]
 8009f92:	4b72      	ldr	r3, [pc, #456]	@ (800a15c <USBD_COMPOSITE_Mount_Class+0x1f0>)
 8009f94:	781b      	ldrb	r3, [r3, #0]
 8009f96:	7ab8      	ldrb	r0, [r7, #10]
 8009f98:	7afa      	ldrb	r2, [r7, #11]
 8009f9a:	7a79      	ldrb	r1, [r7, #9]
 8009f9c:	9300      	str	r3, [sp, #0]
 8009f9e:	4603      	mov	r3, r0
 8009fa0:	68f8      	ldr	r0, [r7, #12]
 8009fa2:	f000 fbcf 	bl	800a744 <USBD_Update_HID_Custom_DESC>
 8009fa6:	68fb      	ldr	r3, [r7, #12]
 8009fa8:	3309      	adds	r3, #9
 8009faa:	88ba      	ldrh	r2, [r7, #4]
 8009fac:	3a09      	subs	r2, #9
 8009fae:	4619      	mov	r1, r3
 8009fb0:	486b      	ldr	r0, [pc, #428]	@ (800a160 <USBD_COMPOSITE_Mount_Class+0x1f4>)
 8009fb2:	f002 f8d3 	bl	800c15c <memcpy>
 8009fb6:	4b68      	ldr	r3, [pc, #416]	@ (800a158 <USBD_COMPOSITE_Mount_Class+0x1ec>)
 8009fb8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009fba:	1d3a      	adds	r2, r7, #4
 8009fbc:	4610      	mov	r0, r2
 8009fbe:	4798      	blx	r3
 8009fc0:	60f8      	str	r0, [r7, #12]
 8009fc2:	4b66      	ldr	r3, [pc, #408]	@ (800a15c <USBD_COMPOSITE_Mount_Class+0x1f0>)
 8009fc4:	781b      	ldrb	r3, [r3, #0]
 8009fc6:	7ab8      	ldrb	r0, [r7, #10]
 8009fc8:	7afa      	ldrb	r2, [r7, #11]
 8009fca:	7a79      	ldrb	r1, [r7, #9]
 8009fcc:	9300      	str	r3, [sp, #0]
 8009fce:	4603      	mov	r3, r0
 8009fd0:	68f8      	ldr	r0, [r7, #12]
 8009fd2:	f000 fbb7 	bl	800a744 <USBD_Update_HID_Custom_DESC>
 8009fd6:	68fb      	ldr	r3, [r7, #12]
 8009fd8:	3309      	adds	r3, #9
 8009fda:	88ba      	ldrh	r2, [r7, #4]
 8009fdc:	3a09      	subs	r2, #9
 8009fde:	4619      	mov	r1, r3
 8009fe0:	4860      	ldr	r0, [pc, #384]	@ (800a164 <USBD_COMPOSITE_Mount_Class+0x1f8>)
 8009fe2:	f002 f8bb 	bl	800c15c <memcpy>
 8009fe6:	7afb      	ldrb	r3, [r7, #11]
 8009fe8:	3301      	adds	r3, #1
 8009fea:	72fb      	strb	r3, [r7, #11]
 8009fec:	7abb      	ldrb	r3, [r7, #10]
 8009fee:	3301      	adds	r3, #1
 8009ff0:	72bb      	strb	r3, [r7, #10]
 8009ff2:	7a7b      	ldrb	r3, [r7, #9]
 8009ff4:	3301      	adds	r3, #1
 8009ff6:	727b      	strb	r3, [r7, #9]
 8009ff8:	4b58      	ldr	r3, [pc, #352]	@ (800a15c <USBD_COMPOSITE_Mount_Class+0x1f0>)
 8009ffa:	781b      	ldrb	r3, [r3, #0]
 8009ffc:	3301      	adds	r3, #1
 8009ffe:	b2da      	uxtb	r2, r3
 800a000:	4b56      	ldr	r3, [pc, #344]	@ (800a15c <USBD_COMPOSITE_Mount_Class+0x1f0>)
 800a002:	701a      	strb	r2, [r3, #0]
 800a004:	4b58      	ldr	r3, [pc, #352]	@ (800a168 <USBD_COMPOSITE_Mount_Class+0x1fc>)
 800a006:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a008:	1d3a      	adds	r2, r7, #4
 800a00a:	4610      	mov	r0, r2
 800a00c:	4798      	blx	r3
 800a00e:	60f8      	str	r0, [r7, #12]
 800a010:	7a7b      	ldrb	r3, [r7, #9]
 800a012:	3301      	adds	r3, #1
 800a014:	b2d8      	uxtb	r0, r3
 800a016:	7afb      	ldrb	r3, [r7, #11]
 800a018:	3301      	adds	r3, #1
 800a01a:	b2db      	uxtb	r3, r3
 800a01c:	4a4f      	ldr	r2, [pc, #316]	@ (800a15c <USBD_COMPOSITE_Mount_Class+0x1f0>)
 800a01e:	7812      	ldrb	r2, [r2, #0]
 800a020:	7afc      	ldrb	r4, [r7, #11]
 800a022:	7a79      	ldrb	r1, [r7, #9]
 800a024:	9202      	str	r2, [sp, #8]
 800a026:	7aba      	ldrb	r2, [r7, #10]
 800a028:	9201      	str	r2, [sp, #4]
 800a02a:	9300      	str	r3, [sp, #0]
 800a02c:	4623      	mov	r3, r4
 800a02e:	4602      	mov	r2, r0
 800a030:	68f8      	ldr	r0, [r7, #12]
 800a032:	f7ff fd43 	bl	8009abc <USBD_Update_CDC_ACM_DESC>
 800a036:	68fb      	ldr	r3, [r7, #12]
 800a038:	3309      	adds	r3, #9
 800a03a:	88ba      	ldrh	r2, [r7, #4]
 800a03c:	3a09      	subs	r2, #9
 800a03e:	4619      	mov	r1, r3
 800a040:	484a      	ldr	r0, [pc, #296]	@ (800a16c <USBD_COMPOSITE_Mount_Class+0x200>)
 800a042:	f002 f88b 	bl	800c15c <memcpy>
 800a046:	4b48      	ldr	r3, [pc, #288]	@ (800a168 <USBD_COMPOSITE_Mount_Class+0x1fc>)
 800a048:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a04a:	1d3a      	adds	r2, r7, #4
 800a04c:	4610      	mov	r0, r2
 800a04e:	4798      	blx	r3
 800a050:	60f8      	str	r0, [r7, #12]
 800a052:	7a7b      	ldrb	r3, [r7, #9]
 800a054:	3301      	adds	r3, #1
 800a056:	b2d8      	uxtb	r0, r3
 800a058:	7afb      	ldrb	r3, [r7, #11]
 800a05a:	3301      	adds	r3, #1
 800a05c:	b2db      	uxtb	r3, r3
 800a05e:	4a3f      	ldr	r2, [pc, #252]	@ (800a15c <USBD_COMPOSITE_Mount_Class+0x1f0>)
 800a060:	7812      	ldrb	r2, [r2, #0]
 800a062:	7afc      	ldrb	r4, [r7, #11]
 800a064:	7a79      	ldrb	r1, [r7, #9]
 800a066:	9202      	str	r2, [sp, #8]
 800a068:	7aba      	ldrb	r2, [r7, #10]
 800a06a:	9201      	str	r2, [sp, #4]
 800a06c:	9300      	str	r3, [sp, #0]
 800a06e:	4623      	mov	r3, r4
 800a070:	4602      	mov	r2, r0
 800a072:	68f8      	ldr	r0, [r7, #12]
 800a074:	f7ff fd22 	bl	8009abc <USBD_Update_CDC_ACM_DESC>
 800a078:	68fb      	ldr	r3, [r7, #12]
 800a07a:	3309      	adds	r3, #9
 800a07c:	88ba      	ldrh	r2, [r7, #4]
 800a07e:	3a09      	subs	r2, #9
 800a080:	4619      	mov	r1, r3
 800a082:	483b      	ldr	r0, [pc, #236]	@ (800a170 <USBD_COMPOSITE_Mount_Class+0x204>)
 800a084:	f002 f86a 	bl	800c15c <memcpy>
 800a088:	7afb      	ldrb	r3, [r7, #11]
 800a08a:	3302      	adds	r3, #2
 800a08c:	72fb      	strb	r3, [r7, #11]
 800a08e:	7abb      	ldrb	r3, [r7, #10]
 800a090:	3301      	adds	r3, #1
 800a092:	72bb      	strb	r3, [r7, #10]
 800a094:	7a7b      	ldrb	r3, [r7, #9]
 800a096:	3302      	adds	r3, #2
 800a098:	727b      	strb	r3, [r7, #9]
 800a09a:	4b30      	ldr	r3, [pc, #192]	@ (800a15c <USBD_COMPOSITE_Mount_Class+0x1f0>)
 800a09c:	781b      	ldrb	r3, [r3, #0]
 800a09e:	3301      	adds	r3, #1
 800a0a0:	b2da      	uxtb	r2, r3
 800a0a2:	4b2e      	ldr	r3, [pc, #184]	@ (800a15c <USBD_COMPOSITE_Mount_Class+0x1f0>)
 800a0a4:	701a      	strb	r2, [r3, #0]
 800a0a6:	236b      	movs	r3, #107	@ 0x6b
 800a0a8:	80fb      	strh	r3, [r7, #6]
 800a0aa:	4b32      	ldr	r3, [pc, #200]	@ (800a174 <USBD_COMPOSITE_Mount_Class+0x208>)
 800a0ac:	60fb      	str	r3, [r7, #12]
 800a0ae:	68fb      	ldr	r3, [r7, #12]
 800a0b0:	2209      	movs	r2, #9
 800a0b2:	701a      	strb	r2, [r3, #0]
 800a0b4:	68fb      	ldr	r3, [r7, #12]
 800a0b6:	3301      	adds	r3, #1
 800a0b8:	2202      	movs	r2, #2
 800a0ba:	701a      	strb	r2, [r3, #0]
 800a0bc:	68fb      	ldr	r3, [r7, #12]
 800a0be:	3302      	adds	r3, #2
 800a0c0:	88fa      	ldrh	r2, [r7, #6]
 800a0c2:	b2d2      	uxtb	r2, r2
 800a0c4:	701a      	strb	r2, [r3, #0]
 800a0c6:	88fb      	ldrh	r3, [r7, #6]
 800a0c8:	0a1b      	lsrs	r3, r3, #8
 800a0ca:	b29a      	uxth	r2, r3
 800a0cc:	68fb      	ldr	r3, [r7, #12]
 800a0ce:	3303      	adds	r3, #3
 800a0d0:	b2d2      	uxtb	r2, r2
 800a0d2:	701a      	strb	r2, [r3, #0]
 800a0d4:	68fb      	ldr	r3, [r7, #12]
 800a0d6:	3304      	adds	r3, #4
 800a0d8:	7a7a      	ldrb	r2, [r7, #9]
 800a0da:	701a      	strb	r2, [r3, #0]
 800a0dc:	68fb      	ldr	r3, [r7, #12]
 800a0de:	3305      	adds	r3, #5
 800a0e0:	2201      	movs	r2, #1
 800a0e2:	701a      	strb	r2, [r3, #0]
 800a0e4:	68fb      	ldr	r3, [r7, #12]
 800a0e6:	3306      	adds	r3, #6
 800a0e8:	2200      	movs	r2, #0
 800a0ea:	701a      	strb	r2, [r3, #0]
 800a0ec:	68fb      	ldr	r3, [r7, #12]
 800a0ee:	3307      	adds	r3, #7
 800a0f0:	22c0      	movs	r2, #192	@ 0xc0
 800a0f2:	701a      	strb	r2, [r3, #0]
 800a0f4:	68fb      	ldr	r3, [r7, #12]
 800a0f6:	3308      	adds	r3, #8
 800a0f8:	2232      	movs	r2, #50	@ 0x32
 800a0fa:	701a      	strb	r2, [r3, #0]
 800a0fc:	4b1e      	ldr	r3, [pc, #120]	@ (800a178 <USBD_COMPOSITE_Mount_Class+0x20c>)
 800a0fe:	60fb      	str	r3, [r7, #12]
 800a100:	68fb      	ldr	r3, [r7, #12]
 800a102:	2209      	movs	r2, #9
 800a104:	701a      	strb	r2, [r3, #0]
 800a106:	68fb      	ldr	r3, [r7, #12]
 800a108:	3301      	adds	r3, #1
 800a10a:	2202      	movs	r2, #2
 800a10c:	701a      	strb	r2, [r3, #0]
 800a10e:	68fb      	ldr	r3, [r7, #12]
 800a110:	3302      	adds	r3, #2
 800a112:	88fa      	ldrh	r2, [r7, #6]
 800a114:	b2d2      	uxtb	r2, r2
 800a116:	701a      	strb	r2, [r3, #0]
 800a118:	88fb      	ldrh	r3, [r7, #6]
 800a11a:	0a1b      	lsrs	r3, r3, #8
 800a11c:	b29a      	uxth	r2, r3
 800a11e:	68fb      	ldr	r3, [r7, #12]
 800a120:	3303      	adds	r3, #3
 800a122:	b2d2      	uxtb	r2, r2
 800a124:	701a      	strb	r2, [r3, #0]
 800a126:	68fb      	ldr	r3, [r7, #12]
 800a128:	3304      	adds	r3, #4
 800a12a:	7a7a      	ldrb	r2, [r7, #9]
 800a12c:	701a      	strb	r2, [r3, #0]
 800a12e:	68fb      	ldr	r3, [r7, #12]
 800a130:	3305      	adds	r3, #5
 800a132:	2201      	movs	r2, #1
 800a134:	701a      	strb	r2, [r3, #0]
 800a136:	68fb      	ldr	r3, [r7, #12]
 800a138:	3306      	adds	r3, #6
 800a13a:	2200      	movs	r2, #0
 800a13c:	701a      	strb	r2, [r3, #0]
 800a13e:	68fb      	ldr	r3, [r7, #12]
 800a140:	3307      	adds	r3, #7
 800a142:	22c0      	movs	r2, #192	@ 0xc0
 800a144:	701a      	strb	r2, [r3, #0]
 800a146:	68fb      	ldr	r3, [r7, #12]
 800a148:	3308      	adds	r3, #8
 800a14a:	2232      	movs	r2, #50	@ 0x32
 800a14c:	701a      	strb	r2, [r3, #0]
 800a14e:	bf00      	nop
 800a150:	3714      	adds	r7, #20
 800a152:	46bd      	mov	sp, r7
 800a154:	bd90      	pop	{r4, r7, pc}
 800a156:	bf00      	nop
 800a158:	200001dc 	.word	0x200001dc
 800a15c:	200001cc 	.word	0x200001cc
 800a160:	20002751 	.word	0x20002751
 800a164:	200027bd 	.word	0x200027bd
 800a168:	200000bc 	.word	0x200000bc
 800a16c:	20002771 	.word	0x20002771
 800a170:	200027dd 	.word	0x200027dd
 800a174:	200027b4 	.word	0x200027b4
 800a178:	20002748 	.word	0x20002748

0800a17c <USBD_CUSTOM_HID_Init>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t USBD_CUSTOM_HID_Init(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800a17c:	b580      	push	{r7, lr}
 800a17e:	b084      	sub	sp, #16
 800a180:	af00      	add	r7, sp, #0
 800a182:	6078      	str	r0, [r7, #4]
 800a184:	460b      	mov	r3, r1
 800a186:	70fb      	strb	r3, [r7, #3]
  UNUSED(cfgidx);
  USBD_CUSTOM_HID_HandleTypeDef *hhid;

  hhid = &CUSTOM_HID_Instance;
 800a188:	4b43      	ldr	r3, [pc, #268]	@ (800a298 <USBD_CUSTOM_HID_Init+0x11c>)
 800a18a:	60fb      	str	r3, [r7, #12]

  if (hhid == NULL)
 800a18c:	68fb      	ldr	r3, [r7, #12]
 800a18e:	2b00      	cmp	r3, #0
 800a190:	d105      	bne.n	800a19e <USBD_CUSTOM_HID_Init+0x22>
  {
    pdev->pClassData_HID_Custom = NULL;
 800a192:	687b      	ldr	r3, [r7, #4]
 800a194:	2200      	movs	r2, #0
 800a196:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
    return (uint8_t)USBD_EMEM;
 800a19a:	2302      	movs	r3, #2
 800a19c:	e078      	b.n	800a290 <USBD_CUSTOM_HID_Init+0x114>
  }

  pdev->pClassData_HID_Custom = (void *)hhid;
 800a19e:	687b      	ldr	r3, [r7, #4]
 800a1a0:	68fa      	ldr	r2, [r7, #12]
 800a1a2:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a1a6:	687b      	ldr	r3, [r7, #4]
 800a1a8:	7c1b      	ldrb	r3, [r3, #16]
 800a1aa:	2b00      	cmp	r3, #0
 800a1ac:	d11b      	bne.n	800a1e6 <USBD_CUSTOM_HID_Init+0x6a>
  {
    pdev->ep_in[CUSTOM_HID_IN_EP & 0xFU].bInterval = CUSTOM_HID_HS_BINTERVAL;
 800a1ae:	4b3b      	ldr	r3, [pc, #236]	@ (800a29c <USBD_CUSTOM_HID_Init+0x120>)
 800a1b0:	781b      	ldrb	r3, [r3, #0]
 800a1b2:	f003 020f 	and.w	r2, r3, #15
 800a1b6:	6879      	ldr	r1, [r7, #4]
 800a1b8:	4613      	mov	r3, r2
 800a1ba:	009b      	lsls	r3, r3, #2
 800a1bc:	4413      	add	r3, r2
 800a1be:	009b      	lsls	r3, r3, #2
 800a1c0:	440b      	add	r3, r1
 800a1c2:	3326      	adds	r3, #38	@ 0x26
 800a1c4:	2205      	movs	r2, #5
 800a1c6:	801a      	strh	r2, [r3, #0]
    pdev->ep_out[CUSTOM_HID_OUT_EP & 0xFU].bInterval = CUSTOM_HID_HS_BINTERVAL;
 800a1c8:	4b35      	ldr	r3, [pc, #212]	@ (800a2a0 <USBD_CUSTOM_HID_Init+0x124>)
 800a1ca:	781b      	ldrb	r3, [r3, #0]
 800a1cc:	f003 020f 	and.w	r2, r3, #15
 800a1d0:	6879      	ldr	r1, [r7, #4]
 800a1d2:	4613      	mov	r3, r2
 800a1d4:	009b      	lsls	r3, r3, #2
 800a1d6:	4413      	add	r3, r2
 800a1d8:	009b      	lsls	r3, r3, #2
 800a1da:	440b      	add	r3, r1
 800a1dc:	f503 73b3 	add.w	r3, r3, #358	@ 0x166
 800a1e0:	2205      	movs	r2, #5
 800a1e2:	801a      	strh	r2, [r3, #0]
 800a1e4:	e01a      	b.n	800a21c <USBD_CUSTOM_HID_Init+0xa0>
  }
  else /* LOW and FULL-speed endpoints */
  {
    pdev->ep_in[CUSTOM_HID_IN_EP & 0xFU].bInterval = CUSTOM_HID_FS_BINTERVAL;
 800a1e6:	4b2d      	ldr	r3, [pc, #180]	@ (800a29c <USBD_CUSTOM_HID_Init+0x120>)
 800a1e8:	781b      	ldrb	r3, [r3, #0]
 800a1ea:	f003 020f 	and.w	r2, r3, #15
 800a1ee:	6879      	ldr	r1, [r7, #4]
 800a1f0:	4613      	mov	r3, r2
 800a1f2:	009b      	lsls	r3, r3, #2
 800a1f4:	4413      	add	r3, r2
 800a1f6:	009b      	lsls	r3, r3, #2
 800a1f8:	440b      	add	r3, r1
 800a1fa:	3326      	adds	r3, #38	@ 0x26
 800a1fc:	2201      	movs	r2, #1
 800a1fe:	801a      	strh	r2, [r3, #0]
    pdev->ep_out[CUSTOM_HID_OUT_EP & 0xFU].bInterval = CUSTOM_HID_FS_BINTERVAL;
 800a200:	4b27      	ldr	r3, [pc, #156]	@ (800a2a0 <USBD_CUSTOM_HID_Init+0x124>)
 800a202:	781b      	ldrb	r3, [r3, #0]
 800a204:	f003 020f 	and.w	r2, r3, #15
 800a208:	6879      	ldr	r1, [r7, #4]
 800a20a:	4613      	mov	r3, r2
 800a20c:	009b      	lsls	r3, r3, #2
 800a20e:	4413      	add	r3, r2
 800a210:	009b      	lsls	r3, r3, #2
 800a212:	440b      	add	r3, r1
 800a214:	f503 73b3 	add.w	r3, r3, #358	@ 0x166
 800a218:	2201      	movs	r2, #1
 800a21a:	801a      	strh	r2, [r3, #0]
  }

  /* Open EP IN */
  (void)USBD_LL_OpenEP(pdev, CUSTOM_HID_IN_EP, USBD_EP_TYPE_INTR,
 800a21c:	4b1f      	ldr	r3, [pc, #124]	@ (800a29c <USBD_CUSTOM_HID_Init+0x120>)
 800a21e:	7819      	ldrb	r1, [r3, #0]
 800a220:	2340      	movs	r3, #64	@ 0x40
 800a222:	2203      	movs	r2, #3
 800a224:	6878      	ldr	r0, [r7, #4]
 800a226:	f001 fde0 	bl	800bdea <USBD_LL_OpenEP>
                       CUSTOM_HID_EPIN_SIZE);

  pdev->ep_in[CUSTOM_HID_IN_EP & 0xFU].is_used = 1U;
 800a22a:	4b1c      	ldr	r3, [pc, #112]	@ (800a29c <USBD_CUSTOM_HID_Init+0x120>)
 800a22c:	781b      	ldrb	r3, [r3, #0]
 800a22e:	f003 020f 	and.w	r2, r3, #15
 800a232:	6879      	ldr	r1, [r7, #4]
 800a234:	4613      	mov	r3, r2
 800a236:	009b      	lsls	r3, r3, #2
 800a238:	4413      	add	r3, r2
 800a23a:	009b      	lsls	r3, r3, #2
 800a23c:	440b      	add	r3, r1
 800a23e:	3324      	adds	r3, #36	@ 0x24
 800a240:	2201      	movs	r2, #1
 800a242:	801a      	strh	r2, [r3, #0]

  /* Open EP OUT */
  (void)USBD_LL_OpenEP(pdev, CUSTOM_HID_OUT_EP, USBD_EP_TYPE_INTR,
 800a244:	4b16      	ldr	r3, [pc, #88]	@ (800a2a0 <USBD_CUSTOM_HID_Init+0x124>)
 800a246:	7819      	ldrb	r1, [r3, #0]
 800a248:	2340      	movs	r3, #64	@ 0x40
 800a24a:	2203      	movs	r2, #3
 800a24c:	6878      	ldr	r0, [r7, #4]
 800a24e:	f001 fdcc 	bl	800bdea <USBD_LL_OpenEP>
                       CUSTOM_HID_EPOUT_SIZE);

  pdev->ep_out[CUSTOM_HID_OUT_EP & 0xFU].is_used = 1U;
 800a252:	4b13      	ldr	r3, [pc, #76]	@ (800a2a0 <USBD_CUSTOM_HID_Init+0x124>)
 800a254:	781b      	ldrb	r3, [r3, #0]
 800a256:	f003 020f 	and.w	r2, r3, #15
 800a25a:	6879      	ldr	r1, [r7, #4]
 800a25c:	4613      	mov	r3, r2
 800a25e:	009b      	lsls	r3, r3, #2
 800a260:	4413      	add	r3, r2
 800a262:	009b      	lsls	r3, r3, #2
 800a264:	440b      	add	r3, r1
 800a266:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 800a26a:	2201      	movs	r2, #1
 800a26c:	801a      	strh	r2, [r3, #0]

  hhid->state = CUSTOM_HID_IDLE;
 800a26e:	68fb      	ldr	r3, [r7, #12]
 800a270:	2200      	movs	r2, #0
 800a272:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData_HID_Custom)->Init();
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	f8d3 32dc 	ldr.w	r3, [r3, #732]	@ 0x2dc
 800a27c:	685b      	ldr	r3, [r3, #4]
 800a27e:	4798      	blx	r3

  /* Prepare Out endpoint to receive 1st packet */
  (void)USBD_LL_PrepareReceive(pdev, CUSTOM_HID_OUT_EP, hhid->Report_buf,
 800a280:	4b07      	ldr	r3, [pc, #28]	@ (800a2a0 <USBD_CUSTOM_HID_Init+0x124>)
 800a282:	7819      	ldrb	r1, [r3, #0]
 800a284:	68fa      	ldr	r2, [r7, #12]
 800a286:	2340      	movs	r3, #64	@ 0x40
 800a288:	6878      	ldr	r0, [r7, #4]
 800a28a:	f001 fe9d 	bl	800bfc8 <USBD_LL_PrepareReceive>
                               USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);

  return (uint8_t)USBD_OK;
 800a28e:	2300      	movs	r3, #0
}
 800a290:	4618      	mov	r0, r3
 800a292:	3710      	adds	r7, #16
 800a294:	46bd      	mov	sp, r7
 800a296:	bd80      	pop	{r7, pc}
 800a298:	20002864 	.word	0x20002864
 800a29c:	200001da 	.word	0x200001da
 800a2a0:	200001db 	.word	0x200001db

0800a2a4 <USBD_CUSTOM_HID_DeInit>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t USBD_CUSTOM_HID_DeInit(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800a2a4:	b580      	push	{r7, lr}
 800a2a6:	b082      	sub	sp, #8
 800a2a8:	af00      	add	r7, sp, #0
 800a2aa:	6078      	str	r0, [r7, #4]
 800a2ac:	460b      	mov	r3, r1
 800a2ae:	70fb      	strb	r3, [r7, #3]
  UNUSED(cfgidx);

  /* Close CUSTOM_HID EP IN */
  (void)USBD_LL_CloseEP(pdev, CUSTOM_HID_IN_EP);
 800a2b0:	4b2a      	ldr	r3, [pc, #168]	@ (800a35c <USBD_CUSTOM_HID_DeInit+0xb8>)
 800a2b2:	781b      	ldrb	r3, [r3, #0]
 800a2b4:	4619      	mov	r1, r3
 800a2b6:	6878      	ldr	r0, [r7, #4]
 800a2b8:	f001 fdbd 	bl	800be36 <USBD_LL_CloseEP>
  pdev->ep_in[CUSTOM_HID_IN_EP & 0xFU].is_used = 0U;
 800a2bc:	4b27      	ldr	r3, [pc, #156]	@ (800a35c <USBD_CUSTOM_HID_DeInit+0xb8>)
 800a2be:	781b      	ldrb	r3, [r3, #0]
 800a2c0:	f003 020f 	and.w	r2, r3, #15
 800a2c4:	6879      	ldr	r1, [r7, #4]
 800a2c6:	4613      	mov	r3, r2
 800a2c8:	009b      	lsls	r3, r3, #2
 800a2ca:	4413      	add	r3, r2
 800a2cc:	009b      	lsls	r3, r3, #2
 800a2ce:	440b      	add	r3, r1
 800a2d0:	3324      	adds	r3, #36	@ 0x24
 800a2d2:	2200      	movs	r2, #0
 800a2d4:	801a      	strh	r2, [r3, #0]
  pdev->ep_in[CUSTOM_HID_IN_EP & 0xFU].bInterval = 0U;
 800a2d6:	4b21      	ldr	r3, [pc, #132]	@ (800a35c <USBD_CUSTOM_HID_DeInit+0xb8>)
 800a2d8:	781b      	ldrb	r3, [r3, #0]
 800a2da:	f003 020f 	and.w	r2, r3, #15
 800a2de:	6879      	ldr	r1, [r7, #4]
 800a2e0:	4613      	mov	r3, r2
 800a2e2:	009b      	lsls	r3, r3, #2
 800a2e4:	4413      	add	r3, r2
 800a2e6:	009b      	lsls	r3, r3, #2
 800a2e8:	440b      	add	r3, r1
 800a2ea:	3326      	adds	r3, #38	@ 0x26
 800a2ec:	2200      	movs	r2, #0
 800a2ee:	801a      	strh	r2, [r3, #0]

  /* Close CUSTOM_HID EP OUT */
  (void)USBD_LL_CloseEP(pdev, CUSTOM_HID_OUT_EP);
 800a2f0:	4b1b      	ldr	r3, [pc, #108]	@ (800a360 <USBD_CUSTOM_HID_DeInit+0xbc>)
 800a2f2:	781b      	ldrb	r3, [r3, #0]
 800a2f4:	4619      	mov	r1, r3
 800a2f6:	6878      	ldr	r0, [r7, #4]
 800a2f8:	f001 fd9d 	bl	800be36 <USBD_LL_CloseEP>
  pdev->ep_out[CUSTOM_HID_OUT_EP & 0xFU].is_used = 0U;
 800a2fc:	4b18      	ldr	r3, [pc, #96]	@ (800a360 <USBD_CUSTOM_HID_DeInit+0xbc>)
 800a2fe:	781b      	ldrb	r3, [r3, #0]
 800a300:	f003 020f 	and.w	r2, r3, #15
 800a304:	6879      	ldr	r1, [r7, #4]
 800a306:	4613      	mov	r3, r2
 800a308:	009b      	lsls	r3, r3, #2
 800a30a:	4413      	add	r3, r2
 800a30c:	009b      	lsls	r3, r3, #2
 800a30e:	440b      	add	r3, r1
 800a310:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 800a314:	2200      	movs	r2, #0
 800a316:	801a      	strh	r2, [r3, #0]
  pdev->ep_out[CUSTOM_HID_OUT_EP & 0xFU].bInterval = 0U;
 800a318:	4b11      	ldr	r3, [pc, #68]	@ (800a360 <USBD_CUSTOM_HID_DeInit+0xbc>)
 800a31a:	781b      	ldrb	r3, [r3, #0]
 800a31c:	f003 020f 	and.w	r2, r3, #15
 800a320:	6879      	ldr	r1, [r7, #4]
 800a322:	4613      	mov	r3, r2
 800a324:	009b      	lsls	r3, r3, #2
 800a326:	4413      	add	r3, r2
 800a328:	009b      	lsls	r3, r3, #2
 800a32a:	440b      	add	r3, r1
 800a32c:	f503 73b3 	add.w	r3, r3, #358	@ 0x166
 800a330:	2200      	movs	r2, #0
 800a332:	801a      	strh	r2, [r3, #0]

  /* Free allocated memory */
  if (pdev->pClassData_HID_Custom != NULL)
 800a334:	687b      	ldr	r3, [r7, #4]
 800a336:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 800a33a:	2b00      	cmp	r3, #0
 800a33c:	d008      	beq.n	800a350 <USBD_CUSTOM_HID_DeInit+0xac>
  {
    ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData_HID_Custom)->DeInit();
 800a33e:	687b      	ldr	r3, [r7, #4]
 800a340:	f8d3 32dc 	ldr.w	r3, [r3, #732]	@ 0x2dc
 800a344:	689b      	ldr	r3, [r3, #8]
 800a346:	4798      	blx	r3
#if (0)
    USBD_free(pdev->pClassData_HID_Custom);
#endif
    pdev->pClassData_HID_Custom = NULL;
 800a348:	687b      	ldr	r3, [r7, #4]
 800a34a:	2200      	movs	r2, #0
 800a34c:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
  }

  return (uint8_t)USBD_OK;
 800a350:	2300      	movs	r3, #0
}
 800a352:	4618      	mov	r0, r3
 800a354:	3708      	adds	r7, #8
 800a356:	46bd      	mov	sp, r7
 800a358:	bd80      	pop	{r7, pc}
 800a35a:	bf00      	nop
 800a35c:	200001da 	.word	0x200001da
 800a360:	200001db 	.word	0x200001db

0800a364 <USBD_CUSTOM_HID_Setup>:
  * @param  req: usb requests
  * @retval status
  */
static uint8_t USBD_CUSTOM_HID_Setup(USBD_HandleTypeDef *pdev,
                                     USBD_SetupReqTypedef *req)
{
 800a364:	b580      	push	{r7, lr}
 800a366:	b088      	sub	sp, #32
 800a368:	af00      	add	r7, sp, #0
 800a36a:	6078      	str	r0, [r7, #4]
 800a36c:	6039      	str	r1, [r7, #0]
  USBD_CUSTOM_HID_HandleTypeDef *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData_HID_Custom;
 800a36e:	687b      	ldr	r3, [r7, #4]
 800a370:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 800a374:	613b      	str	r3, [r7, #16]
  uint16_t len = 0U;
 800a376:	2300      	movs	r3, #0
 800a378:	83fb      	strh	r3, [r7, #30]
  uint8_t *pbuf = NULL;
 800a37a:	2300      	movs	r3, #0
 800a37c:	61bb      	str	r3, [r7, #24]
  uint16_t status_info = 0U;
 800a37e:	2300      	movs	r3, #0
 800a380:	81fb      	strh	r3, [r7, #14]
  USBD_StatusTypeDef ret = USBD_OK;
 800a382:	2300      	movs	r3, #0
 800a384:	75fb      	strb	r3, [r7, #23]

  if (hhid == NULL)
 800a386:	693b      	ldr	r3, [r7, #16]
 800a388:	2b00      	cmp	r3, #0
 800a38a:	d101      	bne.n	800a390 <USBD_CUSTOM_HID_Setup+0x2c>
  {
    return (uint8_t)USBD_FAIL;
 800a38c:	2303      	movs	r3, #3
 800a38e:	e0ed      	b.n	800a56c <USBD_CUSTOM_HID_Setup+0x208>
  }

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a390:	683b      	ldr	r3, [r7, #0]
 800a392:	781b      	ldrb	r3, [r3, #0]
 800a394:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800a398:	2b00      	cmp	r3, #0
 800a39a:	d052      	beq.n	800a442 <USBD_CUSTOM_HID_Setup+0xde>
 800a39c:	2b20      	cmp	r3, #32
 800a39e:	f040 80dd 	bne.w	800a55c <USBD_CUSTOM_HID_Setup+0x1f8>
  {
  case USB_REQ_TYPE_CLASS:
    switch (req->bRequest)
 800a3a2:	683b      	ldr	r3, [r7, #0]
 800a3a4:	785b      	ldrb	r3, [r3, #1]
 800a3a6:	3b02      	subs	r3, #2
 800a3a8:	2b09      	cmp	r3, #9
 800a3aa:	d842      	bhi.n	800a432 <USBD_CUSTOM_HID_Setup+0xce>
 800a3ac:	a201      	add	r2, pc, #4	@ (adr r2, 800a3b4 <USBD_CUSTOM_HID_Setup+0x50>)
 800a3ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a3b2:	bf00      	nop
 800a3b4:	0800a40d 	.word	0x0800a40d
 800a3b8:	0800a3eb 	.word	0x0800a3eb
 800a3bc:	0800a433 	.word	0x0800a433
 800a3c0:	0800a433 	.word	0x0800a433
 800a3c4:	0800a433 	.word	0x0800a433
 800a3c8:	0800a433 	.word	0x0800a433
 800a3cc:	0800a433 	.word	0x0800a433
 800a3d0:	0800a41d 	.word	0x0800a41d
 800a3d4:	0800a3fb 	.word	0x0800a3fb
 800a3d8:	0800a3dd 	.word	0x0800a3dd
    {
    case CUSTOM_HID_REQ_SET_PROTOCOL:
      hhid->Protocol = (uint8_t)(req->wValue);
 800a3dc:	683b      	ldr	r3, [r7, #0]
 800a3de:	885b      	ldrh	r3, [r3, #2]
 800a3e0:	b2db      	uxtb	r3, r3
 800a3e2:	461a      	mov	r2, r3
 800a3e4:	693b      	ldr	r3, [r7, #16]
 800a3e6:	641a      	str	r2, [r3, #64]	@ 0x40
      break;
 800a3e8:	e02a      	b.n	800a440 <USBD_CUSTOM_HID_Setup+0xdc>

    case CUSTOM_HID_REQ_GET_PROTOCOL:
      (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 800a3ea:	693b      	ldr	r3, [r7, #16]
 800a3ec:	3340      	adds	r3, #64	@ 0x40
 800a3ee:	2201      	movs	r2, #1
 800a3f0:	4619      	mov	r1, r3
 800a3f2:	6878      	ldr	r0, [r7, #4]
 800a3f4:	f001 fae7 	bl	800b9c6 <USBD_CtlSendData>
      break;
 800a3f8:	e022      	b.n	800a440 <USBD_CUSTOM_HID_Setup+0xdc>

    case CUSTOM_HID_REQ_SET_IDLE:
      hhid->IdleState = (uint8_t)(req->wValue >> 8);
 800a3fa:	683b      	ldr	r3, [r7, #0]
 800a3fc:	885b      	ldrh	r3, [r3, #2]
 800a3fe:	0a1b      	lsrs	r3, r3, #8
 800a400:	b29b      	uxth	r3, r3
 800a402:	b2db      	uxtb	r3, r3
 800a404:	461a      	mov	r2, r3
 800a406:	693b      	ldr	r3, [r7, #16]
 800a408:	645a      	str	r2, [r3, #68]	@ 0x44
      break;
 800a40a:	e019      	b.n	800a440 <USBD_CUSTOM_HID_Setup+0xdc>

    case CUSTOM_HID_REQ_GET_IDLE:
      (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 800a40c:	693b      	ldr	r3, [r7, #16]
 800a40e:	3344      	adds	r3, #68	@ 0x44
 800a410:	2201      	movs	r2, #1
 800a412:	4619      	mov	r1, r3
 800a414:	6878      	ldr	r0, [r7, #4]
 800a416:	f001 fad6 	bl	800b9c6 <USBD_CtlSendData>
      break;
 800a41a:	e011      	b.n	800a440 <USBD_CUSTOM_HID_Setup+0xdc>

    case CUSTOM_HID_REQ_SET_REPORT:
      hhid->IsReportAvailable = 1U;
 800a41c:	693b      	ldr	r3, [r7, #16]
 800a41e:	2201      	movs	r2, #1
 800a420:	64da      	str	r2, [r3, #76]	@ 0x4c
      (void)USBD_CtlPrepareRx(pdev, hhid->Report_buf, req->wLength);
 800a422:	6939      	ldr	r1, [r7, #16]
 800a424:	683b      	ldr	r3, [r7, #0]
 800a426:	88db      	ldrh	r3, [r3, #6]
 800a428:	461a      	mov	r2, r3
 800a42a:	6878      	ldr	r0, [r7, #4]
 800a42c:	f001 faf7 	bl	800ba1e <USBD_CtlPrepareRx>
      break;
 800a430:	e006      	b.n	800a440 <USBD_CUSTOM_HID_Setup+0xdc>

    default:
      USBD_CtlError(pdev, req);
 800a432:	6839      	ldr	r1, [r7, #0]
 800a434:	6878      	ldr	r0, [r7, #4]
 800a436:	f001 fa55 	bl	800b8e4 <USBD_CtlError>
      ret = USBD_FAIL;
 800a43a:	2303      	movs	r3, #3
 800a43c:	75fb      	strb	r3, [r7, #23]
      break;
 800a43e:	bf00      	nop
    }
    break;
 800a440:	e093      	b.n	800a56a <USBD_CUSTOM_HID_Setup+0x206>

  case USB_REQ_TYPE_STANDARD:
    switch (req->bRequest)
 800a442:	683b      	ldr	r3, [r7, #0]
 800a444:	785b      	ldrb	r3, [r3, #1]
 800a446:	2b0b      	cmp	r3, #11
 800a448:	d87f      	bhi.n	800a54a <USBD_CUSTOM_HID_Setup+0x1e6>
 800a44a:	a201      	add	r2, pc, #4	@ (adr r2, 800a450 <USBD_CUSTOM_HID_Setup+0xec>)
 800a44c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a450:	0800a481 	.word	0x0800a481
 800a454:	0800a559 	.word	0x0800a559
 800a458:	0800a54b 	.word	0x0800a54b
 800a45c:	0800a54b 	.word	0x0800a54b
 800a460:	0800a54b 	.word	0x0800a54b
 800a464:	0800a54b 	.word	0x0800a54b
 800a468:	0800a4ab 	.word	0x0800a4ab
 800a46c:	0800a54b 	.word	0x0800a54b
 800a470:	0800a54b 	.word	0x0800a54b
 800a474:	0800a54b 	.word	0x0800a54b
 800a478:	0800a4f9 	.word	0x0800a4f9
 800a47c:	0800a523 	.word	0x0800a523
    {
    case USB_REQ_GET_STATUS:
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800a486:	b2db      	uxtb	r3, r3
 800a488:	2b03      	cmp	r3, #3
 800a48a:	d107      	bne.n	800a49c <USBD_CUSTOM_HID_Setup+0x138>
      {
        (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 800a48c:	f107 030e 	add.w	r3, r7, #14
 800a490:	2202      	movs	r2, #2
 800a492:	4619      	mov	r1, r3
 800a494:	6878      	ldr	r0, [r7, #4]
 800a496:	f001 fa96 	bl	800b9c6 <USBD_CtlSendData>
      else
      {
        USBD_CtlError(pdev, req);
        ret = USBD_FAIL;
      }
      break;
 800a49a:	e05e      	b.n	800a55a <USBD_CUSTOM_HID_Setup+0x1f6>
        USBD_CtlError(pdev, req);
 800a49c:	6839      	ldr	r1, [r7, #0]
 800a49e:	6878      	ldr	r0, [r7, #4]
 800a4a0:	f001 fa20 	bl	800b8e4 <USBD_CtlError>
        ret = USBD_FAIL;
 800a4a4:	2303      	movs	r3, #3
 800a4a6:	75fb      	strb	r3, [r7, #23]
      break;
 800a4a8:	e057      	b.n	800a55a <USBD_CUSTOM_HID_Setup+0x1f6>

    case USB_REQ_GET_DESCRIPTOR:
      if ((req->wValue >> 8) == CUSTOM_HID_REPORT_DESC)
 800a4aa:	683b      	ldr	r3, [r7, #0]
 800a4ac:	885b      	ldrh	r3, [r3, #2]
 800a4ae:	0a1b      	lsrs	r3, r3, #8
 800a4b0:	b29b      	uxth	r3, r3
 800a4b2:	2b22      	cmp	r3, #34	@ 0x22
 800a4b4:	d10b      	bne.n	800a4ce <USBD_CUSTOM_HID_Setup+0x16a>
      {
        len = MIN(USBD_CUSTOM_HID_REPORT_DESC_SIZE, req->wLength);
 800a4b6:	683b      	ldr	r3, [r7, #0]
 800a4b8:	88db      	ldrh	r3, [r3, #6]
 800a4ba:	2b21      	cmp	r3, #33	@ 0x21
 800a4bc:	bf28      	it	cs
 800a4be:	2321      	movcs	r3, #33	@ 0x21
 800a4c0:	83fb      	strh	r3, [r7, #30]
        pbuf = ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData_HID_Custom)->pReport;
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	f8d3 32dc 	ldr.w	r3, [r3, #732]	@ 0x2dc
 800a4c8:	681b      	ldr	r3, [r3, #0]
 800a4ca:	61bb      	str	r3, [r7, #24]
 800a4cc:	e00d      	b.n	800a4ea <USBD_CUSTOM_HID_Setup+0x186>
      }
      else
      {
        if ((req->wValue >> 8) == CUSTOM_HID_DESCRIPTOR_TYPE)
 800a4ce:	683b      	ldr	r3, [r7, #0]
 800a4d0:	885b      	ldrh	r3, [r3, #2]
 800a4d2:	0a1b      	lsrs	r3, r3, #8
 800a4d4:	b29b      	uxth	r3, r3
 800a4d6:	2b21      	cmp	r3, #33	@ 0x21
 800a4d8:	d107      	bne.n	800a4ea <USBD_CUSTOM_HID_Setup+0x186>
        {
          pbuf = USBD_CUSTOM_HID_Desc;
 800a4da:	4b26      	ldr	r3, [pc, #152]	@ (800a574 <USBD_CUSTOM_HID_Setup+0x210>)
 800a4dc:	61bb      	str	r3, [r7, #24]
          len = MIN(USB_CUSTOM_HID_DESC_SIZ, req->wLength);
 800a4de:	683b      	ldr	r3, [r7, #0]
 800a4e0:	88db      	ldrh	r3, [r3, #6]
 800a4e2:	2b09      	cmp	r3, #9
 800a4e4:	bf28      	it	cs
 800a4e6:	2309      	movcs	r3, #9
 800a4e8:	83fb      	strh	r3, [r7, #30]
        }
      }

      (void)USBD_CtlSendData(pdev, pbuf, len);
 800a4ea:	8bfb      	ldrh	r3, [r7, #30]
 800a4ec:	461a      	mov	r2, r3
 800a4ee:	69b9      	ldr	r1, [r7, #24]
 800a4f0:	6878      	ldr	r0, [r7, #4]
 800a4f2:	f001 fa68 	bl	800b9c6 <USBD_CtlSendData>
      break;
 800a4f6:	e030      	b.n	800a55a <USBD_CUSTOM_HID_Setup+0x1f6>

    case USB_REQ_GET_INTERFACE:
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a4f8:	687b      	ldr	r3, [r7, #4]
 800a4fa:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800a4fe:	b2db      	uxtb	r3, r3
 800a500:	2b03      	cmp	r3, #3
 800a502:	d107      	bne.n	800a514 <USBD_CUSTOM_HID_Setup+0x1b0>
      {
        (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 800a504:	693b      	ldr	r3, [r7, #16]
 800a506:	3348      	adds	r3, #72	@ 0x48
 800a508:	2201      	movs	r2, #1
 800a50a:	4619      	mov	r1, r3
 800a50c:	6878      	ldr	r0, [r7, #4]
 800a50e:	f001 fa5a 	bl	800b9c6 <USBD_CtlSendData>
      else
      {
        USBD_CtlError(pdev, req);
        ret = USBD_FAIL;
      }
      break;
 800a512:	e022      	b.n	800a55a <USBD_CUSTOM_HID_Setup+0x1f6>
        USBD_CtlError(pdev, req);
 800a514:	6839      	ldr	r1, [r7, #0]
 800a516:	6878      	ldr	r0, [r7, #4]
 800a518:	f001 f9e4 	bl	800b8e4 <USBD_CtlError>
        ret = USBD_FAIL;
 800a51c:	2303      	movs	r3, #3
 800a51e:	75fb      	strb	r3, [r7, #23]
      break;
 800a520:	e01b      	b.n	800a55a <USBD_CUSTOM_HID_Setup+0x1f6>

    case USB_REQ_SET_INTERFACE:
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a522:	687b      	ldr	r3, [r7, #4]
 800a524:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800a528:	b2db      	uxtb	r3, r3
 800a52a:	2b03      	cmp	r3, #3
 800a52c:	d106      	bne.n	800a53c <USBD_CUSTOM_HID_Setup+0x1d8>
      {
        hhid->AltSetting = (uint8_t)(req->wValue);
 800a52e:	683b      	ldr	r3, [r7, #0]
 800a530:	885b      	ldrh	r3, [r3, #2]
 800a532:	b2db      	uxtb	r3, r3
 800a534:	461a      	mov	r2, r3
 800a536:	693b      	ldr	r3, [r7, #16]
 800a538:	649a      	str	r2, [r3, #72]	@ 0x48
      else
      {
        USBD_CtlError(pdev, req);
        ret = USBD_FAIL;
      }
      break;
 800a53a:	e00e      	b.n	800a55a <USBD_CUSTOM_HID_Setup+0x1f6>
        USBD_CtlError(pdev, req);
 800a53c:	6839      	ldr	r1, [r7, #0]
 800a53e:	6878      	ldr	r0, [r7, #4]
 800a540:	f001 f9d0 	bl	800b8e4 <USBD_CtlError>
        ret = USBD_FAIL;
 800a544:	2303      	movs	r3, #3
 800a546:	75fb      	strb	r3, [r7, #23]
      break;
 800a548:	e007      	b.n	800a55a <USBD_CUSTOM_HID_Setup+0x1f6>

    case USB_REQ_CLEAR_FEATURE:
      break;

    default:
      USBD_CtlError(pdev, req);
 800a54a:	6839      	ldr	r1, [r7, #0]
 800a54c:	6878      	ldr	r0, [r7, #4]
 800a54e:	f001 f9c9 	bl	800b8e4 <USBD_CtlError>
      ret = USBD_FAIL;
 800a552:	2303      	movs	r3, #3
 800a554:	75fb      	strb	r3, [r7, #23]
      break;
 800a556:	e000      	b.n	800a55a <USBD_CUSTOM_HID_Setup+0x1f6>
      break;
 800a558:	bf00      	nop
    }
    break;
 800a55a:	e006      	b.n	800a56a <USBD_CUSTOM_HID_Setup+0x206>

  default:
    USBD_CtlError(pdev, req);
 800a55c:	6839      	ldr	r1, [r7, #0]
 800a55e:	6878      	ldr	r0, [r7, #4]
 800a560:	f001 f9c0 	bl	800b8e4 <USBD_CtlError>
    ret = USBD_FAIL;
 800a564:	2303      	movs	r3, #3
 800a566:	75fb      	strb	r3, [r7, #23]
    break;
 800a568:	bf00      	nop
  }
  return (uint8_t)ret;
 800a56a:	7dfb      	ldrb	r3, [r7, #23]
}
 800a56c:	4618      	mov	r0, r3
 800a56e:	3720      	adds	r7, #32
 800a570:	46bd      	mov	sp, r7
 800a572:	bd80      	pop	{r7, pc}
 800a574:	2000029c 	.word	0x2000029c

0800a578 <USBD_CUSTOM_HID_SendReport>:
  * @param  buff: pointer to report
  * @retval status
  */
uint8_t USBD_CUSTOM_HID_SendReport(USBD_HandleTypeDef *pdev,
                                   uint8_t *report, uint16_t len)
{
 800a578:	b580      	push	{r7, lr}
 800a57a:	b086      	sub	sp, #24
 800a57c:	af00      	add	r7, sp, #0
 800a57e:	60f8      	str	r0, [r7, #12]
 800a580:	60b9      	str	r1, [r7, #8]
 800a582:	4613      	mov	r3, r2
 800a584:	80fb      	strh	r3, [r7, #6]
  USBD_CUSTOM_HID_HandleTypeDef *hhid;

  if (pdev->pClassData_HID_Custom == NULL)
 800a586:	68fb      	ldr	r3, [r7, #12]
 800a588:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 800a58c:	2b00      	cmp	r3, #0
 800a58e:	d101      	bne.n	800a594 <USBD_CUSTOM_HID_SendReport+0x1c>
  {
    return (uint8_t)USBD_FAIL;
 800a590:	2303      	movs	r3, #3
 800a592:	e01d      	b.n	800a5d0 <USBD_CUSTOM_HID_SendReport+0x58>
  }

  hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData_HID_Custom;
 800a594:	68fb      	ldr	r3, [r7, #12]
 800a596:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 800a59a:	617b      	str	r3, [r7, #20]

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a59c:	68fb      	ldr	r3, [r7, #12]
 800a59e:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800a5a2:	b2db      	uxtb	r3, r3
 800a5a4:	2b03      	cmp	r3, #3
 800a5a6:	d112      	bne.n	800a5ce <USBD_CUSTOM_HID_SendReport+0x56>
  {
    if (hhid->state == CUSTOM_HID_IDLE)
 800a5a8:	697b      	ldr	r3, [r7, #20]
 800a5aa:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800a5ae:	2b00      	cmp	r3, #0
 800a5b0:	d10b      	bne.n	800a5ca <USBD_CUSTOM_HID_SendReport+0x52>
    {
      hhid->state = CUSTOM_HID_BUSY;
 800a5b2:	697b      	ldr	r3, [r7, #20]
 800a5b4:	2201      	movs	r2, #1
 800a5b6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
      (void)USBD_LL_Transmit(pdev, CUSTOM_HID_IN_EP, report, len);
 800a5ba:	4b07      	ldr	r3, [pc, #28]	@ (800a5d8 <USBD_CUSTOM_HID_SendReport+0x60>)
 800a5bc:	7819      	ldrb	r1, [r3, #0]
 800a5be:	88fb      	ldrh	r3, [r7, #6]
 800a5c0:	68ba      	ldr	r2, [r7, #8]
 800a5c2:	68f8      	ldr	r0, [r7, #12]
 800a5c4:	f001 fcdf 	bl	800bf86 <USBD_LL_Transmit>
 800a5c8:	e001      	b.n	800a5ce <USBD_CUSTOM_HID_SendReport+0x56>
    }
    else
    {
      return (uint8_t)USBD_BUSY;
 800a5ca:	2301      	movs	r3, #1
 800a5cc:	e000      	b.n	800a5d0 <USBD_CUSTOM_HID_SendReport+0x58>
    }
  }
  return (uint8_t)USBD_OK;
 800a5ce:	2300      	movs	r3, #0
}
 800a5d0:	4618      	mov	r0, r3
 800a5d2:	3718      	adds	r7, #24
 800a5d4:	46bd      	mov	sp, r7
 800a5d6:	bd80      	pop	{r7, pc}
 800a5d8:	200001da 	.word	0x200001da

0800a5dc <USBD_CUSTOM_HID_GetFSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CUSTOM_HID_GetFSCfgDesc(uint16_t *length)
{
 800a5dc:	b480      	push	{r7}
 800a5de:	b083      	sub	sp, #12
 800a5e0:	af00      	add	r7, sp, #0
 800a5e2:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CUSTOM_HID_CfgFSDesc);
 800a5e4:	687b      	ldr	r3, [r7, #4]
 800a5e6:	2229      	movs	r2, #41	@ 0x29
 800a5e8:	801a      	strh	r2, [r3, #0]

  return USBD_CUSTOM_HID_CfgFSDesc;
 800a5ea:	4b03      	ldr	r3, [pc, #12]	@ (800a5f8 <USBD_CUSTOM_HID_GetFSCfgDesc+0x1c>)
}
 800a5ec:	4618      	mov	r0, r3
 800a5ee:	370c      	adds	r7, #12
 800a5f0:	46bd      	mov	sp, r7
 800a5f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5f6:	4770      	bx	lr
 800a5f8:	20000218 	.word	0x20000218

0800a5fc <USBD_CUSTOM_HID_GetHSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CUSTOM_HID_GetHSCfgDesc(uint16_t *length)
{
 800a5fc:	b480      	push	{r7}
 800a5fe:	b083      	sub	sp, #12
 800a600:	af00      	add	r7, sp, #0
 800a602:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CUSTOM_HID_CfgHSDesc);
 800a604:	687b      	ldr	r3, [r7, #4]
 800a606:	2229      	movs	r2, #41	@ 0x29
 800a608:	801a      	strh	r2, [r3, #0]

  return USBD_CUSTOM_HID_CfgHSDesc;
 800a60a:	4b03      	ldr	r3, [pc, #12]	@ (800a618 <USBD_CUSTOM_HID_GetHSCfgDesc+0x1c>)
}
 800a60c:	4618      	mov	r0, r3
 800a60e:	370c      	adds	r7, #12
 800a610:	46bd      	mov	sp, r7
 800a612:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a616:	4770      	bx	lr
 800a618:	20000244 	.word	0x20000244

0800a61c <USBD_CUSTOM_HID_GetOtherSpeedCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CUSTOM_HID_GetOtherSpeedCfgDesc(uint16_t *length)
{
 800a61c:	b480      	push	{r7}
 800a61e:	b083      	sub	sp, #12
 800a620:	af00      	add	r7, sp, #0
 800a622:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CUSTOM_HID_OtherSpeedCfgDesc);
 800a624:	687b      	ldr	r3, [r7, #4]
 800a626:	2229      	movs	r2, #41	@ 0x29
 800a628:	801a      	strh	r2, [r3, #0]

  return USBD_CUSTOM_HID_OtherSpeedCfgDesc;
 800a62a:	4b03      	ldr	r3, [pc, #12]	@ (800a638 <USBD_CUSTOM_HID_GetOtherSpeedCfgDesc+0x1c>)
}
 800a62c:	4618      	mov	r0, r3
 800a62e:	370c      	adds	r7, #12
 800a630:	46bd      	mov	sp, r7
 800a632:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a636:	4770      	bx	lr
 800a638:	20000270 	.word	0x20000270

0800a63c <USBD_CUSTOM_HID_DataIn>:
  * @param  epnum: endpoint index
  * @retval status
  */

static uint8_t USBD_CUSTOM_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
 800a63c:	b480      	push	{r7}
 800a63e:	b083      	sub	sp, #12
 800a640:	af00      	add	r7, sp, #0
 800a642:	6078      	str	r0, [r7, #4]
 800a644:	460b      	mov	r3, r1
 800a646:	70fb      	strb	r3, [r7, #3]
  UNUSED(epnum);

  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData_HID_Custom)->state = CUSTOM_HID_IDLE;
 800a648:	687b      	ldr	r3, [r7, #4]
 800a64a:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 800a64e:	2200      	movs	r2, #0
 800a650:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 // HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6); // hoặc nháy LED nếu có
  return (uint8_t)USBD_OK;
 800a654:	2300      	movs	r3, #0
}
 800a656:	4618      	mov	r0, r3
 800a658:	370c      	adds	r7, #12
 800a65a:	46bd      	mov	sp, r7
 800a65c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a660:	4770      	bx	lr
	...

0800a664 <USBD_CUSTOM_HID_DataOut>:
  * @param  pdev: device instance
  * @param  epnum: endpoint index
  * @retval status
  */
static uint8_t USBD_CUSTOM_HID_DataOut(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
 800a664:	b580      	push	{r7, lr}
 800a666:	b084      	sub	sp, #16
 800a668:	af00      	add	r7, sp, #0
 800a66a:	6078      	str	r0, [r7, #4]
 800a66c:	460b      	mov	r3, r1
 800a66e:	70fb      	strb	r3, [r7, #3]
  UNUSED(epnum);
  USBD_CUSTOM_HID_HandleTypeDef *hhid;

  if (pdev->pClassData_HID_Custom == NULL)
 800a670:	687b      	ldr	r3, [r7, #4]
 800a672:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 800a676:	2b00      	cmp	r3, #0
 800a678:	d101      	bne.n	800a67e <USBD_CUSTOM_HID_DataOut+0x1a>
  {
    return (uint8_t)USBD_FAIL;
 800a67a:	2303      	movs	r3, #3
 800a67c:	e013      	b.n	800a6a6 <USBD_CUSTOM_HID_DataOut+0x42>
  }

  hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData_HID_Custom;
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 800a684:	60fb      	str	r3, [r7, #12]

  /* USB data will be immediately processed, this allow next USB traffic being
  NAKed till the end of the application processing */
  ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData_HID_Custom)->OutEvent(hhid->Report_buf, USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);
 800a686:	687b      	ldr	r3, [r7, #4]
 800a688:	f8d3 32dc 	ldr.w	r3, [r3, #732]	@ 0x2dc
 800a68c:	68db      	ldr	r3, [r3, #12]
 800a68e:	68fa      	ldr	r2, [r7, #12]
 800a690:	2140      	movs	r1, #64	@ 0x40
 800a692:	4610      	mov	r0, r2
 800a694:	4798      	blx	r3
 // HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_7);
  USBD_LL_PrepareReceive(pdev,CUSTOM_HID_OUT_EP,hhid->Report_buf,
 800a696:	4b06      	ldr	r3, [pc, #24]	@ (800a6b0 <USBD_CUSTOM_HID_DataOut+0x4c>)
 800a698:	7819      	ldrb	r1, [r3, #0]
 800a69a:	68fa      	ldr	r2, [r7, #12]
 800a69c:	2340      	movs	r3, #64	@ 0x40
 800a69e:	6878      	ldr	r0, [r7, #4]
 800a6a0:	f001 fc92 	bl	800bfc8 <USBD_LL_PrepareReceive>
                         USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);
  return (uint8_t)USBD_OK;
 800a6a4:	2300      	movs	r3, #0
}
 800a6a6:	4618      	mov	r0, r3
 800a6a8:	3710      	adds	r7, #16
 800a6aa:	46bd      	mov	sp, r7
 800a6ac:	bd80      	pop	{r7, pc}
 800a6ae:	bf00      	nop
 800a6b0:	200001db 	.word	0x200001db

0800a6b4 <USBD_CUSTOM_HID_EP0_RxReady>:
  *         Handles control request data.
  * @param  pdev: device instance
  * @retval status
  */
static uint8_t USBD_CUSTOM_HID_EP0_RxReady(USBD_HandleTypeDef *pdev)
{
 800a6b4:	b580      	push	{r7, lr}
 800a6b6:	b084      	sub	sp, #16
 800a6b8:	af00      	add	r7, sp, #0
 800a6ba:	6078      	str	r0, [r7, #4]
  USBD_CUSTOM_HID_HandleTypeDef *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData_HID_Custom;
 800a6bc:	687b      	ldr	r3, [r7, #4]
 800a6be:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 800a6c2:	60fb      	str	r3, [r7, #12]

  if (hhid == NULL)
 800a6c4:	68fb      	ldr	r3, [r7, #12]
 800a6c6:	2b00      	cmp	r3, #0
 800a6c8:	d101      	bne.n	800a6ce <USBD_CUSTOM_HID_EP0_RxReady+0x1a>
  {
    return (uint8_t)USBD_FAIL;
 800a6ca:	2303      	movs	r3, #3
 800a6cc:	e00f      	b.n	800a6ee <USBD_CUSTOM_HID_EP0_RxReady+0x3a>
  }

  if (hhid->IsReportAvailable == 1U)
 800a6ce:	68fb      	ldr	r3, [r7, #12]
 800a6d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800a6d2:	2b01      	cmp	r3, #1
 800a6d4:	d10a      	bne.n	800a6ec <USBD_CUSTOM_HID_EP0_RxReady+0x38>
  {
    //((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData_HID_Custom)->OutEvent(hhid->Report_buf[0], hhid->Report_buf[1]);
	  ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData_HID_Custom)->OutEvent(hhid->Report_buf, USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);
 800a6d6:	687b      	ldr	r3, [r7, #4]
 800a6d8:	f8d3 32dc 	ldr.w	r3, [r3, #732]	@ 0x2dc
 800a6dc:	68db      	ldr	r3, [r3, #12]
 800a6de:	68fa      	ldr	r2, [r7, #12]
 800a6e0:	2140      	movs	r1, #64	@ 0x40
 800a6e2:	4610      	mov	r0, r2
 800a6e4:	4798      	blx	r3
    hhid->IsReportAvailable = 0U;
 800a6e6:	68fb      	ldr	r3, [r7, #12]
 800a6e8:	2200      	movs	r2, #0
 800a6ea:	64da      	str	r2, [r3, #76]	@ 0x4c
  }

  return (uint8_t)USBD_OK;
 800a6ec:	2300      	movs	r3, #0
}
 800a6ee:	4618      	mov	r0, r3
 800a6f0:	3710      	adds	r7, #16
 800a6f2:	46bd      	mov	sp, r7
 800a6f4:	bd80      	pop	{r7, pc}
	...

0800a6f8 <USBD_CUSTOM_HID_GetDeviceQualifierDesc>:
  *         return Device Qualifier descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CUSTOM_HID_GetDeviceQualifierDesc(uint16_t *length)
{
 800a6f8:	b480      	push	{r7}
 800a6fa:	b083      	sub	sp, #12
 800a6fc:	af00      	add	r7, sp, #0
 800a6fe:	6078      	str	r0, [r7, #4]
  *length = (uint16_t)sizeof(USBD_CUSTOM_HID_DeviceQualifierDesc);
 800a700:	687b      	ldr	r3, [r7, #4]
 800a702:	220a      	movs	r2, #10
 800a704:	801a      	strh	r2, [r3, #0]

  return USBD_CUSTOM_HID_DeviceQualifierDesc;
 800a706:	4b03      	ldr	r3, [pc, #12]	@ (800a714 <USBD_CUSTOM_HID_GetDeviceQualifierDesc+0x1c>)
}
 800a708:	4618      	mov	r0, r3
 800a70a:	370c      	adds	r7, #12
 800a70c:	46bd      	mov	sp, r7
 800a70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a712:	4770      	bx	lr
 800a714:	200002a8 	.word	0x200002a8

0800a718 <USBD_CUSTOM_HID_RegisterInterface>:
  * @param  fops: CUSTOMHID Interface callback
  * @retval status
  */
uint8_t USBD_CUSTOM_HID_RegisterInterface(USBD_HandleTypeDef *pdev,
                                          USBD_CUSTOM_HID_ItfTypeDef *fops)
{
 800a718:	b480      	push	{r7}
 800a71a:	b083      	sub	sp, #12
 800a71c:	af00      	add	r7, sp, #0
 800a71e:	6078      	str	r0, [r7, #4]
 800a720:	6039      	str	r1, [r7, #0]
  if (fops == NULL)
 800a722:	683b      	ldr	r3, [r7, #0]
 800a724:	2b00      	cmp	r3, #0
 800a726:	d101      	bne.n	800a72c <USBD_CUSTOM_HID_RegisterInterface+0x14>
  {
    return (uint8_t)USBD_FAIL;
 800a728:	2303      	movs	r3, #3
 800a72a:	e004      	b.n	800a736 <USBD_CUSTOM_HID_RegisterInterface+0x1e>
  }

  pdev->pUserData_HID_Custom = fops;
 800a72c:	687b      	ldr	r3, [r7, #4]
 800a72e:	683a      	ldr	r2, [r7, #0]
 800a730:	f8c3 22dc 	str.w	r2, [r3, #732]	@ 0x2dc

  return (uint8_t)USBD_OK;
 800a734:	2300      	movs	r3, #0
}
 800a736:	4618      	mov	r0, r3
 800a738:	370c      	adds	r7, #12
 800a73a:	46bd      	mov	sp, r7
 800a73c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a740:	4770      	bx	lr
	...

0800a744 <USBD_Update_HID_Custom_DESC>:

void USBD_Update_HID_Custom_DESC(uint8_t *desc, uint8_t itf_no, uint8_t in_ep, uint8_t out_ep, uint8_t str_idx)
{
 800a744:	b480      	push	{r7}
 800a746:	b083      	sub	sp, #12
 800a748:	af00      	add	r7, sp, #0
 800a74a:	6078      	str	r0, [r7, #4]
 800a74c:	4608      	mov	r0, r1
 800a74e:	4611      	mov	r1, r2
 800a750:	461a      	mov	r2, r3
 800a752:	4603      	mov	r3, r0
 800a754:	70fb      	strb	r3, [r7, #3]
 800a756:	460b      	mov	r3, r1
 800a758:	70bb      	strb	r3, [r7, #2]
 800a75a:	4613      	mov	r3, r2
 800a75c:	707b      	strb	r3, [r7, #1]
  desc[11] = itf_no;
 800a75e:	687b      	ldr	r3, [r7, #4]
 800a760:	330b      	adds	r3, #11
 800a762:	78fa      	ldrb	r2, [r7, #3]
 800a764:	701a      	strb	r2, [r3, #0]
  desc[17] = str_idx;
 800a766:	687b      	ldr	r3, [r7, #4]
 800a768:	3311      	adds	r3, #17
 800a76a:	7c3a      	ldrb	r2, [r7, #16]
 800a76c:	701a      	strb	r2, [r3, #0]
  desc[29] = in_ep;
 800a76e:	687b      	ldr	r3, [r7, #4]
 800a770:	331d      	adds	r3, #29
 800a772:	78ba      	ldrb	r2, [r7, #2]
 800a774:	701a      	strb	r2, [r3, #0]
  desc[36] = out_ep;
 800a776:	687b      	ldr	r3, [r7, #4]
 800a778:	3324      	adds	r3, #36	@ 0x24
 800a77a:	787a      	ldrb	r2, [r7, #1]
 800a77c:	701a      	strb	r2, [r3, #0]

  CUSTOM_HID_IN_EP = in_ep;
 800a77e:	4a09      	ldr	r2, [pc, #36]	@ (800a7a4 <USBD_Update_HID_Custom_DESC+0x60>)
 800a780:	78bb      	ldrb	r3, [r7, #2]
 800a782:	7013      	strb	r3, [r2, #0]
  CUSTOM_HID_OUT_EP = out_ep;
 800a784:	4a08      	ldr	r2, [pc, #32]	@ (800a7a8 <USBD_Update_HID_Custom_DESC+0x64>)
 800a786:	787b      	ldrb	r3, [r7, #1]
 800a788:	7013      	strb	r3, [r2, #0]
  CUSTOM_HID_ITF_NBR = itf_no;
 800a78a:	4a08      	ldr	r2, [pc, #32]	@ (800a7ac <USBD_Update_HID_Custom_DESC+0x68>)
 800a78c:	78fb      	ldrb	r3, [r7, #3]
 800a78e:	7013      	strb	r3, [r2, #0]
  CUSTOM_HID_STR_DESC_IDX = str_idx;
 800a790:	4a07      	ldr	r2, [pc, #28]	@ (800a7b0 <USBD_Update_HID_Custom_DESC+0x6c>)
 800a792:	7c3b      	ldrb	r3, [r7, #16]
 800a794:	7013      	strb	r3, [r2, #0]
}
 800a796:	bf00      	nop
 800a798:	370c      	adds	r7, #12
 800a79a:	46bd      	mov	sp, r7
 800a79c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7a0:	4770      	bx	lr
 800a7a2:	bf00      	nop
 800a7a4:	200001da 	.word	0x200001da
 800a7a8:	200001db 	.word	0x200001db
 800a7ac:	20002860 	.word	0x20002860
 800a7b0:	20002861 	.word	0x20002861

0800a7b4 <USBD_Init>:
  * @param  id: Low level core index
  * @retval None
  */
USBD_StatusTypeDef USBD_Init(USBD_HandleTypeDef *pdev,
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
 800a7b4:	b580      	push	{r7, lr}
 800a7b6:	b086      	sub	sp, #24
 800a7b8:	af00      	add	r7, sp, #0
 800a7ba:	60f8      	str	r0, [r7, #12]
 800a7bc:	60b9      	str	r1, [r7, #8]
 800a7be:	4613      	mov	r3, r2
 800a7c0:	71fb      	strb	r3, [r7, #7]
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 800a7c2:	68fb      	ldr	r3, [r7, #12]
 800a7c4:	2b00      	cmp	r3, #0
 800a7c6:	d101      	bne.n	800a7cc <USBD_Init+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Device handle");
#endif
    return USBD_FAIL;
 800a7c8:	2303      	movs	r3, #3
 800a7ca:	e01b      	b.n	800a804 <USBD_Init+0x50>
  }

  /* Unlink previous class resources */
  pdev->pClass = NULL;
 800a7cc:	68fb      	ldr	r3, [r7, #12]
 800a7ce:	2200      	movs	r2, #0
 800a7d0:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
  pdev->pConfDesc = NULL;
 800a7d4:	68fb      	ldr	r3, [r7, #12]
 800a7d6:	2200      	movs	r2, #0
 800a7d8:	f8c3 2318 	str.w	r2, [r3, #792]	@ 0x318

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 800a7dc:	68bb      	ldr	r3, [r7, #8]
 800a7de:	2b00      	cmp	r3, #0
 800a7e0:	d003      	beq.n	800a7ea <USBD_Init+0x36>
  {
    pdev->pDesc = pdesc;
 800a7e2:	68fb      	ldr	r3, [r7, #12]
 800a7e4:	68ba      	ldr	r2, [r7, #8]
 800a7e6:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a7ea:	68fb      	ldr	r3, [r7, #12]
 800a7ec:	2201      	movs	r2, #1
 800a7ee:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
  pdev->id = id;
 800a7f2:	68fb      	ldr	r3, [r7, #12]
 800a7f4:	79fa      	ldrb	r2, [r7, #7]
 800a7f6:	701a      	strb	r2, [r3, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 800a7f8:	68f8      	ldr	r0, [r7, #12]
 800a7fa:	f001 fa7d 	bl	800bcf8 <USBD_LL_Init>
 800a7fe:	4603      	mov	r3, r0
 800a800:	75fb      	strb	r3, [r7, #23]

  return ret;
 800a802:	7dfb      	ldrb	r3, [r7, #23]
}
 800a804:	4618      	mov	r0, r3
 800a806:	3718      	adds	r7, #24
 800a808:	46bd      	mov	sp, r7
 800a80a:	bd80      	pop	{r7, pc}

0800a80c <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 800a80c:	b580      	push	{r7, lr}
 800a80e:	b084      	sub	sp, #16
 800a810:	af00      	add	r7, sp, #0
 800a812:	6078      	str	r0, [r7, #4]
 800a814:	6039      	str	r1, [r7, #0]
  uint16_t len = 0U;
 800a816:	2300      	movs	r3, #0
 800a818:	81fb      	strh	r3, [r7, #14]

  if (pclass == NULL)
 800a81a:	683b      	ldr	r3, [r7, #0]
 800a81c:	2b00      	cmp	r3, #0
 800a81e:	d101      	bne.n	800a824 <USBD_RegisterClass+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Class handle");
#endif
    return USBD_FAIL;
 800a820:	2303      	movs	r3, #3
 800a822:	e02d      	b.n	800a880 <USBD_RegisterClass+0x74>
  }

  /* link the class to the USB Device handle */
  pdev->pClass = pclass;
 800a824:	687b      	ldr	r3, [r7, #4]
 800a826:	683a      	ldr	r2, [r7, #0]
 800a828:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8

  /* Get Device Configuration Descriptor */
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a82c:	687b      	ldr	r3, [r7, #4]
 800a82e:	7c1b      	ldrb	r3, [r3, #16]
 800a830:	2b00      	cmp	r3, #0
 800a832:	d112      	bne.n	800a85a <USBD_RegisterClass+0x4e>
  {
	  if (pdev->pClass->GetHSConfigDescriptor != NULL)
 800a834:	687b      	ldr	r3, [r7, #4]
 800a836:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800a83a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a83c:	2b00      	cmp	r3, #0
 800a83e:	d01e      	beq.n	800a87e <USBD_RegisterClass+0x72>
	  {
		  pdev->pConfDesc = (void *)pdev->pClass->GetHSConfigDescriptor(&len);
 800a840:	687b      	ldr	r3, [r7, #4]
 800a842:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800a846:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a848:	f107 020e 	add.w	r2, r7, #14
 800a84c:	4610      	mov	r0, r2
 800a84e:	4798      	blx	r3
 800a850:	4602      	mov	r2, r0
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	f8c3 2318 	str.w	r2, [r3, #792]	@ 0x318
 800a858:	e011      	b.n	800a87e <USBD_RegisterClass+0x72>
	  }
  }
  else if (pdev->pClass->GetFSConfigDescriptor != NULL)
 800a85a:	687b      	ldr	r3, [r7, #4]
 800a85c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800a860:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a862:	2b00      	cmp	r3, #0
 800a864:	d00b      	beq.n	800a87e <USBD_RegisterClass+0x72>
  {
	  pdev->pConfDesc = (void *)pdev->pClass->GetFSConfigDescriptor(&len);
 800a866:	687b      	ldr	r3, [r7, #4]
 800a868:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800a86c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a86e:	f107 020e 	add.w	r2, r7, #14
 800a872:	4610      	mov	r0, r2
 800a874:	4798      	blx	r3
 800a876:	4602      	mov	r2, r0
 800a878:	687b      	ldr	r3, [r7, #4]
 800a87a:	f8c3 2318 	str.w	r2, [r3, #792]	@ 0x318
  }

  return USBD_OK;
 800a87e:	2300      	movs	r3, #0
}
 800a880:	4618      	mov	r0, r3
 800a882:	3710      	adds	r7, #16
 800a884:	46bd      	mov	sp, r7
 800a886:	bd80      	pop	{r7, pc}

0800a888 <USBD_Start>:
  *         Start the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_Start(USBD_HandleTypeDef *pdev)
{
 800a888:	b580      	push	{r7, lr}
 800a88a:	b082      	sub	sp, #8
 800a88c:	af00      	add	r7, sp, #0
 800a88e:	6078      	str	r0, [r7, #4]
  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 800a890:	6878      	ldr	r0, [r7, #4]
 800a892:	f001 fa8f 	bl	800bdb4 <USBD_LL_Start>
 800a896:	4603      	mov	r3, r0
}
 800a898:	4618      	mov	r0, r3
 800a89a:	3708      	adds	r7, #8
 800a89c:	46bd      	mov	sp, r7
 800a89e:	bd80      	pop	{r7, pc}

0800a8a0 <USBD_RunTestMode>:
  *         Launch test mode process
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_RunTestMode(USBD_HandleTypeDef  *pdev)
{
 800a8a0:	b480      	push	{r7}
 800a8a2:	b083      	sub	sp, #12
 800a8a4:	af00      	add	r7, sp, #0
 800a8a6:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
 800a8a8:	2300      	movs	r3, #0
}
 800a8aa:	4618      	mov	r0, r3
 800a8ac:	370c      	adds	r7, #12
 800a8ae:	46bd      	mov	sp, r7
 800a8b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8b4:	4770      	bx	lr

0800a8b6 <USBD_SetClassConfig>:
  * @param  cfgidx: configuration index
  * @retval status
  */

USBD_StatusTypeDef USBD_SetClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800a8b6:	b580      	push	{r7, lr}
 800a8b8:	b084      	sub	sp, #16
 800a8ba:	af00      	add	r7, sp, #0
 800a8bc:	6078      	str	r0, [r7, #4]
 800a8be:	460b      	mov	r3, r1
 800a8c0:	70fb      	strb	r3, [r7, #3]
  USBD_StatusTypeDef ret = USBD_FAIL;
 800a8c2:	2303      	movs	r3, #3
 800a8c4:	73fb      	strb	r3, [r7, #15]

  if (pdev->pClass != NULL)
 800a8c6:	687b      	ldr	r3, [r7, #4]
 800a8c8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800a8cc:	2b00      	cmp	r3, #0
 800a8ce:	d009      	beq.n	800a8e4 <USBD_SetClassConfig+0x2e>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass->Init(pdev, cfgidx);
 800a8d0:	687b      	ldr	r3, [r7, #4]
 800a8d2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800a8d6:	681b      	ldr	r3, [r3, #0]
 800a8d8:	78fa      	ldrb	r2, [r7, #3]
 800a8da:	4611      	mov	r1, r2
 800a8dc:	6878      	ldr	r0, [r7, #4]
 800a8de:	4798      	blx	r3
 800a8e0:	4603      	mov	r3, r0
 800a8e2:	73fb      	strb	r3, [r7, #15]
  }

  return ret;
 800a8e4:	7bfb      	ldrb	r3, [r7, #15]
}
 800a8e6:	4618      	mov	r0, r3
 800a8e8:	3710      	adds	r7, #16
 800a8ea:	46bd      	mov	sp, r7
 800a8ec:	bd80      	pop	{r7, pc}

0800a8ee <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status: USBD_StatusTypeDef
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800a8ee:	b580      	push	{r7, lr}
 800a8f0:	b082      	sub	sp, #8
 800a8f2:	af00      	add	r7, sp, #0
 800a8f4:	6078      	str	r0, [r7, #4]
 800a8f6:	460b      	mov	r3, r1
 800a8f8:	70fb      	strb	r3, [r7, #3]
  /* Clear configuration and De-initialize the Class process */
  if (pdev->pClass != NULL)
 800a8fa:	687b      	ldr	r3, [r7, #4]
 800a8fc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800a900:	2b00      	cmp	r3, #0
 800a902:	d007      	beq.n	800a914 <USBD_ClrClassConfig+0x26>
  {
    pdev->pClass->DeInit(pdev, cfgidx);
 800a904:	687b      	ldr	r3, [r7, #4]
 800a906:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800a90a:	685b      	ldr	r3, [r3, #4]
 800a90c:	78fa      	ldrb	r2, [r7, #3]
 800a90e:	4611      	mov	r1, r2
 800a910:	6878      	ldr	r0, [r7, #4]
 800a912:	4798      	blx	r3
  }

  return USBD_OK;
 800a914:	2300      	movs	r3, #0
}
 800a916:	4618      	mov	r0, r3
 800a918:	3708      	adds	r7, #8
 800a91a:	46bd      	mov	sp, r7
 800a91c:	bd80      	pop	{r7, pc}

0800a91e <USBD_LL_SetupStage>:
  *         Handle the setup stage
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 800a91e:	b580      	push	{r7, lr}
 800a920:	b084      	sub	sp, #16
 800a922:	af00      	add	r7, sp, #0
 800a924:	6078      	str	r0, [r7, #4]
 800a926:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 800a928:	687b      	ldr	r3, [r7, #4]
 800a92a:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 800a92e:	6839      	ldr	r1, [r7, #0]
 800a930:	4618      	mov	r0, r3
 800a932:	f000 ff9d 	bl	800b870 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 800a936:	687b      	ldr	r3, [r7, #4]
 800a938:	2201      	movs	r2, #1
 800a93a:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294

  pdev->ep0_data_len = pdev->request.wLength;
 800a93e:	687b      	ldr	r3, [r7, #4]
 800a940:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	@ 0x2b0
 800a944:	461a      	mov	r2, r3
 800a946:	687b      	ldr	r3, [r7, #4]
 800a948:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298

  switch (pdev->request.bmRequest & 0x1FU)
 800a94c:	687b      	ldr	r3, [r7, #4]
 800a94e:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 800a952:	f003 031f 	and.w	r3, r3, #31
 800a956:	2b02      	cmp	r3, #2
 800a958:	d01a      	beq.n	800a990 <USBD_LL_SetupStage+0x72>
 800a95a:	2b02      	cmp	r3, #2
 800a95c:	d822      	bhi.n	800a9a4 <USBD_LL_SetupStage+0x86>
 800a95e:	2b00      	cmp	r3, #0
 800a960:	d002      	beq.n	800a968 <USBD_LL_SetupStage+0x4a>
 800a962:	2b01      	cmp	r3, #1
 800a964:	d00a      	beq.n	800a97c <USBD_LL_SetupStage+0x5e>
 800a966:	e01d      	b.n	800a9a4 <USBD_LL_SetupStage+0x86>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800a968:	687b      	ldr	r3, [r7, #4]
 800a96a:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 800a96e:	4619      	mov	r1, r3
 800a970:	6878      	ldr	r0, [r7, #4]
 800a972:	f000 fa5d 	bl	800ae30 <USBD_StdDevReq>
 800a976:	4603      	mov	r3, r0
 800a978:	73fb      	strb	r3, [r7, #15]
      break;
 800a97a:	e020      	b.n	800a9be <USBD_LL_SetupStage+0xa0>

    case USB_REQ_RECIPIENT_INTERFACE:
      ret = USBD_StdItfReq(pdev, &pdev->request);
 800a97c:	687b      	ldr	r3, [r7, #4]
 800a97e:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 800a982:	4619      	mov	r1, r3
 800a984:	6878      	ldr	r0, [r7, #4]
 800a986:	f000 fac1 	bl	800af0c <USBD_StdItfReq>
 800a98a:	4603      	mov	r3, r0
 800a98c:	73fb      	strb	r3, [r7, #15]
      break;
 800a98e:	e016      	b.n	800a9be <USBD_LL_SetupStage+0xa0>

    case USB_REQ_RECIPIENT_ENDPOINT:
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800a990:	687b      	ldr	r3, [r7, #4]
 800a992:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 800a996:	4619      	mov	r1, r3
 800a998:	6878      	ldr	r0, [r7, #4]
 800a99a:	f000 fb00 	bl	800af9e <USBD_StdEPReq>
 800a99e:	4603      	mov	r3, r0
 800a9a0:	73fb      	strb	r3, [r7, #15]
      break;
 800a9a2:	e00c      	b.n	800a9be <USBD_LL_SetupStage+0xa0>

    default:
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800a9a4:	687b      	ldr	r3, [r7, #4]
 800a9a6:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 800a9aa:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 800a9ae:	b2db      	uxtb	r3, r3
 800a9b0:	4619      	mov	r1, r3
 800a9b2:	6878      	ldr	r0, [r7, #4]
 800a9b4:	f001 fa5e 	bl	800be74 <USBD_LL_StallEP>
 800a9b8:	4603      	mov	r3, r0
 800a9ba:	73fb      	strb	r3, [r7, #15]
      break;
 800a9bc:	bf00      	nop
  }

  return ret;
 800a9be:	7bfb      	ldrb	r3, [r7, #15]
}
 800a9c0:	4618      	mov	r0, r3
 800a9c2:	3710      	adds	r7, #16
 800a9c4:	46bd      	mov	sp, r7
 800a9c6:	bd80      	pop	{r7, pc}

0800a9c8 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 800a9c8:	b580      	push	{r7, lr}
 800a9ca:	b086      	sub	sp, #24
 800a9cc:	af00      	add	r7, sp, #0
 800a9ce:	60f8      	str	r0, [r7, #12]
 800a9d0:	460b      	mov	r3, r1
 800a9d2:	607a      	str	r2, [r7, #4]
 800a9d4:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;

  if (epnum == 0U)
 800a9d6:	7afb      	ldrb	r3, [r7, #11]
 800a9d8:	2b00      	cmp	r3, #0
 800a9da:	d138      	bne.n	800aa4e <USBD_LL_DataOutStage+0x86>
  {
    pep = &pdev->ep_out[0];
 800a9dc:	68fb      	ldr	r3, [r7, #12]
 800a9de:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 800a9e2:	613b      	str	r3, [r7, #16]

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 800a9e4:	68fb      	ldr	r3, [r7, #12]
 800a9e6:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 800a9ea:	2b03      	cmp	r3, #3
 800a9ec:	d14a      	bne.n	800aa84 <USBD_LL_DataOutStage+0xbc>
    {
      if (pep->rem_length > pep->maxpacket)
 800a9ee:	693b      	ldr	r3, [r7, #16]
 800a9f0:	689a      	ldr	r2, [r3, #8]
 800a9f2:	693b      	ldr	r3, [r7, #16]
 800a9f4:	68db      	ldr	r3, [r3, #12]
 800a9f6:	429a      	cmp	r2, r3
 800a9f8:	d913      	bls.n	800aa22 <USBD_LL_DataOutStage+0x5a>
      {
        pep->rem_length -= pep->maxpacket;
 800a9fa:	693b      	ldr	r3, [r7, #16]
 800a9fc:	689a      	ldr	r2, [r3, #8]
 800a9fe:	693b      	ldr	r3, [r7, #16]
 800aa00:	68db      	ldr	r3, [r3, #12]
 800aa02:	1ad2      	subs	r2, r2, r3
 800aa04:	693b      	ldr	r3, [r7, #16]
 800aa06:	609a      	str	r2, [r3, #8]

        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 800aa08:	693b      	ldr	r3, [r7, #16]
 800aa0a:	68da      	ldr	r2, [r3, #12]
 800aa0c:	693b      	ldr	r3, [r7, #16]
 800aa0e:	689b      	ldr	r3, [r3, #8]
 800aa10:	4293      	cmp	r3, r2
 800aa12:	bf28      	it	cs
 800aa14:	4613      	movcs	r3, r2
 800aa16:	461a      	mov	r2, r3
 800aa18:	6879      	ldr	r1, [r7, #4]
 800aa1a:	68f8      	ldr	r0, [r7, #12]
 800aa1c:	f001 f81c 	bl	800ba58 <USBD_CtlContinueRx>
 800aa20:	e030      	b.n	800aa84 <USBD_LL_DataOutStage+0xbc>
      }
      else
      {
        if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800aa22:	68fb      	ldr	r3, [r7, #12]
 800aa24:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800aa28:	b2db      	uxtb	r3, r3
 800aa2a:	2b03      	cmp	r3, #3
 800aa2c:	d10b      	bne.n	800aa46 <USBD_LL_DataOutStage+0x7e>
        {
          if (pdev->pClass->EP0_RxReady != NULL)
 800aa2e:	68fb      	ldr	r3, [r7, #12]
 800aa30:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800aa34:	691b      	ldr	r3, [r3, #16]
 800aa36:	2b00      	cmp	r3, #0
 800aa38:	d005      	beq.n	800aa46 <USBD_LL_DataOutStage+0x7e>
          {
            pdev->pClass->EP0_RxReady(pdev);
 800aa3a:	68fb      	ldr	r3, [r7, #12]
 800aa3c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800aa40:	691b      	ldr	r3, [r3, #16]
 800aa42:	68f8      	ldr	r0, [r7, #12]
 800aa44:	4798      	blx	r3
          }
        }

        (void)USBD_CtlSendStatus(pdev);
 800aa46:	68f8      	ldr	r0, [r7, #12]
 800aa48:	f001 f817 	bl	800ba7a <USBD_CtlSendStatus>
 800aa4c:	e01a      	b.n	800aa84 <USBD_LL_DataOutStage+0xbc>
#endif
    }
  }
  else
  {
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800aa4e:	68fb      	ldr	r3, [r7, #12]
 800aa50:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800aa54:	b2db      	uxtb	r3, r3
 800aa56:	2b03      	cmp	r3, #3
 800aa58:	d114      	bne.n	800aa84 <USBD_LL_DataOutStage+0xbc>
    {
      if (pdev->pClass->DataOut != NULL)
 800aa5a:	68fb      	ldr	r3, [r7, #12]
 800aa5c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800aa60:	699b      	ldr	r3, [r3, #24]
 800aa62:	2b00      	cmp	r3, #0
 800aa64:	d00e      	beq.n	800aa84 <USBD_LL_DataOutStage+0xbc>
      {
        ret = (USBD_StatusTypeDef)pdev->pClass->DataOut(pdev, epnum);
 800aa66:	68fb      	ldr	r3, [r7, #12]
 800aa68:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800aa6c:	699b      	ldr	r3, [r3, #24]
 800aa6e:	7afa      	ldrb	r2, [r7, #11]
 800aa70:	4611      	mov	r1, r2
 800aa72:	68f8      	ldr	r0, [r7, #12]
 800aa74:	4798      	blx	r3
 800aa76:	4603      	mov	r3, r0
 800aa78:	75fb      	strb	r3, [r7, #23]

        if (ret != USBD_OK)
 800aa7a:	7dfb      	ldrb	r3, [r7, #23]
 800aa7c:	2b00      	cmp	r3, #0
 800aa7e:	d001      	beq.n	800aa84 <USBD_LL_DataOutStage+0xbc>
        {
          return ret;
 800aa80:	7dfb      	ldrb	r3, [r7, #23]
 800aa82:	e000      	b.n	800aa86 <USBD_LL_DataOutStage+0xbe>
        }
      }
    }
  }

  return USBD_OK;
 800aa84:	2300      	movs	r3, #0
}
 800aa86:	4618      	mov	r0, r3
 800aa88:	3718      	adds	r7, #24
 800aa8a:	46bd      	mov	sp, r7
 800aa8c:	bd80      	pop	{r7, pc}

0800aa8e <USBD_LL_DataInStage>:
  * @param  epnum: endpoint index
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 800aa8e:	b580      	push	{r7, lr}
 800aa90:	b086      	sub	sp, #24
 800aa92:	af00      	add	r7, sp, #0
 800aa94:	60f8      	str	r0, [r7, #12]
 800aa96:	460b      	mov	r3, r1
 800aa98:	607a      	str	r2, [r7, #4]
 800aa9a:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;

  if (epnum == 0U)
 800aa9c:	7afb      	ldrb	r3, [r7, #11]
 800aa9e:	2b00      	cmp	r3, #0
 800aaa0:	d16b      	bne.n	800ab7a <USBD_LL_DataInStage+0xec>
  {
    pep = &pdev->ep_in[0];
 800aaa2:	68fb      	ldr	r3, [r7, #12]
 800aaa4:	3314      	adds	r3, #20
 800aaa6:	613b      	str	r3, [r7, #16]

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800aaa8:	68fb      	ldr	r3, [r7, #12]
 800aaaa:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 800aaae:	2b02      	cmp	r3, #2
 800aab0:	d156      	bne.n	800ab60 <USBD_LL_DataInStage+0xd2>
    {
      if (pep->rem_length > pep->maxpacket)
 800aab2:	693b      	ldr	r3, [r7, #16]
 800aab4:	689a      	ldr	r2, [r3, #8]
 800aab6:	693b      	ldr	r3, [r7, #16]
 800aab8:	68db      	ldr	r3, [r3, #12]
 800aaba:	429a      	cmp	r2, r3
 800aabc:	d914      	bls.n	800aae8 <USBD_LL_DataInStage+0x5a>
      {
        pep->rem_length -= pep->maxpacket;
 800aabe:	693b      	ldr	r3, [r7, #16]
 800aac0:	689a      	ldr	r2, [r3, #8]
 800aac2:	693b      	ldr	r3, [r7, #16]
 800aac4:	68db      	ldr	r3, [r3, #12]
 800aac6:	1ad2      	subs	r2, r2, r3
 800aac8:	693b      	ldr	r3, [r7, #16]
 800aaca:	609a      	str	r2, [r3, #8]

        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 800aacc:	693b      	ldr	r3, [r7, #16]
 800aace:	689b      	ldr	r3, [r3, #8]
 800aad0:	461a      	mov	r2, r3
 800aad2:	6879      	ldr	r1, [r7, #4]
 800aad4:	68f8      	ldr	r0, [r7, #12]
 800aad6:	f000 ff91 	bl	800b9fc <USBD_CtlContinueSendData>

        /* Prepare endpoint for premature end of transfer */
        (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800aada:	2300      	movs	r3, #0
 800aadc:	2200      	movs	r2, #0
 800aade:	2100      	movs	r1, #0
 800aae0:	68f8      	ldr	r0, [r7, #12]
 800aae2:	f001 fa71 	bl	800bfc8 <USBD_LL_PrepareReceive>
 800aae6:	e03b      	b.n	800ab60 <USBD_LL_DataInStage+0xd2>
      }
      else
      {
        /* last packet is MPS multiple, so send ZLP packet */
        if ((pep->maxpacket == pep->rem_length) &&
 800aae8:	693b      	ldr	r3, [r7, #16]
 800aaea:	68da      	ldr	r2, [r3, #12]
 800aaec:	693b      	ldr	r3, [r7, #16]
 800aaee:	689b      	ldr	r3, [r3, #8]
 800aaf0:	429a      	cmp	r2, r3
 800aaf2:	d11c      	bne.n	800ab2e <USBD_LL_DataInStage+0xa0>
            (pep->total_length >= pep->maxpacket) &&
 800aaf4:	693b      	ldr	r3, [r7, #16]
 800aaf6:	685a      	ldr	r2, [r3, #4]
 800aaf8:	693b      	ldr	r3, [r7, #16]
 800aafa:	68db      	ldr	r3, [r3, #12]
        if ((pep->maxpacket == pep->rem_length) &&
 800aafc:	429a      	cmp	r2, r3
 800aafe:	d316      	bcc.n	800ab2e <USBD_LL_DataInStage+0xa0>
            (pep->total_length < pdev->ep0_data_len))
 800ab00:	693b      	ldr	r3, [r7, #16]
 800ab02:	685a      	ldr	r2, [r3, #4]
 800ab04:	68fb      	ldr	r3, [r7, #12]
 800ab06:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
            (pep->total_length >= pep->maxpacket) &&
 800ab0a:	429a      	cmp	r2, r3
 800ab0c:	d20f      	bcs.n	800ab2e <USBD_LL_DataInStage+0xa0>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 800ab0e:	2200      	movs	r2, #0
 800ab10:	2100      	movs	r1, #0
 800ab12:	68f8      	ldr	r0, [r7, #12]
 800ab14:	f000 ff72 	bl	800b9fc <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800ab18:	68fb      	ldr	r3, [r7, #12]
 800ab1a:	2200      	movs	r2, #0
 800ab1c:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800ab20:	2300      	movs	r3, #0
 800ab22:	2200      	movs	r2, #0
 800ab24:	2100      	movs	r1, #0
 800ab26:	68f8      	ldr	r0, [r7, #12]
 800ab28:	f001 fa4e 	bl	800bfc8 <USBD_LL_PrepareReceive>
 800ab2c:	e018      	b.n	800ab60 <USBD_LL_DataInStage+0xd2>
        }
        else
        {
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800ab2e:	68fb      	ldr	r3, [r7, #12]
 800ab30:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ab34:	b2db      	uxtb	r3, r3
 800ab36:	2b03      	cmp	r3, #3
 800ab38:	d10b      	bne.n	800ab52 <USBD_LL_DataInStage+0xc4>
          {
            if (pdev->pClass->EP0_TxSent != NULL)
 800ab3a:	68fb      	ldr	r3, [r7, #12]
 800ab3c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ab40:	68db      	ldr	r3, [r3, #12]
 800ab42:	2b00      	cmp	r3, #0
 800ab44:	d005      	beq.n	800ab52 <USBD_LL_DataInStage+0xc4>
            {
              pdev->pClass->EP0_TxSent(pdev);
 800ab46:	68fb      	ldr	r3, [r7, #12]
 800ab48:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ab4c:	68db      	ldr	r3, [r3, #12]
 800ab4e:	68f8      	ldr	r0, [r7, #12]
 800ab50:	4798      	blx	r3
            }
          }
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800ab52:	2180      	movs	r1, #128	@ 0x80
 800ab54:	68f8      	ldr	r0, [r7, #12]
 800ab56:	f001 f98d 	bl	800be74 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 800ab5a:	68f8      	ldr	r0, [r7, #12]
 800ab5c:	f000 ffa0 	bl	800baa0 <USBD_CtlReceiveStatus>
        (void)USBD_LL_StallEP(pdev, 0x80U);
      }
#endif
    }

    if (pdev->dev_test_mode == 1U)
 800ab60:	68fb      	ldr	r3, [r7, #12]
 800ab62:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 800ab66:	2b01      	cmp	r3, #1
 800ab68:	d122      	bne.n	800abb0 <USBD_LL_DataInStage+0x122>
    {
      (void)USBD_RunTestMode(pdev);
 800ab6a:	68f8      	ldr	r0, [r7, #12]
 800ab6c:	f7ff fe98 	bl	800a8a0 <USBD_RunTestMode>
      pdev->dev_test_mode = 0U;
 800ab70:	68fb      	ldr	r3, [r7, #12]
 800ab72:	2200      	movs	r2, #0
 800ab74:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 800ab78:	e01a      	b.n	800abb0 <USBD_LL_DataInStage+0x122>
    }
  }
  else
  {
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800ab7a:	68fb      	ldr	r3, [r7, #12]
 800ab7c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ab80:	b2db      	uxtb	r3, r3
 800ab82:	2b03      	cmp	r3, #3
 800ab84:	d114      	bne.n	800abb0 <USBD_LL_DataInStage+0x122>
    {
      if (pdev->pClass->DataIn != NULL)
 800ab86:	68fb      	ldr	r3, [r7, #12]
 800ab88:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ab8c:	695b      	ldr	r3, [r3, #20]
 800ab8e:	2b00      	cmp	r3, #0
 800ab90:	d00e      	beq.n	800abb0 <USBD_LL_DataInStage+0x122>
      {
        ret = (USBD_StatusTypeDef)pdev->pClass->DataIn(pdev, epnum);
 800ab92:	68fb      	ldr	r3, [r7, #12]
 800ab94:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ab98:	695b      	ldr	r3, [r3, #20]
 800ab9a:	7afa      	ldrb	r2, [r7, #11]
 800ab9c:	4611      	mov	r1, r2
 800ab9e:	68f8      	ldr	r0, [r7, #12]
 800aba0:	4798      	blx	r3
 800aba2:	4603      	mov	r3, r0
 800aba4:	75fb      	strb	r3, [r7, #23]

        if (ret != USBD_OK)
 800aba6:	7dfb      	ldrb	r3, [r7, #23]
 800aba8:	2b00      	cmp	r3, #0
 800abaa:	d001      	beq.n	800abb0 <USBD_LL_DataInStage+0x122>
        {
          return ret;
 800abac:	7dfb      	ldrb	r3, [r7, #23]
 800abae:	e000      	b.n	800abb2 <USBD_LL_DataInStage+0x124>
        }
      }
    }
  }

  return USBD_OK;
 800abb0:	2300      	movs	r3, #0
}
 800abb2:	4618      	mov	r0, r3
 800abb4:	3718      	adds	r7, #24
 800abb6:	46bd      	mov	sp, r7
 800abb8:	bd80      	pop	{r7, pc}

0800abba <USBD_LL_Reset>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800abba:	b580      	push	{r7, lr}
 800abbc:	b082      	sub	sp, #8
 800abbe:	af00      	add	r7, sp, #0
 800abc0:	6078      	str	r0, [r7, #4]
  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800abc2:	687b      	ldr	r3, [r7, #4]
 800abc4:	2201      	movs	r2, #1
 800abc6:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
  pdev->ep0_state = USBD_EP0_IDLE;
 800abca:	687b      	ldr	r3, [r7, #4]
 800abcc:	2200      	movs	r2, #0
 800abce:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
  pdev->dev_config = 0U;
 800abd2:	687b      	ldr	r3, [r7, #4]
 800abd4:	2200      	movs	r2, #0
 800abd6:	605a      	str	r2, [r3, #4]
  pdev->dev_remote_wakeup = 0U;
 800abd8:	687b      	ldr	r3, [r7, #4]
 800abda:	2200      	movs	r2, #0
 800abdc:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4

  if (pdev->pClass == NULL)
 800abe0:	687b      	ldr	r3, [r7, #4]
 800abe2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800abe6:	2b00      	cmp	r3, #0
 800abe8:	d101      	bne.n	800abee <USBD_LL_Reset+0x34>
  {
    return USBD_FAIL;
 800abea:	2303      	movs	r3, #3
 800abec:	e02a      	b.n	800ac44 <USBD_LL_Reset+0x8a>
  }

	if (pdev->pClass->DeInit != NULL)
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800abf4:	685b      	ldr	r3, [r3, #4]
 800abf6:	2b00      	cmp	r3, #0
 800abf8:	d009      	beq.n	800ac0e <USBD_LL_Reset+0x54>
	{
	  (void)pdev->pClass->DeInit(pdev, (uint8_t)pdev->dev_config);
 800abfa:	687b      	ldr	r3, [r7, #4]
 800abfc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ac00:	685b      	ldr	r3, [r3, #4]
 800ac02:	687a      	ldr	r2, [r7, #4]
 800ac04:	6852      	ldr	r2, [r2, #4]
 800ac06:	b2d2      	uxtb	r2, r2
 800ac08:	4611      	mov	r1, r2
 800ac0a:	6878      	ldr	r0, [r7, #4]
 800ac0c:	4798      	blx	r3
	}

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800ac0e:	2340      	movs	r3, #64	@ 0x40
 800ac10:	2200      	movs	r2, #0
 800ac12:	2100      	movs	r1, #0
 800ac14:	6878      	ldr	r0, [r7, #4]
 800ac16:	f001 f8e8 	bl	800bdea <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800ac1a:	687b      	ldr	r3, [r7, #4]
 800ac1c:	2201      	movs	r2, #1
 800ac1e:	f8a3 2164 	strh.w	r2, [r3, #356]	@ 0x164

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	2240      	movs	r2, #64	@ 0x40
 800ac26:	f8c3 2160 	str.w	r2, [r3, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800ac2a:	2340      	movs	r3, #64	@ 0x40
 800ac2c:	2200      	movs	r2, #0
 800ac2e:	2180      	movs	r1, #128	@ 0x80
 800ac30:	6878      	ldr	r0, [r7, #4]
 800ac32:	f001 f8da 	bl	800bdea <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 800ac36:	687b      	ldr	r3, [r7, #4]
 800ac38:	2201      	movs	r2, #1
 800ac3a:	849a      	strh	r2, [r3, #36]	@ 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 800ac3c:	687b      	ldr	r3, [r7, #4]
 800ac3e:	2240      	movs	r2, #64	@ 0x40
 800ac40:	621a      	str	r2, [r3, #32]

  return USBD_OK;
 800ac42:	2300      	movs	r3, #0
}
 800ac44:	4618      	mov	r0, r3
 800ac46:	3708      	adds	r7, #8
 800ac48:	46bd      	mov	sp, r7
 800ac4a:	bd80      	pop	{r7, pc}

0800ac4c <USBD_LL_SetSpeed>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
 800ac4c:	b480      	push	{r7}
 800ac4e:	b083      	sub	sp, #12
 800ac50:	af00      	add	r7, sp, #0
 800ac52:	6078      	str	r0, [r7, #4]
 800ac54:	460b      	mov	r3, r1
 800ac56:	70fb      	strb	r3, [r7, #3]
  pdev->dev_speed = speed;
 800ac58:	687b      	ldr	r3, [r7, #4]
 800ac5a:	78fa      	ldrb	r2, [r7, #3]
 800ac5c:	741a      	strb	r2, [r3, #16]

  return USBD_OK;
 800ac5e:	2300      	movs	r3, #0
}
 800ac60:	4618      	mov	r0, r3
 800ac62:	370c      	adds	r7, #12
 800ac64:	46bd      	mov	sp, r7
 800ac66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac6a:	4770      	bx	lr

0800ac6c <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
 800ac6c:	b480      	push	{r7}
 800ac6e:	b083      	sub	sp, #12
 800ac70:	af00      	add	r7, sp, #0
 800ac72:	6078      	str	r0, [r7, #4]
  pdev->dev_old_state = pdev->dev_state;
 800ac74:	687b      	ldr	r3, [r7, #4]
 800ac76:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ac7a:	b2da      	uxtb	r2, r3
 800ac7c:	687b      	ldr	r3, [r7, #4]
 800ac7e:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
  pdev->dev_state = USBD_STATE_SUSPENDED;
 800ac82:	687b      	ldr	r3, [r7, #4]
 800ac84:	2204      	movs	r2, #4
 800ac86:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c

  return USBD_OK;
 800ac8a:	2300      	movs	r3, #0
}
 800ac8c:	4618      	mov	r0, r3
 800ac8e:	370c      	adds	r7, #12
 800ac90:	46bd      	mov	sp, r7
 800ac92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac96:	4770      	bx	lr

0800ac98 <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
 800ac98:	b480      	push	{r7}
 800ac9a:	b083      	sub	sp, #12
 800ac9c:	af00      	add	r7, sp, #0
 800ac9e:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800aca0:	687b      	ldr	r3, [r7, #4]
 800aca2:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800aca6:	b2db      	uxtb	r3, r3
 800aca8:	2b04      	cmp	r3, #4
 800acaa:	d106      	bne.n	800acba <USBD_LL_Resume+0x22>
  {
    pdev->dev_state = pdev->dev_old_state;
 800acac:	687b      	ldr	r3, [r7, #4]
 800acae:	f893 329d 	ldrb.w	r3, [r3, #669]	@ 0x29d
 800acb2:	b2da      	uxtb	r2, r3
 800acb4:	687b      	ldr	r3, [r7, #4]
 800acb6:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
  }

  return USBD_OK;
 800acba:	2300      	movs	r3, #0
}
 800acbc:	4618      	mov	r0, r3
 800acbe:	370c      	adds	r7, #12
 800acc0:	46bd      	mov	sp, r7
 800acc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acc6:	4770      	bx	lr

0800acc8 <USBD_LL_SOF>:
  * @param  pdev: device instance
  * @retval status
  */

USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 800acc8:	b580      	push	{r7, lr}
 800acca:	b082      	sub	sp, #8
 800accc:	af00      	add	r7, sp, #0
 800acce:	6078      	str	r0, [r7, #4]
  if (pdev->pClass == NULL)
 800acd0:	687b      	ldr	r3, [r7, #4]
 800acd2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800acd6:	2b00      	cmp	r3, #0
 800acd8:	d101      	bne.n	800acde <USBD_LL_SOF+0x16>
  {
    return USBD_FAIL;
 800acda:	2303      	movs	r3, #3
 800acdc:	e012      	b.n	800ad04 <USBD_LL_SOF+0x3c>
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800acde:	687b      	ldr	r3, [r7, #4]
 800ace0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ace4:	b2db      	uxtb	r3, r3
 800ace6:	2b03      	cmp	r3, #3
 800ace8:	d10b      	bne.n	800ad02 <USBD_LL_SOF+0x3a>
  {
    if (pdev->pClass->SOF != NULL)
 800acea:	687b      	ldr	r3, [r7, #4]
 800acec:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800acf0:	69db      	ldr	r3, [r3, #28]
 800acf2:	2b00      	cmp	r3, #0
 800acf4:	d005      	beq.n	800ad02 <USBD_LL_SOF+0x3a>
    {
      (void)pdev->pClass->SOF(pdev);
 800acf6:	687b      	ldr	r3, [r7, #4]
 800acf8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800acfc:	69db      	ldr	r3, [r3, #28]
 800acfe:	6878      	ldr	r0, [r7, #4]
 800ad00:	4798      	blx	r3
    }
  }

  return USBD_OK;
 800ad02:	2300      	movs	r3, #0
}
 800ad04:	4618      	mov	r0, r3
 800ad06:	3708      	adds	r7, #8
 800ad08:	46bd      	mov	sp, r7
 800ad0a:	bd80      	pop	{r7, pc}

0800ad0c <USBD_LL_IsoINIncomplete>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
 800ad0c:	b580      	push	{r7, lr}
 800ad0e:	b082      	sub	sp, #8
 800ad10:	af00      	add	r7, sp, #0
 800ad12:	6078      	str	r0, [r7, #4]
 800ad14:	460b      	mov	r3, r1
 800ad16:	70fb      	strb	r3, [r7, #3]
  if (pdev->pClass == NULL)
 800ad18:	687b      	ldr	r3, [r7, #4]
 800ad1a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ad1e:	2b00      	cmp	r3, #0
 800ad20:	d101      	bne.n	800ad26 <USBD_LL_IsoINIncomplete+0x1a>
  {
    return USBD_FAIL;
 800ad22:	2303      	movs	r3, #3
 800ad24:	e014      	b.n	800ad50 <USBD_LL_IsoINIncomplete+0x44>
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800ad26:	687b      	ldr	r3, [r7, #4]
 800ad28:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ad2c:	b2db      	uxtb	r3, r3
 800ad2e:	2b03      	cmp	r3, #3
 800ad30:	d10d      	bne.n	800ad4e <USBD_LL_IsoINIncomplete+0x42>
  {
    if (pdev->pClass->IsoINIncomplete != NULL)
 800ad32:	687b      	ldr	r3, [r7, #4]
 800ad34:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ad38:	6a1b      	ldr	r3, [r3, #32]
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	d007      	beq.n	800ad4e <USBD_LL_IsoINIncomplete+0x42>
    {
      (void)pdev->pClass->IsoINIncomplete(pdev, epnum);
 800ad3e:	687b      	ldr	r3, [r7, #4]
 800ad40:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ad44:	6a1b      	ldr	r3, [r3, #32]
 800ad46:	78fa      	ldrb	r2, [r7, #3]
 800ad48:	4611      	mov	r1, r2
 800ad4a:	6878      	ldr	r0, [r7, #4]
 800ad4c:	4798      	blx	r3
    }
  }

  return USBD_OK;
 800ad4e:	2300      	movs	r3, #0
}
 800ad50:	4618      	mov	r0, r3
 800ad52:	3708      	adds	r7, #8
 800ad54:	46bd      	mov	sp, r7
 800ad56:	bd80      	pop	{r7, pc}

0800ad58 <USBD_LL_IsoOUTIncomplete>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
 800ad58:	b580      	push	{r7, lr}
 800ad5a:	b082      	sub	sp, #8
 800ad5c:	af00      	add	r7, sp, #0
 800ad5e:	6078      	str	r0, [r7, #4]
 800ad60:	460b      	mov	r3, r1
 800ad62:	70fb      	strb	r3, [r7, #3]
  if (pdev->pClass == NULL)
 800ad64:	687b      	ldr	r3, [r7, #4]
 800ad66:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ad6a:	2b00      	cmp	r3, #0
 800ad6c:	d101      	bne.n	800ad72 <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    return USBD_FAIL;
 800ad6e:	2303      	movs	r3, #3
 800ad70:	e014      	b.n	800ad9c <USBD_LL_IsoOUTIncomplete+0x44>
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800ad72:	687b      	ldr	r3, [r7, #4]
 800ad74:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ad78:	b2db      	uxtb	r3, r3
 800ad7a:	2b03      	cmp	r3, #3
 800ad7c:	d10d      	bne.n	800ad9a <USBD_LL_IsoOUTIncomplete+0x42>
  {
    if (pdev->pClass->IsoOUTIncomplete != NULL)
 800ad7e:	687b      	ldr	r3, [r7, #4]
 800ad80:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ad84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ad86:	2b00      	cmp	r3, #0
 800ad88:	d007      	beq.n	800ad9a <USBD_LL_IsoOUTIncomplete+0x42>
    {
      (void)pdev->pClass->IsoOUTIncomplete(pdev, epnum);
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ad90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ad92:	78fa      	ldrb	r2, [r7, #3]
 800ad94:	4611      	mov	r1, r2
 800ad96:	6878      	ldr	r0, [r7, #4]
 800ad98:	4798      	blx	r3
    }
  }

  return USBD_OK;
 800ad9a:	2300      	movs	r3, #0
}
 800ad9c:	4618      	mov	r0, r3
 800ad9e:	3708      	adds	r7, #8
 800ada0:	46bd      	mov	sp, r7
 800ada2:	bd80      	pop	{r7, pc}

0800ada4 <USBD_LL_DevConnected>:
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
{
 800ada4:	b480      	push	{r7}
 800ada6:	b083      	sub	sp, #12
 800ada8:	af00      	add	r7, sp, #0
 800adaa:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
 800adac:	2300      	movs	r3, #0
}
 800adae:	4618      	mov	r0, r3
 800adb0:	370c      	adds	r7, #12
 800adb2:	46bd      	mov	sp, r7
 800adb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adb8:	4770      	bx	lr

0800adba <USBD_LL_DevDisconnected>:
  *         Handle device disconnection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
 800adba:	b580      	push	{r7, lr}
 800adbc:	b082      	sub	sp, #8
 800adbe:	af00      	add	r7, sp, #0
 800adc0:	6078      	str	r0, [r7, #4]
  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800adc2:	687b      	ldr	r3, [r7, #4]
 800adc4:	2201      	movs	r2, #1
 800adc6:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c

  if (pdev->pClass != NULL)
 800adca:	687b      	ldr	r3, [r7, #4]
 800adcc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800add0:	2b00      	cmp	r3, #0
 800add2:	d009      	beq.n	800ade8 <USBD_LL_DevDisconnected+0x2e>
  {
    (void)pdev->pClass->DeInit(pdev, (uint8_t)pdev->dev_config);
 800add4:	687b      	ldr	r3, [r7, #4]
 800add6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800adda:	685b      	ldr	r3, [r3, #4]
 800addc:	687a      	ldr	r2, [r7, #4]
 800adde:	6852      	ldr	r2, [r2, #4]
 800ade0:	b2d2      	uxtb	r2, r2
 800ade2:	4611      	mov	r1, r2
 800ade4:	6878      	ldr	r0, [r7, #4]
 800ade6:	4798      	blx	r3
  }

  return USBD_OK;
 800ade8:	2300      	movs	r3, #0
}
 800adea:	4618      	mov	r0, r3
 800adec:	3708      	adds	r7, #8
 800adee:	46bd      	mov	sp, r7
 800adf0:	bd80      	pop	{r7, pc}

0800adf2 <SWAPBYTE>:

/** @defgroup USBD_DEF_Exported_Macros
  * @{
  */
__STATIC_INLINE uint16_t SWAPBYTE(uint8_t *addr)
{
 800adf2:	b480      	push	{r7}
 800adf4:	b087      	sub	sp, #28
 800adf6:	af00      	add	r7, sp, #0
 800adf8:	6078      	str	r0, [r7, #4]
  uint16_t _SwapVal, _Byte1, _Byte2;
  uint8_t *_pbuff = addr;
 800adfa:	687b      	ldr	r3, [r7, #4]
 800adfc:	617b      	str	r3, [r7, #20]

  _Byte1 = *(uint8_t *)_pbuff;
 800adfe:	697b      	ldr	r3, [r7, #20]
 800ae00:	781b      	ldrb	r3, [r3, #0]
 800ae02:	827b      	strh	r3, [r7, #18]
  _pbuff++;
 800ae04:	697b      	ldr	r3, [r7, #20]
 800ae06:	3301      	adds	r3, #1
 800ae08:	617b      	str	r3, [r7, #20]
  _Byte2 = *(uint8_t *)_pbuff;
 800ae0a:	697b      	ldr	r3, [r7, #20]
 800ae0c:	781b      	ldrb	r3, [r3, #0]
 800ae0e:	823b      	strh	r3, [r7, #16]

  _SwapVal = (_Byte2 << 8) | _Byte1;
 800ae10:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800ae14:	021b      	lsls	r3, r3, #8
 800ae16:	b21a      	sxth	r2, r3
 800ae18:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800ae1c:	4313      	orrs	r3, r2
 800ae1e:	b21b      	sxth	r3, r3
 800ae20:	81fb      	strh	r3, [r7, #14]

  return _SwapVal;
 800ae22:	89fb      	ldrh	r3, [r7, #14]
}
 800ae24:	4618      	mov	r0, r3
 800ae26:	371c      	adds	r7, #28
 800ae28:	46bd      	mov	sp, r7
 800ae2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae2e:	4770      	bx	lr

0800ae30 <USBD_StdDevReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdDevReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800ae30:	b580      	push	{r7, lr}
 800ae32:	b084      	sub	sp, #16
 800ae34:	af00      	add	r7, sp, #0
 800ae36:	6078      	str	r0, [r7, #4]
 800ae38:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800ae3a:	2300      	movs	r3, #0
 800ae3c:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800ae3e:	683b      	ldr	r3, [r7, #0]
 800ae40:	781b      	ldrb	r3, [r3, #0]
 800ae42:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800ae46:	2b40      	cmp	r3, #64	@ 0x40
 800ae48:	d005      	beq.n	800ae56 <USBD_StdDevReq+0x26>
 800ae4a:	2b40      	cmp	r3, #64	@ 0x40
 800ae4c:	d853      	bhi.n	800aef6 <USBD_StdDevReq+0xc6>
 800ae4e:	2b00      	cmp	r3, #0
 800ae50:	d00b      	beq.n	800ae6a <USBD_StdDevReq+0x3a>
 800ae52:	2b20      	cmp	r3, #32
 800ae54:	d14f      	bne.n	800aef6 <USBD_StdDevReq+0xc6>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 800ae56:	687b      	ldr	r3, [r7, #4]
 800ae58:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ae5c:	689b      	ldr	r3, [r3, #8]
 800ae5e:	6839      	ldr	r1, [r7, #0]
 800ae60:	6878      	ldr	r0, [r7, #4]
 800ae62:	4798      	blx	r3
 800ae64:	4603      	mov	r3, r0
 800ae66:	73fb      	strb	r3, [r7, #15]
      break;
 800ae68:	e04a      	b.n	800af00 <USBD_StdDevReq+0xd0>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 800ae6a:	683b      	ldr	r3, [r7, #0]
 800ae6c:	785b      	ldrb	r3, [r3, #1]
 800ae6e:	2b09      	cmp	r3, #9
 800ae70:	d83b      	bhi.n	800aeea <USBD_StdDevReq+0xba>
 800ae72:	a201      	add	r2, pc, #4	@ (adr r2, 800ae78 <USBD_StdDevReq+0x48>)
 800ae74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ae78:	0800aecd 	.word	0x0800aecd
 800ae7c:	0800aee1 	.word	0x0800aee1
 800ae80:	0800aeeb 	.word	0x0800aeeb
 800ae84:	0800aed7 	.word	0x0800aed7
 800ae88:	0800aeeb 	.word	0x0800aeeb
 800ae8c:	0800aeab 	.word	0x0800aeab
 800ae90:	0800aea1 	.word	0x0800aea1
 800ae94:	0800aeeb 	.word	0x0800aeeb
 800ae98:	0800aec3 	.word	0x0800aec3
 800ae9c:	0800aeb5 	.word	0x0800aeb5
      {
        case USB_REQ_GET_DESCRIPTOR:
          USBD_GetDescriptor(pdev, req);
 800aea0:	6839      	ldr	r1, [r7, #0]
 800aea2:	6878      	ldr	r0, [r7, #4]
 800aea4:	f000 f9de 	bl	800b264 <USBD_GetDescriptor>
          break;
 800aea8:	e024      	b.n	800aef4 <USBD_StdDevReq+0xc4>

        case USB_REQ_SET_ADDRESS:
          USBD_SetAddress(pdev, req);
 800aeaa:	6839      	ldr	r1, [r7, #0]
 800aeac:	6878      	ldr	r0, [r7, #4]
 800aeae:	f000 fb55 	bl	800b55c <USBD_SetAddress>
          break;
 800aeb2:	e01f      	b.n	800aef4 <USBD_StdDevReq+0xc4>

        case USB_REQ_SET_CONFIGURATION:
          ret = USBD_SetConfig(pdev, req);
 800aeb4:	6839      	ldr	r1, [r7, #0]
 800aeb6:	6878      	ldr	r0, [r7, #4]
 800aeb8:	f000 fb94 	bl	800b5e4 <USBD_SetConfig>
 800aebc:	4603      	mov	r3, r0
 800aebe:	73fb      	strb	r3, [r7, #15]
          break;
 800aec0:	e018      	b.n	800aef4 <USBD_StdDevReq+0xc4>

        case USB_REQ_GET_CONFIGURATION:
          USBD_GetConfig(pdev, req);
 800aec2:	6839      	ldr	r1, [r7, #0]
 800aec4:	6878      	ldr	r0, [r7, #4]
 800aec6:	f000 fc33 	bl	800b730 <USBD_GetConfig>
          break;
 800aeca:	e013      	b.n	800aef4 <USBD_StdDevReq+0xc4>

        case USB_REQ_GET_STATUS:
          USBD_GetStatus(pdev, req);
 800aecc:	6839      	ldr	r1, [r7, #0]
 800aece:	6878      	ldr	r0, [r7, #4]
 800aed0:	f000 fc64 	bl	800b79c <USBD_GetStatus>
          break;
 800aed4:	e00e      	b.n	800aef4 <USBD_StdDevReq+0xc4>

        case USB_REQ_SET_FEATURE:
          USBD_SetFeature(pdev, req);
 800aed6:	6839      	ldr	r1, [r7, #0]
 800aed8:	6878      	ldr	r0, [r7, #4]
 800aeda:	f000 fc93 	bl	800b804 <USBD_SetFeature>
          break;
 800aede:	e009      	b.n	800aef4 <USBD_StdDevReq+0xc4>

        case USB_REQ_CLEAR_FEATURE:
          USBD_ClrFeature(pdev, req);
 800aee0:	6839      	ldr	r1, [r7, #0]
 800aee2:	6878      	ldr	r0, [r7, #4]
 800aee4:	f000 fca2 	bl	800b82c <USBD_ClrFeature>
          break;
 800aee8:	e004      	b.n	800aef4 <USBD_StdDevReq+0xc4>

        default:
          USBD_CtlError(pdev, req);
 800aeea:	6839      	ldr	r1, [r7, #0]
 800aeec:	6878      	ldr	r0, [r7, #4]
 800aeee:	f000 fcf9 	bl	800b8e4 <USBD_CtlError>
          break;
 800aef2:	bf00      	nop
      }
      break;
 800aef4:	e004      	b.n	800af00 <USBD_StdDevReq+0xd0>

    default:
      USBD_CtlError(pdev, req);
 800aef6:	6839      	ldr	r1, [r7, #0]
 800aef8:	6878      	ldr	r0, [r7, #4]
 800aefa:	f000 fcf3 	bl	800b8e4 <USBD_CtlError>
      break;
 800aefe:	bf00      	nop
  }

  return ret;
 800af00:	7bfb      	ldrb	r3, [r7, #15]
}
 800af02:	4618      	mov	r0, r3
 800af04:	3710      	adds	r7, #16
 800af06:	46bd      	mov	sp, r7
 800af08:	bd80      	pop	{r7, pc}
 800af0a:	bf00      	nop

0800af0c <USBD_StdItfReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdItfReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800af0c:	b580      	push	{r7, lr}
 800af0e:	b084      	sub	sp, #16
 800af10:	af00      	add	r7, sp, #0
 800af12:	6078      	str	r0, [r7, #4]
 800af14:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800af16:	2300      	movs	r3, #0
 800af18:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800af1a:	683b      	ldr	r3, [r7, #0]
 800af1c:	781b      	ldrb	r3, [r3, #0]
 800af1e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800af22:	2b40      	cmp	r3, #64	@ 0x40
 800af24:	d005      	beq.n	800af32 <USBD_StdItfReq+0x26>
 800af26:	2b40      	cmp	r3, #64	@ 0x40
 800af28:	d82f      	bhi.n	800af8a <USBD_StdItfReq+0x7e>
 800af2a:	2b00      	cmp	r3, #0
 800af2c:	d001      	beq.n	800af32 <USBD_StdItfReq+0x26>
 800af2e:	2b20      	cmp	r3, #32
 800af30:	d12b      	bne.n	800af8a <USBD_StdItfReq+0x7e>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
    case USB_REQ_TYPE_STANDARD:
      switch (pdev->dev_state)
 800af32:	687b      	ldr	r3, [r7, #4]
 800af34:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800af38:	b2db      	uxtb	r3, r3
 800af3a:	3b01      	subs	r3, #1
 800af3c:	2b02      	cmp	r3, #2
 800af3e:	d81d      	bhi.n	800af7c <USBD_StdItfReq+0x70>
      {
        case USBD_STATE_DEFAULT:
        case USBD_STATE_ADDRESSED:
        case USBD_STATE_CONFIGURED:

          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800af40:	683b      	ldr	r3, [r7, #0]
 800af42:	889b      	ldrh	r3, [r3, #4]
 800af44:	b2db      	uxtb	r3, r3
 800af46:	2b0f      	cmp	r3, #15
 800af48:	d813      	bhi.n	800af72 <USBD_StdItfReq+0x66>
          {
            ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 800af4a:	687b      	ldr	r3, [r7, #4]
 800af4c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800af50:	689b      	ldr	r3, [r3, #8]
 800af52:	6839      	ldr	r1, [r7, #0]
 800af54:	6878      	ldr	r0, [r7, #4]
 800af56:	4798      	blx	r3
 800af58:	4603      	mov	r3, r0
 800af5a:	73fb      	strb	r3, [r7, #15]

            if ((req->wLength == 0U) && (ret == USBD_OK))
 800af5c:	683b      	ldr	r3, [r7, #0]
 800af5e:	88db      	ldrh	r3, [r3, #6]
 800af60:	2b00      	cmp	r3, #0
 800af62:	d110      	bne.n	800af86 <USBD_StdItfReq+0x7a>
 800af64:	7bfb      	ldrb	r3, [r7, #15]
 800af66:	2b00      	cmp	r3, #0
 800af68:	d10d      	bne.n	800af86 <USBD_StdItfReq+0x7a>
            {
              (void)USBD_CtlSendStatus(pdev);
 800af6a:	6878      	ldr	r0, [r7, #4]
 800af6c:	f000 fd85 	bl	800ba7a <USBD_CtlSendStatus>
          }
          else
          {
            USBD_CtlError(pdev, req);
          }
          break;
 800af70:	e009      	b.n	800af86 <USBD_StdItfReq+0x7a>
            USBD_CtlError(pdev, req);
 800af72:	6839      	ldr	r1, [r7, #0]
 800af74:	6878      	ldr	r0, [r7, #4]
 800af76:	f000 fcb5 	bl	800b8e4 <USBD_CtlError>
          break;
 800af7a:	e004      	b.n	800af86 <USBD_StdItfReq+0x7a>

        default:
          USBD_CtlError(pdev, req);
 800af7c:	6839      	ldr	r1, [r7, #0]
 800af7e:	6878      	ldr	r0, [r7, #4]
 800af80:	f000 fcb0 	bl	800b8e4 <USBD_CtlError>
          break;
 800af84:	e000      	b.n	800af88 <USBD_StdItfReq+0x7c>
          break;
 800af86:	bf00      	nop
      }
      break;
 800af88:	e004      	b.n	800af94 <USBD_StdItfReq+0x88>

    default:
      USBD_CtlError(pdev, req);
 800af8a:	6839      	ldr	r1, [r7, #0]
 800af8c:	6878      	ldr	r0, [r7, #4]
 800af8e:	f000 fca9 	bl	800b8e4 <USBD_CtlError>
      break;
 800af92:	bf00      	nop
  }

  return ret;
 800af94:	7bfb      	ldrb	r3, [r7, #15]
}
 800af96:	4618      	mov	r0, r3
 800af98:	3710      	adds	r7, #16
 800af9a:	46bd      	mov	sp, r7
 800af9c:	bd80      	pop	{r7, pc}

0800af9e <USBD_StdEPReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdEPReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800af9e:	b580      	push	{r7, lr}
 800afa0:	b084      	sub	sp, #16
 800afa2:	af00      	add	r7, sp, #0
 800afa4:	6078      	str	r0, [r7, #4]
 800afa6:	6039      	str	r1, [r7, #0]
  USBD_EndpointTypeDef *pep;
  uint8_t ep_addr;
  USBD_StatusTypeDef ret = USBD_OK;
 800afa8:	2300      	movs	r3, #0
 800afaa:	73fb      	strb	r3, [r7, #15]
  ep_addr = LOBYTE(req->wIndex);
 800afac:	683b      	ldr	r3, [r7, #0]
 800afae:	889b      	ldrh	r3, [r3, #4]
 800afb0:	73bb      	strb	r3, [r7, #14]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800afb2:	683b      	ldr	r3, [r7, #0]
 800afb4:	781b      	ldrb	r3, [r3, #0]
 800afb6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800afba:	2b40      	cmp	r3, #64	@ 0x40
 800afbc:	d007      	beq.n	800afce <USBD_StdEPReq+0x30>
 800afbe:	2b40      	cmp	r3, #64	@ 0x40
 800afc0:	f200 8145 	bhi.w	800b24e <USBD_StdEPReq+0x2b0>
 800afc4:	2b00      	cmp	r3, #0
 800afc6:	d00c      	beq.n	800afe2 <USBD_StdEPReq+0x44>
 800afc8:	2b20      	cmp	r3, #32
 800afca:	f040 8140 	bne.w	800b24e <USBD_StdEPReq+0x2b0>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 800afce:	687b      	ldr	r3, [r7, #4]
 800afd0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800afd4:	689b      	ldr	r3, [r3, #8]
 800afd6:	6839      	ldr	r1, [r7, #0]
 800afd8:	6878      	ldr	r0, [r7, #4]
 800afda:	4798      	blx	r3
 800afdc:	4603      	mov	r3, r0
 800afde:	73fb      	strb	r3, [r7, #15]
      break;
 800afe0:	e13a      	b.n	800b258 <USBD_StdEPReq+0x2ba>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 800afe2:	683b      	ldr	r3, [r7, #0]
 800afe4:	785b      	ldrb	r3, [r3, #1]
 800afe6:	2b03      	cmp	r3, #3
 800afe8:	d007      	beq.n	800affa <USBD_StdEPReq+0x5c>
 800afea:	2b03      	cmp	r3, #3
 800afec:	f300 8129 	bgt.w	800b242 <USBD_StdEPReq+0x2a4>
 800aff0:	2b00      	cmp	r3, #0
 800aff2:	d07f      	beq.n	800b0f4 <USBD_StdEPReq+0x156>
 800aff4:	2b01      	cmp	r3, #1
 800aff6:	d03c      	beq.n	800b072 <USBD_StdEPReq+0xd4>
 800aff8:	e123      	b.n	800b242 <USBD_StdEPReq+0x2a4>
      {
        case USB_REQ_SET_FEATURE:
          switch (pdev->dev_state)
 800affa:	687b      	ldr	r3, [r7, #4]
 800affc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b000:	b2db      	uxtb	r3, r3
 800b002:	2b02      	cmp	r3, #2
 800b004:	d002      	beq.n	800b00c <USBD_StdEPReq+0x6e>
 800b006:	2b03      	cmp	r3, #3
 800b008:	d016      	beq.n	800b038 <USBD_StdEPReq+0x9a>
 800b00a:	e02c      	b.n	800b066 <USBD_StdEPReq+0xc8>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800b00c:	7bbb      	ldrb	r3, [r7, #14]
 800b00e:	2b00      	cmp	r3, #0
 800b010:	d00d      	beq.n	800b02e <USBD_StdEPReq+0x90>
 800b012:	7bbb      	ldrb	r3, [r7, #14]
 800b014:	2b80      	cmp	r3, #128	@ 0x80
 800b016:	d00a      	beq.n	800b02e <USBD_StdEPReq+0x90>
              {
                (void)USBD_LL_StallEP(pdev, ep_addr);
 800b018:	7bbb      	ldrb	r3, [r7, #14]
 800b01a:	4619      	mov	r1, r3
 800b01c:	6878      	ldr	r0, [r7, #4]
 800b01e:	f000 ff29 	bl	800be74 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800b022:	2180      	movs	r1, #128	@ 0x80
 800b024:	6878      	ldr	r0, [r7, #4]
 800b026:	f000 ff25 	bl	800be74 <USBD_LL_StallEP>
 800b02a:	bf00      	nop
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 800b02c:	e020      	b.n	800b070 <USBD_StdEPReq+0xd2>
                USBD_CtlError(pdev, req);
 800b02e:	6839      	ldr	r1, [r7, #0]
 800b030:	6878      	ldr	r0, [r7, #4]
 800b032:	f000 fc57 	bl	800b8e4 <USBD_CtlError>
              break;
 800b036:	e01b      	b.n	800b070 <USBD_StdEPReq+0xd2>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 800b038:	683b      	ldr	r3, [r7, #0]
 800b03a:	885b      	ldrh	r3, [r3, #2]
 800b03c:	2b00      	cmp	r3, #0
 800b03e:	d10e      	bne.n	800b05e <USBD_StdEPReq+0xc0>
              {
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 800b040:	7bbb      	ldrb	r3, [r7, #14]
 800b042:	2b00      	cmp	r3, #0
 800b044:	d00b      	beq.n	800b05e <USBD_StdEPReq+0xc0>
 800b046:	7bbb      	ldrb	r3, [r7, #14]
 800b048:	2b80      	cmp	r3, #128	@ 0x80
 800b04a:	d008      	beq.n	800b05e <USBD_StdEPReq+0xc0>
 800b04c:	683b      	ldr	r3, [r7, #0]
 800b04e:	88db      	ldrh	r3, [r3, #6]
 800b050:	2b00      	cmp	r3, #0
 800b052:	d104      	bne.n	800b05e <USBD_StdEPReq+0xc0>
                {
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 800b054:	7bbb      	ldrb	r3, [r7, #14]
 800b056:	4619      	mov	r1, r3
 800b058:	6878      	ldr	r0, [r7, #4]
 800b05a:	f000 ff0b 	bl	800be74 <USBD_LL_StallEP>
                }
              }
              (void)USBD_CtlSendStatus(pdev);
 800b05e:	6878      	ldr	r0, [r7, #4]
 800b060:	f000 fd0b 	bl	800ba7a <USBD_CtlSendStatus>

              break;
 800b064:	e004      	b.n	800b070 <USBD_StdEPReq+0xd2>

            default:
              USBD_CtlError(pdev, req);
 800b066:	6839      	ldr	r1, [r7, #0]
 800b068:	6878      	ldr	r0, [r7, #4]
 800b06a:	f000 fc3b 	bl	800b8e4 <USBD_CtlError>
              break;
 800b06e:	bf00      	nop
          }
          break;
 800b070:	e0ec      	b.n	800b24c <USBD_StdEPReq+0x2ae>

        case USB_REQ_CLEAR_FEATURE:

          switch (pdev->dev_state)
 800b072:	687b      	ldr	r3, [r7, #4]
 800b074:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b078:	b2db      	uxtb	r3, r3
 800b07a:	2b02      	cmp	r3, #2
 800b07c:	d002      	beq.n	800b084 <USBD_StdEPReq+0xe6>
 800b07e:	2b03      	cmp	r3, #3
 800b080:	d016      	beq.n	800b0b0 <USBD_StdEPReq+0x112>
 800b082:	e030      	b.n	800b0e6 <USBD_StdEPReq+0x148>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800b084:	7bbb      	ldrb	r3, [r7, #14]
 800b086:	2b00      	cmp	r3, #0
 800b088:	d00d      	beq.n	800b0a6 <USBD_StdEPReq+0x108>
 800b08a:	7bbb      	ldrb	r3, [r7, #14]
 800b08c:	2b80      	cmp	r3, #128	@ 0x80
 800b08e:	d00a      	beq.n	800b0a6 <USBD_StdEPReq+0x108>
              {
                (void)USBD_LL_StallEP(pdev, ep_addr);
 800b090:	7bbb      	ldrb	r3, [r7, #14]
 800b092:	4619      	mov	r1, r3
 800b094:	6878      	ldr	r0, [r7, #4]
 800b096:	f000 feed 	bl	800be74 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800b09a:	2180      	movs	r1, #128	@ 0x80
 800b09c:	6878      	ldr	r0, [r7, #4]
 800b09e:	f000 fee9 	bl	800be74 <USBD_LL_StallEP>
 800b0a2:	bf00      	nop
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 800b0a4:	e025      	b.n	800b0f2 <USBD_StdEPReq+0x154>
                USBD_CtlError(pdev, req);
 800b0a6:	6839      	ldr	r1, [r7, #0]
 800b0a8:	6878      	ldr	r0, [r7, #4]
 800b0aa:	f000 fc1b 	bl	800b8e4 <USBD_CtlError>
              break;
 800b0ae:	e020      	b.n	800b0f2 <USBD_StdEPReq+0x154>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 800b0b0:	683b      	ldr	r3, [r7, #0]
 800b0b2:	885b      	ldrh	r3, [r3, #2]
 800b0b4:	2b00      	cmp	r3, #0
 800b0b6:	d11b      	bne.n	800b0f0 <USBD_StdEPReq+0x152>
              {
                if ((ep_addr & 0x7FU) != 0x00U)
 800b0b8:	7bbb      	ldrb	r3, [r7, #14]
 800b0ba:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800b0be:	2b00      	cmp	r3, #0
 800b0c0:	d004      	beq.n	800b0cc <USBD_StdEPReq+0x12e>
                {
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 800b0c2:	7bbb      	ldrb	r3, [r7, #14]
 800b0c4:	4619      	mov	r1, r3
 800b0c6:	6878      	ldr	r0, [r7, #4]
 800b0c8:	f000 fef3 	bl	800beb2 <USBD_LL_ClearStallEP>
                }
                (void)USBD_CtlSendStatus(pdev);
 800b0cc:	6878      	ldr	r0, [r7, #4]
 800b0ce:	f000 fcd4 	bl	800ba7a <USBD_CtlSendStatus>
                ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 800b0d2:	687b      	ldr	r3, [r7, #4]
 800b0d4:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b0d8:	689b      	ldr	r3, [r3, #8]
 800b0da:	6839      	ldr	r1, [r7, #0]
 800b0dc:	6878      	ldr	r0, [r7, #4]
 800b0de:	4798      	blx	r3
 800b0e0:	4603      	mov	r3, r0
 800b0e2:	73fb      	strb	r3, [r7, #15]
              }
              break;
 800b0e4:	e004      	b.n	800b0f0 <USBD_StdEPReq+0x152>

            default:
              USBD_CtlError(pdev, req);
 800b0e6:	6839      	ldr	r1, [r7, #0]
 800b0e8:	6878      	ldr	r0, [r7, #4]
 800b0ea:	f000 fbfb 	bl	800b8e4 <USBD_CtlError>
              break;
 800b0ee:	e000      	b.n	800b0f2 <USBD_StdEPReq+0x154>
              break;
 800b0f0:	bf00      	nop
          }
          break;
 800b0f2:	e0ab      	b.n	800b24c <USBD_StdEPReq+0x2ae>

        case USB_REQ_GET_STATUS:
          switch (pdev->dev_state)
 800b0f4:	687b      	ldr	r3, [r7, #4]
 800b0f6:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b0fa:	b2db      	uxtb	r3, r3
 800b0fc:	2b02      	cmp	r3, #2
 800b0fe:	d002      	beq.n	800b106 <USBD_StdEPReq+0x168>
 800b100:	2b03      	cmp	r3, #3
 800b102:	d032      	beq.n	800b16a <USBD_StdEPReq+0x1cc>
 800b104:	e097      	b.n	800b236 <USBD_StdEPReq+0x298>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800b106:	7bbb      	ldrb	r3, [r7, #14]
 800b108:	2b00      	cmp	r3, #0
 800b10a:	d007      	beq.n	800b11c <USBD_StdEPReq+0x17e>
 800b10c:	7bbb      	ldrb	r3, [r7, #14]
 800b10e:	2b80      	cmp	r3, #128	@ 0x80
 800b110:	d004      	beq.n	800b11c <USBD_StdEPReq+0x17e>
              {
                USBD_CtlError(pdev, req);
 800b112:	6839      	ldr	r1, [r7, #0]
 800b114:	6878      	ldr	r0, [r7, #4]
 800b116:	f000 fbe5 	bl	800b8e4 <USBD_CtlError>
                break;
 800b11a:	e091      	b.n	800b240 <USBD_StdEPReq+0x2a2>
              }
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800b11c:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800b120:	2b00      	cmp	r3, #0
 800b122:	da0b      	bge.n	800b13c <USBD_StdEPReq+0x19e>
 800b124:	7bbb      	ldrb	r3, [r7, #14]
 800b126:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800b12a:	4613      	mov	r3, r2
 800b12c:	009b      	lsls	r3, r3, #2
 800b12e:	4413      	add	r3, r2
 800b130:	009b      	lsls	r3, r3, #2
 800b132:	3310      	adds	r3, #16
 800b134:	687a      	ldr	r2, [r7, #4]
 800b136:	4413      	add	r3, r2
 800b138:	3304      	adds	r3, #4
 800b13a:	e00b      	b.n	800b154 <USBD_StdEPReq+0x1b6>
                    &pdev->ep_out[ep_addr & 0x7FU];
 800b13c:	7bbb      	ldrb	r3, [r7, #14]
 800b13e:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800b142:	4613      	mov	r3, r2
 800b144:	009b      	lsls	r3, r3, #2
 800b146:	4413      	add	r3, r2
 800b148:	009b      	lsls	r3, r3, #2
 800b14a:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 800b14e:	687a      	ldr	r2, [r7, #4]
 800b150:	4413      	add	r3, r2
 800b152:	3304      	adds	r3, #4
 800b154:	60bb      	str	r3, [r7, #8]

              pep->status = 0x0000U;
 800b156:	68bb      	ldr	r3, [r7, #8]
 800b158:	2200      	movs	r2, #0
 800b15a:	601a      	str	r2, [r3, #0]

              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800b15c:	68bb      	ldr	r3, [r7, #8]
 800b15e:	2202      	movs	r2, #2
 800b160:	4619      	mov	r1, r3
 800b162:	6878      	ldr	r0, [r7, #4]
 800b164:	f000 fc2f 	bl	800b9c6 <USBD_CtlSendData>
              break;
 800b168:	e06a      	b.n	800b240 <USBD_StdEPReq+0x2a2>

            case USBD_STATE_CONFIGURED:
              if ((ep_addr & 0x80U) == 0x80U)
 800b16a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800b16e:	2b00      	cmp	r3, #0
 800b170:	da11      	bge.n	800b196 <USBD_StdEPReq+0x1f8>
              {
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800b172:	7bbb      	ldrb	r3, [r7, #14]
 800b174:	f003 020f 	and.w	r2, r3, #15
 800b178:	6879      	ldr	r1, [r7, #4]
 800b17a:	4613      	mov	r3, r2
 800b17c:	009b      	lsls	r3, r3, #2
 800b17e:	4413      	add	r3, r2
 800b180:	009b      	lsls	r3, r3, #2
 800b182:	440b      	add	r3, r1
 800b184:	3324      	adds	r3, #36	@ 0x24
 800b186:	881b      	ldrh	r3, [r3, #0]
 800b188:	2b00      	cmp	r3, #0
 800b18a:	d117      	bne.n	800b1bc <USBD_StdEPReq+0x21e>
                {
                  USBD_CtlError(pdev, req);
 800b18c:	6839      	ldr	r1, [r7, #0]
 800b18e:	6878      	ldr	r0, [r7, #4]
 800b190:	f000 fba8 	bl	800b8e4 <USBD_CtlError>
                  break;
 800b194:	e054      	b.n	800b240 <USBD_StdEPReq+0x2a2>
                }
              }
              else
              {
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800b196:	7bbb      	ldrb	r3, [r7, #14]
 800b198:	f003 020f 	and.w	r2, r3, #15
 800b19c:	6879      	ldr	r1, [r7, #4]
 800b19e:	4613      	mov	r3, r2
 800b1a0:	009b      	lsls	r3, r3, #2
 800b1a2:	4413      	add	r3, r2
 800b1a4:	009b      	lsls	r3, r3, #2
 800b1a6:	440b      	add	r3, r1
 800b1a8:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 800b1ac:	881b      	ldrh	r3, [r3, #0]
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	d104      	bne.n	800b1bc <USBD_StdEPReq+0x21e>
                {
                  USBD_CtlError(pdev, req);
 800b1b2:	6839      	ldr	r1, [r7, #0]
 800b1b4:	6878      	ldr	r0, [r7, #4]
 800b1b6:	f000 fb95 	bl	800b8e4 <USBD_CtlError>
                  break;
 800b1ba:	e041      	b.n	800b240 <USBD_StdEPReq+0x2a2>
                }
              }

              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800b1bc:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800b1c0:	2b00      	cmp	r3, #0
 800b1c2:	da0b      	bge.n	800b1dc <USBD_StdEPReq+0x23e>
 800b1c4:	7bbb      	ldrb	r3, [r7, #14]
 800b1c6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800b1ca:	4613      	mov	r3, r2
 800b1cc:	009b      	lsls	r3, r3, #2
 800b1ce:	4413      	add	r3, r2
 800b1d0:	009b      	lsls	r3, r3, #2
 800b1d2:	3310      	adds	r3, #16
 800b1d4:	687a      	ldr	r2, [r7, #4]
 800b1d6:	4413      	add	r3, r2
 800b1d8:	3304      	adds	r3, #4
 800b1da:	e00b      	b.n	800b1f4 <USBD_StdEPReq+0x256>
                    &pdev->ep_out[ep_addr & 0x7FU];
 800b1dc:	7bbb      	ldrb	r3, [r7, #14]
 800b1de:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800b1e2:	4613      	mov	r3, r2
 800b1e4:	009b      	lsls	r3, r3, #2
 800b1e6:	4413      	add	r3, r2
 800b1e8:	009b      	lsls	r3, r3, #2
 800b1ea:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 800b1ee:	687a      	ldr	r2, [r7, #4]
 800b1f0:	4413      	add	r3, r2
 800b1f2:	3304      	adds	r3, #4
 800b1f4:	60bb      	str	r3, [r7, #8]

              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800b1f6:	7bbb      	ldrb	r3, [r7, #14]
 800b1f8:	2b00      	cmp	r3, #0
 800b1fa:	d002      	beq.n	800b202 <USBD_StdEPReq+0x264>
 800b1fc:	7bbb      	ldrb	r3, [r7, #14]
 800b1fe:	2b80      	cmp	r3, #128	@ 0x80
 800b200:	d103      	bne.n	800b20a <USBD_StdEPReq+0x26c>
              {
                pep->status = 0x0000U;
 800b202:	68bb      	ldr	r3, [r7, #8]
 800b204:	2200      	movs	r2, #0
 800b206:	601a      	str	r2, [r3, #0]
 800b208:	e00e      	b.n	800b228 <USBD_StdEPReq+0x28a>
              }
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 800b20a:	7bbb      	ldrb	r3, [r7, #14]
 800b20c:	4619      	mov	r1, r3
 800b20e:	6878      	ldr	r0, [r7, #4]
 800b210:	f000 fe6e 	bl	800bef0 <USBD_LL_IsStallEP>
 800b214:	4603      	mov	r3, r0
 800b216:	2b00      	cmp	r3, #0
 800b218:	d003      	beq.n	800b222 <USBD_StdEPReq+0x284>
              {
                pep->status = 0x0001U;
 800b21a:	68bb      	ldr	r3, [r7, #8]
 800b21c:	2201      	movs	r2, #1
 800b21e:	601a      	str	r2, [r3, #0]
 800b220:	e002      	b.n	800b228 <USBD_StdEPReq+0x28a>
              }
              else
              {
                pep->status = 0x0000U;
 800b222:	68bb      	ldr	r3, [r7, #8]
 800b224:	2200      	movs	r2, #0
 800b226:	601a      	str	r2, [r3, #0]
              }

              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800b228:	68bb      	ldr	r3, [r7, #8]
 800b22a:	2202      	movs	r2, #2
 800b22c:	4619      	mov	r1, r3
 800b22e:	6878      	ldr	r0, [r7, #4]
 800b230:	f000 fbc9 	bl	800b9c6 <USBD_CtlSendData>
              break;
 800b234:	e004      	b.n	800b240 <USBD_StdEPReq+0x2a2>

            default:
              USBD_CtlError(pdev, req);
 800b236:	6839      	ldr	r1, [r7, #0]
 800b238:	6878      	ldr	r0, [r7, #4]
 800b23a:	f000 fb53 	bl	800b8e4 <USBD_CtlError>
              break;
 800b23e:	bf00      	nop
          }
          break;
 800b240:	e004      	b.n	800b24c <USBD_StdEPReq+0x2ae>

        default:
          USBD_CtlError(pdev, req);
 800b242:	6839      	ldr	r1, [r7, #0]
 800b244:	6878      	ldr	r0, [r7, #4]
 800b246:	f000 fb4d 	bl	800b8e4 <USBD_CtlError>
          break;
 800b24a:	bf00      	nop
      }
      break;
 800b24c:	e004      	b.n	800b258 <USBD_StdEPReq+0x2ba>

    default:
      USBD_CtlError(pdev, req);
 800b24e:	6839      	ldr	r1, [r7, #0]
 800b250:	6878      	ldr	r0, [r7, #4]
 800b252:	f000 fb47 	bl	800b8e4 <USBD_CtlError>
      break;
 800b256:	bf00      	nop
  }

  return ret;
 800b258:	7bfb      	ldrb	r3, [r7, #15]
}
 800b25a:	4618      	mov	r0, r3
 800b25c:	3710      	adds	r7, #16
 800b25e:	46bd      	mov	sp, r7
 800b260:	bd80      	pop	{r7, pc}
	...

0800b264 <USBD_GetDescriptor>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_GetDescriptor(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b264:	b580      	push	{r7, lr}
 800b266:	b084      	sub	sp, #16
 800b268:	af00      	add	r7, sp, #0
 800b26a:	6078      	str	r0, [r7, #4]
 800b26c:	6039      	str	r1, [r7, #0]
  uint16_t len = 0U;
 800b26e:	2300      	movs	r3, #0
 800b270:	813b      	strh	r3, [r7, #8]
  uint8_t *pbuf = NULL;
 800b272:	2300      	movs	r3, #0
 800b274:	60fb      	str	r3, [r7, #12]
  uint8_t err = 0U;
 800b276:	2300      	movs	r3, #0
 800b278:	72fb      	strb	r3, [r7, #11]

  switch (req->wValue >> 8)
 800b27a:	683b      	ldr	r3, [r7, #0]
 800b27c:	885b      	ldrh	r3, [r3, #2]
 800b27e:	0a1b      	lsrs	r3, r3, #8
 800b280:	b29b      	uxth	r3, r3
 800b282:	3b01      	subs	r3, #1
 800b284:	2b06      	cmp	r3, #6
 800b286:	f200 813b 	bhi.w	800b500 <USBD_GetDescriptor+0x29c>
 800b28a:	a201      	add	r2, pc, #4	@ (adr r2, 800b290 <USBD_GetDescriptor+0x2c>)
 800b28c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b290:	0800b2ad 	.word	0x0800b2ad
 800b294:	0800b2c5 	.word	0x0800b2c5
 800b298:	0800b305 	.word	0x0800b305
 800b29c:	0800b501 	.word	0x0800b501
 800b2a0:	0800b501 	.word	0x0800b501
 800b2a4:	0800b4a1 	.word	0x0800b4a1
 800b2a8:	0800b4cd 	.word	0x0800b4cd
        err++;
      }
      break;
#endif
    case USB_DESC_TYPE_DEVICE:
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 800b2ac:	687b      	ldr	r3, [r7, #4]
 800b2ae:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b2b2:	681b      	ldr	r3, [r3, #0]
 800b2b4:	687a      	ldr	r2, [r7, #4]
 800b2b6:	7c12      	ldrb	r2, [r2, #16]
 800b2b8:	f107 0108 	add.w	r1, r7, #8
 800b2bc:	4610      	mov	r0, r2
 800b2be:	4798      	blx	r3
 800b2c0:	60f8      	str	r0, [r7, #12]
      break;
 800b2c2:	e125      	b.n	800b510 <USBD_GetDescriptor+0x2ac>

    case USB_DESC_TYPE_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	7c1b      	ldrb	r3, [r3, #16]
 800b2c8:	2b00      	cmp	r3, #0
 800b2ca:	d10d      	bne.n	800b2e8 <USBD_GetDescriptor+0x84>
      {
        pbuf = pdev->pClass->GetHSConfigDescriptor(&len);
 800b2cc:	687b      	ldr	r3, [r7, #4]
 800b2ce:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b2d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b2d4:	f107 0208 	add.w	r2, r7, #8
 800b2d8:	4610      	mov	r0, r2
 800b2da:	4798      	blx	r3
 800b2dc:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800b2de:	68fb      	ldr	r3, [r7, #12]
 800b2e0:	3301      	adds	r3, #1
 800b2e2:	2202      	movs	r2, #2
 800b2e4:	701a      	strb	r2, [r3, #0]
      else
      {
        pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
      }
      break;
 800b2e6:	e113      	b.n	800b510 <USBD_GetDescriptor+0x2ac>
        pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
 800b2e8:	687b      	ldr	r3, [r7, #4]
 800b2ea:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b2ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2f0:	f107 0208 	add.w	r2, r7, #8
 800b2f4:	4610      	mov	r0, r2
 800b2f6:	4798      	blx	r3
 800b2f8:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800b2fa:	68fb      	ldr	r3, [r7, #12]
 800b2fc:	3301      	adds	r3, #1
 800b2fe:	2202      	movs	r2, #2
 800b300:	701a      	strb	r2, [r3, #0]
      break;
 800b302:	e105      	b.n	800b510 <USBD_GetDescriptor+0x2ac>

    case USB_DESC_TYPE_STRING:
      switch ((uint8_t)(req->wValue))
 800b304:	683b      	ldr	r3, [r7, #0]
 800b306:	885b      	ldrh	r3, [r3, #2]
 800b308:	b2db      	uxtb	r3, r3
 800b30a:	2b05      	cmp	r3, #5
 800b30c:	f200 80ac 	bhi.w	800b468 <USBD_GetDescriptor+0x204>
 800b310:	a201      	add	r2, pc, #4	@ (adr r2, 800b318 <USBD_GetDescriptor+0xb4>)
 800b312:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b316:	bf00      	nop
 800b318:	0800b331 	.word	0x0800b331
 800b31c:	0800b365 	.word	0x0800b365
 800b320:	0800b399 	.word	0x0800b399
 800b324:	0800b3cd 	.word	0x0800b3cd
 800b328:	0800b401 	.word	0x0800b401
 800b32c:	0800b435 	.word	0x0800b435
      {
        case USBD_IDX_LANGID_STR:
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 800b330:	687b      	ldr	r3, [r7, #4]
 800b332:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b336:	685b      	ldr	r3, [r3, #4]
 800b338:	2b00      	cmp	r3, #0
 800b33a:	d00b      	beq.n	800b354 <USBD_GetDescriptor+0xf0>
          {
            pbuf = pdev->pDesc->GetLangIDStrDescriptor(pdev->dev_speed, &len);
 800b33c:	687b      	ldr	r3, [r7, #4]
 800b33e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b342:	685b      	ldr	r3, [r3, #4]
 800b344:	687a      	ldr	r2, [r7, #4]
 800b346:	7c12      	ldrb	r2, [r2, #16]
 800b348:	f107 0108 	add.w	r1, r7, #8
 800b34c:	4610      	mov	r0, r2
 800b34e:	4798      	blx	r3
 800b350:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800b352:	e0a4      	b.n	800b49e <USBD_GetDescriptor+0x23a>
            USBD_CtlError(pdev, req);
 800b354:	6839      	ldr	r1, [r7, #0]
 800b356:	6878      	ldr	r0, [r7, #4]
 800b358:	f000 fac4 	bl	800b8e4 <USBD_CtlError>
            err++;
 800b35c:	7afb      	ldrb	r3, [r7, #11]
 800b35e:	3301      	adds	r3, #1
 800b360:	72fb      	strb	r3, [r7, #11]
          break;
 800b362:	e09c      	b.n	800b49e <USBD_GetDescriptor+0x23a>

        case USBD_IDX_MFC_STR:
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800b364:	687b      	ldr	r3, [r7, #4]
 800b366:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b36a:	689b      	ldr	r3, [r3, #8]
 800b36c:	2b00      	cmp	r3, #0
 800b36e:	d00b      	beq.n	800b388 <USBD_GetDescriptor+0x124>
          {
            pbuf = pdev->pDesc->GetManufacturerStrDescriptor(pdev->dev_speed, &len);
 800b370:	687b      	ldr	r3, [r7, #4]
 800b372:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b376:	689b      	ldr	r3, [r3, #8]
 800b378:	687a      	ldr	r2, [r7, #4]
 800b37a:	7c12      	ldrb	r2, [r2, #16]
 800b37c:	f107 0108 	add.w	r1, r7, #8
 800b380:	4610      	mov	r0, r2
 800b382:	4798      	blx	r3
 800b384:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800b386:	e08a      	b.n	800b49e <USBD_GetDescriptor+0x23a>
            USBD_CtlError(pdev, req);
 800b388:	6839      	ldr	r1, [r7, #0]
 800b38a:	6878      	ldr	r0, [r7, #4]
 800b38c:	f000 faaa 	bl	800b8e4 <USBD_CtlError>
            err++;
 800b390:	7afb      	ldrb	r3, [r7, #11]
 800b392:	3301      	adds	r3, #1
 800b394:	72fb      	strb	r3, [r7, #11]
          break;
 800b396:	e082      	b.n	800b49e <USBD_GetDescriptor+0x23a>

        case USBD_IDX_PRODUCT_STR:
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800b398:	687b      	ldr	r3, [r7, #4]
 800b39a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b39e:	68db      	ldr	r3, [r3, #12]
 800b3a0:	2b00      	cmp	r3, #0
 800b3a2:	d00b      	beq.n	800b3bc <USBD_GetDescriptor+0x158>
          {
            pbuf = pdev->pDesc->GetProductStrDescriptor(pdev->dev_speed, &len);
 800b3a4:	687b      	ldr	r3, [r7, #4]
 800b3a6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b3aa:	68db      	ldr	r3, [r3, #12]
 800b3ac:	687a      	ldr	r2, [r7, #4]
 800b3ae:	7c12      	ldrb	r2, [r2, #16]
 800b3b0:	f107 0108 	add.w	r1, r7, #8
 800b3b4:	4610      	mov	r0, r2
 800b3b6:	4798      	blx	r3
 800b3b8:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800b3ba:	e070      	b.n	800b49e <USBD_GetDescriptor+0x23a>
            USBD_CtlError(pdev, req);
 800b3bc:	6839      	ldr	r1, [r7, #0]
 800b3be:	6878      	ldr	r0, [r7, #4]
 800b3c0:	f000 fa90 	bl	800b8e4 <USBD_CtlError>
            err++;
 800b3c4:	7afb      	ldrb	r3, [r7, #11]
 800b3c6:	3301      	adds	r3, #1
 800b3c8:	72fb      	strb	r3, [r7, #11]
          break;
 800b3ca:	e068      	b.n	800b49e <USBD_GetDescriptor+0x23a>

        case USBD_IDX_SERIAL_STR:
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800b3cc:	687b      	ldr	r3, [r7, #4]
 800b3ce:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b3d2:	691b      	ldr	r3, [r3, #16]
 800b3d4:	2b00      	cmp	r3, #0
 800b3d6:	d00b      	beq.n	800b3f0 <USBD_GetDescriptor+0x18c>
          {
            pbuf = pdev->pDesc->GetSerialStrDescriptor(pdev->dev_speed, &len);
 800b3d8:	687b      	ldr	r3, [r7, #4]
 800b3da:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b3de:	691b      	ldr	r3, [r3, #16]
 800b3e0:	687a      	ldr	r2, [r7, #4]
 800b3e2:	7c12      	ldrb	r2, [r2, #16]
 800b3e4:	f107 0108 	add.w	r1, r7, #8
 800b3e8:	4610      	mov	r0, r2
 800b3ea:	4798      	blx	r3
 800b3ec:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800b3ee:	e056      	b.n	800b49e <USBD_GetDescriptor+0x23a>
            USBD_CtlError(pdev, req);
 800b3f0:	6839      	ldr	r1, [r7, #0]
 800b3f2:	6878      	ldr	r0, [r7, #4]
 800b3f4:	f000 fa76 	bl	800b8e4 <USBD_CtlError>
            err++;
 800b3f8:	7afb      	ldrb	r3, [r7, #11]
 800b3fa:	3301      	adds	r3, #1
 800b3fc:	72fb      	strb	r3, [r7, #11]
          break;
 800b3fe:	e04e      	b.n	800b49e <USBD_GetDescriptor+0x23a>

        case USBD_IDX_CONFIG_STR:
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b406:	695b      	ldr	r3, [r3, #20]
 800b408:	2b00      	cmp	r3, #0
 800b40a:	d00b      	beq.n	800b424 <USBD_GetDescriptor+0x1c0>
          {
            pbuf = pdev->pDesc->GetConfigurationStrDescriptor(pdev->dev_speed, &len);
 800b40c:	687b      	ldr	r3, [r7, #4]
 800b40e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b412:	695b      	ldr	r3, [r3, #20]
 800b414:	687a      	ldr	r2, [r7, #4]
 800b416:	7c12      	ldrb	r2, [r2, #16]
 800b418:	f107 0108 	add.w	r1, r7, #8
 800b41c:	4610      	mov	r0, r2
 800b41e:	4798      	blx	r3
 800b420:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800b422:	e03c      	b.n	800b49e <USBD_GetDescriptor+0x23a>
            USBD_CtlError(pdev, req);
 800b424:	6839      	ldr	r1, [r7, #0]
 800b426:	6878      	ldr	r0, [r7, #4]
 800b428:	f000 fa5c 	bl	800b8e4 <USBD_CtlError>
            err++;
 800b42c:	7afb      	ldrb	r3, [r7, #11]
 800b42e:	3301      	adds	r3, #1
 800b430:	72fb      	strb	r3, [r7, #11]
          break;
 800b432:	e034      	b.n	800b49e <USBD_GetDescriptor+0x23a>

        case USBD_IDX_INTERFACE_STR:
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800b434:	687b      	ldr	r3, [r7, #4]
 800b436:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b43a:	699b      	ldr	r3, [r3, #24]
 800b43c:	2b00      	cmp	r3, #0
 800b43e:	d00b      	beq.n	800b458 <USBD_GetDescriptor+0x1f4>
          {
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800b440:	687b      	ldr	r3, [r7, #4]
 800b442:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800b446:	699b      	ldr	r3, [r3, #24]
 800b448:	687a      	ldr	r2, [r7, #4]
 800b44a:	7c12      	ldrb	r2, [r2, #16]
 800b44c:	f107 0108 	add.w	r1, r7, #8
 800b450:	4610      	mov	r0, r2
 800b452:	4798      	blx	r3
 800b454:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800b456:	e022      	b.n	800b49e <USBD_GetDescriptor+0x23a>
            USBD_CtlError(pdev, req);
 800b458:	6839      	ldr	r1, [r7, #0]
 800b45a:	6878      	ldr	r0, [r7, #4]
 800b45c:	f000 fa42 	bl	800b8e4 <USBD_CtlError>
            err++;
 800b460:	7afb      	ldrb	r3, [r7, #11]
 800b462:	3301      	adds	r3, #1
 800b464:	72fb      	strb	r3, [r7, #11]
          break;
 800b466:	e01a      	b.n	800b49e <USBD_GetDescriptor+0x23a>

        default:
#if (USBD_SUPPORT_USER_STRING_DESC == 1U)
          if (pdev->pClass->GetUsrStrDescriptor != NULL)
 800b468:	687b      	ldr	r3, [r7, #4]
 800b46a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b46e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b470:	2b00      	cmp	r3, #0
 800b472:	d00c      	beq.n	800b48e <USBD_GetDescriptor+0x22a>
          {
            pbuf = pdev->pClass->GetUsrStrDescriptor(pdev, (req->wValue), &len);
 800b474:	687b      	ldr	r3, [r7, #4]
 800b476:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b47a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b47c:	683a      	ldr	r2, [r7, #0]
 800b47e:	8852      	ldrh	r2, [r2, #2]
 800b480:	b2d1      	uxtb	r1, r2
 800b482:	f107 0208 	add.w	r2, r7, #8
 800b486:	6878      	ldr	r0, [r7, #4]
 800b488:	4798      	blx	r3
 800b48a:	60f8      	str	r0, [r7, #12]

#if ((USBD_CLASS_USER_STRING_DESC == 0U) && (USBD_SUPPORT_USER_STRING_DESC == 0U))
          USBD_CtlError(pdev, req);
          err++;
#endif
          break;
 800b48c:	e006      	b.n	800b49c <USBD_GetDescriptor+0x238>
            USBD_CtlError(pdev, req);
 800b48e:	6839      	ldr	r1, [r7, #0]
 800b490:	6878      	ldr	r0, [r7, #4]
 800b492:	f000 fa27 	bl	800b8e4 <USBD_CtlError>
            err++;
 800b496:	7afb      	ldrb	r3, [r7, #11]
 800b498:	3301      	adds	r3, #1
 800b49a:	72fb      	strb	r3, [r7, #11]
          break;
 800b49c:	bf00      	nop
      }
      break;
 800b49e:	e037      	b.n	800b510 <USBD_GetDescriptor+0x2ac>

    case USB_DESC_TYPE_DEVICE_QUALIFIER:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	7c1b      	ldrb	r3, [r3, #16]
 800b4a4:	2b00      	cmp	r3, #0
 800b4a6:	d109      	bne.n	800b4bc <USBD_GetDescriptor+0x258>
      {
        pbuf = pdev->pClass->GetDeviceQualifierDescriptor(&len);
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b4ae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b4b0:	f107 0208 	add.w	r2, r7, #8
 800b4b4:	4610      	mov	r0, r2
 800b4b6:	4798      	blx	r3
 800b4b8:	60f8      	str	r0, [r7, #12]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 800b4ba:	e029      	b.n	800b510 <USBD_GetDescriptor+0x2ac>
        USBD_CtlError(pdev, req);
 800b4bc:	6839      	ldr	r1, [r7, #0]
 800b4be:	6878      	ldr	r0, [r7, #4]
 800b4c0:	f000 fa10 	bl	800b8e4 <USBD_CtlError>
        err++;
 800b4c4:	7afb      	ldrb	r3, [r7, #11]
 800b4c6:	3301      	adds	r3, #1
 800b4c8:	72fb      	strb	r3, [r7, #11]
      break;
 800b4ca:	e021      	b.n	800b510 <USBD_GetDescriptor+0x2ac>

    case USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800b4cc:	687b      	ldr	r3, [r7, #4]
 800b4ce:	7c1b      	ldrb	r3, [r3, #16]
 800b4d0:	2b00      	cmp	r3, #0
 800b4d2:	d10d      	bne.n	800b4f0 <USBD_GetDescriptor+0x28c>
      {
        pbuf = pdev->pClass->GetOtherSpeedConfigDescriptor(&len);
 800b4d4:	687b      	ldr	r3, [r7, #4]
 800b4d6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800b4da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b4dc:	f107 0208 	add.w	r2, r7, #8
 800b4e0:	4610      	mov	r0, r2
 800b4e2:	4798      	blx	r3
 800b4e4:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800b4e6:	68fb      	ldr	r3, [r7, #12]
 800b4e8:	3301      	adds	r3, #1
 800b4ea:	2207      	movs	r2, #7
 800b4ec:	701a      	strb	r2, [r3, #0]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 800b4ee:	e00f      	b.n	800b510 <USBD_GetDescriptor+0x2ac>
        USBD_CtlError(pdev, req);
 800b4f0:	6839      	ldr	r1, [r7, #0]
 800b4f2:	6878      	ldr	r0, [r7, #4]
 800b4f4:	f000 f9f6 	bl	800b8e4 <USBD_CtlError>
        err++;
 800b4f8:	7afb      	ldrb	r3, [r7, #11]
 800b4fa:	3301      	adds	r3, #1
 800b4fc:	72fb      	strb	r3, [r7, #11]
      break;
 800b4fe:	e007      	b.n	800b510 <USBD_GetDescriptor+0x2ac>

    default:
      USBD_CtlError(pdev, req);
 800b500:	6839      	ldr	r1, [r7, #0]
 800b502:	6878      	ldr	r0, [r7, #4]
 800b504:	f000 f9ee 	bl	800b8e4 <USBD_CtlError>
      err++;
 800b508:	7afb      	ldrb	r3, [r7, #11]
 800b50a:	3301      	adds	r3, #1
 800b50c:	72fb      	strb	r3, [r7, #11]
      break;
 800b50e:	bf00      	nop
  }

  if (err != 0U)
 800b510:	7afb      	ldrb	r3, [r7, #11]
 800b512:	2b00      	cmp	r3, #0
 800b514:	d11e      	bne.n	800b554 <USBD_GetDescriptor+0x2f0>
  {
    return;
  }

  if (req->wLength != 0U)
 800b516:	683b      	ldr	r3, [r7, #0]
 800b518:	88db      	ldrh	r3, [r3, #6]
 800b51a:	2b00      	cmp	r3, #0
 800b51c:	d016      	beq.n	800b54c <USBD_GetDescriptor+0x2e8>
  {
    if (len != 0U)
 800b51e:	893b      	ldrh	r3, [r7, #8]
 800b520:	2b00      	cmp	r3, #0
 800b522:	d00e      	beq.n	800b542 <USBD_GetDescriptor+0x2de>
    {
      len = MIN(len, req->wLength);
 800b524:	683b      	ldr	r3, [r7, #0]
 800b526:	88da      	ldrh	r2, [r3, #6]
 800b528:	893b      	ldrh	r3, [r7, #8]
 800b52a:	4293      	cmp	r3, r2
 800b52c:	bf28      	it	cs
 800b52e:	4613      	movcs	r3, r2
 800b530:	b29b      	uxth	r3, r3
 800b532:	813b      	strh	r3, [r7, #8]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800b534:	893b      	ldrh	r3, [r7, #8]
 800b536:	461a      	mov	r2, r3
 800b538:	68f9      	ldr	r1, [r7, #12]
 800b53a:	6878      	ldr	r0, [r7, #4]
 800b53c:	f000 fa43 	bl	800b9c6 <USBD_CtlSendData>
 800b540:	e009      	b.n	800b556 <USBD_GetDescriptor+0x2f2>
    }
    else
    {
      USBD_CtlError(pdev, req);
 800b542:	6839      	ldr	r1, [r7, #0]
 800b544:	6878      	ldr	r0, [r7, #4]
 800b546:	f000 f9cd 	bl	800b8e4 <USBD_CtlError>
 800b54a:	e004      	b.n	800b556 <USBD_GetDescriptor+0x2f2>
    }
  }
  else
  {
    (void)USBD_CtlSendStatus(pdev);
 800b54c:	6878      	ldr	r0, [r7, #4]
 800b54e:	f000 fa94 	bl	800ba7a <USBD_CtlSendStatus>
 800b552:	e000      	b.n	800b556 <USBD_GetDescriptor+0x2f2>
    return;
 800b554:	bf00      	nop
  }
}
 800b556:	3710      	adds	r7, #16
 800b558:	46bd      	mov	sp, r7
 800b55a:	bd80      	pop	{r7, pc}

0800b55c <USBD_SetAddress>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_SetAddress(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b55c:	b580      	push	{r7, lr}
 800b55e:	b084      	sub	sp, #16
 800b560:	af00      	add	r7, sp, #0
 800b562:	6078      	str	r0, [r7, #4]
 800b564:	6039      	str	r1, [r7, #0]
  uint8_t  dev_addr;

  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 800b566:	683b      	ldr	r3, [r7, #0]
 800b568:	889b      	ldrh	r3, [r3, #4]
 800b56a:	2b00      	cmp	r3, #0
 800b56c:	d131      	bne.n	800b5d2 <USBD_SetAddress+0x76>
 800b56e:	683b      	ldr	r3, [r7, #0]
 800b570:	88db      	ldrh	r3, [r3, #6]
 800b572:	2b00      	cmp	r3, #0
 800b574:	d12d      	bne.n	800b5d2 <USBD_SetAddress+0x76>
 800b576:	683b      	ldr	r3, [r7, #0]
 800b578:	885b      	ldrh	r3, [r3, #2]
 800b57a:	2b7f      	cmp	r3, #127	@ 0x7f
 800b57c:	d829      	bhi.n	800b5d2 <USBD_SetAddress+0x76>
  {
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800b57e:	683b      	ldr	r3, [r7, #0]
 800b580:	885b      	ldrh	r3, [r3, #2]
 800b582:	b2db      	uxtb	r3, r3
 800b584:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800b588:	73fb      	strb	r3, [r7, #15]

    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b58a:	687b      	ldr	r3, [r7, #4]
 800b58c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b590:	b2db      	uxtb	r3, r3
 800b592:	2b03      	cmp	r3, #3
 800b594:	d104      	bne.n	800b5a0 <USBD_SetAddress+0x44>
    {
      USBD_CtlError(pdev, req);
 800b596:	6839      	ldr	r1, [r7, #0]
 800b598:	6878      	ldr	r0, [r7, #4]
 800b59a:	f000 f9a3 	bl	800b8e4 <USBD_CtlError>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b59e:	e01d      	b.n	800b5dc <USBD_SetAddress+0x80>
    }
    else
    {
      pdev->dev_address = dev_addr;
 800b5a0:	687b      	ldr	r3, [r7, #4]
 800b5a2:	7bfa      	ldrb	r2, [r7, #15]
 800b5a4:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800b5a8:	7bfb      	ldrb	r3, [r7, #15]
 800b5aa:	4619      	mov	r1, r3
 800b5ac:	6878      	ldr	r0, [r7, #4]
 800b5ae:	f000 fccb 	bl	800bf48 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 800b5b2:	6878      	ldr	r0, [r7, #4]
 800b5b4:	f000 fa61 	bl	800ba7a <USBD_CtlSendStatus>

      if (dev_addr != 0U)
 800b5b8:	7bfb      	ldrb	r3, [r7, #15]
 800b5ba:	2b00      	cmp	r3, #0
 800b5bc:	d004      	beq.n	800b5c8 <USBD_SetAddress+0x6c>
      {
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800b5be:	687b      	ldr	r3, [r7, #4]
 800b5c0:	2202      	movs	r2, #2
 800b5c2:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b5c6:	e009      	b.n	800b5dc <USBD_SetAddress+0x80>
      }
      else
      {
        pdev->dev_state = USBD_STATE_DEFAULT;
 800b5c8:	687b      	ldr	r3, [r7, #4]
 800b5ca:	2201      	movs	r2, #1
 800b5cc:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b5d0:	e004      	b.n	800b5dc <USBD_SetAddress+0x80>
      }
    }
  }
  else
  {
    USBD_CtlError(pdev, req);
 800b5d2:	6839      	ldr	r1, [r7, #0]
 800b5d4:	6878      	ldr	r0, [r7, #4]
 800b5d6:	f000 f985 	bl	800b8e4 <USBD_CtlError>
  }
}
 800b5da:	bf00      	nop
 800b5dc:	bf00      	nop
 800b5de:	3710      	adds	r7, #16
 800b5e0:	46bd      	mov	sp, r7
 800b5e2:	bd80      	pop	{r7, pc}

0800b5e4 <USBD_SetConfig>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static USBD_StatusTypeDef USBD_SetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b5e4:	b580      	push	{r7, lr}
 800b5e6:	b084      	sub	sp, #16
 800b5e8:	af00      	add	r7, sp, #0
 800b5ea:	6078      	str	r0, [r7, #4]
 800b5ec:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800b5ee:	2300      	movs	r3, #0
 800b5f0:	73fb      	strb	r3, [r7, #15]
  static uint8_t cfgidx;

  cfgidx = (uint8_t)(req->wValue);
 800b5f2:	683b      	ldr	r3, [r7, #0]
 800b5f4:	885b      	ldrh	r3, [r3, #2]
 800b5f6:	b2da      	uxtb	r2, r3
 800b5f8:	4b4c      	ldr	r3, [pc, #304]	@ (800b72c <USBD_SetConfig+0x148>)
 800b5fa:	701a      	strb	r2, [r3, #0]

  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800b5fc:	4b4b      	ldr	r3, [pc, #300]	@ (800b72c <USBD_SetConfig+0x148>)
 800b5fe:	781b      	ldrb	r3, [r3, #0]
 800b600:	2b01      	cmp	r3, #1
 800b602:	d905      	bls.n	800b610 <USBD_SetConfig+0x2c>
  {
    USBD_CtlError(pdev, req);
 800b604:	6839      	ldr	r1, [r7, #0]
 800b606:	6878      	ldr	r0, [r7, #4]
 800b608:	f000 f96c 	bl	800b8e4 <USBD_CtlError>
    return USBD_FAIL;
 800b60c:	2303      	movs	r3, #3
 800b60e:	e088      	b.n	800b722 <USBD_SetConfig+0x13e>
  }

  switch (pdev->dev_state)
 800b610:	687b      	ldr	r3, [r7, #4]
 800b612:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b616:	b2db      	uxtb	r3, r3
 800b618:	2b02      	cmp	r3, #2
 800b61a:	d002      	beq.n	800b622 <USBD_SetConfig+0x3e>
 800b61c:	2b03      	cmp	r3, #3
 800b61e:	d025      	beq.n	800b66c <USBD_SetConfig+0x88>
 800b620:	e071      	b.n	800b706 <USBD_SetConfig+0x122>
  {
    case USBD_STATE_ADDRESSED:
      if (cfgidx != 0U)
 800b622:	4b42      	ldr	r3, [pc, #264]	@ (800b72c <USBD_SetConfig+0x148>)
 800b624:	781b      	ldrb	r3, [r3, #0]
 800b626:	2b00      	cmp	r3, #0
 800b628:	d01c      	beq.n	800b664 <USBD_SetConfig+0x80>
      {
        pdev->dev_config = cfgidx;
 800b62a:	4b40      	ldr	r3, [pc, #256]	@ (800b72c <USBD_SetConfig+0x148>)
 800b62c:	781b      	ldrb	r3, [r3, #0]
 800b62e:	461a      	mov	r2, r3
 800b630:	687b      	ldr	r3, [r7, #4]
 800b632:	605a      	str	r2, [r3, #4]

        ret = USBD_SetClassConfig(pdev, cfgidx);
 800b634:	4b3d      	ldr	r3, [pc, #244]	@ (800b72c <USBD_SetConfig+0x148>)
 800b636:	781b      	ldrb	r3, [r3, #0]
 800b638:	4619      	mov	r1, r3
 800b63a:	6878      	ldr	r0, [r7, #4]
 800b63c:	f7ff f93b 	bl	800a8b6 <USBD_SetClassConfig>
 800b640:	4603      	mov	r3, r0
 800b642:	73fb      	strb	r3, [r7, #15]

        if (ret != USBD_OK)
 800b644:	7bfb      	ldrb	r3, [r7, #15]
 800b646:	2b00      	cmp	r3, #0
 800b648:	d004      	beq.n	800b654 <USBD_SetConfig+0x70>
        {
          USBD_CtlError(pdev, req);
 800b64a:	6839      	ldr	r1, [r7, #0]
 800b64c:	6878      	ldr	r0, [r7, #4]
 800b64e:	f000 f949 	bl	800b8e4 <USBD_CtlError>
      }
      else
      {
        (void)USBD_CtlSendStatus(pdev);
      }
      break;
 800b652:	e065      	b.n	800b720 <USBD_SetConfig+0x13c>
          (void)USBD_CtlSendStatus(pdev);
 800b654:	6878      	ldr	r0, [r7, #4]
 800b656:	f000 fa10 	bl	800ba7a <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800b65a:	687b      	ldr	r3, [r7, #4]
 800b65c:	2203      	movs	r2, #3
 800b65e:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
      break;
 800b662:	e05d      	b.n	800b720 <USBD_SetConfig+0x13c>
        (void)USBD_CtlSendStatus(pdev);
 800b664:	6878      	ldr	r0, [r7, #4]
 800b666:	f000 fa08 	bl	800ba7a <USBD_CtlSendStatus>
      break;
 800b66a:	e059      	b.n	800b720 <USBD_SetConfig+0x13c>

    case USBD_STATE_CONFIGURED:
      if (cfgidx == 0U)
 800b66c:	4b2f      	ldr	r3, [pc, #188]	@ (800b72c <USBD_SetConfig+0x148>)
 800b66e:	781b      	ldrb	r3, [r3, #0]
 800b670:	2b00      	cmp	r3, #0
 800b672:	d112      	bne.n	800b69a <USBD_SetConfig+0xb6>
      {
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800b674:	687b      	ldr	r3, [r7, #4]
 800b676:	2202      	movs	r2, #2
 800b678:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 800b67c:	4b2b      	ldr	r3, [pc, #172]	@ (800b72c <USBD_SetConfig+0x148>)
 800b67e:	781b      	ldrb	r3, [r3, #0]
 800b680:	461a      	mov	r2, r3
 800b682:	687b      	ldr	r3, [r7, #4]
 800b684:	605a      	str	r2, [r3, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 800b686:	4b29      	ldr	r3, [pc, #164]	@ (800b72c <USBD_SetConfig+0x148>)
 800b688:	781b      	ldrb	r3, [r3, #0]
 800b68a:	4619      	mov	r1, r3
 800b68c:	6878      	ldr	r0, [r7, #4]
 800b68e:	f7ff f92e 	bl	800a8ee <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 800b692:	6878      	ldr	r0, [r7, #4]
 800b694:	f000 f9f1 	bl	800ba7a <USBD_CtlSendStatus>
      }
      else
      {
        (void)USBD_CtlSendStatus(pdev);
      }
      break;
 800b698:	e042      	b.n	800b720 <USBD_SetConfig+0x13c>
      else if (cfgidx != pdev->dev_config)
 800b69a:	4b24      	ldr	r3, [pc, #144]	@ (800b72c <USBD_SetConfig+0x148>)
 800b69c:	781b      	ldrb	r3, [r3, #0]
 800b69e:	461a      	mov	r2, r3
 800b6a0:	687b      	ldr	r3, [r7, #4]
 800b6a2:	685b      	ldr	r3, [r3, #4]
 800b6a4:	429a      	cmp	r2, r3
 800b6a6:	d02a      	beq.n	800b6fe <USBD_SetConfig+0x11a>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800b6a8:	687b      	ldr	r3, [r7, #4]
 800b6aa:	685b      	ldr	r3, [r3, #4]
 800b6ac:	b2db      	uxtb	r3, r3
 800b6ae:	4619      	mov	r1, r3
 800b6b0:	6878      	ldr	r0, [r7, #4]
 800b6b2:	f7ff f91c 	bl	800a8ee <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 800b6b6:	4b1d      	ldr	r3, [pc, #116]	@ (800b72c <USBD_SetConfig+0x148>)
 800b6b8:	781b      	ldrb	r3, [r3, #0]
 800b6ba:	461a      	mov	r2, r3
 800b6bc:	687b      	ldr	r3, [r7, #4]
 800b6be:	605a      	str	r2, [r3, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800b6c0:	4b1a      	ldr	r3, [pc, #104]	@ (800b72c <USBD_SetConfig+0x148>)
 800b6c2:	781b      	ldrb	r3, [r3, #0]
 800b6c4:	4619      	mov	r1, r3
 800b6c6:	6878      	ldr	r0, [r7, #4]
 800b6c8:	f7ff f8f5 	bl	800a8b6 <USBD_SetClassConfig>
 800b6cc:	4603      	mov	r3, r0
 800b6ce:	73fb      	strb	r3, [r7, #15]
        if (ret != USBD_OK)
 800b6d0:	7bfb      	ldrb	r3, [r7, #15]
 800b6d2:	2b00      	cmp	r3, #0
 800b6d4:	d00f      	beq.n	800b6f6 <USBD_SetConfig+0x112>
          USBD_CtlError(pdev, req);
 800b6d6:	6839      	ldr	r1, [r7, #0]
 800b6d8:	6878      	ldr	r0, [r7, #4]
 800b6da:	f000 f903 	bl	800b8e4 <USBD_CtlError>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	685b      	ldr	r3, [r3, #4]
 800b6e2:	b2db      	uxtb	r3, r3
 800b6e4:	4619      	mov	r1, r3
 800b6e6:	6878      	ldr	r0, [r7, #4]
 800b6e8:	f7ff f901 	bl	800a8ee <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800b6ec:	687b      	ldr	r3, [r7, #4]
 800b6ee:	2202      	movs	r2, #2
 800b6f0:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
      break;
 800b6f4:	e014      	b.n	800b720 <USBD_SetConfig+0x13c>
          (void)USBD_CtlSendStatus(pdev);
 800b6f6:	6878      	ldr	r0, [r7, #4]
 800b6f8:	f000 f9bf 	bl	800ba7a <USBD_CtlSendStatus>
      break;
 800b6fc:	e010      	b.n	800b720 <USBD_SetConfig+0x13c>
        (void)USBD_CtlSendStatus(pdev);
 800b6fe:	6878      	ldr	r0, [r7, #4]
 800b700:	f000 f9bb 	bl	800ba7a <USBD_CtlSendStatus>
      break;
 800b704:	e00c      	b.n	800b720 <USBD_SetConfig+0x13c>

    default:
      USBD_CtlError(pdev, req);
 800b706:	6839      	ldr	r1, [r7, #0]
 800b708:	6878      	ldr	r0, [r7, #4]
 800b70a:	f000 f8eb 	bl	800b8e4 <USBD_CtlError>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 800b70e:	4b07      	ldr	r3, [pc, #28]	@ (800b72c <USBD_SetConfig+0x148>)
 800b710:	781b      	ldrb	r3, [r3, #0]
 800b712:	4619      	mov	r1, r3
 800b714:	6878      	ldr	r0, [r7, #4]
 800b716:	f7ff f8ea 	bl	800a8ee <USBD_ClrClassConfig>
      ret = USBD_FAIL;
 800b71a:	2303      	movs	r3, #3
 800b71c:	73fb      	strb	r3, [r7, #15]
      break;
 800b71e:	bf00      	nop
  }

  return ret;
 800b720:	7bfb      	ldrb	r3, [r7, #15]
}
 800b722:	4618      	mov	r0, r3
 800b724:	3710      	adds	r7, #16
 800b726:	46bd      	mov	sp, r7
 800b728:	bd80      	pop	{r7, pc}
 800b72a:	bf00      	nop
 800b72c:	200028b8 	.word	0x200028b8

0800b730 <USBD_GetConfig>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_GetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b730:	b580      	push	{r7, lr}
 800b732:	b082      	sub	sp, #8
 800b734:	af00      	add	r7, sp, #0
 800b736:	6078      	str	r0, [r7, #4]
 800b738:	6039      	str	r1, [r7, #0]
  if (req->wLength != 1U)
 800b73a:	683b      	ldr	r3, [r7, #0]
 800b73c:	88db      	ldrh	r3, [r3, #6]
 800b73e:	2b01      	cmp	r3, #1
 800b740:	d004      	beq.n	800b74c <USBD_GetConfig+0x1c>
  {
    USBD_CtlError(pdev, req);
 800b742:	6839      	ldr	r1, [r7, #0]
 800b744:	6878      	ldr	r0, [r7, #4]
 800b746:	f000 f8cd 	bl	800b8e4 <USBD_CtlError>
      default:
        USBD_CtlError(pdev, req);
        break;
    }
  }
}
 800b74a:	e023      	b.n	800b794 <USBD_GetConfig+0x64>
    switch (pdev->dev_state)
 800b74c:	687b      	ldr	r3, [r7, #4]
 800b74e:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b752:	b2db      	uxtb	r3, r3
 800b754:	2b02      	cmp	r3, #2
 800b756:	dc02      	bgt.n	800b75e <USBD_GetConfig+0x2e>
 800b758:	2b00      	cmp	r3, #0
 800b75a:	dc03      	bgt.n	800b764 <USBD_GetConfig+0x34>
 800b75c:	e015      	b.n	800b78a <USBD_GetConfig+0x5a>
 800b75e:	2b03      	cmp	r3, #3
 800b760:	d00b      	beq.n	800b77a <USBD_GetConfig+0x4a>
 800b762:	e012      	b.n	800b78a <USBD_GetConfig+0x5a>
        pdev->dev_default_config = 0U;
 800b764:	687b      	ldr	r3, [r7, #4]
 800b766:	2200      	movs	r2, #0
 800b768:	609a      	str	r2, [r3, #8]
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 800b76a:	687b      	ldr	r3, [r7, #4]
 800b76c:	3308      	adds	r3, #8
 800b76e:	2201      	movs	r2, #1
 800b770:	4619      	mov	r1, r3
 800b772:	6878      	ldr	r0, [r7, #4]
 800b774:	f000 f927 	bl	800b9c6 <USBD_CtlSendData>
        break;
 800b778:	e00c      	b.n	800b794 <USBD_GetConfig+0x64>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 800b77a:	687b      	ldr	r3, [r7, #4]
 800b77c:	3304      	adds	r3, #4
 800b77e:	2201      	movs	r2, #1
 800b780:	4619      	mov	r1, r3
 800b782:	6878      	ldr	r0, [r7, #4]
 800b784:	f000 f91f 	bl	800b9c6 <USBD_CtlSendData>
        break;
 800b788:	e004      	b.n	800b794 <USBD_GetConfig+0x64>
        USBD_CtlError(pdev, req);
 800b78a:	6839      	ldr	r1, [r7, #0]
 800b78c:	6878      	ldr	r0, [r7, #4]
 800b78e:	f000 f8a9 	bl	800b8e4 <USBD_CtlError>
        break;
 800b792:	bf00      	nop
}
 800b794:	bf00      	nop
 800b796:	3708      	adds	r7, #8
 800b798:	46bd      	mov	sp, r7
 800b79a:	bd80      	pop	{r7, pc}

0800b79c <USBD_GetStatus>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_GetStatus(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b79c:	b580      	push	{r7, lr}
 800b79e:	b082      	sub	sp, #8
 800b7a0:	af00      	add	r7, sp, #0
 800b7a2:	6078      	str	r0, [r7, #4]
 800b7a4:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 800b7a6:	687b      	ldr	r3, [r7, #4]
 800b7a8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b7ac:	b2db      	uxtb	r3, r3
 800b7ae:	3b01      	subs	r3, #1
 800b7b0:	2b02      	cmp	r3, #2
 800b7b2:	d81e      	bhi.n	800b7f2 <USBD_GetStatus+0x56>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wLength != 0x2U)
 800b7b4:	683b      	ldr	r3, [r7, #0]
 800b7b6:	88db      	ldrh	r3, [r3, #6]
 800b7b8:	2b02      	cmp	r3, #2
 800b7ba:	d004      	beq.n	800b7c6 <USBD_GetStatus+0x2a>
      {
        USBD_CtlError(pdev, req);
 800b7bc:	6839      	ldr	r1, [r7, #0]
 800b7be:	6878      	ldr	r0, [r7, #4]
 800b7c0:	f000 f890 	bl	800b8e4 <USBD_CtlError>
        break;
 800b7c4:	e01a      	b.n	800b7fc <USBD_GetStatus+0x60>
      }

#if (USBD_SELF_POWERED == 1U)
      pdev->dev_config_status = USB_CONFIG_SELF_POWERED;
 800b7c6:	687b      	ldr	r3, [r7, #4]
 800b7c8:	2201      	movs	r2, #1
 800b7ca:	60da      	str	r2, [r3, #12]
#else
      pdev->dev_config_status = 0U;
#endif

      if (pdev->dev_remote_wakeup != 0U)
 800b7cc:	687b      	ldr	r3, [r7, #4]
 800b7ce:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 800b7d2:	2b00      	cmp	r3, #0
 800b7d4:	d005      	beq.n	800b7e2 <USBD_GetStatus+0x46>
      {
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800b7d6:	687b      	ldr	r3, [r7, #4]
 800b7d8:	68db      	ldr	r3, [r3, #12]
 800b7da:	f043 0202 	orr.w	r2, r3, #2
 800b7de:	687b      	ldr	r3, [r7, #4]
 800b7e0:	60da      	str	r2, [r3, #12]
      }

      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800b7e2:	687b      	ldr	r3, [r7, #4]
 800b7e4:	330c      	adds	r3, #12
 800b7e6:	2202      	movs	r2, #2
 800b7e8:	4619      	mov	r1, r3
 800b7ea:	6878      	ldr	r0, [r7, #4]
 800b7ec:	f000 f8eb 	bl	800b9c6 <USBD_CtlSendData>
      break;
 800b7f0:	e004      	b.n	800b7fc <USBD_GetStatus+0x60>

    default:
      USBD_CtlError(pdev, req);
 800b7f2:	6839      	ldr	r1, [r7, #0]
 800b7f4:	6878      	ldr	r0, [r7, #4]
 800b7f6:	f000 f875 	bl	800b8e4 <USBD_CtlError>
      break;
 800b7fa:	bf00      	nop
  }
}
 800b7fc:	bf00      	nop
 800b7fe:	3708      	adds	r7, #8
 800b800:	46bd      	mov	sp, r7
 800b802:	bd80      	pop	{r7, pc}

0800b804 <USBD_SetFeature>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_SetFeature(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b804:	b580      	push	{r7, lr}
 800b806:	b082      	sub	sp, #8
 800b808:	af00      	add	r7, sp, #0
 800b80a:	6078      	str	r0, [r7, #4]
 800b80c:	6039      	str	r1, [r7, #0]
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800b80e:	683b      	ldr	r3, [r7, #0]
 800b810:	885b      	ldrh	r3, [r3, #2]
 800b812:	2b01      	cmp	r3, #1
 800b814:	d106      	bne.n	800b824 <USBD_SetFeature+0x20>
  {
    pdev->dev_remote_wakeup = 1U;
 800b816:	687b      	ldr	r3, [r7, #4]
 800b818:	2201      	movs	r2, #1
 800b81a:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
    (void)USBD_CtlSendStatus(pdev);
 800b81e:	6878      	ldr	r0, [r7, #4]
 800b820:	f000 f92b 	bl	800ba7a <USBD_CtlSendStatus>
  }
}
 800b824:	bf00      	nop
 800b826:	3708      	adds	r7, #8
 800b828:	46bd      	mov	sp, r7
 800b82a:	bd80      	pop	{r7, pc}

0800b82c <USBD_ClrFeature>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
static void USBD_ClrFeature(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b82c:	b580      	push	{r7, lr}
 800b82e:	b082      	sub	sp, #8
 800b830:	af00      	add	r7, sp, #0
 800b832:	6078      	str	r0, [r7, #4]
 800b834:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 800b836:	687b      	ldr	r3, [r7, #4]
 800b838:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800b83c:	b2db      	uxtb	r3, r3
 800b83e:	3b01      	subs	r3, #1
 800b840:	2b02      	cmp	r3, #2
 800b842:	d80b      	bhi.n	800b85c <USBD_ClrFeature+0x30>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800b844:	683b      	ldr	r3, [r7, #0]
 800b846:	885b      	ldrh	r3, [r3, #2]
 800b848:	2b01      	cmp	r3, #1
 800b84a:	d10c      	bne.n	800b866 <USBD_ClrFeature+0x3a>
      {
        pdev->dev_remote_wakeup = 0U;
 800b84c:	687b      	ldr	r3, [r7, #4]
 800b84e:	2200      	movs	r2, #0
 800b850:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
        (void)USBD_CtlSendStatus(pdev);
 800b854:	6878      	ldr	r0, [r7, #4]
 800b856:	f000 f910 	bl	800ba7a <USBD_CtlSendStatus>
      }
      break;
 800b85a:	e004      	b.n	800b866 <USBD_ClrFeature+0x3a>

    default:
      USBD_CtlError(pdev, req);
 800b85c:	6839      	ldr	r1, [r7, #0]
 800b85e:	6878      	ldr	r0, [r7, #4]
 800b860:	f000 f840 	bl	800b8e4 <USBD_CtlError>
      break;
 800b864:	e000      	b.n	800b868 <USBD_ClrFeature+0x3c>
      break;
 800b866:	bf00      	nop
  }
}
 800b868:	bf00      	nop
 800b86a:	3708      	adds	r7, #8
 800b86c:	46bd      	mov	sp, r7
 800b86e:	bd80      	pop	{r7, pc}

0800b870 <USBD_ParseSetupRequest>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_ParseSetupRequest(USBD_SetupReqTypedef *req, uint8_t *pdata)
{
 800b870:	b580      	push	{r7, lr}
 800b872:	b084      	sub	sp, #16
 800b874:	af00      	add	r7, sp, #0
 800b876:	6078      	str	r0, [r7, #4]
 800b878:	6039      	str	r1, [r7, #0]
  uint8_t *pbuff = pdata;
 800b87a:	683b      	ldr	r3, [r7, #0]
 800b87c:	60fb      	str	r3, [r7, #12]

  req->bmRequest = *(uint8_t *)(pbuff);
 800b87e:	68fb      	ldr	r3, [r7, #12]
 800b880:	781a      	ldrb	r2, [r3, #0]
 800b882:	687b      	ldr	r3, [r7, #4]
 800b884:	701a      	strb	r2, [r3, #0]

  pbuff++;
 800b886:	68fb      	ldr	r3, [r7, #12]
 800b888:	3301      	adds	r3, #1
 800b88a:	60fb      	str	r3, [r7, #12]
  req->bRequest = *(uint8_t *)(pbuff);
 800b88c:	68fb      	ldr	r3, [r7, #12]
 800b88e:	781a      	ldrb	r2, [r3, #0]
 800b890:	687b      	ldr	r3, [r7, #4]
 800b892:	705a      	strb	r2, [r3, #1]

  pbuff++;
 800b894:	68fb      	ldr	r3, [r7, #12]
 800b896:	3301      	adds	r3, #1
 800b898:	60fb      	str	r3, [r7, #12]
  req->wValue = SWAPBYTE(pbuff);
 800b89a:	68f8      	ldr	r0, [r7, #12]
 800b89c:	f7ff faa9 	bl	800adf2 <SWAPBYTE>
 800b8a0:	4603      	mov	r3, r0
 800b8a2:	461a      	mov	r2, r3
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	805a      	strh	r2, [r3, #2]

  pbuff++;
 800b8a8:	68fb      	ldr	r3, [r7, #12]
 800b8aa:	3301      	adds	r3, #1
 800b8ac:	60fb      	str	r3, [r7, #12]
  pbuff++;
 800b8ae:	68fb      	ldr	r3, [r7, #12]
 800b8b0:	3301      	adds	r3, #1
 800b8b2:	60fb      	str	r3, [r7, #12]
  req->wIndex = SWAPBYTE(pbuff);
 800b8b4:	68f8      	ldr	r0, [r7, #12]
 800b8b6:	f7ff fa9c 	bl	800adf2 <SWAPBYTE>
 800b8ba:	4603      	mov	r3, r0
 800b8bc:	461a      	mov	r2, r3
 800b8be:	687b      	ldr	r3, [r7, #4]
 800b8c0:	809a      	strh	r2, [r3, #4]

  pbuff++;
 800b8c2:	68fb      	ldr	r3, [r7, #12]
 800b8c4:	3301      	adds	r3, #1
 800b8c6:	60fb      	str	r3, [r7, #12]
  pbuff++;
 800b8c8:	68fb      	ldr	r3, [r7, #12]
 800b8ca:	3301      	adds	r3, #1
 800b8cc:	60fb      	str	r3, [r7, #12]
  req->wLength = SWAPBYTE(pbuff);
 800b8ce:	68f8      	ldr	r0, [r7, #12]
 800b8d0:	f7ff fa8f 	bl	800adf2 <SWAPBYTE>
 800b8d4:	4603      	mov	r3, r0
 800b8d6:	461a      	mov	r2, r3
 800b8d8:	687b      	ldr	r3, [r7, #4]
 800b8da:	80da      	strh	r2, [r3, #6]
}
 800b8dc:	bf00      	nop
 800b8de:	3710      	adds	r7, #16
 800b8e0:	46bd      	mov	sp, r7
 800b8e2:	bd80      	pop	{r7, pc}

0800b8e4 <USBD_CtlError>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800b8e4:	b580      	push	{r7, lr}
 800b8e6:	b082      	sub	sp, #8
 800b8e8:	af00      	add	r7, sp, #0
 800b8ea:	6078      	str	r0, [r7, #4]
 800b8ec:	6039      	str	r1, [r7, #0]
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800b8ee:	2180      	movs	r1, #128	@ 0x80
 800b8f0:	6878      	ldr	r0, [r7, #4]
 800b8f2:	f000 fabf 	bl	800be74 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800b8f6:	2100      	movs	r1, #0
 800b8f8:	6878      	ldr	r0, [r7, #4]
 800b8fa:	f000 fabb 	bl	800be74 <USBD_LL_StallEP>
}
 800b8fe:	bf00      	nop
 800b900:	3708      	adds	r7, #8
 800b902:	46bd      	mov	sp, r7
 800b904:	bd80      	pop	{r7, pc}

0800b906 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 800b906:	b580      	push	{r7, lr}
 800b908:	b086      	sub	sp, #24
 800b90a:	af00      	add	r7, sp, #0
 800b90c:	60f8      	str	r0, [r7, #12]
 800b90e:	60b9      	str	r1, [r7, #8]
 800b910:	607a      	str	r2, [r7, #4]
  uint8_t idx = 0U;
 800b912:	2300      	movs	r3, #0
 800b914:	75fb      	strb	r3, [r7, #23]
  uint8_t *pdesc;

  if (desc == NULL)
 800b916:	68fb      	ldr	r3, [r7, #12]
 800b918:	2b00      	cmp	r3, #0
 800b91a:	d036      	beq.n	800b98a <USBD_GetString+0x84>
  {
    return;
  }

  pdesc = desc;
 800b91c:	68fb      	ldr	r3, [r7, #12]
 800b91e:	613b      	str	r3, [r7, #16]
  *len = ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U;
 800b920:	6938      	ldr	r0, [r7, #16]
 800b922:	f000 f836 	bl	800b992 <USBD_GetLen>
 800b926:	4603      	mov	r3, r0
 800b928:	3301      	adds	r3, #1
 800b92a:	b29b      	uxth	r3, r3
 800b92c:	005b      	lsls	r3, r3, #1
 800b92e:	b29a      	uxth	r2, r3
 800b930:	687b      	ldr	r3, [r7, #4]
 800b932:	801a      	strh	r2, [r3, #0]

  unicode[idx] = *(uint8_t *)len;
 800b934:	7dfb      	ldrb	r3, [r7, #23]
 800b936:	68ba      	ldr	r2, [r7, #8]
 800b938:	4413      	add	r3, r2
 800b93a:	687a      	ldr	r2, [r7, #4]
 800b93c:	7812      	ldrb	r2, [r2, #0]
 800b93e:	701a      	strb	r2, [r3, #0]
  idx++;
 800b940:	7dfb      	ldrb	r3, [r7, #23]
 800b942:	3301      	adds	r3, #1
 800b944:	75fb      	strb	r3, [r7, #23]
  unicode[idx] = USB_DESC_TYPE_STRING;
 800b946:	7dfb      	ldrb	r3, [r7, #23]
 800b948:	68ba      	ldr	r2, [r7, #8]
 800b94a:	4413      	add	r3, r2
 800b94c:	2203      	movs	r2, #3
 800b94e:	701a      	strb	r2, [r3, #0]
  idx++;
 800b950:	7dfb      	ldrb	r3, [r7, #23]
 800b952:	3301      	adds	r3, #1
 800b954:	75fb      	strb	r3, [r7, #23]

  while (*pdesc != (uint8_t)'\0')
 800b956:	e013      	b.n	800b980 <USBD_GetString+0x7a>
  {
    unicode[idx] = *pdesc;
 800b958:	7dfb      	ldrb	r3, [r7, #23]
 800b95a:	68ba      	ldr	r2, [r7, #8]
 800b95c:	4413      	add	r3, r2
 800b95e:	693a      	ldr	r2, [r7, #16]
 800b960:	7812      	ldrb	r2, [r2, #0]
 800b962:	701a      	strb	r2, [r3, #0]
    pdesc++;
 800b964:	693b      	ldr	r3, [r7, #16]
 800b966:	3301      	adds	r3, #1
 800b968:	613b      	str	r3, [r7, #16]
    idx++;
 800b96a:	7dfb      	ldrb	r3, [r7, #23]
 800b96c:	3301      	adds	r3, #1
 800b96e:	75fb      	strb	r3, [r7, #23]

    unicode[idx] = 0U;
 800b970:	7dfb      	ldrb	r3, [r7, #23]
 800b972:	68ba      	ldr	r2, [r7, #8]
 800b974:	4413      	add	r3, r2
 800b976:	2200      	movs	r2, #0
 800b978:	701a      	strb	r2, [r3, #0]
    idx++;
 800b97a:	7dfb      	ldrb	r3, [r7, #23]
 800b97c:	3301      	adds	r3, #1
 800b97e:	75fb      	strb	r3, [r7, #23]
  while (*pdesc != (uint8_t)'\0')
 800b980:	693b      	ldr	r3, [r7, #16]
 800b982:	781b      	ldrb	r3, [r3, #0]
 800b984:	2b00      	cmp	r3, #0
 800b986:	d1e7      	bne.n	800b958 <USBD_GetString+0x52>
 800b988:	e000      	b.n	800b98c <USBD_GetString+0x86>
    return;
 800b98a:	bf00      	nop
  }
}
 800b98c:	3718      	adds	r7, #24
 800b98e:	46bd      	mov	sp, r7
 800b990:	bd80      	pop	{r7, pc}

0800b992 <USBD_GetLen>:
  *         return the string length
   * @param  buf : pointer to the ascii string buffer
  * @retval string length
  */
static uint8_t USBD_GetLen(uint8_t *buf)
{
 800b992:	b480      	push	{r7}
 800b994:	b085      	sub	sp, #20
 800b996:	af00      	add	r7, sp, #0
 800b998:	6078      	str	r0, [r7, #4]
  uint8_t  len = 0U;
 800b99a:	2300      	movs	r3, #0
 800b99c:	73fb      	strb	r3, [r7, #15]
  uint8_t *pbuff = buf;
 800b99e:	687b      	ldr	r3, [r7, #4]
 800b9a0:	60bb      	str	r3, [r7, #8]

  while (*pbuff != (uint8_t)'\0')
 800b9a2:	e005      	b.n	800b9b0 <USBD_GetLen+0x1e>
  {
    len++;
 800b9a4:	7bfb      	ldrb	r3, [r7, #15]
 800b9a6:	3301      	adds	r3, #1
 800b9a8:	73fb      	strb	r3, [r7, #15]
    pbuff++;
 800b9aa:	68bb      	ldr	r3, [r7, #8]
 800b9ac:	3301      	adds	r3, #1
 800b9ae:	60bb      	str	r3, [r7, #8]
  while (*pbuff != (uint8_t)'\0')
 800b9b0:	68bb      	ldr	r3, [r7, #8]
 800b9b2:	781b      	ldrb	r3, [r3, #0]
 800b9b4:	2b00      	cmp	r3, #0
 800b9b6:	d1f5      	bne.n	800b9a4 <USBD_GetLen+0x12>
  }

  return len;
 800b9b8:	7bfb      	ldrb	r3, [r7, #15]
}
 800b9ba:	4618      	mov	r0, r3
 800b9bc:	3714      	adds	r7, #20
 800b9be:	46bd      	mov	sp, r7
 800b9c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9c4:	4770      	bx	lr

0800b9c6 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 800b9c6:	b580      	push	{r7, lr}
 800b9c8:	b084      	sub	sp, #16
 800b9ca:	af00      	add	r7, sp, #0
 800b9cc:	60f8      	str	r0, [r7, #12]
 800b9ce:	60b9      	str	r1, [r7, #8]
 800b9d0:	607a      	str	r2, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800b9d2:	68fb      	ldr	r3, [r7, #12]
 800b9d4:	2202      	movs	r2, #2
 800b9d6:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
  pdev->ep_in[0].total_length = len;
 800b9da:	68fb      	ldr	r3, [r7, #12]
 800b9dc:	687a      	ldr	r2, [r7, #4]
 800b9de:	619a      	str	r2, [r3, #24]

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_in[0].rem_length = 0U;
#else
  pdev->ep_in[0].rem_length = len;
 800b9e0:	68fb      	ldr	r3, [r7, #12]
 800b9e2:	687a      	ldr	r2, [r7, #4]
 800b9e4:	61da      	str	r2, [r3, #28]
#endif

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800b9e6:	687b      	ldr	r3, [r7, #4]
 800b9e8:	68ba      	ldr	r2, [r7, #8]
 800b9ea:	2100      	movs	r1, #0
 800b9ec:	68f8      	ldr	r0, [r7, #12]
 800b9ee:	f000 faca 	bl	800bf86 <USBD_LL_Transmit>

  return USBD_OK;
 800b9f2:	2300      	movs	r3, #0
}
 800b9f4:	4618      	mov	r0, r3
 800b9f6:	3710      	adds	r7, #16
 800b9f8:	46bd      	mov	sp, r7
 800b9fa:	bd80      	pop	{r7, pc}

0800b9fc <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800b9fc:	b580      	push	{r7, lr}
 800b9fe:	b084      	sub	sp, #16
 800ba00:	af00      	add	r7, sp, #0
 800ba02:	60f8      	str	r0, [r7, #12]
 800ba04:	60b9      	str	r1, [r7, #8]
 800ba06:	607a      	str	r2, [r7, #4]
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800ba08:	687b      	ldr	r3, [r7, #4]
 800ba0a:	68ba      	ldr	r2, [r7, #8]
 800ba0c:	2100      	movs	r1, #0
 800ba0e:	68f8      	ldr	r0, [r7, #12]
 800ba10:	f000 fab9 	bl	800bf86 <USBD_LL_Transmit>

  return USBD_OK;
 800ba14:	2300      	movs	r3, #0
}
 800ba16:	4618      	mov	r0, r3
 800ba18:	3710      	adds	r7, #16
 800ba1a:	46bd      	mov	sp, r7
 800ba1c:	bd80      	pop	{r7, pc}

0800ba1e <USBD_CtlPrepareRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlPrepareRx(USBD_HandleTypeDef *pdev,
                                     uint8_t *pbuf, uint32_t len)
{
 800ba1e:	b580      	push	{r7, lr}
 800ba20:	b084      	sub	sp, #16
 800ba22:	af00      	add	r7, sp, #0
 800ba24:	60f8      	str	r0, [r7, #12]
 800ba26:	60b9      	str	r1, [r7, #8]
 800ba28:	607a      	str	r2, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_OUT;
 800ba2a:	68fb      	ldr	r3, [r7, #12]
 800ba2c:	2203      	movs	r2, #3
 800ba2e:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
  pdev->ep_out[0].total_length = len;
 800ba32:	68fb      	ldr	r3, [r7, #12]
 800ba34:	687a      	ldr	r2, [r7, #4]
 800ba36:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_out[0].rem_length = 0U;
#else
  pdev->ep_out[0].rem_length = len;
 800ba3a:	68fb      	ldr	r3, [r7, #12]
 800ba3c:	687a      	ldr	r2, [r7, #4]
 800ba3e:	f8c3 215c 	str.w	r2, [r3, #348]	@ 0x15c
#endif

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800ba42:	687b      	ldr	r3, [r7, #4]
 800ba44:	68ba      	ldr	r2, [r7, #8]
 800ba46:	2100      	movs	r1, #0
 800ba48:	68f8      	ldr	r0, [r7, #12]
 800ba4a:	f000 fabd 	bl	800bfc8 <USBD_LL_PrepareReceive>

  return USBD_OK;
 800ba4e:	2300      	movs	r3, #0
}
 800ba50:	4618      	mov	r0, r3
 800ba52:	3710      	adds	r7, #16
 800ba54:	46bd      	mov	sp, r7
 800ba56:	bd80      	pop	{r7, pc}

0800ba58 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 800ba58:	b580      	push	{r7, lr}
 800ba5a:	b084      	sub	sp, #16
 800ba5c:	af00      	add	r7, sp, #0
 800ba5e:	60f8      	str	r0, [r7, #12]
 800ba60:	60b9      	str	r1, [r7, #8]
 800ba62:	607a      	str	r2, [r7, #4]
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800ba64:	687b      	ldr	r3, [r7, #4]
 800ba66:	68ba      	ldr	r2, [r7, #8]
 800ba68:	2100      	movs	r1, #0
 800ba6a:	68f8      	ldr	r0, [r7, #12]
 800ba6c:	f000 faac 	bl	800bfc8 <USBD_LL_PrepareReceive>

  return USBD_OK;
 800ba70:	2300      	movs	r3, #0
}
 800ba72:	4618      	mov	r0, r3
 800ba74:	3710      	adds	r7, #16
 800ba76:	46bd      	mov	sp, r7
 800ba78:	bd80      	pop	{r7, pc}

0800ba7a <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800ba7a:	b580      	push	{r7, lr}
 800ba7c:	b082      	sub	sp, #8
 800ba7e:	af00      	add	r7, sp, #0
 800ba80:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	2204      	movs	r2, #4
 800ba86:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800ba8a:	2300      	movs	r3, #0
 800ba8c:	2200      	movs	r2, #0
 800ba8e:	2100      	movs	r1, #0
 800ba90:	6878      	ldr	r0, [r7, #4]
 800ba92:	f000 fa78 	bl	800bf86 <USBD_LL_Transmit>

  return USBD_OK;
 800ba96:	2300      	movs	r3, #0
}
 800ba98:	4618      	mov	r0, r3
 800ba9a:	3708      	adds	r7, #8
 800ba9c:	46bd      	mov	sp, r7
 800ba9e:	bd80      	pop	{r7, pc}

0800baa0 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800baa0:	b580      	push	{r7, lr}
 800baa2:	b082      	sub	sp, #8
 800baa4:	af00      	add	r7, sp, #0
 800baa6:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800baa8:	687b      	ldr	r3, [r7, #4]
 800baaa:	2205      	movs	r2, #5
 800baac:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800bab0:	2300      	movs	r3, #0
 800bab2:	2200      	movs	r2, #0
 800bab4:	2100      	movs	r1, #0
 800bab6:	6878      	ldr	r0, [r7, #4]
 800bab8:	f000 fa86 	bl	800bfc8 <USBD_LL_PrepareReceive>

  return USBD_OK;
 800babc:	2300      	movs	r3, #0
}
 800babe:	4618      	mov	r0, r3
 800bac0:	3708      	adds	r7, #8
 800bac2:	46bd      	mov	sp, r7
 800bac4:	bd80      	pop	{r7, pc}

0800bac6 <HAL_PCDEx_SetTxFiFoInBytes>:
 800bac6:	b580      	push	{r7, lr}
 800bac8:	b082      	sub	sp, #8
 800baca:	af00      	add	r7, sp, #0
 800bacc:	6078      	str	r0, [r7, #4]
 800bace:	460b      	mov	r3, r1
 800bad0:	70fb      	strb	r3, [r7, #3]
 800bad2:	4613      	mov	r3, r2
 800bad4:	803b      	strh	r3, [r7, #0]
 800bad6:	883b      	ldrh	r3, [r7, #0]
 800bad8:	089b      	lsrs	r3, r3, #2
 800bada:	b29a      	uxth	r2, r3
 800badc:	78fb      	ldrb	r3, [r7, #3]
 800bade:	4619      	mov	r1, r3
 800bae0:	6878      	ldr	r0, [r7, #4]
 800bae2:	f7f8 ffb9 	bl	8004a58 <HAL_PCDEx_SetTxFiFo>
 800bae6:	4603      	mov	r3, r0
 800bae8:	4618      	mov	r0, r3
 800baea:	3708      	adds	r7, #8
 800baec:	46bd      	mov	sp, r7
 800baee:	bd80      	pop	{r7, pc}

0800baf0 <HAL_PCDEx_SetRxFiFoInBytes>:
 800baf0:	b580      	push	{r7, lr}
 800baf2:	b082      	sub	sp, #8
 800baf4:	af00      	add	r7, sp, #0
 800baf6:	6078      	str	r0, [r7, #4]
 800baf8:	460b      	mov	r3, r1
 800bafa:	807b      	strh	r3, [r7, #2]
 800bafc:	887b      	ldrh	r3, [r7, #2]
 800bafe:	089b      	lsrs	r3, r3, #2
 800bb00:	b29b      	uxth	r3, r3
 800bb02:	4619      	mov	r1, r3
 800bb04:	6878      	ldr	r0, [r7, #4]
 800bb06:	f7f8 ffee 	bl	8004ae6 <HAL_PCDEx_SetRxFiFo>
 800bb0a:	4603      	mov	r3, r0
 800bb0c:	4618      	mov	r0, r3
 800bb0e:	3708      	adds	r7, #8
 800bb10:	46bd      	mov	sp, r7
 800bb12:	bd80      	pop	{r7, pc}

0800bb14 <HAL_PCD_SetupStageCallback>:
 800bb14:	b580      	push	{r7, lr}
 800bb16:	b082      	sub	sp, #8
 800bb18:	af00      	add	r7, sp, #0
 800bb1a:	6078      	str	r0, [r7, #4]
 800bb1c:	687b      	ldr	r3, [r7, #4]
 800bb1e:	f8d3 24e0 	ldr.w	r2, [r3, #1248]	@ 0x4e0
 800bb22:	687b      	ldr	r3, [r7, #4]
 800bb24:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800bb28:	4619      	mov	r1, r3
 800bb2a:	4610      	mov	r0, r2
 800bb2c:	f7fe fef7 	bl	800a91e <USBD_LL_SetupStage>
 800bb30:	bf00      	nop
 800bb32:	3708      	adds	r7, #8
 800bb34:	46bd      	mov	sp, r7
 800bb36:	bd80      	pop	{r7, pc}

0800bb38 <HAL_PCD_DataOutStageCallback>:
 800bb38:	b580      	push	{r7, lr}
 800bb3a:	b082      	sub	sp, #8
 800bb3c:	af00      	add	r7, sp, #0
 800bb3e:	6078      	str	r0, [r7, #4]
 800bb40:	460b      	mov	r3, r1
 800bb42:	70fb      	strb	r3, [r7, #3]
 800bb44:	687b      	ldr	r3, [r7, #4]
 800bb46:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	@ 0x4e0
 800bb4a:	78fa      	ldrb	r2, [r7, #3]
 800bb4c:	6879      	ldr	r1, [r7, #4]
 800bb4e:	4613      	mov	r3, r2
 800bb50:	00db      	lsls	r3, r3, #3
 800bb52:	4413      	add	r3, r2
 800bb54:	009b      	lsls	r3, r3, #2
 800bb56:	440b      	add	r3, r1
 800bb58:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 800bb5c:	681a      	ldr	r2, [r3, #0]
 800bb5e:	78fb      	ldrb	r3, [r7, #3]
 800bb60:	4619      	mov	r1, r3
 800bb62:	f7fe ff31 	bl	800a9c8 <USBD_LL_DataOutStage>
 800bb66:	bf00      	nop
 800bb68:	3708      	adds	r7, #8
 800bb6a:	46bd      	mov	sp, r7
 800bb6c:	bd80      	pop	{r7, pc}

0800bb6e <HAL_PCD_DataInStageCallback>:
 800bb6e:	b580      	push	{r7, lr}
 800bb70:	b082      	sub	sp, #8
 800bb72:	af00      	add	r7, sp, #0
 800bb74:	6078      	str	r0, [r7, #4]
 800bb76:	460b      	mov	r3, r1
 800bb78:	70fb      	strb	r3, [r7, #3]
 800bb7a:	687b      	ldr	r3, [r7, #4]
 800bb7c:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	@ 0x4e0
 800bb80:	78fa      	ldrb	r2, [r7, #3]
 800bb82:	6879      	ldr	r1, [r7, #4]
 800bb84:	4613      	mov	r3, r2
 800bb86:	00db      	lsls	r3, r3, #3
 800bb88:	4413      	add	r3, r2
 800bb8a:	009b      	lsls	r3, r3, #2
 800bb8c:	440b      	add	r3, r1
 800bb8e:	3320      	adds	r3, #32
 800bb90:	681a      	ldr	r2, [r3, #0]
 800bb92:	78fb      	ldrb	r3, [r7, #3]
 800bb94:	4619      	mov	r1, r3
 800bb96:	f7fe ff7a 	bl	800aa8e <USBD_LL_DataInStage>
 800bb9a:	bf00      	nop
 800bb9c:	3708      	adds	r7, #8
 800bb9e:	46bd      	mov	sp, r7
 800bba0:	bd80      	pop	{r7, pc}

0800bba2 <HAL_PCD_SOFCallback>:
 800bba2:	b580      	push	{r7, lr}
 800bba4:	b082      	sub	sp, #8
 800bba6:	af00      	add	r7, sp, #0
 800bba8:	6078      	str	r0, [r7, #4]
 800bbaa:	687b      	ldr	r3, [r7, #4]
 800bbac:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 800bbb0:	4618      	mov	r0, r3
 800bbb2:	f7ff f889 	bl	800acc8 <USBD_LL_SOF>
 800bbb6:	bf00      	nop
 800bbb8:	3708      	adds	r7, #8
 800bbba:	46bd      	mov	sp, r7
 800bbbc:	bd80      	pop	{r7, pc}

0800bbbe <HAL_PCD_ResetCallback>:
 800bbbe:	b580      	push	{r7, lr}
 800bbc0:	b084      	sub	sp, #16
 800bbc2:	af00      	add	r7, sp, #0
 800bbc4:	6078      	str	r0, [r7, #4]
 800bbc6:	2301      	movs	r3, #1
 800bbc8:	73fb      	strb	r3, [r7, #15]
 800bbca:	687b      	ldr	r3, [r7, #4]
 800bbcc:	79db      	ldrb	r3, [r3, #7]
 800bbce:	2b02      	cmp	r3, #2
 800bbd0:	d102      	bne.n	800bbd8 <HAL_PCD_ResetCallback+0x1a>
 800bbd2:	2301      	movs	r3, #1
 800bbd4:	73fb      	strb	r3, [r7, #15]
 800bbd6:	e008      	b.n	800bbea <HAL_PCD_ResetCallback+0x2c>
 800bbd8:	687b      	ldr	r3, [r7, #4]
 800bbda:	79db      	ldrb	r3, [r3, #7]
 800bbdc:	2b00      	cmp	r3, #0
 800bbde:	d102      	bne.n	800bbe6 <HAL_PCD_ResetCallback+0x28>
 800bbe0:	2300      	movs	r3, #0
 800bbe2:	73fb      	strb	r3, [r7, #15]
 800bbe4:	e001      	b.n	800bbea <HAL_PCD_ResetCallback+0x2c>
 800bbe6:	f7f5 f847 	bl	8000c78 <Error_Handler>
 800bbea:	687b      	ldr	r3, [r7, #4]
 800bbec:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 800bbf0:	7bfa      	ldrb	r2, [r7, #15]
 800bbf2:	4611      	mov	r1, r2
 800bbf4:	4618      	mov	r0, r3
 800bbf6:	f7ff f829 	bl	800ac4c <USBD_LL_SetSpeed>
 800bbfa:	687b      	ldr	r3, [r7, #4]
 800bbfc:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 800bc00:	4618      	mov	r0, r3
 800bc02:	f7fe ffda 	bl	800abba <USBD_LL_Reset>
 800bc06:	bf00      	nop
 800bc08:	3710      	adds	r7, #16
 800bc0a:	46bd      	mov	sp, r7
 800bc0c:	bd80      	pop	{r7, pc}
	...

0800bc10 <HAL_PCD_SuspendCallback>:
 800bc10:	b580      	push	{r7, lr}
 800bc12:	b082      	sub	sp, #8
 800bc14:	af00      	add	r7, sp, #0
 800bc16:	6078      	str	r0, [r7, #4]
 800bc18:	687b      	ldr	r3, [r7, #4]
 800bc1a:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 800bc1e:	4618      	mov	r0, r3
 800bc20:	f7ff f824 	bl	800ac6c <USBD_LL_Suspend>
 800bc24:	687b      	ldr	r3, [r7, #4]
 800bc26:	681b      	ldr	r3, [r3, #0]
 800bc28:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800bc2c:	681b      	ldr	r3, [r3, #0]
 800bc2e:	687a      	ldr	r2, [r7, #4]
 800bc30:	6812      	ldr	r2, [r2, #0]
 800bc32:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 800bc36:	f043 0301 	orr.w	r3, r3, #1
 800bc3a:	6013      	str	r3, [r2, #0]
 800bc3c:	687b      	ldr	r3, [r7, #4]
 800bc3e:	7adb      	ldrb	r3, [r3, #11]
 800bc40:	2b00      	cmp	r3, #0
 800bc42:	d005      	beq.n	800bc50 <HAL_PCD_SuspendCallback+0x40>
 800bc44:	4b04      	ldr	r3, [pc, #16]	@ (800bc58 <HAL_PCD_SuspendCallback+0x48>)
 800bc46:	691b      	ldr	r3, [r3, #16]
 800bc48:	4a03      	ldr	r2, [pc, #12]	@ (800bc58 <HAL_PCD_SuspendCallback+0x48>)
 800bc4a:	f043 0306 	orr.w	r3, r3, #6
 800bc4e:	6113      	str	r3, [r2, #16]
 800bc50:	bf00      	nop
 800bc52:	3708      	adds	r7, #8
 800bc54:	46bd      	mov	sp, r7
 800bc56:	bd80      	pop	{r7, pc}
 800bc58:	e000ed00 	.word	0xe000ed00

0800bc5c <HAL_PCD_ResumeCallback>:
 800bc5c:	b580      	push	{r7, lr}
 800bc5e:	b082      	sub	sp, #8
 800bc60:	af00      	add	r7, sp, #0
 800bc62:	6078      	str	r0, [r7, #4]
 800bc64:	687b      	ldr	r3, [r7, #4]
 800bc66:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 800bc6a:	4618      	mov	r0, r3
 800bc6c:	f7ff f814 	bl	800ac98 <USBD_LL_Resume>
 800bc70:	bf00      	nop
 800bc72:	3708      	adds	r7, #8
 800bc74:	46bd      	mov	sp, r7
 800bc76:	bd80      	pop	{r7, pc}

0800bc78 <HAL_PCD_ISOOUTIncompleteCallback>:
 800bc78:	b580      	push	{r7, lr}
 800bc7a:	b082      	sub	sp, #8
 800bc7c:	af00      	add	r7, sp, #0
 800bc7e:	6078      	str	r0, [r7, #4]
 800bc80:	460b      	mov	r3, r1
 800bc82:	70fb      	strb	r3, [r7, #3]
 800bc84:	687b      	ldr	r3, [r7, #4]
 800bc86:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 800bc8a:	78fa      	ldrb	r2, [r7, #3]
 800bc8c:	4611      	mov	r1, r2
 800bc8e:	4618      	mov	r0, r3
 800bc90:	f7ff f862 	bl	800ad58 <USBD_LL_IsoOUTIncomplete>
 800bc94:	bf00      	nop
 800bc96:	3708      	adds	r7, #8
 800bc98:	46bd      	mov	sp, r7
 800bc9a:	bd80      	pop	{r7, pc}

0800bc9c <HAL_PCD_ISOINIncompleteCallback>:
 800bc9c:	b580      	push	{r7, lr}
 800bc9e:	b082      	sub	sp, #8
 800bca0:	af00      	add	r7, sp, #0
 800bca2:	6078      	str	r0, [r7, #4]
 800bca4:	460b      	mov	r3, r1
 800bca6:	70fb      	strb	r3, [r7, #3]
 800bca8:	687b      	ldr	r3, [r7, #4]
 800bcaa:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 800bcae:	78fa      	ldrb	r2, [r7, #3]
 800bcb0:	4611      	mov	r1, r2
 800bcb2:	4618      	mov	r0, r3
 800bcb4:	f7ff f82a 	bl	800ad0c <USBD_LL_IsoINIncomplete>
 800bcb8:	bf00      	nop
 800bcba:	3708      	adds	r7, #8
 800bcbc:	46bd      	mov	sp, r7
 800bcbe:	bd80      	pop	{r7, pc}

0800bcc0 <HAL_PCD_ConnectCallback>:
 800bcc0:	b580      	push	{r7, lr}
 800bcc2:	b082      	sub	sp, #8
 800bcc4:	af00      	add	r7, sp, #0
 800bcc6:	6078      	str	r0, [r7, #4]
 800bcc8:	687b      	ldr	r3, [r7, #4]
 800bcca:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 800bcce:	4618      	mov	r0, r3
 800bcd0:	f7ff f868 	bl	800ada4 <USBD_LL_DevConnected>
 800bcd4:	bf00      	nop
 800bcd6:	3708      	adds	r7, #8
 800bcd8:	46bd      	mov	sp, r7
 800bcda:	bd80      	pop	{r7, pc}

0800bcdc <HAL_PCD_DisconnectCallback>:
 800bcdc:	b580      	push	{r7, lr}
 800bcde:	b082      	sub	sp, #8
 800bce0:	af00      	add	r7, sp, #0
 800bce2:	6078      	str	r0, [r7, #4]
 800bce4:	687b      	ldr	r3, [r7, #4]
 800bce6:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 800bcea:	4618      	mov	r0, r3
 800bcec:	f7ff f865 	bl	800adba <USBD_LL_DevDisconnected>
 800bcf0:	bf00      	nop
 800bcf2:	3708      	adds	r7, #8
 800bcf4:	46bd      	mov	sp, r7
 800bcf6:	bd80      	pop	{r7, pc}

0800bcf8 <USBD_LL_Init>:
 800bcf8:	b580      	push	{r7, lr}
 800bcfa:	b084      	sub	sp, #16
 800bcfc:	af00      	add	r7, sp, #0
 800bcfe:	6078      	str	r0, [r7, #4]
 800bd00:	4b27      	ldr	r3, [pc, #156]	@ (800bda0 <USBD_LL_Init+0xa8>)
 800bd02:	4a28      	ldr	r2, [pc, #160]	@ (800bda4 <USBD_LL_Init+0xac>)
 800bd04:	601a      	str	r2, [r3, #0]
 800bd06:	687b      	ldr	r3, [r7, #4]
 800bd08:	781b      	ldrb	r3, [r3, #0]
 800bd0a:	2b00      	cmp	r3, #0
 800bd0c:	d143      	bne.n	800bd96 <USBD_LL_Init+0x9e>
 800bd0e:	4b24      	ldr	r3, [pc, #144]	@ (800bda0 <USBD_LL_Init+0xa8>)
 800bd10:	681b      	ldr	r3, [r3, #0]
 800bd12:	687a      	ldr	r2, [r7, #4]
 800bd14:	f8c3 24e0 	str.w	r2, [r3, #1248]	@ 0x4e0
 800bd18:	4b21      	ldr	r3, [pc, #132]	@ (800bda0 <USBD_LL_Init+0xa8>)
 800bd1a:	681a      	ldr	r2, [r3, #0]
 800bd1c:	687b      	ldr	r3, [r7, #4]
 800bd1e:	f8c3 2310 	str.w	r2, [r3, #784]	@ 0x310
 800bd22:	4b1f      	ldr	r3, [pc, #124]	@ (800bda0 <USBD_LL_Init+0xa8>)
 800bd24:	681b      	ldr	r3, [r3, #0]
 800bd26:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800bd2a:	4618      	mov	r0, r3
 800bd2c:	f7ff fee0 	bl	800baf0 <HAL_PCDEx_SetRxFiFoInBytes>
 800bd30:	4b1b      	ldr	r3, [pc, #108]	@ (800bda0 <USBD_LL_Init+0xa8>)
 800bd32:	681b      	ldr	r3, [r3, #0]
 800bd34:	2240      	movs	r2, #64	@ 0x40
 800bd36:	2100      	movs	r1, #0
 800bd38:	4618      	mov	r0, r3
 800bd3a:	f7ff fec4 	bl	800bac6 <HAL_PCDEx_SetTxFiFoInBytes>
 800bd3e:	4b18      	ldr	r3, [pc, #96]	@ (800bda0 <USBD_LL_Init+0xa8>)
 800bd40:	6818      	ldr	r0, [r3, #0]
 800bd42:	4b19      	ldr	r3, [pc, #100]	@ (800bda8 <USBD_LL_Init+0xb0>)
 800bd44:	781b      	ldrb	r3, [r3, #0]
 800bd46:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800bd4a:	b2db      	uxtb	r3, r3
 800bd4c:	2240      	movs	r2, #64	@ 0x40
 800bd4e:	4619      	mov	r1, r3
 800bd50:	f7ff feb9 	bl	800bac6 <HAL_PCDEx_SetTxFiFoInBytes>
 800bd54:	2300      	movs	r3, #0
 800bd56:	73fb      	strb	r3, [r7, #15]
 800bd58:	e01a      	b.n	800bd90 <USBD_LL_Init+0x98>
 800bd5a:	4b11      	ldr	r3, [pc, #68]	@ (800bda0 <USBD_LL_Init+0xa8>)
 800bd5c:	6818      	ldr	r0, [r3, #0]
 800bd5e:	7bfb      	ldrb	r3, [r7, #15]
 800bd60:	4a12      	ldr	r2, [pc, #72]	@ (800bdac <USBD_LL_Init+0xb4>)
 800bd62:	5cd3      	ldrb	r3, [r2, r3]
 800bd64:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800bd68:	b2db      	uxtb	r3, r3
 800bd6a:	2280      	movs	r2, #128	@ 0x80
 800bd6c:	4619      	mov	r1, r3
 800bd6e:	f7ff feaa 	bl	800bac6 <HAL_PCDEx_SetTxFiFoInBytes>
 800bd72:	4b0b      	ldr	r3, [pc, #44]	@ (800bda0 <USBD_LL_Init+0xa8>)
 800bd74:	6818      	ldr	r0, [r3, #0]
 800bd76:	7bfb      	ldrb	r3, [r7, #15]
 800bd78:	4a0d      	ldr	r2, [pc, #52]	@ (800bdb0 <USBD_LL_Init+0xb8>)
 800bd7a:	5cd3      	ldrb	r3, [r2, r3]
 800bd7c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800bd80:	b2db      	uxtb	r3, r3
 800bd82:	2240      	movs	r2, #64	@ 0x40
 800bd84:	4619      	mov	r1, r3
 800bd86:	f7ff fe9e 	bl	800bac6 <HAL_PCDEx_SetTxFiFoInBytes>
 800bd8a:	7bfb      	ldrb	r3, [r7, #15]
 800bd8c:	3301      	adds	r3, #1
 800bd8e:	73fb      	strb	r3, [r7, #15]
 800bd90:	7bfb      	ldrb	r3, [r7, #15]
 800bd92:	2b00      	cmp	r3, #0
 800bd94:	d0e1      	beq.n	800bd5a <USBD_LL_Init+0x62>
 800bd96:	2300      	movs	r3, #0
 800bd98:	4618      	mov	r0, r3
 800bd9a:	3710      	adds	r7, #16
 800bd9c:	46bd      	mov	sp, r7
 800bd9e:	bd80      	pop	{r7, pc}
 800bda0:	200028bc 	.word	0x200028bc
 800bda4:	20000868 	.word	0x20000868
 800bda8:	200001da 	.word	0x200001da
 800bdac:	20002514 	.word	0x20002514
 800bdb0:	2000251c 	.word	0x2000251c

0800bdb4 <USBD_LL_Start>:
 800bdb4:	b580      	push	{r7, lr}
 800bdb6:	b084      	sub	sp, #16
 800bdb8:	af00      	add	r7, sp, #0
 800bdba:	6078      	str	r0, [r7, #4]
 800bdbc:	2300      	movs	r3, #0
 800bdbe:	73fb      	strb	r3, [r7, #15]
 800bdc0:	2300      	movs	r3, #0
 800bdc2:	73bb      	strb	r3, [r7, #14]
 800bdc4:	687b      	ldr	r3, [r7, #4]
 800bdc6:	f8d3 3310 	ldr.w	r3, [r3, #784]	@ 0x310
 800bdca:	4618      	mov	r0, r3
 800bdcc:	f7f7 fd65 	bl	800389a <HAL_PCD_Start>
 800bdd0:	4603      	mov	r3, r0
 800bdd2:	73fb      	strb	r3, [r7, #15]
 800bdd4:	7bfb      	ldrb	r3, [r7, #15]
 800bdd6:	4618      	mov	r0, r3
 800bdd8:	f000 f92a 	bl	800c030 <USBD_Get_USB_Status>
 800bddc:	4603      	mov	r3, r0
 800bdde:	73bb      	strb	r3, [r7, #14]
 800bde0:	7bbb      	ldrb	r3, [r7, #14]
 800bde2:	4618      	mov	r0, r3
 800bde4:	3710      	adds	r7, #16
 800bde6:	46bd      	mov	sp, r7
 800bde8:	bd80      	pop	{r7, pc}

0800bdea <USBD_LL_OpenEP>:
 800bdea:	b580      	push	{r7, lr}
 800bdec:	b084      	sub	sp, #16
 800bdee:	af00      	add	r7, sp, #0
 800bdf0:	6078      	str	r0, [r7, #4]
 800bdf2:	4608      	mov	r0, r1
 800bdf4:	4611      	mov	r1, r2
 800bdf6:	461a      	mov	r2, r3
 800bdf8:	4603      	mov	r3, r0
 800bdfa:	70fb      	strb	r3, [r7, #3]
 800bdfc:	460b      	mov	r3, r1
 800bdfe:	70bb      	strb	r3, [r7, #2]
 800be00:	4613      	mov	r3, r2
 800be02:	803b      	strh	r3, [r7, #0]
 800be04:	2300      	movs	r3, #0
 800be06:	73fb      	strb	r3, [r7, #15]
 800be08:	2300      	movs	r3, #0
 800be0a:	73bb      	strb	r3, [r7, #14]
 800be0c:	687b      	ldr	r3, [r7, #4]
 800be0e:	f8d3 0310 	ldr.w	r0, [r3, #784]	@ 0x310
 800be12:	78bb      	ldrb	r3, [r7, #2]
 800be14:	883a      	ldrh	r2, [r7, #0]
 800be16:	78f9      	ldrb	r1, [r7, #3]
 800be18:	f7f8 fa39 	bl	800428e <HAL_PCD_EP_Open>
 800be1c:	4603      	mov	r3, r0
 800be1e:	73fb      	strb	r3, [r7, #15]
 800be20:	7bfb      	ldrb	r3, [r7, #15]
 800be22:	4618      	mov	r0, r3
 800be24:	f000 f904 	bl	800c030 <USBD_Get_USB_Status>
 800be28:	4603      	mov	r3, r0
 800be2a:	73bb      	strb	r3, [r7, #14]
 800be2c:	7bbb      	ldrb	r3, [r7, #14]
 800be2e:	4618      	mov	r0, r3
 800be30:	3710      	adds	r7, #16
 800be32:	46bd      	mov	sp, r7
 800be34:	bd80      	pop	{r7, pc}

0800be36 <USBD_LL_CloseEP>:
 800be36:	b580      	push	{r7, lr}
 800be38:	b084      	sub	sp, #16
 800be3a:	af00      	add	r7, sp, #0
 800be3c:	6078      	str	r0, [r7, #4]
 800be3e:	460b      	mov	r3, r1
 800be40:	70fb      	strb	r3, [r7, #3]
 800be42:	2300      	movs	r3, #0
 800be44:	73fb      	strb	r3, [r7, #15]
 800be46:	2300      	movs	r3, #0
 800be48:	73bb      	strb	r3, [r7, #14]
 800be4a:	687b      	ldr	r3, [r7, #4]
 800be4c:	f8d3 3310 	ldr.w	r3, [r3, #784]	@ 0x310
 800be50:	78fa      	ldrb	r2, [r7, #3]
 800be52:	4611      	mov	r1, r2
 800be54:	4618      	mov	r0, r3
 800be56:	f7f8 fa84 	bl	8004362 <HAL_PCD_EP_Close>
 800be5a:	4603      	mov	r3, r0
 800be5c:	73fb      	strb	r3, [r7, #15]
 800be5e:	7bfb      	ldrb	r3, [r7, #15]
 800be60:	4618      	mov	r0, r3
 800be62:	f000 f8e5 	bl	800c030 <USBD_Get_USB_Status>
 800be66:	4603      	mov	r3, r0
 800be68:	73bb      	strb	r3, [r7, #14]
 800be6a:	7bbb      	ldrb	r3, [r7, #14]
 800be6c:	4618      	mov	r0, r3
 800be6e:	3710      	adds	r7, #16
 800be70:	46bd      	mov	sp, r7
 800be72:	bd80      	pop	{r7, pc}

0800be74 <USBD_LL_StallEP>:
 800be74:	b580      	push	{r7, lr}
 800be76:	b084      	sub	sp, #16
 800be78:	af00      	add	r7, sp, #0
 800be7a:	6078      	str	r0, [r7, #4]
 800be7c:	460b      	mov	r3, r1
 800be7e:	70fb      	strb	r3, [r7, #3]
 800be80:	2300      	movs	r3, #0
 800be82:	73fb      	strb	r3, [r7, #15]
 800be84:	2300      	movs	r3, #0
 800be86:	73bb      	strb	r3, [r7, #14]
 800be88:	687b      	ldr	r3, [r7, #4]
 800be8a:	f8d3 3310 	ldr.w	r3, [r3, #784]	@ 0x310
 800be8e:	78fa      	ldrb	r2, [r7, #3]
 800be90:	4611      	mov	r1, r2
 800be92:	4618      	mov	r0, r3
 800be94:	f7f8 fb3c 	bl	8004510 <HAL_PCD_EP_SetStall>
 800be98:	4603      	mov	r3, r0
 800be9a:	73fb      	strb	r3, [r7, #15]
 800be9c:	7bfb      	ldrb	r3, [r7, #15]
 800be9e:	4618      	mov	r0, r3
 800bea0:	f000 f8c6 	bl	800c030 <USBD_Get_USB_Status>
 800bea4:	4603      	mov	r3, r0
 800bea6:	73bb      	strb	r3, [r7, #14]
 800bea8:	7bbb      	ldrb	r3, [r7, #14]
 800beaa:	4618      	mov	r0, r3
 800beac:	3710      	adds	r7, #16
 800beae:	46bd      	mov	sp, r7
 800beb0:	bd80      	pop	{r7, pc}

0800beb2 <USBD_LL_ClearStallEP>:
 800beb2:	b580      	push	{r7, lr}
 800beb4:	b084      	sub	sp, #16
 800beb6:	af00      	add	r7, sp, #0
 800beb8:	6078      	str	r0, [r7, #4]
 800beba:	460b      	mov	r3, r1
 800bebc:	70fb      	strb	r3, [r7, #3]
 800bebe:	2300      	movs	r3, #0
 800bec0:	73fb      	strb	r3, [r7, #15]
 800bec2:	2300      	movs	r3, #0
 800bec4:	73bb      	strb	r3, [r7, #14]
 800bec6:	687b      	ldr	r3, [r7, #4]
 800bec8:	f8d3 3310 	ldr.w	r3, [r3, #784]	@ 0x310
 800becc:	78fa      	ldrb	r2, [r7, #3]
 800bece:	4611      	mov	r1, r2
 800bed0:	4618      	mov	r0, r3
 800bed2:	f7f8 fb80 	bl	80045d6 <HAL_PCD_EP_ClrStall>
 800bed6:	4603      	mov	r3, r0
 800bed8:	73fb      	strb	r3, [r7, #15]
 800beda:	7bfb      	ldrb	r3, [r7, #15]
 800bedc:	4618      	mov	r0, r3
 800bede:	f000 f8a7 	bl	800c030 <USBD_Get_USB_Status>
 800bee2:	4603      	mov	r3, r0
 800bee4:	73bb      	strb	r3, [r7, #14]
 800bee6:	7bbb      	ldrb	r3, [r7, #14]
 800bee8:	4618      	mov	r0, r3
 800beea:	3710      	adds	r7, #16
 800beec:	46bd      	mov	sp, r7
 800beee:	bd80      	pop	{r7, pc}

0800bef0 <USBD_LL_IsStallEP>:
 800bef0:	b480      	push	{r7}
 800bef2:	b085      	sub	sp, #20
 800bef4:	af00      	add	r7, sp, #0
 800bef6:	6078      	str	r0, [r7, #4]
 800bef8:	460b      	mov	r3, r1
 800befa:	70fb      	strb	r3, [r7, #3]
 800befc:	687b      	ldr	r3, [r7, #4]
 800befe:	f8d3 3310 	ldr.w	r3, [r3, #784]	@ 0x310
 800bf02:	60fb      	str	r3, [r7, #12]
 800bf04:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800bf08:	2b00      	cmp	r3, #0
 800bf0a:	da0b      	bge.n	800bf24 <USBD_LL_IsStallEP+0x34>
 800bf0c:	78fb      	ldrb	r3, [r7, #3]
 800bf0e:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800bf12:	68f9      	ldr	r1, [r7, #12]
 800bf14:	4613      	mov	r3, r2
 800bf16:	00db      	lsls	r3, r3, #3
 800bf18:	4413      	add	r3, r2
 800bf1a:	009b      	lsls	r3, r3, #2
 800bf1c:	440b      	add	r3, r1
 800bf1e:	3316      	adds	r3, #22
 800bf20:	781b      	ldrb	r3, [r3, #0]
 800bf22:	e00b      	b.n	800bf3c <USBD_LL_IsStallEP+0x4c>
 800bf24:	78fb      	ldrb	r3, [r7, #3]
 800bf26:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800bf2a:	68f9      	ldr	r1, [r7, #12]
 800bf2c:	4613      	mov	r3, r2
 800bf2e:	00db      	lsls	r3, r3, #3
 800bf30:	4413      	add	r3, r2
 800bf32:	009b      	lsls	r3, r3, #2
 800bf34:	440b      	add	r3, r1
 800bf36:	f203 2356 	addw	r3, r3, #598	@ 0x256
 800bf3a:	781b      	ldrb	r3, [r3, #0]
 800bf3c:	4618      	mov	r0, r3
 800bf3e:	3714      	adds	r7, #20
 800bf40:	46bd      	mov	sp, r7
 800bf42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf46:	4770      	bx	lr

0800bf48 <USBD_LL_SetUSBAddress>:
 800bf48:	b580      	push	{r7, lr}
 800bf4a:	b084      	sub	sp, #16
 800bf4c:	af00      	add	r7, sp, #0
 800bf4e:	6078      	str	r0, [r7, #4]
 800bf50:	460b      	mov	r3, r1
 800bf52:	70fb      	strb	r3, [r7, #3]
 800bf54:	2300      	movs	r3, #0
 800bf56:	73fb      	strb	r3, [r7, #15]
 800bf58:	2300      	movs	r3, #0
 800bf5a:	73bb      	strb	r3, [r7, #14]
 800bf5c:	687b      	ldr	r3, [r7, #4]
 800bf5e:	f8d3 3310 	ldr.w	r3, [r3, #784]	@ 0x310
 800bf62:	78fa      	ldrb	r2, [r7, #3]
 800bf64:	4611      	mov	r1, r2
 800bf66:	4618      	mov	r0, r3
 800bf68:	f7f8 f96d 	bl	8004246 <HAL_PCD_SetAddress>
 800bf6c:	4603      	mov	r3, r0
 800bf6e:	73fb      	strb	r3, [r7, #15]
 800bf70:	7bfb      	ldrb	r3, [r7, #15]
 800bf72:	4618      	mov	r0, r3
 800bf74:	f000 f85c 	bl	800c030 <USBD_Get_USB_Status>
 800bf78:	4603      	mov	r3, r0
 800bf7a:	73bb      	strb	r3, [r7, #14]
 800bf7c:	7bbb      	ldrb	r3, [r7, #14]
 800bf7e:	4618      	mov	r0, r3
 800bf80:	3710      	adds	r7, #16
 800bf82:	46bd      	mov	sp, r7
 800bf84:	bd80      	pop	{r7, pc}

0800bf86 <USBD_LL_Transmit>:
 800bf86:	b580      	push	{r7, lr}
 800bf88:	b086      	sub	sp, #24
 800bf8a:	af00      	add	r7, sp, #0
 800bf8c:	60f8      	str	r0, [r7, #12]
 800bf8e:	607a      	str	r2, [r7, #4]
 800bf90:	603b      	str	r3, [r7, #0]
 800bf92:	460b      	mov	r3, r1
 800bf94:	72fb      	strb	r3, [r7, #11]
 800bf96:	2300      	movs	r3, #0
 800bf98:	75fb      	strb	r3, [r7, #23]
 800bf9a:	2300      	movs	r3, #0
 800bf9c:	75bb      	strb	r3, [r7, #22]
 800bf9e:	68fb      	ldr	r3, [r7, #12]
 800bfa0:	f8d3 0310 	ldr.w	r0, [r3, #784]	@ 0x310
 800bfa4:	7af9      	ldrb	r1, [r7, #11]
 800bfa6:	683b      	ldr	r3, [r7, #0]
 800bfa8:	687a      	ldr	r2, [r7, #4]
 800bfaa:	f7f8 fa77 	bl	800449c <HAL_PCD_EP_Transmit>
 800bfae:	4603      	mov	r3, r0
 800bfb0:	75fb      	strb	r3, [r7, #23]
 800bfb2:	7dfb      	ldrb	r3, [r7, #23]
 800bfb4:	4618      	mov	r0, r3
 800bfb6:	f000 f83b 	bl	800c030 <USBD_Get_USB_Status>
 800bfba:	4603      	mov	r3, r0
 800bfbc:	75bb      	strb	r3, [r7, #22]
 800bfbe:	7dbb      	ldrb	r3, [r7, #22]
 800bfc0:	4618      	mov	r0, r3
 800bfc2:	3718      	adds	r7, #24
 800bfc4:	46bd      	mov	sp, r7
 800bfc6:	bd80      	pop	{r7, pc}

0800bfc8 <USBD_LL_PrepareReceive>:
 800bfc8:	b580      	push	{r7, lr}
 800bfca:	b086      	sub	sp, #24
 800bfcc:	af00      	add	r7, sp, #0
 800bfce:	60f8      	str	r0, [r7, #12]
 800bfd0:	607a      	str	r2, [r7, #4]
 800bfd2:	603b      	str	r3, [r7, #0]
 800bfd4:	460b      	mov	r3, r1
 800bfd6:	72fb      	strb	r3, [r7, #11]
 800bfd8:	2300      	movs	r3, #0
 800bfda:	75fb      	strb	r3, [r7, #23]
 800bfdc:	2300      	movs	r3, #0
 800bfde:	75bb      	strb	r3, [r7, #22]
 800bfe0:	68fb      	ldr	r3, [r7, #12]
 800bfe2:	f8d3 0310 	ldr.w	r0, [r3, #784]	@ 0x310
 800bfe6:	7af9      	ldrb	r1, [r7, #11]
 800bfe8:	683b      	ldr	r3, [r7, #0]
 800bfea:	687a      	ldr	r2, [r7, #4]
 800bfec:	f7f8 fa03 	bl	80043f6 <HAL_PCD_EP_Receive>
 800bff0:	4603      	mov	r3, r0
 800bff2:	75fb      	strb	r3, [r7, #23]
 800bff4:	7dfb      	ldrb	r3, [r7, #23]
 800bff6:	4618      	mov	r0, r3
 800bff8:	f000 f81a 	bl	800c030 <USBD_Get_USB_Status>
 800bffc:	4603      	mov	r3, r0
 800bffe:	75bb      	strb	r3, [r7, #22]
 800c000:	7dbb      	ldrb	r3, [r7, #22]
 800c002:	4618      	mov	r0, r3
 800c004:	3718      	adds	r7, #24
 800c006:	46bd      	mov	sp, r7
 800c008:	bd80      	pop	{r7, pc}

0800c00a <USBD_LL_GetRxDataSize>:
 800c00a:	b580      	push	{r7, lr}
 800c00c:	b082      	sub	sp, #8
 800c00e:	af00      	add	r7, sp, #0
 800c010:	6078      	str	r0, [r7, #4]
 800c012:	460b      	mov	r3, r1
 800c014:	70fb      	strb	r3, [r7, #3]
 800c016:	687b      	ldr	r3, [r7, #4]
 800c018:	f8d3 3310 	ldr.w	r3, [r3, #784]	@ 0x310
 800c01c:	78fa      	ldrb	r2, [r7, #3]
 800c01e:	4611      	mov	r1, r2
 800c020:	4618      	mov	r0, r3
 800c022:	f7f8 fa23 	bl	800446c <HAL_PCD_EP_GetRxCount>
 800c026:	4603      	mov	r3, r0
 800c028:	4618      	mov	r0, r3
 800c02a:	3708      	adds	r7, #8
 800c02c:	46bd      	mov	sp, r7
 800c02e:	bd80      	pop	{r7, pc}

0800c030 <USBD_Get_USB_Status>:
 800c030:	b480      	push	{r7}
 800c032:	b085      	sub	sp, #20
 800c034:	af00      	add	r7, sp, #0
 800c036:	4603      	mov	r3, r0
 800c038:	71fb      	strb	r3, [r7, #7]
 800c03a:	2300      	movs	r3, #0
 800c03c:	73fb      	strb	r3, [r7, #15]
 800c03e:	79fb      	ldrb	r3, [r7, #7]
 800c040:	2b03      	cmp	r3, #3
 800c042:	d817      	bhi.n	800c074 <USBD_Get_USB_Status+0x44>
 800c044:	a201      	add	r2, pc, #4	@ (adr r2, 800c04c <USBD_Get_USB_Status+0x1c>)
 800c046:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c04a:	bf00      	nop
 800c04c:	0800c05d 	.word	0x0800c05d
 800c050:	0800c063 	.word	0x0800c063
 800c054:	0800c069 	.word	0x0800c069
 800c058:	0800c06f 	.word	0x0800c06f
 800c05c:	2300      	movs	r3, #0
 800c05e:	73fb      	strb	r3, [r7, #15]
 800c060:	e00b      	b.n	800c07a <USBD_Get_USB_Status+0x4a>
 800c062:	2303      	movs	r3, #3
 800c064:	73fb      	strb	r3, [r7, #15]
 800c066:	e008      	b.n	800c07a <USBD_Get_USB_Status+0x4a>
 800c068:	2301      	movs	r3, #1
 800c06a:	73fb      	strb	r3, [r7, #15]
 800c06c:	e005      	b.n	800c07a <USBD_Get_USB_Status+0x4a>
 800c06e:	2303      	movs	r3, #3
 800c070:	73fb      	strb	r3, [r7, #15]
 800c072:	e002      	b.n	800c07a <USBD_Get_USB_Status+0x4a>
 800c074:	2303      	movs	r3, #3
 800c076:	73fb      	strb	r3, [r7, #15]
 800c078:	bf00      	nop
 800c07a:	7bfb      	ldrb	r3, [r7, #15]
 800c07c:	4618      	mov	r0, r3
 800c07e:	3714      	adds	r7, #20
 800c080:	46bd      	mov	sp, r7
 800c082:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c086:	4770      	bx	lr

0800c088 <sniprintf>:
 800c088:	b40c      	push	{r2, r3}
 800c08a:	b530      	push	{r4, r5, lr}
 800c08c:	4b18      	ldr	r3, [pc, #96]	@ (800c0f0 <sniprintf+0x68>)
 800c08e:	1e0c      	subs	r4, r1, #0
 800c090:	681d      	ldr	r5, [r3, #0]
 800c092:	b09d      	sub	sp, #116	@ 0x74
 800c094:	da08      	bge.n	800c0a8 <sniprintf+0x20>
 800c096:	238b      	movs	r3, #139	@ 0x8b
 800c098:	602b      	str	r3, [r5, #0]
 800c09a:	f04f 30ff 	mov.w	r0, #4294967295
 800c09e:	b01d      	add	sp, #116	@ 0x74
 800c0a0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c0a4:	b002      	add	sp, #8
 800c0a6:	4770      	bx	lr
 800c0a8:	f44f 7302 	mov.w	r3, #520	@ 0x208
 800c0ac:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c0b0:	f04f 0300 	mov.w	r3, #0
 800c0b4:	931b      	str	r3, [sp, #108]	@ 0x6c
 800c0b6:	bf14      	ite	ne
 800c0b8:	f104 33ff 	addne.w	r3, r4, #4294967295
 800c0bc:	4623      	moveq	r3, r4
 800c0be:	9304      	str	r3, [sp, #16]
 800c0c0:	9307      	str	r3, [sp, #28]
 800c0c2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c0c6:	9002      	str	r0, [sp, #8]
 800c0c8:	9006      	str	r0, [sp, #24]
 800c0ca:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c0ce:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c0d0:	ab21      	add	r3, sp, #132	@ 0x84
 800c0d2:	a902      	add	r1, sp, #8
 800c0d4:	4628      	mov	r0, r5
 800c0d6:	9301      	str	r3, [sp, #4]
 800c0d8:	f000 f9a2 	bl	800c420 <_svfiprintf_r>
 800c0dc:	1c43      	adds	r3, r0, #1
 800c0de:	bfbc      	itt	lt
 800c0e0:	238b      	movlt	r3, #139	@ 0x8b
 800c0e2:	602b      	strlt	r3, [r5, #0]
 800c0e4:	2c00      	cmp	r4, #0
 800c0e6:	d0da      	beq.n	800c09e <sniprintf+0x16>
 800c0e8:	9b02      	ldr	r3, [sp, #8]
 800c0ea:	2200      	movs	r2, #0
 800c0ec:	701a      	strb	r2, [r3, #0]
 800c0ee:	e7d6      	b.n	800c09e <sniprintf+0x16>
 800c0f0:	200002b4 	.word	0x200002b4

0800c0f4 <memset>:
 800c0f4:	4402      	add	r2, r0
 800c0f6:	4603      	mov	r3, r0
 800c0f8:	4293      	cmp	r3, r2
 800c0fa:	d100      	bne.n	800c0fe <memset+0xa>
 800c0fc:	4770      	bx	lr
 800c0fe:	f803 1b01 	strb.w	r1, [r3], #1
 800c102:	e7f9      	b.n	800c0f8 <memset+0x4>

0800c104 <__errno>:
 800c104:	4b01      	ldr	r3, [pc, #4]	@ (800c10c <__errno+0x8>)
 800c106:	6818      	ldr	r0, [r3, #0]
 800c108:	4770      	bx	lr
 800c10a:	bf00      	nop
 800c10c:	200002b4 	.word	0x200002b4

0800c110 <__libc_init_array>:
 800c110:	b570      	push	{r4, r5, r6, lr}
 800c112:	4d0d      	ldr	r5, [pc, #52]	@ (800c148 <__libc_init_array+0x38>)
 800c114:	4c0d      	ldr	r4, [pc, #52]	@ (800c14c <__libc_init_array+0x3c>)
 800c116:	1b64      	subs	r4, r4, r5
 800c118:	10a4      	asrs	r4, r4, #2
 800c11a:	2600      	movs	r6, #0
 800c11c:	42a6      	cmp	r6, r4
 800c11e:	d109      	bne.n	800c134 <__libc_init_array+0x24>
 800c120:	4d0b      	ldr	r5, [pc, #44]	@ (800c150 <__libc_init_array+0x40>)
 800c122:	4c0c      	ldr	r4, [pc, #48]	@ (800c154 <__libc_init_array+0x44>)
 800c124:	f000 fc64 	bl	800c9f0 <_init>
 800c128:	1b64      	subs	r4, r4, r5
 800c12a:	10a4      	asrs	r4, r4, #2
 800c12c:	2600      	movs	r6, #0
 800c12e:	42a6      	cmp	r6, r4
 800c130:	d105      	bne.n	800c13e <__libc_init_array+0x2e>
 800c132:	bd70      	pop	{r4, r5, r6, pc}
 800c134:	f855 3b04 	ldr.w	r3, [r5], #4
 800c138:	4798      	blx	r3
 800c13a:	3601      	adds	r6, #1
 800c13c:	e7ee      	b.n	800c11c <__libc_init_array+0xc>
 800c13e:	f855 3b04 	ldr.w	r3, [r5], #4
 800c142:	4798      	blx	r3
 800c144:	3601      	adds	r6, #1
 800c146:	e7f2      	b.n	800c12e <__libc_init_array+0x1e>
 800c148:	0800cac0 	.word	0x0800cac0
 800c14c:	0800cac0 	.word	0x0800cac0
 800c150:	0800cac0 	.word	0x0800cac0
 800c154:	0800cac4 	.word	0x0800cac4

0800c158 <__retarget_lock_acquire_recursive>:
 800c158:	4770      	bx	lr

0800c15a <__retarget_lock_release_recursive>:
 800c15a:	4770      	bx	lr

0800c15c <memcpy>:
 800c15c:	440a      	add	r2, r1
 800c15e:	4291      	cmp	r1, r2
 800c160:	f100 33ff 	add.w	r3, r0, #4294967295
 800c164:	d100      	bne.n	800c168 <memcpy+0xc>
 800c166:	4770      	bx	lr
 800c168:	b510      	push	{r4, lr}
 800c16a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c16e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c172:	4291      	cmp	r1, r2
 800c174:	d1f9      	bne.n	800c16a <memcpy+0xe>
 800c176:	bd10      	pop	{r4, pc}

0800c178 <_free_r>:
 800c178:	b538      	push	{r3, r4, r5, lr}
 800c17a:	4605      	mov	r5, r0
 800c17c:	2900      	cmp	r1, #0
 800c17e:	d041      	beq.n	800c204 <_free_r+0x8c>
 800c180:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c184:	1f0c      	subs	r4, r1, #4
 800c186:	2b00      	cmp	r3, #0
 800c188:	bfb8      	it	lt
 800c18a:	18e4      	addlt	r4, r4, r3
 800c18c:	f000 f8e0 	bl	800c350 <__malloc_lock>
 800c190:	4a1d      	ldr	r2, [pc, #116]	@ (800c208 <_free_r+0x90>)
 800c192:	6813      	ldr	r3, [r2, #0]
 800c194:	b933      	cbnz	r3, 800c1a4 <_free_r+0x2c>
 800c196:	6063      	str	r3, [r4, #4]
 800c198:	6014      	str	r4, [r2, #0]
 800c19a:	4628      	mov	r0, r5
 800c19c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c1a0:	f000 b8dc 	b.w	800c35c <__malloc_unlock>
 800c1a4:	42a3      	cmp	r3, r4
 800c1a6:	d908      	bls.n	800c1ba <_free_r+0x42>
 800c1a8:	6820      	ldr	r0, [r4, #0]
 800c1aa:	1821      	adds	r1, r4, r0
 800c1ac:	428b      	cmp	r3, r1
 800c1ae:	bf01      	itttt	eq
 800c1b0:	6819      	ldreq	r1, [r3, #0]
 800c1b2:	685b      	ldreq	r3, [r3, #4]
 800c1b4:	1809      	addeq	r1, r1, r0
 800c1b6:	6021      	streq	r1, [r4, #0]
 800c1b8:	e7ed      	b.n	800c196 <_free_r+0x1e>
 800c1ba:	461a      	mov	r2, r3
 800c1bc:	685b      	ldr	r3, [r3, #4]
 800c1be:	b10b      	cbz	r3, 800c1c4 <_free_r+0x4c>
 800c1c0:	42a3      	cmp	r3, r4
 800c1c2:	d9fa      	bls.n	800c1ba <_free_r+0x42>
 800c1c4:	6811      	ldr	r1, [r2, #0]
 800c1c6:	1850      	adds	r0, r2, r1
 800c1c8:	42a0      	cmp	r0, r4
 800c1ca:	d10b      	bne.n	800c1e4 <_free_r+0x6c>
 800c1cc:	6820      	ldr	r0, [r4, #0]
 800c1ce:	4401      	add	r1, r0
 800c1d0:	1850      	adds	r0, r2, r1
 800c1d2:	4283      	cmp	r3, r0
 800c1d4:	6011      	str	r1, [r2, #0]
 800c1d6:	d1e0      	bne.n	800c19a <_free_r+0x22>
 800c1d8:	6818      	ldr	r0, [r3, #0]
 800c1da:	685b      	ldr	r3, [r3, #4]
 800c1dc:	6053      	str	r3, [r2, #4]
 800c1de:	4408      	add	r0, r1
 800c1e0:	6010      	str	r0, [r2, #0]
 800c1e2:	e7da      	b.n	800c19a <_free_r+0x22>
 800c1e4:	d902      	bls.n	800c1ec <_free_r+0x74>
 800c1e6:	230c      	movs	r3, #12
 800c1e8:	602b      	str	r3, [r5, #0]
 800c1ea:	e7d6      	b.n	800c19a <_free_r+0x22>
 800c1ec:	6820      	ldr	r0, [r4, #0]
 800c1ee:	1821      	adds	r1, r4, r0
 800c1f0:	428b      	cmp	r3, r1
 800c1f2:	bf04      	itt	eq
 800c1f4:	6819      	ldreq	r1, [r3, #0]
 800c1f6:	685b      	ldreq	r3, [r3, #4]
 800c1f8:	6063      	str	r3, [r4, #4]
 800c1fa:	bf04      	itt	eq
 800c1fc:	1809      	addeq	r1, r1, r0
 800c1fe:	6021      	streq	r1, [r4, #0]
 800c200:	6054      	str	r4, [r2, #4]
 800c202:	e7ca      	b.n	800c19a <_free_r+0x22>
 800c204:	bd38      	pop	{r3, r4, r5, pc}
 800c206:	bf00      	nop
 800c208:	20002a04 	.word	0x20002a04

0800c20c <sbrk_aligned>:
 800c20c:	b570      	push	{r4, r5, r6, lr}
 800c20e:	4e0f      	ldr	r6, [pc, #60]	@ (800c24c <sbrk_aligned+0x40>)
 800c210:	460c      	mov	r4, r1
 800c212:	6831      	ldr	r1, [r6, #0]
 800c214:	4605      	mov	r5, r0
 800c216:	b911      	cbnz	r1, 800c21e <sbrk_aligned+0x12>
 800c218:	f000 fba4 	bl	800c964 <_sbrk_r>
 800c21c:	6030      	str	r0, [r6, #0]
 800c21e:	4621      	mov	r1, r4
 800c220:	4628      	mov	r0, r5
 800c222:	f000 fb9f 	bl	800c964 <_sbrk_r>
 800c226:	1c43      	adds	r3, r0, #1
 800c228:	d103      	bne.n	800c232 <sbrk_aligned+0x26>
 800c22a:	f04f 34ff 	mov.w	r4, #4294967295
 800c22e:	4620      	mov	r0, r4
 800c230:	bd70      	pop	{r4, r5, r6, pc}
 800c232:	1cc4      	adds	r4, r0, #3
 800c234:	f024 0403 	bic.w	r4, r4, #3
 800c238:	42a0      	cmp	r0, r4
 800c23a:	d0f8      	beq.n	800c22e <sbrk_aligned+0x22>
 800c23c:	1a21      	subs	r1, r4, r0
 800c23e:	4628      	mov	r0, r5
 800c240:	f000 fb90 	bl	800c964 <_sbrk_r>
 800c244:	3001      	adds	r0, #1
 800c246:	d1f2      	bne.n	800c22e <sbrk_aligned+0x22>
 800c248:	e7ef      	b.n	800c22a <sbrk_aligned+0x1e>
 800c24a:	bf00      	nop
 800c24c:	20002a00 	.word	0x20002a00

0800c250 <_malloc_r>:
 800c250:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c254:	1ccd      	adds	r5, r1, #3
 800c256:	f025 0503 	bic.w	r5, r5, #3
 800c25a:	3508      	adds	r5, #8
 800c25c:	2d0c      	cmp	r5, #12
 800c25e:	bf38      	it	cc
 800c260:	250c      	movcc	r5, #12
 800c262:	2d00      	cmp	r5, #0
 800c264:	4606      	mov	r6, r0
 800c266:	db01      	blt.n	800c26c <_malloc_r+0x1c>
 800c268:	42a9      	cmp	r1, r5
 800c26a:	d904      	bls.n	800c276 <_malloc_r+0x26>
 800c26c:	230c      	movs	r3, #12
 800c26e:	6033      	str	r3, [r6, #0]
 800c270:	2000      	movs	r0, #0
 800c272:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c276:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800c34c <_malloc_r+0xfc>
 800c27a:	f000 f869 	bl	800c350 <__malloc_lock>
 800c27e:	f8d8 3000 	ldr.w	r3, [r8]
 800c282:	461c      	mov	r4, r3
 800c284:	bb44      	cbnz	r4, 800c2d8 <_malloc_r+0x88>
 800c286:	4629      	mov	r1, r5
 800c288:	4630      	mov	r0, r6
 800c28a:	f7ff ffbf 	bl	800c20c <sbrk_aligned>
 800c28e:	1c43      	adds	r3, r0, #1
 800c290:	4604      	mov	r4, r0
 800c292:	d158      	bne.n	800c346 <_malloc_r+0xf6>
 800c294:	f8d8 4000 	ldr.w	r4, [r8]
 800c298:	4627      	mov	r7, r4
 800c29a:	2f00      	cmp	r7, #0
 800c29c:	d143      	bne.n	800c326 <_malloc_r+0xd6>
 800c29e:	2c00      	cmp	r4, #0
 800c2a0:	d04b      	beq.n	800c33a <_malloc_r+0xea>
 800c2a2:	6823      	ldr	r3, [r4, #0]
 800c2a4:	4639      	mov	r1, r7
 800c2a6:	4630      	mov	r0, r6
 800c2a8:	eb04 0903 	add.w	r9, r4, r3
 800c2ac:	f000 fb5a 	bl	800c964 <_sbrk_r>
 800c2b0:	4581      	cmp	r9, r0
 800c2b2:	d142      	bne.n	800c33a <_malloc_r+0xea>
 800c2b4:	6821      	ldr	r1, [r4, #0]
 800c2b6:	1a6d      	subs	r5, r5, r1
 800c2b8:	4629      	mov	r1, r5
 800c2ba:	4630      	mov	r0, r6
 800c2bc:	f7ff ffa6 	bl	800c20c <sbrk_aligned>
 800c2c0:	3001      	adds	r0, #1
 800c2c2:	d03a      	beq.n	800c33a <_malloc_r+0xea>
 800c2c4:	6823      	ldr	r3, [r4, #0]
 800c2c6:	442b      	add	r3, r5
 800c2c8:	6023      	str	r3, [r4, #0]
 800c2ca:	f8d8 3000 	ldr.w	r3, [r8]
 800c2ce:	685a      	ldr	r2, [r3, #4]
 800c2d0:	bb62      	cbnz	r2, 800c32c <_malloc_r+0xdc>
 800c2d2:	f8c8 7000 	str.w	r7, [r8]
 800c2d6:	e00f      	b.n	800c2f8 <_malloc_r+0xa8>
 800c2d8:	6822      	ldr	r2, [r4, #0]
 800c2da:	1b52      	subs	r2, r2, r5
 800c2dc:	d420      	bmi.n	800c320 <_malloc_r+0xd0>
 800c2de:	2a0b      	cmp	r2, #11
 800c2e0:	d917      	bls.n	800c312 <_malloc_r+0xc2>
 800c2e2:	1961      	adds	r1, r4, r5
 800c2e4:	42a3      	cmp	r3, r4
 800c2e6:	6025      	str	r5, [r4, #0]
 800c2e8:	bf18      	it	ne
 800c2ea:	6059      	strne	r1, [r3, #4]
 800c2ec:	6863      	ldr	r3, [r4, #4]
 800c2ee:	bf08      	it	eq
 800c2f0:	f8c8 1000 	streq.w	r1, [r8]
 800c2f4:	5162      	str	r2, [r4, r5]
 800c2f6:	604b      	str	r3, [r1, #4]
 800c2f8:	4630      	mov	r0, r6
 800c2fa:	f000 f82f 	bl	800c35c <__malloc_unlock>
 800c2fe:	f104 000b 	add.w	r0, r4, #11
 800c302:	1d23      	adds	r3, r4, #4
 800c304:	f020 0007 	bic.w	r0, r0, #7
 800c308:	1ac2      	subs	r2, r0, r3
 800c30a:	bf1c      	itt	ne
 800c30c:	1a1b      	subne	r3, r3, r0
 800c30e:	50a3      	strne	r3, [r4, r2]
 800c310:	e7af      	b.n	800c272 <_malloc_r+0x22>
 800c312:	6862      	ldr	r2, [r4, #4]
 800c314:	42a3      	cmp	r3, r4
 800c316:	bf0c      	ite	eq
 800c318:	f8c8 2000 	streq.w	r2, [r8]
 800c31c:	605a      	strne	r2, [r3, #4]
 800c31e:	e7eb      	b.n	800c2f8 <_malloc_r+0xa8>
 800c320:	4623      	mov	r3, r4
 800c322:	6864      	ldr	r4, [r4, #4]
 800c324:	e7ae      	b.n	800c284 <_malloc_r+0x34>
 800c326:	463c      	mov	r4, r7
 800c328:	687f      	ldr	r7, [r7, #4]
 800c32a:	e7b6      	b.n	800c29a <_malloc_r+0x4a>
 800c32c:	461a      	mov	r2, r3
 800c32e:	685b      	ldr	r3, [r3, #4]
 800c330:	42a3      	cmp	r3, r4
 800c332:	d1fb      	bne.n	800c32c <_malloc_r+0xdc>
 800c334:	2300      	movs	r3, #0
 800c336:	6053      	str	r3, [r2, #4]
 800c338:	e7de      	b.n	800c2f8 <_malloc_r+0xa8>
 800c33a:	230c      	movs	r3, #12
 800c33c:	6033      	str	r3, [r6, #0]
 800c33e:	4630      	mov	r0, r6
 800c340:	f000 f80c 	bl	800c35c <__malloc_unlock>
 800c344:	e794      	b.n	800c270 <_malloc_r+0x20>
 800c346:	6005      	str	r5, [r0, #0]
 800c348:	e7d6      	b.n	800c2f8 <_malloc_r+0xa8>
 800c34a:	bf00      	nop
 800c34c:	20002a04 	.word	0x20002a04

0800c350 <__malloc_lock>:
 800c350:	4801      	ldr	r0, [pc, #4]	@ (800c358 <__malloc_lock+0x8>)
 800c352:	f7ff bf01 	b.w	800c158 <__retarget_lock_acquire_recursive>
 800c356:	bf00      	nop
 800c358:	200029fc 	.word	0x200029fc

0800c35c <__malloc_unlock>:
 800c35c:	4801      	ldr	r0, [pc, #4]	@ (800c364 <__malloc_unlock+0x8>)
 800c35e:	f7ff befc 	b.w	800c15a <__retarget_lock_release_recursive>
 800c362:	bf00      	nop
 800c364:	200029fc 	.word	0x200029fc

0800c368 <__ssputs_r>:
 800c368:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c36c:	688e      	ldr	r6, [r1, #8]
 800c36e:	461f      	mov	r7, r3
 800c370:	42be      	cmp	r6, r7
 800c372:	680b      	ldr	r3, [r1, #0]
 800c374:	4682      	mov	sl, r0
 800c376:	460c      	mov	r4, r1
 800c378:	4690      	mov	r8, r2
 800c37a:	d82d      	bhi.n	800c3d8 <__ssputs_r+0x70>
 800c37c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800c380:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800c384:	d026      	beq.n	800c3d4 <__ssputs_r+0x6c>
 800c386:	6965      	ldr	r5, [r4, #20]
 800c388:	6909      	ldr	r1, [r1, #16]
 800c38a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c38e:	eba3 0901 	sub.w	r9, r3, r1
 800c392:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800c396:	1c7b      	adds	r3, r7, #1
 800c398:	444b      	add	r3, r9
 800c39a:	106d      	asrs	r5, r5, #1
 800c39c:	429d      	cmp	r5, r3
 800c39e:	bf38      	it	cc
 800c3a0:	461d      	movcc	r5, r3
 800c3a2:	0553      	lsls	r3, r2, #21
 800c3a4:	d527      	bpl.n	800c3f6 <__ssputs_r+0x8e>
 800c3a6:	4629      	mov	r1, r5
 800c3a8:	f7ff ff52 	bl	800c250 <_malloc_r>
 800c3ac:	4606      	mov	r6, r0
 800c3ae:	b360      	cbz	r0, 800c40a <__ssputs_r+0xa2>
 800c3b0:	6921      	ldr	r1, [r4, #16]
 800c3b2:	464a      	mov	r2, r9
 800c3b4:	f7ff fed2 	bl	800c15c <memcpy>
 800c3b8:	89a3      	ldrh	r3, [r4, #12]
 800c3ba:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800c3be:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c3c2:	81a3      	strh	r3, [r4, #12]
 800c3c4:	6126      	str	r6, [r4, #16]
 800c3c6:	6165      	str	r5, [r4, #20]
 800c3c8:	444e      	add	r6, r9
 800c3ca:	eba5 0509 	sub.w	r5, r5, r9
 800c3ce:	6026      	str	r6, [r4, #0]
 800c3d0:	60a5      	str	r5, [r4, #8]
 800c3d2:	463e      	mov	r6, r7
 800c3d4:	42be      	cmp	r6, r7
 800c3d6:	d900      	bls.n	800c3da <__ssputs_r+0x72>
 800c3d8:	463e      	mov	r6, r7
 800c3da:	6820      	ldr	r0, [r4, #0]
 800c3dc:	4632      	mov	r2, r6
 800c3de:	4641      	mov	r1, r8
 800c3e0:	f000 faa6 	bl	800c930 <memmove>
 800c3e4:	68a3      	ldr	r3, [r4, #8]
 800c3e6:	1b9b      	subs	r3, r3, r6
 800c3e8:	60a3      	str	r3, [r4, #8]
 800c3ea:	6823      	ldr	r3, [r4, #0]
 800c3ec:	4433      	add	r3, r6
 800c3ee:	6023      	str	r3, [r4, #0]
 800c3f0:	2000      	movs	r0, #0
 800c3f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c3f6:	462a      	mov	r2, r5
 800c3f8:	f000 fac4 	bl	800c984 <_realloc_r>
 800c3fc:	4606      	mov	r6, r0
 800c3fe:	2800      	cmp	r0, #0
 800c400:	d1e0      	bne.n	800c3c4 <__ssputs_r+0x5c>
 800c402:	6921      	ldr	r1, [r4, #16]
 800c404:	4650      	mov	r0, sl
 800c406:	f7ff feb7 	bl	800c178 <_free_r>
 800c40a:	230c      	movs	r3, #12
 800c40c:	f8ca 3000 	str.w	r3, [sl]
 800c410:	89a3      	ldrh	r3, [r4, #12]
 800c412:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c416:	81a3      	strh	r3, [r4, #12]
 800c418:	f04f 30ff 	mov.w	r0, #4294967295
 800c41c:	e7e9      	b.n	800c3f2 <__ssputs_r+0x8a>
	...

0800c420 <_svfiprintf_r>:
 800c420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c424:	4698      	mov	r8, r3
 800c426:	898b      	ldrh	r3, [r1, #12]
 800c428:	061b      	lsls	r3, r3, #24
 800c42a:	b09d      	sub	sp, #116	@ 0x74
 800c42c:	4607      	mov	r7, r0
 800c42e:	460d      	mov	r5, r1
 800c430:	4614      	mov	r4, r2
 800c432:	d510      	bpl.n	800c456 <_svfiprintf_r+0x36>
 800c434:	690b      	ldr	r3, [r1, #16]
 800c436:	b973      	cbnz	r3, 800c456 <_svfiprintf_r+0x36>
 800c438:	2140      	movs	r1, #64	@ 0x40
 800c43a:	f7ff ff09 	bl	800c250 <_malloc_r>
 800c43e:	6028      	str	r0, [r5, #0]
 800c440:	6128      	str	r0, [r5, #16]
 800c442:	b930      	cbnz	r0, 800c452 <_svfiprintf_r+0x32>
 800c444:	230c      	movs	r3, #12
 800c446:	603b      	str	r3, [r7, #0]
 800c448:	f04f 30ff 	mov.w	r0, #4294967295
 800c44c:	b01d      	add	sp, #116	@ 0x74
 800c44e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c452:	2340      	movs	r3, #64	@ 0x40
 800c454:	616b      	str	r3, [r5, #20]
 800c456:	2300      	movs	r3, #0
 800c458:	9309      	str	r3, [sp, #36]	@ 0x24
 800c45a:	2320      	movs	r3, #32
 800c45c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c460:	f8cd 800c 	str.w	r8, [sp, #12]
 800c464:	2330      	movs	r3, #48	@ 0x30
 800c466:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800c604 <_svfiprintf_r+0x1e4>
 800c46a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800c46e:	f04f 0901 	mov.w	r9, #1
 800c472:	4623      	mov	r3, r4
 800c474:	469a      	mov	sl, r3
 800c476:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c47a:	b10a      	cbz	r2, 800c480 <_svfiprintf_r+0x60>
 800c47c:	2a25      	cmp	r2, #37	@ 0x25
 800c47e:	d1f9      	bne.n	800c474 <_svfiprintf_r+0x54>
 800c480:	ebba 0b04 	subs.w	fp, sl, r4
 800c484:	d00b      	beq.n	800c49e <_svfiprintf_r+0x7e>
 800c486:	465b      	mov	r3, fp
 800c488:	4622      	mov	r2, r4
 800c48a:	4629      	mov	r1, r5
 800c48c:	4638      	mov	r0, r7
 800c48e:	f7ff ff6b 	bl	800c368 <__ssputs_r>
 800c492:	3001      	adds	r0, #1
 800c494:	f000 80a7 	beq.w	800c5e6 <_svfiprintf_r+0x1c6>
 800c498:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c49a:	445a      	add	r2, fp
 800c49c:	9209      	str	r2, [sp, #36]	@ 0x24
 800c49e:	f89a 3000 	ldrb.w	r3, [sl]
 800c4a2:	2b00      	cmp	r3, #0
 800c4a4:	f000 809f 	beq.w	800c5e6 <_svfiprintf_r+0x1c6>
 800c4a8:	2300      	movs	r3, #0
 800c4aa:	f04f 32ff 	mov.w	r2, #4294967295
 800c4ae:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c4b2:	f10a 0a01 	add.w	sl, sl, #1
 800c4b6:	9304      	str	r3, [sp, #16]
 800c4b8:	9307      	str	r3, [sp, #28]
 800c4ba:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800c4be:	931a      	str	r3, [sp, #104]	@ 0x68
 800c4c0:	4654      	mov	r4, sl
 800c4c2:	2205      	movs	r2, #5
 800c4c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c4c8:	484e      	ldr	r0, [pc, #312]	@ (800c604 <_svfiprintf_r+0x1e4>)
 800c4ca:	f7f3 fe81 	bl	80001d0 <memchr>
 800c4ce:	9a04      	ldr	r2, [sp, #16]
 800c4d0:	b9d8      	cbnz	r0, 800c50a <_svfiprintf_r+0xea>
 800c4d2:	06d0      	lsls	r0, r2, #27
 800c4d4:	bf44      	itt	mi
 800c4d6:	2320      	movmi	r3, #32
 800c4d8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c4dc:	0711      	lsls	r1, r2, #28
 800c4de:	bf44      	itt	mi
 800c4e0:	232b      	movmi	r3, #43	@ 0x2b
 800c4e2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c4e6:	f89a 3000 	ldrb.w	r3, [sl]
 800c4ea:	2b2a      	cmp	r3, #42	@ 0x2a
 800c4ec:	d015      	beq.n	800c51a <_svfiprintf_r+0xfa>
 800c4ee:	9a07      	ldr	r2, [sp, #28]
 800c4f0:	4654      	mov	r4, sl
 800c4f2:	2000      	movs	r0, #0
 800c4f4:	f04f 0c0a 	mov.w	ip, #10
 800c4f8:	4621      	mov	r1, r4
 800c4fa:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c4fe:	3b30      	subs	r3, #48	@ 0x30
 800c500:	2b09      	cmp	r3, #9
 800c502:	d94b      	bls.n	800c59c <_svfiprintf_r+0x17c>
 800c504:	b1b0      	cbz	r0, 800c534 <_svfiprintf_r+0x114>
 800c506:	9207      	str	r2, [sp, #28]
 800c508:	e014      	b.n	800c534 <_svfiprintf_r+0x114>
 800c50a:	eba0 0308 	sub.w	r3, r0, r8
 800c50e:	fa09 f303 	lsl.w	r3, r9, r3
 800c512:	4313      	orrs	r3, r2
 800c514:	9304      	str	r3, [sp, #16]
 800c516:	46a2      	mov	sl, r4
 800c518:	e7d2      	b.n	800c4c0 <_svfiprintf_r+0xa0>
 800c51a:	9b03      	ldr	r3, [sp, #12]
 800c51c:	1d19      	adds	r1, r3, #4
 800c51e:	681b      	ldr	r3, [r3, #0]
 800c520:	9103      	str	r1, [sp, #12]
 800c522:	2b00      	cmp	r3, #0
 800c524:	bfbb      	ittet	lt
 800c526:	425b      	neglt	r3, r3
 800c528:	f042 0202 	orrlt.w	r2, r2, #2
 800c52c:	9307      	strge	r3, [sp, #28]
 800c52e:	9307      	strlt	r3, [sp, #28]
 800c530:	bfb8      	it	lt
 800c532:	9204      	strlt	r2, [sp, #16]
 800c534:	7823      	ldrb	r3, [r4, #0]
 800c536:	2b2e      	cmp	r3, #46	@ 0x2e
 800c538:	d10a      	bne.n	800c550 <_svfiprintf_r+0x130>
 800c53a:	7863      	ldrb	r3, [r4, #1]
 800c53c:	2b2a      	cmp	r3, #42	@ 0x2a
 800c53e:	d132      	bne.n	800c5a6 <_svfiprintf_r+0x186>
 800c540:	9b03      	ldr	r3, [sp, #12]
 800c542:	1d1a      	adds	r2, r3, #4
 800c544:	681b      	ldr	r3, [r3, #0]
 800c546:	9203      	str	r2, [sp, #12]
 800c548:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800c54c:	3402      	adds	r4, #2
 800c54e:	9305      	str	r3, [sp, #20]
 800c550:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800c614 <_svfiprintf_r+0x1f4>
 800c554:	7821      	ldrb	r1, [r4, #0]
 800c556:	2203      	movs	r2, #3
 800c558:	4650      	mov	r0, sl
 800c55a:	f7f3 fe39 	bl	80001d0 <memchr>
 800c55e:	b138      	cbz	r0, 800c570 <_svfiprintf_r+0x150>
 800c560:	9b04      	ldr	r3, [sp, #16]
 800c562:	eba0 000a 	sub.w	r0, r0, sl
 800c566:	2240      	movs	r2, #64	@ 0x40
 800c568:	4082      	lsls	r2, r0
 800c56a:	4313      	orrs	r3, r2
 800c56c:	3401      	adds	r4, #1
 800c56e:	9304      	str	r3, [sp, #16]
 800c570:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c574:	4824      	ldr	r0, [pc, #144]	@ (800c608 <_svfiprintf_r+0x1e8>)
 800c576:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800c57a:	2206      	movs	r2, #6
 800c57c:	f7f3 fe28 	bl	80001d0 <memchr>
 800c580:	2800      	cmp	r0, #0
 800c582:	d036      	beq.n	800c5f2 <_svfiprintf_r+0x1d2>
 800c584:	4b21      	ldr	r3, [pc, #132]	@ (800c60c <_svfiprintf_r+0x1ec>)
 800c586:	bb1b      	cbnz	r3, 800c5d0 <_svfiprintf_r+0x1b0>
 800c588:	9b03      	ldr	r3, [sp, #12]
 800c58a:	3307      	adds	r3, #7
 800c58c:	f023 0307 	bic.w	r3, r3, #7
 800c590:	3308      	adds	r3, #8
 800c592:	9303      	str	r3, [sp, #12]
 800c594:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c596:	4433      	add	r3, r6
 800c598:	9309      	str	r3, [sp, #36]	@ 0x24
 800c59a:	e76a      	b.n	800c472 <_svfiprintf_r+0x52>
 800c59c:	fb0c 3202 	mla	r2, ip, r2, r3
 800c5a0:	460c      	mov	r4, r1
 800c5a2:	2001      	movs	r0, #1
 800c5a4:	e7a8      	b.n	800c4f8 <_svfiprintf_r+0xd8>
 800c5a6:	2300      	movs	r3, #0
 800c5a8:	3401      	adds	r4, #1
 800c5aa:	9305      	str	r3, [sp, #20]
 800c5ac:	4619      	mov	r1, r3
 800c5ae:	f04f 0c0a 	mov.w	ip, #10
 800c5b2:	4620      	mov	r0, r4
 800c5b4:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c5b8:	3a30      	subs	r2, #48	@ 0x30
 800c5ba:	2a09      	cmp	r2, #9
 800c5bc:	d903      	bls.n	800c5c6 <_svfiprintf_r+0x1a6>
 800c5be:	2b00      	cmp	r3, #0
 800c5c0:	d0c6      	beq.n	800c550 <_svfiprintf_r+0x130>
 800c5c2:	9105      	str	r1, [sp, #20]
 800c5c4:	e7c4      	b.n	800c550 <_svfiprintf_r+0x130>
 800c5c6:	fb0c 2101 	mla	r1, ip, r1, r2
 800c5ca:	4604      	mov	r4, r0
 800c5cc:	2301      	movs	r3, #1
 800c5ce:	e7f0      	b.n	800c5b2 <_svfiprintf_r+0x192>
 800c5d0:	ab03      	add	r3, sp, #12
 800c5d2:	9300      	str	r3, [sp, #0]
 800c5d4:	462a      	mov	r2, r5
 800c5d6:	4b0e      	ldr	r3, [pc, #56]	@ (800c610 <_svfiprintf_r+0x1f0>)
 800c5d8:	a904      	add	r1, sp, #16
 800c5da:	4638      	mov	r0, r7
 800c5dc:	f3af 8000 	nop.w
 800c5e0:	1c42      	adds	r2, r0, #1
 800c5e2:	4606      	mov	r6, r0
 800c5e4:	d1d6      	bne.n	800c594 <_svfiprintf_r+0x174>
 800c5e6:	89ab      	ldrh	r3, [r5, #12]
 800c5e8:	065b      	lsls	r3, r3, #25
 800c5ea:	f53f af2d 	bmi.w	800c448 <_svfiprintf_r+0x28>
 800c5ee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c5f0:	e72c      	b.n	800c44c <_svfiprintf_r+0x2c>
 800c5f2:	ab03      	add	r3, sp, #12
 800c5f4:	9300      	str	r3, [sp, #0]
 800c5f6:	462a      	mov	r2, r5
 800c5f8:	4b05      	ldr	r3, [pc, #20]	@ (800c610 <_svfiprintf_r+0x1f0>)
 800c5fa:	a904      	add	r1, sp, #16
 800c5fc:	4638      	mov	r0, r7
 800c5fe:	f000 f879 	bl	800c6f4 <_printf_i>
 800c602:	e7ed      	b.n	800c5e0 <_svfiprintf_r+0x1c0>
 800c604:	0800ca84 	.word	0x0800ca84
 800c608:	0800ca8e 	.word	0x0800ca8e
 800c60c:	00000000 	.word	0x00000000
 800c610:	0800c369 	.word	0x0800c369
 800c614:	0800ca8a 	.word	0x0800ca8a

0800c618 <_printf_common>:
 800c618:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c61c:	4616      	mov	r6, r2
 800c61e:	4698      	mov	r8, r3
 800c620:	688a      	ldr	r2, [r1, #8]
 800c622:	690b      	ldr	r3, [r1, #16]
 800c624:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800c628:	4293      	cmp	r3, r2
 800c62a:	bfb8      	it	lt
 800c62c:	4613      	movlt	r3, r2
 800c62e:	6033      	str	r3, [r6, #0]
 800c630:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800c634:	4607      	mov	r7, r0
 800c636:	460c      	mov	r4, r1
 800c638:	b10a      	cbz	r2, 800c63e <_printf_common+0x26>
 800c63a:	3301      	adds	r3, #1
 800c63c:	6033      	str	r3, [r6, #0]
 800c63e:	6823      	ldr	r3, [r4, #0]
 800c640:	0699      	lsls	r1, r3, #26
 800c642:	bf42      	ittt	mi
 800c644:	6833      	ldrmi	r3, [r6, #0]
 800c646:	3302      	addmi	r3, #2
 800c648:	6033      	strmi	r3, [r6, #0]
 800c64a:	6825      	ldr	r5, [r4, #0]
 800c64c:	f015 0506 	ands.w	r5, r5, #6
 800c650:	d106      	bne.n	800c660 <_printf_common+0x48>
 800c652:	f104 0a19 	add.w	sl, r4, #25
 800c656:	68e3      	ldr	r3, [r4, #12]
 800c658:	6832      	ldr	r2, [r6, #0]
 800c65a:	1a9b      	subs	r3, r3, r2
 800c65c:	42ab      	cmp	r3, r5
 800c65e:	dc26      	bgt.n	800c6ae <_printf_common+0x96>
 800c660:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800c664:	6822      	ldr	r2, [r4, #0]
 800c666:	3b00      	subs	r3, #0
 800c668:	bf18      	it	ne
 800c66a:	2301      	movne	r3, #1
 800c66c:	0692      	lsls	r2, r2, #26
 800c66e:	d42b      	bmi.n	800c6c8 <_printf_common+0xb0>
 800c670:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800c674:	4641      	mov	r1, r8
 800c676:	4638      	mov	r0, r7
 800c678:	47c8      	blx	r9
 800c67a:	3001      	adds	r0, #1
 800c67c:	d01e      	beq.n	800c6bc <_printf_common+0xa4>
 800c67e:	6823      	ldr	r3, [r4, #0]
 800c680:	6922      	ldr	r2, [r4, #16]
 800c682:	f003 0306 	and.w	r3, r3, #6
 800c686:	2b04      	cmp	r3, #4
 800c688:	bf02      	ittt	eq
 800c68a:	68e5      	ldreq	r5, [r4, #12]
 800c68c:	6833      	ldreq	r3, [r6, #0]
 800c68e:	1aed      	subeq	r5, r5, r3
 800c690:	68a3      	ldr	r3, [r4, #8]
 800c692:	bf0c      	ite	eq
 800c694:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800c698:	2500      	movne	r5, #0
 800c69a:	4293      	cmp	r3, r2
 800c69c:	bfc4      	itt	gt
 800c69e:	1a9b      	subgt	r3, r3, r2
 800c6a0:	18ed      	addgt	r5, r5, r3
 800c6a2:	2600      	movs	r6, #0
 800c6a4:	341a      	adds	r4, #26
 800c6a6:	42b5      	cmp	r5, r6
 800c6a8:	d11a      	bne.n	800c6e0 <_printf_common+0xc8>
 800c6aa:	2000      	movs	r0, #0
 800c6ac:	e008      	b.n	800c6c0 <_printf_common+0xa8>
 800c6ae:	2301      	movs	r3, #1
 800c6b0:	4652      	mov	r2, sl
 800c6b2:	4641      	mov	r1, r8
 800c6b4:	4638      	mov	r0, r7
 800c6b6:	47c8      	blx	r9
 800c6b8:	3001      	adds	r0, #1
 800c6ba:	d103      	bne.n	800c6c4 <_printf_common+0xac>
 800c6bc:	f04f 30ff 	mov.w	r0, #4294967295
 800c6c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c6c4:	3501      	adds	r5, #1
 800c6c6:	e7c6      	b.n	800c656 <_printf_common+0x3e>
 800c6c8:	18e1      	adds	r1, r4, r3
 800c6ca:	1c5a      	adds	r2, r3, #1
 800c6cc:	2030      	movs	r0, #48	@ 0x30
 800c6ce:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800c6d2:	4422      	add	r2, r4
 800c6d4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800c6d8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800c6dc:	3302      	adds	r3, #2
 800c6de:	e7c7      	b.n	800c670 <_printf_common+0x58>
 800c6e0:	2301      	movs	r3, #1
 800c6e2:	4622      	mov	r2, r4
 800c6e4:	4641      	mov	r1, r8
 800c6e6:	4638      	mov	r0, r7
 800c6e8:	47c8      	blx	r9
 800c6ea:	3001      	adds	r0, #1
 800c6ec:	d0e6      	beq.n	800c6bc <_printf_common+0xa4>
 800c6ee:	3601      	adds	r6, #1
 800c6f0:	e7d9      	b.n	800c6a6 <_printf_common+0x8e>
	...

0800c6f4 <_printf_i>:
 800c6f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c6f8:	7e0f      	ldrb	r7, [r1, #24]
 800c6fa:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800c6fc:	2f78      	cmp	r7, #120	@ 0x78
 800c6fe:	4691      	mov	r9, r2
 800c700:	4680      	mov	r8, r0
 800c702:	460c      	mov	r4, r1
 800c704:	469a      	mov	sl, r3
 800c706:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800c70a:	d807      	bhi.n	800c71c <_printf_i+0x28>
 800c70c:	2f62      	cmp	r7, #98	@ 0x62
 800c70e:	d80a      	bhi.n	800c726 <_printf_i+0x32>
 800c710:	2f00      	cmp	r7, #0
 800c712:	f000 80d1 	beq.w	800c8b8 <_printf_i+0x1c4>
 800c716:	2f58      	cmp	r7, #88	@ 0x58
 800c718:	f000 80b8 	beq.w	800c88c <_printf_i+0x198>
 800c71c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800c720:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800c724:	e03a      	b.n	800c79c <_printf_i+0xa8>
 800c726:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800c72a:	2b15      	cmp	r3, #21
 800c72c:	d8f6      	bhi.n	800c71c <_printf_i+0x28>
 800c72e:	a101      	add	r1, pc, #4	@ (adr r1, 800c734 <_printf_i+0x40>)
 800c730:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800c734:	0800c78d 	.word	0x0800c78d
 800c738:	0800c7a1 	.word	0x0800c7a1
 800c73c:	0800c71d 	.word	0x0800c71d
 800c740:	0800c71d 	.word	0x0800c71d
 800c744:	0800c71d 	.word	0x0800c71d
 800c748:	0800c71d 	.word	0x0800c71d
 800c74c:	0800c7a1 	.word	0x0800c7a1
 800c750:	0800c71d 	.word	0x0800c71d
 800c754:	0800c71d 	.word	0x0800c71d
 800c758:	0800c71d 	.word	0x0800c71d
 800c75c:	0800c71d 	.word	0x0800c71d
 800c760:	0800c89f 	.word	0x0800c89f
 800c764:	0800c7cb 	.word	0x0800c7cb
 800c768:	0800c859 	.word	0x0800c859
 800c76c:	0800c71d 	.word	0x0800c71d
 800c770:	0800c71d 	.word	0x0800c71d
 800c774:	0800c8c1 	.word	0x0800c8c1
 800c778:	0800c71d 	.word	0x0800c71d
 800c77c:	0800c7cb 	.word	0x0800c7cb
 800c780:	0800c71d 	.word	0x0800c71d
 800c784:	0800c71d 	.word	0x0800c71d
 800c788:	0800c861 	.word	0x0800c861
 800c78c:	6833      	ldr	r3, [r6, #0]
 800c78e:	1d1a      	adds	r2, r3, #4
 800c790:	681b      	ldr	r3, [r3, #0]
 800c792:	6032      	str	r2, [r6, #0]
 800c794:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800c798:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800c79c:	2301      	movs	r3, #1
 800c79e:	e09c      	b.n	800c8da <_printf_i+0x1e6>
 800c7a0:	6833      	ldr	r3, [r6, #0]
 800c7a2:	6820      	ldr	r0, [r4, #0]
 800c7a4:	1d19      	adds	r1, r3, #4
 800c7a6:	6031      	str	r1, [r6, #0]
 800c7a8:	0606      	lsls	r6, r0, #24
 800c7aa:	d501      	bpl.n	800c7b0 <_printf_i+0xbc>
 800c7ac:	681d      	ldr	r5, [r3, #0]
 800c7ae:	e003      	b.n	800c7b8 <_printf_i+0xc4>
 800c7b0:	0645      	lsls	r5, r0, #25
 800c7b2:	d5fb      	bpl.n	800c7ac <_printf_i+0xb8>
 800c7b4:	f9b3 5000 	ldrsh.w	r5, [r3]
 800c7b8:	2d00      	cmp	r5, #0
 800c7ba:	da03      	bge.n	800c7c4 <_printf_i+0xd0>
 800c7bc:	232d      	movs	r3, #45	@ 0x2d
 800c7be:	426d      	negs	r5, r5
 800c7c0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800c7c4:	4858      	ldr	r0, [pc, #352]	@ (800c928 <_printf_i+0x234>)
 800c7c6:	230a      	movs	r3, #10
 800c7c8:	e011      	b.n	800c7ee <_printf_i+0xfa>
 800c7ca:	6821      	ldr	r1, [r4, #0]
 800c7cc:	6833      	ldr	r3, [r6, #0]
 800c7ce:	0608      	lsls	r0, r1, #24
 800c7d0:	f853 5b04 	ldr.w	r5, [r3], #4
 800c7d4:	d402      	bmi.n	800c7dc <_printf_i+0xe8>
 800c7d6:	0649      	lsls	r1, r1, #25
 800c7d8:	bf48      	it	mi
 800c7da:	b2ad      	uxthmi	r5, r5
 800c7dc:	2f6f      	cmp	r7, #111	@ 0x6f
 800c7de:	4852      	ldr	r0, [pc, #328]	@ (800c928 <_printf_i+0x234>)
 800c7e0:	6033      	str	r3, [r6, #0]
 800c7e2:	bf14      	ite	ne
 800c7e4:	230a      	movne	r3, #10
 800c7e6:	2308      	moveq	r3, #8
 800c7e8:	2100      	movs	r1, #0
 800c7ea:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800c7ee:	6866      	ldr	r6, [r4, #4]
 800c7f0:	60a6      	str	r6, [r4, #8]
 800c7f2:	2e00      	cmp	r6, #0
 800c7f4:	db05      	blt.n	800c802 <_printf_i+0x10e>
 800c7f6:	6821      	ldr	r1, [r4, #0]
 800c7f8:	432e      	orrs	r6, r5
 800c7fa:	f021 0104 	bic.w	r1, r1, #4
 800c7fe:	6021      	str	r1, [r4, #0]
 800c800:	d04b      	beq.n	800c89a <_printf_i+0x1a6>
 800c802:	4616      	mov	r6, r2
 800c804:	fbb5 f1f3 	udiv	r1, r5, r3
 800c808:	fb03 5711 	mls	r7, r3, r1, r5
 800c80c:	5dc7      	ldrb	r7, [r0, r7]
 800c80e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800c812:	462f      	mov	r7, r5
 800c814:	42bb      	cmp	r3, r7
 800c816:	460d      	mov	r5, r1
 800c818:	d9f4      	bls.n	800c804 <_printf_i+0x110>
 800c81a:	2b08      	cmp	r3, #8
 800c81c:	d10b      	bne.n	800c836 <_printf_i+0x142>
 800c81e:	6823      	ldr	r3, [r4, #0]
 800c820:	07df      	lsls	r7, r3, #31
 800c822:	d508      	bpl.n	800c836 <_printf_i+0x142>
 800c824:	6923      	ldr	r3, [r4, #16]
 800c826:	6861      	ldr	r1, [r4, #4]
 800c828:	4299      	cmp	r1, r3
 800c82a:	bfde      	ittt	le
 800c82c:	2330      	movle	r3, #48	@ 0x30
 800c82e:	f806 3c01 	strble.w	r3, [r6, #-1]
 800c832:	f106 36ff 	addle.w	r6, r6, #4294967295
 800c836:	1b92      	subs	r2, r2, r6
 800c838:	6122      	str	r2, [r4, #16]
 800c83a:	f8cd a000 	str.w	sl, [sp]
 800c83e:	464b      	mov	r3, r9
 800c840:	aa03      	add	r2, sp, #12
 800c842:	4621      	mov	r1, r4
 800c844:	4640      	mov	r0, r8
 800c846:	f7ff fee7 	bl	800c618 <_printf_common>
 800c84a:	3001      	adds	r0, #1
 800c84c:	d14a      	bne.n	800c8e4 <_printf_i+0x1f0>
 800c84e:	f04f 30ff 	mov.w	r0, #4294967295
 800c852:	b004      	add	sp, #16
 800c854:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c858:	6823      	ldr	r3, [r4, #0]
 800c85a:	f043 0320 	orr.w	r3, r3, #32
 800c85e:	6023      	str	r3, [r4, #0]
 800c860:	4832      	ldr	r0, [pc, #200]	@ (800c92c <_printf_i+0x238>)
 800c862:	2778      	movs	r7, #120	@ 0x78
 800c864:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800c868:	6823      	ldr	r3, [r4, #0]
 800c86a:	6831      	ldr	r1, [r6, #0]
 800c86c:	061f      	lsls	r7, r3, #24
 800c86e:	f851 5b04 	ldr.w	r5, [r1], #4
 800c872:	d402      	bmi.n	800c87a <_printf_i+0x186>
 800c874:	065f      	lsls	r7, r3, #25
 800c876:	bf48      	it	mi
 800c878:	b2ad      	uxthmi	r5, r5
 800c87a:	6031      	str	r1, [r6, #0]
 800c87c:	07d9      	lsls	r1, r3, #31
 800c87e:	bf44      	itt	mi
 800c880:	f043 0320 	orrmi.w	r3, r3, #32
 800c884:	6023      	strmi	r3, [r4, #0]
 800c886:	b11d      	cbz	r5, 800c890 <_printf_i+0x19c>
 800c888:	2310      	movs	r3, #16
 800c88a:	e7ad      	b.n	800c7e8 <_printf_i+0xf4>
 800c88c:	4826      	ldr	r0, [pc, #152]	@ (800c928 <_printf_i+0x234>)
 800c88e:	e7e9      	b.n	800c864 <_printf_i+0x170>
 800c890:	6823      	ldr	r3, [r4, #0]
 800c892:	f023 0320 	bic.w	r3, r3, #32
 800c896:	6023      	str	r3, [r4, #0]
 800c898:	e7f6      	b.n	800c888 <_printf_i+0x194>
 800c89a:	4616      	mov	r6, r2
 800c89c:	e7bd      	b.n	800c81a <_printf_i+0x126>
 800c89e:	6833      	ldr	r3, [r6, #0]
 800c8a0:	6825      	ldr	r5, [r4, #0]
 800c8a2:	6961      	ldr	r1, [r4, #20]
 800c8a4:	1d18      	adds	r0, r3, #4
 800c8a6:	6030      	str	r0, [r6, #0]
 800c8a8:	062e      	lsls	r6, r5, #24
 800c8aa:	681b      	ldr	r3, [r3, #0]
 800c8ac:	d501      	bpl.n	800c8b2 <_printf_i+0x1be>
 800c8ae:	6019      	str	r1, [r3, #0]
 800c8b0:	e002      	b.n	800c8b8 <_printf_i+0x1c4>
 800c8b2:	0668      	lsls	r0, r5, #25
 800c8b4:	d5fb      	bpl.n	800c8ae <_printf_i+0x1ba>
 800c8b6:	8019      	strh	r1, [r3, #0]
 800c8b8:	2300      	movs	r3, #0
 800c8ba:	6123      	str	r3, [r4, #16]
 800c8bc:	4616      	mov	r6, r2
 800c8be:	e7bc      	b.n	800c83a <_printf_i+0x146>
 800c8c0:	6833      	ldr	r3, [r6, #0]
 800c8c2:	1d1a      	adds	r2, r3, #4
 800c8c4:	6032      	str	r2, [r6, #0]
 800c8c6:	681e      	ldr	r6, [r3, #0]
 800c8c8:	6862      	ldr	r2, [r4, #4]
 800c8ca:	2100      	movs	r1, #0
 800c8cc:	4630      	mov	r0, r6
 800c8ce:	f7f3 fc7f 	bl	80001d0 <memchr>
 800c8d2:	b108      	cbz	r0, 800c8d8 <_printf_i+0x1e4>
 800c8d4:	1b80      	subs	r0, r0, r6
 800c8d6:	6060      	str	r0, [r4, #4]
 800c8d8:	6863      	ldr	r3, [r4, #4]
 800c8da:	6123      	str	r3, [r4, #16]
 800c8dc:	2300      	movs	r3, #0
 800c8de:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800c8e2:	e7aa      	b.n	800c83a <_printf_i+0x146>
 800c8e4:	6923      	ldr	r3, [r4, #16]
 800c8e6:	4632      	mov	r2, r6
 800c8e8:	4649      	mov	r1, r9
 800c8ea:	4640      	mov	r0, r8
 800c8ec:	47d0      	blx	sl
 800c8ee:	3001      	adds	r0, #1
 800c8f0:	d0ad      	beq.n	800c84e <_printf_i+0x15a>
 800c8f2:	6823      	ldr	r3, [r4, #0]
 800c8f4:	079b      	lsls	r3, r3, #30
 800c8f6:	d413      	bmi.n	800c920 <_printf_i+0x22c>
 800c8f8:	68e0      	ldr	r0, [r4, #12]
 800c8fa:	9b03      	ldr	r3, [sp, #12]
 800c8fc:	4298      	cmp	r0, r3
 800c8fe:	bfb8      	it	lt
 800c900:	4618      	movlt	r0, r3
 800c902:	e7a6      	b.n	800c852 <_printf_i+0x15e>
 800c904:	2301      	movs	r3, #1
 800c906:	4632      	mov	r2, r6
 800c908:	4649      	mov	r1, r9
 800c90a:	4640      	mov	r0, r8
 800c90c:	47d0      	blx	sl
 800c90e:	3001      	adds	r0, #1
 800c910:	d09d      	beq.n	800c84e <_printf_i+0x15a>
 800c912:	3501      	adds	r5, #1
 800c914:	68e3      	ldr	r3, [r4, #12]
 800c916:	9903      	ldr	r1, [sp, #12]
 800c918:	1a5b      	subs	r3, r3, r1
 800c91a:	42ab      	cmp	r3, r5
 800c91c:	dcf2      	bgt.n	800c904 <_printf_i+0x210>
 800c91e:	e7eb      	b.n	800c8f8 <_printf_i+0x204>
 800c920:	2500      	movs	r5, #0
 800c922:	f104 0619 	add.w	r6, r4, #25
 800c926:	e7f5      	b.n	800c914 <_printf_i+0x220>
 800c928:	0800ca95 	.word	0x0800ca95
 800c92c:	0800caa6 	.word	0x0800caa6

0800c930 <memmove>:
 800c930:	4288      	cmp	r0, r1
 800c932:	b510      	push	{r4, lr}
 800c934:	eb01 0402 	add.w	r4, r1, r2
 800c938:	d902      	bls.n	800c940 <memmove+0x10>
 800c93a:	4284      	cmp	r4, r0
 800c93c:	4623      	mov	r3, r4
 800c93e:	d807      	bhi.n	800c950 <memmove+0x20>
 800c940:	1e43      	subs	r3, r0, #1
 800c942:	42a1      	cmp	r1, r4
 800c944:	d008      	beq.n	800c958 <memmove+0x28>
 800c946:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c94a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800c94e:	e7f8      	b.n	800c942 <memmove+0x12>
 800c950:	4402      	add	r2, r0
 800c952:	4601      	mov	r1, r0
 800c954:	428a      	cmp	r2, r1
 800c956:	d100      	bne.n	800c95a <memmove+0x2a>
 800c958:	bd10      	pop	{r4, pc}
 800c95a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800c95e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800c962:	e7f7      	b.n	800c954 <memmove+0x24>

0800c964 <_sbrk_r>:
 800c964:	b538      	push	{r3, r4, r5, lr}
 800c966:	4d06      	ldr	r5, [pc, #24]	@ (800c980 <_sbrk_r+0x1c>)
 800c968:	2300      	movs	r3, #0
 800c96a:	4604      	mov	r4, r0
 800c96c:	4608      	mov	r0, r1
 800c96e:	602b      	str	r3, [r5, #0]
 800c970:	f7f4 fa3a 	bl	8000de8 <_sbrk>
 800c974:	1c43      	adds	r3, r0, #1
 800c976:	d102      	bne.n	800c97e <_sbrk_r+0x1a>
 800c978:	682b      	ldr	r3, [r5, #0]
 800c97a:	b103      	cbz	r3, 800c97e <_sbrk_r+0x1a>
 800c97c:	6023      	str	r3, [r4, #0]
 800c97e:	bd38      	pop	{r3, r4, r5, pc}
 800c980:	200029f8 	.word	0x200029f8

0800c984 <_realloc_r>:
 800c984:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c988:	4607      	mov	r7, r0
 800c98a:	4614      	mov	r4, r2
 800c98c:	460d      	mov	r5, r1
 800c98e:	b921      	cbnz	r1, 800c99a <_realloc_r+0x16>
 800c990:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c994:	4611      	mov	r1, r2
 800c996:	f7ff bc5b 	b.w	800c250 <_malloc_r>
 800c99a:	b92a      	cbnz	r2, 800c9a8 <_realloc_r+0x24>
 800c99c:	f7ff fbec 	bl	800c178 <_free_r>
 800c9a0:	4625      	mov	r5, r4
 800c9a2:	4628      	mov	r0, r5
 800c9a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c9a8:	f000 f81a 	bl	800c9e0 <_malloc_usable_size_r>
 800c9ac:	4284      	cmp	r4, r0
 800c9ae:	4606      	mov	r6, r0
 800c9b0:	d802      	bhi.n	800c9b8 <_realloc_r+0x34>
 800c9b2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800c9b6:	d8f4      	bhi.n	800c9a2 <_realloc_r+0x1e>
 800c9b8:	4621      	mov	r1, r4
 800c9ba:	4638      	mov	r0, r7
 800c9bc:	f7ff fc48 	bl	800c250 <_malloc_r>
 800c9c0:	4680      	mov	r8, r0
 800c9c2:	b908      	cbnz	r0, 800c9c8 <_realloc_r+0x44>
 800c9c4:	4645      	mov	r5, r8
 800c9c6:	e7ec      	b.n	800c9a2 <_realloc_r+0x1e>
 800c9c8:	42b4      	cmp	r4, r6
 800c9ca:	4622      	mov	r2, r4
 800c9cc:	4629      	mov	r1, r5
 800c9ce:	bf28      	it	cs
 800c9d0:	4632      	movcs	r2, r6
 800c9d2:	f7ff fbc3 	bl	800c15c <memcpy>
 800c9d6:	4629      	mov	r1, r5
 800c9d8:	4638      	mov	r0, r7
 800c9da:	f7ff fbcd 	bl	800c178 <_free_r>
 800c9de:	e7f1      	b.n	800c9c4 <_realloc_r+0x40>

0800c9e0 <_malloc_usable_size_r>:
 800c9e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c9e4:	1f18      	subs	r0, r3, #4
 800c9e6:	2b00      	cmp	r3, #0
 800c9e8:	bfbc      	itt	lt
 800c9ea:	580b      	ldrlt	r3, [r1, r0]
 800c9ec:	18c0      	addlt	r0, r0, r3
 800c9ee:	4770      	bx	lr

0800c9f0 <_init>:
 800c9f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c9f2:	bf00      	nop
 800c9f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c9f6:	bc08      	pop	{r3}
 800c9f8:	469e      	mov	lr, r3
 800c9fa:	4770      	bx	lr

0800c9fc <_fini>:
 800c9fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c9fe:	bf00      	nop
 800ca00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ca02:	bc08      	pop	{r3}
 800ca04:	469e      	mov	lr, r3
 800ca06:	4770      	bx	lr
